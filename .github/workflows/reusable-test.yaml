#   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-  .-.-.   .-.-.   .-.-
#  / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ / / \ \ / / \ \ / / \
# `-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-'   `-`-'   `-`-'
#
#        Reusable workflow that runs the whole test suite, linter and build
#
#   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-  .-.-.   .-.-.   .-.-
#  / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ / / \ \ / / \ \ / / \
# `-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-'   `-`-'   `-`-'
name: Vape Tests

on:
  workflow_call:

# We'll default the NPM_TOKEN to an empty value since we use it
# in .npmrc file and if undefined, the node setup would fail
env:
  NPM_TOKEN: ""

jobs:
  build:
    name: Build & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Setup environment
        uses: ./.github/workflows/actions/setup-environment

      - name: Install dependencies
        uses: ./.github/workflows/actions/install-dependencies
        with:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup build cache
        uses: ./.github/workflows/actions/setup-build-cache

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm build

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Setup environment
        uses: ./.github/workflows/actions/setup-environment

      - name: Install dependencies
        uses: ./.github/workflows/actions/install-dependencies
        with:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup build cache
        uses: ./.github/workflows/actions/setup-build-cache

      - name: Test
        run: pnpm test:ci
        # Since we're running the E2E tests in docker, we'll need to reinstall
        # the node modules. This is a temporary solution to bridge us between
        # non-containerized and containerized development
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # We'll collect the docker compose logs from all containers on failure
      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: "./logs"

      # We'll collect the docker compose logs from all containers on failure
      - name: Store docker logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          path: ./logs
