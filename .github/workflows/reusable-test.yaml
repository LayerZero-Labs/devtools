#   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-  .-.-.   .-.-.   .-.-
#  / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ / / \ \ / / \ \ / / \
# `-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-'   `-`-'   `-`-'
#
#        Reusable workflow that runs the whole test suite, linter and build
#
#   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-  .-.-.   .-.-.   .-.-
#  / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ / / \ \ / / \ \ / / \
# `-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-'   `-`-'   `-`-'
name: Vape Tests

on:
  workflow_call:

# We'll default the NPM_TOKEN to an empty value since we use it
# in .npmrc file and if undefined, the node setup would fail
env:
  NPM_TOKEN: ""

jobs:
  build-and-test:
    name: Build, Lint & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      # Install the dependencies without running the post-install scripts
      - name: Install Dependencies
        run: yarn install --frozen-lockfile --prefer-offline --ignore-scripts
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Run the post-install scripts
      - name: Build Dependencies
        run: yarn install --frozen-lockfile --offline

      # Cache build artifacts from turbo
      #
      # This step will speed up workflow runs that don't touch the whole codebase
      # (or the ones that don't touch the codebase at all)
      - name: Cache turbo build setup
        uses: actions/cache@v3
        with:
          path: node_modules/.cache/turbo
          key: ${{ runner.os }}-turbo-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      # Cache hardhat compilers
      #
      # This step will speed up workflow runs that use hardhat compilation
      - name: Cache hardhat compilers
        uses: actions/cache@v3
        with:
          path: .cache/hardhat
          key: ${{ runner.os }}-hardhat-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-hardhat-

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test
        # Since we're running the E2E tests in docker, we'll need to reinstall
        # the node modules. This is a temporary solution to bridge us between
        # non-containerized and containerized development
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
