name: Merge multiplatform docker image digests
description: Merge multiplatform docker image digests to form a single image
inputs:
  image:
    description: "Docker image name"
    required: true
  registry:
    description: "Docker registry"
    required: true
    default: ghcr.io
  namespace:
    description: "Docker image namespace"
    required: true
    default: layerzero-labs
  username:
    description: "Docker registry username"
    required: true
  password:
    description: "Docker registry password"
    required: true
  digest-name:
    description: "Unique name for the produced digests. Must be unique for a workflow run"
    required: true
    default: digest
  digest-path:
    description: "Digests directory path, without a trailing slash"
    required: true
    default: /tmp/digests

runs:
  using: "composite"
  steps:
    - name: Download digests
      uses: actions/download-artifact@v4
      with:
        path: ${{ inputs.digest-path }}
        pattern: ${{ inputs.digest-name }}-*
        merge-multiple: true

    - name: Log in to the Container registry
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
      with:
        images: |
          ${{ inputs.registry }}/${{ inputs.namespace }}/${{ inputs.image }}
        tags: |
          type=ref,event=branch
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ github.sha }}

    - name: Create manifest list and push
      shell: bash
      working-directory: ${{ inputs.digest-path }}
      run: |
        docker buildx imagetools create \
        $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
        $(printf '${{ inputs.registry }}/${{ inputs.namespace }}/${{ inputs.image }}@sha256:%s ' *)

    - name: Inspect image
      shell: bash
      run: |
        docker buildx imagetools inspect ${{ inputs.registry }}/${{ inputs.namespace }}/${{ inputs.image }}:${{ steps.meta.outputs.version }}
