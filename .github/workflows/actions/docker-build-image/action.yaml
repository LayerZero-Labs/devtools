name: Build docker image
description: Build dockker image and store the artifacts locally
inputs:
  image:
    description: "Docker image name"
    required: true
  platform:
    description: "Docker platform"
    required: true
  target:
    description: "Docker target stage"
    required: true
  registry:
    description: "Docker registry"
    required: true
    default: ghcr.io
  namespace:
    description: "Docker image namespace"
    required: true
    default: layerzero-labs
  username:
    description: "Docker registry username"
    required: true
  password:
    description: "Docker registry password"
    required: true
  digest-name:
    description: "Unique name for the produced digests. Must be unique for a workflow run"
    required: true
    default: digest
  digest-path:
    description: "Output digests directory path, without a trailing slash"
    required: true
    default: /tmp/digests

runs:
  using: "composite"
  steps:
    - name: Prepare
      shell: bash
      run: |
        platform=${{ inputs.platform }}
        ref=${{ github.ref_name }}

        echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
        echo "REF_NAME=${ref//[^a-zA-Z0-9_-]/-}" >> $GITHUB_ENV

    - name: Log in to the Container registry
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
      with:
        images: |
          ${{ inputs.registry }}/${{ inputs.namespace }}/${{ inputs.image }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push by digest
      id: build
      uses: docker/build-push-action@v6
      with:
        target: ${{ inputs.target }}
        platforms: ${{ inputs.platform }}
        provenance: false
        outputs: type=image,name=${{ inputs.registry }}/${{ inputs.namespace }}/${{ inputs.image }},push-by-digest=true,name-canonical=true,push=true
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}
        cache-from: |
          type=registry,ref=${{ inputs.registry }}/${{ inputs.namespace }}/${{ inputs.image }}:cache-${{ env.REF_NAME }}-${{ env.PLATFORM_PAIR }}
          type=registry,ref=${{ inputs.registry }}/${{ inputs.namespace }}/${{ inputs.image }}:cache-main-${{ env.PLATFORM_PAIR }}
        cache-to: |
          type=registry,ref=${{ inputs.registry }}/${{ inputs.namespace }}/${{ inputs.image }}:cache-${{ env.REF_NAME }}-${{ env.PLATFORM_PAIR }}
        build-args: |
          CARGO_BUILD_JOBS=4

    - name: Export digest
      shell: bash
      run: |
        mkdir -p ${{ inputs.digest-path }}
        digest="${{ steps.build.outputs.digest }}"
        touch "${{ inputs.digest-path }}/${digest#sha256:}"

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.digest-name }}-${{ env.PLATFORM_PAIR }}
        path: ${{ inputs.digest-path }}/*
        if-no-files-found: error
        retention-days: 1
