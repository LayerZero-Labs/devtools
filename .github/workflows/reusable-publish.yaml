#   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-  .-.-.   .-.-.   .-.-
#  / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ / / \ \ / / \ \ / / \
# `-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-'   `-`-'   `-`-'
#
#         Reusable workflow that builds the code and publishes the packages
#
#   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-  .-.-.   .-.-.   .-.-
#  / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ / / \ \ / / \ \ / / \
# `-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-'   `-`-'   `-`-'
name: Publish packages

on:
  workflow_call:

# We'll default the NPM_TOKEN to an empty value since we use it
# in .npmrc file and if undefined, the node setup would fail
env:
  NPM_TOKEN: ""

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      # Fetch the dependencies without running the post-install scripts
      - name: Fetch Dependencies
        run: pnpm fetch --frozen-lockfile --prefer-offline --ignore-scripts
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Install the dependencies and run the post-install scripts
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile --offline

      # Cache build artifacts from turbo
      #
      # This step will speed up workflow runs that don't touch the whole codebase
      # (or the ones that don't touch the codebase at all)
      - name: Cache turbo build setup
        uses: actions/cache@v3
        with:
          path: node_modules/.cache/turbo
          key: ${{ runner.os }}-turbo-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      # Cache hardhat compilers
      #
      # This step will speed up workflow runs that use hardhat compilation
      - name: Cache hardhat compilers
        uses: actions/cache@v3
        with:
          path: .cache/hardhat
          key: ${{ runner.os }}-hardhat-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-hardhat-

      - name: Build
        run: pnpm build
        env:
          NODE_ENV: production

      # This step uses the changesets CLI to bump the package versions and/or publish the unpublished packages
      #
      # How this works is:
      #
      # - If there are any changesets (markdown files in the .changeset directory),
      #   changesets CLI will bump the package versions according to the bumps specified in the markdown files.
      #
      # - A PR is created containing these version bumps and with the changeset markdowns deleted
      #
      # - Once this PR is merged, this workflow kicks in again and this time checks
      #   whether there is anything that needs to be published
      - name: Publish packages / create version bump PRs
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
          publish: pnpm changeset publish
          title: "ðŸš€ Version packages"

        env:
          # This is here because changesets/action will look for the .npmrc
          # in HOME folder and if it doesn't find one there it will create one
          #
          # Since we want to make sure it uses our .npmrc we'll just point it
          # to our workspace root
          HOME: ${{ github.workspace }}
          GITHUB_TOKEN: ${{ secrets.LAYERZERO_BOT_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN_PUBLISHER }}
