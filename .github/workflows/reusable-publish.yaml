#   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-  .-.-.   .-.-.   .-.-
#  / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ / / \ \ / / \ \ / / \
# `-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-'   `-`-'   `-`-'
#
#         Reusable workflow that builds the code and publishes the packages
#
#   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-  .-.-.   .-.-.   .-.-
#  / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ / / \ \ / / \ \ / / \
# `-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-'   `-`-'   `-`-'
name: Publish packages

on:
  workflow_call:

# We'll default the NPM_TOKEN to an empty value since we use it
# in .npmrc file and if undefined, the node setup would fail
env:
  NPM_TOKEN: ""

jobs:
  publish:
    name: Publish
    runs-on: ${{ matrix.runner }}
    
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest-16xlarge
            arch: amd64

    # We'll run the job on the prebuilt base image
    container:
      image: ghcr.io/layerzero-labs/devtools-dev-base:main

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: "true"
          token: ${{ secrets.LAYERZERO_BOT_GITHUB_TOKEN }}

      # Workaround for dubious ownership problem inside a containerized workflow
      #
      # See https://github.com/actions/runner-images/issues/6775
      #
      # A possible solution to investigate is to use the 1001 user
      # https://github.com/actions/runner/issues/2033#issuecomment-1598547465
      - name: Transfer file ownership to the root user
        shell: bash
        run: chown -R root .

      - name: Setup environment
        uses: ./.github/workflows/actions/setup-environment

      - name: Install dependencies
        uses: ./.github/workflows/actions/install-dependencies

      - name: Setup build cache
        uses: ./.github/workflows/actions/setup-build-cache

      # We'll run the build in series to avoid race conditions
      # when compiling hardhat projects in monorepo setups
      - name: Build
        run: pnpm build
        env:
          NODE_ENV: production

      # This step uses the changesets CLI to bump the package versions and/or publish the unpublished packages
      #
      # How this works is:
      #
      # - If there are any changesets (markdown files in the .changeset directory),
      #   changesets CLI will bump the package versions according to the bumps specified in the markdown files.
      #
      # - A PR is created containing these version bumps and with the changeset markdowns deleted
      #
      # - Once this PR is merged, this workflow kicks in again and this time checks
      #   whether there is anything that needs to be published
      - name: Publish packages / create version bump PRs
        uses: changesets/action@v1
        with:
          version: pnpm release:version
          publish: pnpm release:publish
          title: "üöÄ Version packages"

        env:
          # This is here because changesets/action will look for the .npmrc
          # in HOME folder and if it doesn't find one there it will create one
          #
          # Since we want to make sure it uses our .npmrc we'll just point it
          # to our workspace root (which, in a workflow that uses a container, is put under __w directory)
          #
          # Here we need to use the ${{ env.GITHUB_WORKSPACE }} environment variable instead
          # of the github context value ${{ github.workspace }}
          #
          # See more here https://github.com/actions/runner/issues/2058
          HOME: ${{ env.GITHUB_WORKSPACE }}
          GITHUB_TOKEN: ${{ secrets.LAYERZERO_BOT_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN_PUBLISHER }}

      # This should only run on the main branch after the packages are published to NPM
      # to make sure the updated packages are available when updating the lockfiles.
      - name: Create additional lockfile update PR
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          BRANCH="lockfiles-update/main"

          git fetch origin

          if git ls-remote --exit-code --heads origin "$BRANCH" > /dev/null 2>&1; then
            git checkout -B "$BRANCH" "origin/$BRANCH"
          else
            git checkout -b "$BRANCH"
          fi

          pnpm lockfiles:generate

          if git diff --quiet; then
            echo "No changes to commit, skipping PR creation"
            exit 0
          fi

          git add .
          git commit -m "chore: automatically update example lockfiles"
          git push --force origin "$BRANCH"

          if gh pr view "$BRANCH" --json state --jq '.state' 2>/dev/null | grep -q "OPEN"; then
            echo "Open PR already exists for branch $BRANCH"
            exit 0
          fi

          gh pr create \
            --title "üîí Update example lockfiles" \
            --body "Automated update of example lockfiles after package publishing.

            ‚ö†Ô∏è Version packages PRs should be merged first." \
            --base main \
            --head "$BRANCH" \
            --assignee layerzero-bot
        env:
          GH_TOKEN: ${{ secrets.LAYERZERO_BOT_GITHUB_TOKEN }}
