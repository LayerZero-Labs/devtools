{"id":"75aef9b589f300f82a5775f7c681ae12","_format":"hh-sol-build-info-1","solcVersion":"0.8.22","solcLongVersion":"0.8.22+commit.4fc1097e","input":{"language":"Solidity","sources":{"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\n/**\n * @title ILayerZeroComposer\n */\ninterface ILayerZeroComposer {\n    /**\n     * @notice Composes a LayerZero message from an OApp.\n     * @dev To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).\n     * @param _from The address initiating the composition, typically the OApp where the lzReceive was called.\n     * @param _guid The unique identifier for the corresponding LayerZero src/dst tx.\n     * @param _message The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive.\n     * @param _executor The address of the executor for the composed message.\n     * @param _extraData Additional arbitrary data in bytes passed by the entity who executes the lzCompose.\n     */\n    function lzCompose(\n        address _from,\n        bytes32 _guid,\n        bytes calldata _message,\n        address _executor,\n        bytes calldata _extraData\n    ) external payable;\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\nimport { IMessageLibManager } from \"./IMessageLibManager.sol\";\nimport { IMessagingComposer } from \"./IMessagingComposer.sol\";\nimport { IMessagingChannel } from \"./IMessagingChannel.sol\";\nimport { IMessagingContext } from \"./IMessagingContext.sol\";\n\nstruct MessagingParams {\n    uint32 dstEid;\n    bytes32 receiver;\n    bytes message;\n    bytes options;\n    bool payInLzToken;\n}\n\nstruct MessagingReceipt {\n    bytes32 guid;\n    uint64 nonce;\n    MessagingFee fee;\n}\n\nstruct MessagingFee {\n    uint256 nativeFee;\n    uint256 lzTokenFee;\n}\n\nstruct Origin {\n    uint32 srcEid;\n    bytes32 sender;\n    uint64 nonce;\n}\n\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n\n    event PacketDelivered(Origin origin, address receiver);\n\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n\n    event LzTokenSet(address token);\n\n    event DelegateSet(address sender, address delegate);\n\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n\n    function setLzToken(address _lzToken) external;\n\n    function lzToken() external view returns (address);\n\n    function nativeToken() external view returns (address);\n\n    function setDelegate(address _delegate) external;\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\nstruct SetConfigParam {\n    uint32 eid;\n    uint32 configType;\n    bytes config;\n}\n\ninterface IMessageLibManager {\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n\n    function registerLibrary(address _lib) external;\n\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n\n    function getRegisteredLibraries() external view returns (address[] memory);\n\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n\n    /// ------------------- OApp interfaces -------------------\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\ninterface IMessagingChannel {\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n\n    function eid() external view returns (uint32);\n\n    // this is an emergency function if a message cannot be verified for some reasons\n    // required to provide _nextNonce to avoid race condition\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\n\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\n\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\n\n    function inboundPayloadHash(\n        address _receiver,\n        uint32 _srcEid,\n        bytes32 _sender,\n        uint64 _nonce\n    ) external view returns (bytes32);\n\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\ninterface IMessagingComposer {\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\n    event LzComposeAlert(\n        address indexed from,\n        address indexed to,\n        address indexed executor,\n        bytes32 guid,\n        uint16 index,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n\n    function composeQueue(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index\n    ) external view returns (bytes32 messageHash);\n\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\n\n    function lzCompose(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\ninterface IMessagingContext {\n    function isSendingMessage() external view returns (bool);\n\n    function getSendContext() external view returns (uint32 dstEid, address sender);\n}\n"},"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport { ILayerZeroComposer } from \"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\";\n\n/**\n * @title IOAppComposer\n * @dev This interface defines the OApp Composer, allowing developers to inherit only the OApp package without the protocol.\n */\n// solhint-disable-next-line no-empty-blocks\ninterface IOAppComposer is ILayerZeroComposer {}\n"},"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport { ILayerZeroEndpointV2 } from \"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\";\n\n/**\n * @title IOAppCore\n */\ninterface IOAppCore {\n    // Custom error messages\n    error OnlyPeer(uint32 eid, bytes32 sender);\n    error NoPeer(uint32 eid);\n    error InvalidEndpointCall();\n    error InvalidDelegate();\n\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\n    event PeerSet(uint32 eid, bytes32 peer);\n\n    /**\n     * @notice Retrieves the OApp version information.\n     * @return senderVersion The version of the OAppSender.sol contract.\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\n     */\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\n\n    /**\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\n     * @return iEndpoint The LayerZero endpoint as an interface.\n     */\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\n\n    /**\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\n     * @param _eid The endpoint ID.\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\n     */\n    function peers(uint32 _eid) external view returns (bytes32 peer);\n\n    /**\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n     * @param _eid The endpoint ID.\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\n     */\n    function setPeer(uint32 _eid, bytes32 _peer) external;\n\n    /**\n     * @notice Sets the delegate address for the OApp Core.\n     * @param _delegate The address of the delegate to be set.\n     */\n    function setDelegate(address _delegate) external;\n}\n"},"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { IOAppCore, ILayerZeroEndpointV2 } from \"./interfaces/IOAppCore.sol\";\n\n/**\n * @title OAppCore\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\n */\nabstract contract OAppCore is IOAppCore, Ownable {\n    // The LayerZero endpoint associated with the given OApp\n    ILayerZeroEndpointV2 public immutable endpoint;\n\n    // Mapping to store peers associated with corresponding endpoints\n    mapping(uint32 eid => bytes32 peer) public peers;\n\n    /**\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\n     *\n     * @dev The delegate typically should be set as the owner of the contract.\n     */\n    constructor(address _endpoint, address _delegate) {\n        endpoint = ILayerZeroEndpointV2(_endpoint);\n\n        if (_delegate == address(0)) revert InvalidDelegate();\n        endpoint.setDelegate(_delegate);\n    }\n\n    /**\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n     * @param _eid The endpoint ID.\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\n     *\n     * @dev Only the owner/admin of the OApp can call this function.\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\n     * @dev Set this to bytes32(0) to remove the peer address.\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\n     */\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\n        _setPeer(_eid, _peer);\n    }\n\n    /**\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n     * @param _eid The endpoint ID.\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\n     *\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\n     * @dev Set this to bytes32(0) to remove the peer address.\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\n     */\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\n        peers[_eid] = _peer;\n        emit PeerSet(_eid, _peer);\n    }\n\n    /**\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\n     * ie. the peer is set to bytes32(0).\n     * @param _eid The endpoint ID.\n     * @return peer The address of the peer associated with the specified endpoint.\n     */\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\n        bytes32 peer = peers[_eid];\n        if (peer == bytes32(0)) revert NoPeer(_eid);\n        return peer;\n    }\n\n    /**\n     * @notice Sets the delegate address for the OApp.\n     * @param _delegate The address of the delegate to be set.\n     *\n     * @dev Only the owner/admin of the OApp can call this function.\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\n     */\n    function setDelegate(address _delegate) public onlyOwner {\n        endpoint.setDelegate(_delegate);\n    }\n}\n"},"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport { SafeERC20, IERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\";\nimport { OAppCore } from \"./OAppCore.sol\";\n\n/**\n * @title OAppSender\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\n */\nabstract contract OAppSender is OAppCore {\n    using SafeERC20 for IERC20;\n\n    // Custom error messages\n    error NotEnoughNative(uint256 msgValue);\n    error LzTokenUnavailable();\n\n    // @dev The version of the OAppSender implementation.\n    // @dev Version is bumped when changes are made to this contract.\n    uint64 internal constant SENDER_VERSION = 1;\n\n    /**\n     * @notice Retrieves the OApp version information.\n     * @return senderVersion The version of the OAppSender.sol contract.\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\n     *\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\n     * ie. this is a SEND only OApp.\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\n     */\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\n        return (SENDER_VERSION, 0);\n    }\n\n    /**\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\n     * @param _dstEid The destination endpoint ID.\n     * @param _message The message payload.\n     * @param _options Additional options for the message.\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\n     * @return fee The calculated MessagingFee for the message.\n     *      - nativeFee: The native fee for the message.\n     *      - lzTokenFee: The LZ token fee for the message.\n     */\n    function _quote(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        bool _payInLzToken\n    ) internal view virtual returns (MessagingFee memory fee) {\n        return\n            endpoint.quote(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\n                address(this)\n            );\n    }\n\n    /**\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\n     * @param _dstEid The destination endpoint ID.\n     * @param _message The message payload.\n     * @param _options Additional options for the message.\n     * @param _fee The calculated LayerZero fee for the message.\n     *      - nativeFee: The native fee.\n     *      - lzTokenFee: The lzToken fee.\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\n     * @return receipt The receipt for the sent message.\n     *      - guid: The unique identifier for the sent message.\n     *      - nonce: The nonce of the sent message.\n     *      - fee: The LayerZero fee incurred for the message.\n     */\n    function _lzSend(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        MessagingFee memory _fee,\n        address _refundAddress\n    ) internal virtual returns (MessagingReceipt memory receipt) {\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\n        uint256 messageValue = _payNative(_fee.nativeFee);\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\n\n        return\n            // solhint-disable-next-line check-send-result\n            endpoint.send{ value: messageValue }(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\n                _refundAddress\n            );\n    }\n\n    /**\n     * @dev Internal function to pay the native fee associated with the message.\n     * @param _nativeFee The native fee to be paid.\n     * @return nativeFee The amount of native currency paid.\n     *\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\n     * this will need to be overridden because msg.value would contain multiple lzFees.\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\n     */\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\n        return _nativeFee;\n    }\n\n    /**\n     * @dev Internal function to pay the LZ token fee associated with the message.\n     * @param _lzTokenFee The LZ token fee to be paid.\n     *\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\n     */\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\n        address lzToken = endpoint.lzToken();\n        if (lzToken == address(0)) revert LzTokenUnavailable();\n\n        // Pay LZ token fee by sending tokens to the endpoint.\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\n    }\n}\n"},"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport { MessagingReceipt, MessagingFee } from \"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\";\n\n/**\n * @dev Struct representing token parameters for the OFT send() operation.\n */\nstruct SendParam {\n    uint32 dstEid; // Destination endpoint ID.\n    bytes32 to; // Recipient address.\n    uint256 amountLD; // Amount to send in local decimals.\n    uint256 minAmountLD; // Minimum amount to send in local decimals.\n    bytes extraOptions; // Additional options supplied by the caller to be used in the LayerZero message.\n    bytes composeMsg; // The composed message for the send() operation.\n    bytes oftCmd; // The OFT command to be executed, unused in default OFT implementations.\n}\n\n/**\n * @dev Struct representing OFT limit information.\n * @dev These amounts can change dynamically and are up the specific oft implementation.\n */\nstruct OFTLimit {\n    uint256 minAmountLD; // Minimum amount in local decimals that can be sent to the recipient.\n    uint256 maxAmountLD; // Maximum amount in local decimals that can be sent to the recipient.\n}\n\n/**\n * @dev Struct representing OFT receipt information.\n */\nstruct OFTReceipt {\n    uint256 amountSentLD; // Amount of tokens ACTUALLY debited from the sender in local decimals.\n    // @dev In non-default implementations, the amountReceivedLD COULD differ from this value.\n    uint256 amountReceivedLD; // Amount of tokens to be received on the remote side.\n}\n\n/**\n * @dev Struct representing OFT fee details.\n * @dev Future proof mechanism to provide a standardized way to communicate fees to things like a UI.\n */\nstruct OFTFeeDetail {\n    int256 feeAmountLD; // Amount of the fee in local decimals.\n    string description; // Description of the fee.\n}\n\n/**\n * @title IOFT\n * @dev Interface for the OftChain (OFT) token.\n * @dev Does not inherit ERC20 to accommodate usage by OFTAdapter as well.\n * @dev This specific interface ID is '0x02e49c2c'.\n */\ninterface IOFT {\n    // Custom error messages\n    error InvalidLocalDecimals();\n    error SlippageExceeded(uint256 amountLD, uint256 minAmountLD);\n\n    // Events\n    event OFTSent(\n        bytes32 indexed guid, // GUID of the OFT message.\n        uint32 dstEid, // Destination Endpoint ID.\n        address indexed fromAddress, // Address of the sender on the src chain.\n        uint256 amountSentLD, // Amount of tokens sent in local decimals.\n        uint256 amountReceivedLD // Amount of tokens received in local decimals.\n    );\n    event OFTReceived(\n        bytes32 indexed guid, // GUID of the OFT message.\n        uint32 srcEid, // Source Endpoint ID.\n        address indexed toAddress, // Address of the recipient on the dst chain.\n        uint256 amountReceivedLD // Amount of tokens received in local decimals.\n    );\n\n    /**\n     * @notice Retrieves interfaceID and the version of the OFT.\n     * @return interfaceId The interface ID.\n     * @return version The version.\n     *\n     * @dev interfaceId: This specific interface ID is '0x02e49c2c'.\n     * @dev version: Indicates a cross-chain compatible msg encoding with other OFTs.\n     * @dev If a new feature is added to the OFT cross-chain msg encoding, the version will be incremented.\n     * ie. localOFT version(x,1) CAN send messages to remoteOFT version(x,1)\n     */\n    function oftVersion() external view returns (bytes4 interfaceId, uint64 version);\n\n    /**\n     * @notice Retrieves the address of the token associated with the OFT.\n     * @return token The address of the ERC20 token implementation.\n     */\n    function token() external view returns (address);\n\n    /**\n     * @notice Indicates whether the OFT contract requires approval of the 'token()' to send.\n     * @return requiresApproval Needs approval of the underlying token implementation.\n     *\n     * @dev Allows things like wallet implementers to determine integration requirements,\n     * without understanding the underlying token implementation.\n     */\n    function approvalRequired() external view returns (bool);\n\n    /**\n     * @notice Retrieves the shared decimals of the OFT.\n     * @return sharedDecimals The shared decimals of the OFT.\n     */\n    function sharedDecimals() external view returns (uint8);\n\n    /**\n     * @notice Provides the fee breakdown and settings data for an OFT. Unused in the default implementation.\n     * @param _sendParam The parameters for the send operation.\n     * @return limit The OFT limit information.\n     * @return oftFeeDetails The details of OFT fees.\n     * @return receipt The OFT receipt information.\n     */\n    function quoteOFT(\n        SendParam calldata _sendParam\n    ) external view returns (OFTLimit memory, OFTFeeDetail[] memory oftFeeDetails, OFTReceipt memory);\n\n    /**\n     * @notice Provides a quote for the send() operation.\n     * @param _sendParam The parameters for the send() operation.\n     * @param _payInLzToken Flag indicating whether the caller is paying in the LZ token.\n     * @return fee The calculated LayerZero messaging fee from the send() operation.\n     *\n     * @dev MessagingFee: LayerZero msg fee\n     *  - nativeFee: The native fee.\n     *  - lzTokenFee: The lzToken fee.\n     */\n    function quoteSend(SendParam calldata _sendParam, bool _payInLzToken) external view returns (MessagingFee memory);\n\n    /**\n     * @notice Executes the send() operation.\n     * @param _sendParam The parameters for the send operation.\n     * @param _fee The fee information supplied by the caller.\n     *      - nativeFee: The native fee.\n     *      - lzTokenFee: The lzToken fee.\n     * @param _refundAddress The address to receive any excess funds from fees etc. on the src.\n     * @return receipt The LayerZero messaging receipt from the send() operation.\n     * @return oftReceipt The OFT receipt information.\n     *\n     * @dev MessagingReceipt: LayerZero msg receipt\n     *  - guid: The unique identifier for the sent message.\n     *  - nonce: The nonce of the sent message.\n     *  - fee: The LayerZero fee incurred for the message.\n     */\n    function send(\n        SendParam calldata _sendParam,\n        MessagingFee calldata _fee,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory, OFTReceipt memory);\n}\n"},"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nlibrary OFTComposeMsgCodec {\n    // Offset constants for decoding composed messages\n    uint8 private constant NONCE_OFFSET = 8;\n    uint8 private constant SRC_EID_OFFSET = 12;\n    uint8 private constant AMOUNT_LD_OFFSET = 44;\n    uint8 private constant COMPOSE_FROM_OFFSET = 76;\n\n    /**\n     * @dev Encodes a OFT composed message.\n     * @param _nonce The nonce value.\n     * @param _srcEid The source endpoint ID.\n     * @param _amountLD The amount in local decimals.\n     * @param _composeMsg The composed message.\n     * @return _msg The encoded Composed message.\n     */\n    function encode(\n        uint64 _nonce,\n        uint32 _srcEid,\n        uint256 _amountLD,\n        bytes memory _composeMsg // 0x[composeFrom][composeMsg]\n    ) internal pure returns (bytes memory _msg) {\n        _msg = abi.encodePacked(_nonce, _srcEid, _amountLD, _composeMsg);\n    }\n\n    /**\n     * @dev Retrieves the nonce for the composed message.\n     * @param _msg The message.\n     * @return The nonce value.\n     */\n    function nonce(bytes calldata _msg) internal pure returns (uint64) {\n        return uint64(bytes8(_msg[:NONCE_OFFSET]));\n    }\n\n    /**\n     * @dev Retrieves the source endpoint ID for the composed message.\n     * @param _msg The message.\n     * @return The source endpoint ID.\n     */\n    function srcEid(bytes calldata _msg) internal pure returns (uint32) {\n        return uint32(bytes4(_msg[NONCE_OFFSET:SRC_EID_OFFSET]));\n    }\n\n    /**\n     * @dev Retrieves the amount in local decimals from the composed message.\n     * @param _msg The message.\n     * @return The amount in local decimals.\n     */\n    function amountLD(bytes calldata _msg) internal pure returns (uint256) {\n        return uint256(bytes32(_msg[SRC_EID_OFFSET:AMOUNT_LD_OFFSET]));\n    }\n\n    /**\n     * @dev Retrieves the composeFrom value from the composed message.\n     * @param _msg The message.\n     * @return The composeFrom value.\n     */\n    function composeFrom(bytes calldata _msg) internal pure returns (bytes32) {\n        return bytes32(_msg[AMOUNT_LD_OFFSET:COMPOSE_FROM_OFFSET]);\n    }\n\n    /**\n     * @dev Retrieves the composed message.\n     * @param _msg The message.\n     * @return The composed message.\n     */\n    function composeMsg(bytes calldata _msg) internal pure returns (bytes memory) {\n        return _msg[COMPOSE_FROM_OFFSET:];\n    }\n\n    /**\n     * @dev Converts an address to bytes32.\n     * @param _addr The address to convert.\n     * @return The bytes32 representation of the address.\n     */\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\n        return bytes32(uint256(uint160(_addr)));\n    }\n\n    /**\n     * @dev Converts bytes32 to an address.\n     * @param _b The bytes32 value to convert.\n     * @return The address representation of bytes32.\n     */\n    function bytes32ToAddress(bytes32 _b) internal pure returns (address) {\n        return address(uint160(uint256(_b)));\n    }\n}\n"},"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport { IOFT } from \"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport { HyperLiquidComposerCodec } from \"./library/HyperLiquidComposerCodec.sol\";\nimport { IHyperLiquidComposer } from \"./interfaces/IHyperLiquidComposer.sol\";\nimport { IHyperliquidWritePrecompile } from \"./interfaces/IHyperliquidWritePrecompile.sol\";\n\ncontract HyperCoreAdapter is IHyperLiquidComposer {\n    address public immutable OFT_TOKEN_ASSET_BRIDGE_ADDRESS;\n    uint64 public immutable OFT_TOKEN_CORE_INDEX_ID;\n\n    address public constant L1WritePrecompileAddress = 0x3333333333333333333333333333333333333333;\n    address payable public constant HYPE_ASSET_BRIDGE_ADDRESS = payable(0x2222222222222222222222222222222222222222);\n    uint64 public constant HYPER_CORE_INDEX_ID = 1105;\n    uint256 public constant HYPER_CORE_INDEX_ID_DECIMAL_DIFF = 18 - 8;\n\n    address public immutable endpoint;\n    IOFT public immutable oft;\n    IERC20 public immutable token;\n    uint256 public immutable weiDiff;\n    /// @notice Constructor for the HyperLiquidLZComposer contract\n    ///\n    /// @dev This constructor is called by the `HyperLiquidOFT` contract\n    /// @dev Post deployment, this address needs to be approved (via approveCaller) by the `owner` of the `HyperLiquidOFT` contract to call the `transferToHyperLiquidL1` function\n    ///\n    /// @param _endpoint The LayerZero endpoint address\n    /// @param _oft The OFT contract address associated with this composer\n    constructor(address _endpoint, address _oft, uint64 _coreIndexId, uint256 _weiDiff) {\n        // Validate that the OFT contract implements the `IHyperLiquidERC20Extended` interface\n        // This is to ensure that the OFT contract has the `transferToHyperLiquidL1` function\n        oft = IOFT(_oft);\n        token = IERC20(oft.token());\n\n        endpoint = _endpoint;\n\n        /// @dev Hyperliquid L1 contract address is the prefix + the core index id\n        /// @dev This is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1\n        /// @dev https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addresses\n        /// @dev It is formed by 0x2000...0000 + the core index id\n        OFT_TOKEN_ASSET_BRIDGE_ADDRESS = HyperLiquidComposerCodec.into_assetBridgeAddress(_coreIndexId);\n        OFT_TOKEN_CORE_INDEX_ID = _coreIndexId;\n        weiDiff = _weiDiff;\n    }\n\n    /// @notice Composes a message to be sent to the HyperLiquidLZComposer\n    /// @notice This function is the only new addition to the OFT standard\n    ///\n    /// @dev This function is called by the OFTCore contract when a message is sent\n    ///\n    /// @param _oft The address of the OFT contract.\n    /// @param _message The encoded message content, expected to be of type: (address receiver).\n    function lzCompose(\n        address _oft,\n        bytes32 /*_guid*/,\n        bytes calldata _message,\n        address /*_executor*/,\n        bytes calldata /*_extraData*/\n    ) external payable virtual override {\n        // Validate the composeCall based on the docs - https://docs.layerzero.network/v2/developers/evm/oft/oft-patterns-extensions#receiving-compose\n        if (msg.sender != address(endpoint)) {\n            revert HyperLiquidComposer_InvalidCall_NotEndpoint(msg.sender);\n        }\n\n        if (address(oft) != _oft) {\n            revert HyperLiquidComposer_InvalidCall_NotOFT(address(oft), _oft);\n        }\n\n        // Validate the message and decode it -\n        // The message is expected to be of type: (address receiver)\n        // The bytes object should be encoded as an abi.encodePacked() of the receiver address\n        // This is found as SendParam.composeMsg that the OFTCore contract populates on the send() call\n        (address _receiver, uint256 _amountLD) = HyperLiquidComposerCodec.validateAndDecodeMessage(_message);\n\n        // If the message is being sent with a value, we need to fund the address on HyperCore\n        // This is because the HyperCore contract is deployed with a zero balance\n        if (msg.value > 0) {\n            _fundAddressOnHyperCore(_receiver, msg.value);\n        }\n\n        // Transfer the tokens to the HyperLiquid L1 contract\n        // This creates the Transfer event that HyperLiquid L1 listens for\n        // IERC20.Transfer(_receiver, 0x2222222222222222222222222222222222222222, _amountLD)\n        _sendAssetToHyperCore(_receiver, _amountLD);\n    }\n\n    function _sendAssetToHyperCore(address receiever, uint256 amount) internal virtual {\n        token.transfer(OFT_TOKEN_ASSET_BRIDGE_ADDRESS, amount);\n        IHyperliquidWritePrecompile(L1WritePrecompileAddress).sendSpot(\n            receiever,\n            OFT_TOKEN_CORE_INDEX_ID,\n            uint64(amount / 10 ** weiDiff)\n        );\n    }\n\n    function _fundAddressOnHyperCore(address receiever, uint256 amount) internal virtual {\n        (bool sent, ) = HYPE_ASSET_BRIDGE_ADDRESS.call{ value: amount }(\"\");\n        require(sent, \"Failed to send HYPE to HyperCore\");\n\n        IHyperliquidWritePrecompile(L1WritePrecompileAddress).sendSpot(\n            receiever,\n            HYPER_CORE_INDEX_ID,\n            uint64(amount / 10 ** HYPER_CORE_INDEX_ID_DECIMAL_DIFF)\n        );\n    }\n\n    receive() external payable {}\n}\n"},"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperLiquidComposer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport { IOAppComposer } from \"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\";\n\ninterface IHyperLiquidComposer is IOAppComposer {\n    error HyperLiquidComposer_InvalidCall_NotEndpoint(address _notEndpointAddress);\n    error HyperLiquidComposer_InvalidCall_NotOFT(address _internalOFTAddress, address _receivedOFTAddress);\n    error HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension(address _oft, address _token);\n\n    function OFT_TOKEN_ASSET_BRIDGE_ADDRESS() external view returns (address);\n    function OFT_TOKEN_CORE_INDEX_ID() external view returns (uint64);\n}\n"},"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IHyperliquidWritePrecompile {\n    event IocOrder(address indexed user, uint32 asset, bool isBuy, uint64 limitPx, uint64 sz);\n    event VaultTransfer(address indexed user, address indexed vault, bool isDeposit, uint64 usd);\n    event TokenDelegate(address indexed user, address indexed validator, uint64 _wei, bool isUndelegate);\n    event CDeposit(address indexed user, uint64 _wei);\n    event CWithdrawal(address indexed user, uint64 _wei);\n    event SpotSend(address indexed user, address indexed destination, uint64 token, uint64 _wei);\n    event UsdClassTransfer(address indexed user, uint64 ntl, bool toPerp);\n\n    function sendIocOrder(uint32 asset, bool isBuy, uint64 limitPx, uint64 sz) external;\n\n    function sendVaultTransfer(address vault, bool isDeposit, uint64 usd) external;\n\n    function sendTokenDelegate(address validator, uint64 _wei, bool isUndelegate) external;\n\n    function sendCDeposit(uint64 _wei) external;\n\n    function sendCWithdrawal(uint64 _wei) external;\n\n    function sendSpot(address destination, uint64 token, uint64 _wei) external;\n\n    function sendUsdClassTransfer(uint64 ntl, bool toPerp) external;\n}\n"},"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport { OFTComposeMsgCodec } from \"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\";\n\nlibrary HyperLiquidComposerCodec {\n    /// @dev The length of the message that is valid for the HyperLiquidComposer\n    /// @dev This is 20 bytes because addresses are 20 bytes\n    /// @dev We are in encodePacked mode, if we are in encode mode, the length is 42 bytes\n    uint256 public constant VALID_COMPOSE_MESSAGE_LENGTH_PACKED = 20;\n\n    /// @dev The base asset bridge address is the address of the HyperLiquid L1 contract\n    /// @dev This is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1\n    /// @dev https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addresses\n    /// @dev It is formed by 0x2000...0000 + the core index id\n    address public constant BASE_ASSET_BRIDGE_ADDRESS = 0x2000000000000000000000000000000000000000;\n    uint256 public constant BASE_ASSET_BRIDGE_ADDRESS_UINT256 = uint256(uint160(BASE_ASSET_BRIDGE_ADDRESS));\n\n    error HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength(bytes message, uint256 length);\n\n    function validateAndDecodeMessage(\n        bytes calldata _composeMessage\n    ) internal pure returns (address _receiver, uint256 _amountLD) {\n        bytes memory message = OFTComposeMsgCodec.composeMsg(_composeMessage);\n\n        // Addresses in EVM are 20 bytes\n        // So if the message's length is not 20 bytes, we can pre-emptively revert\n        if (message.length != VALID_COMPOSE_MESSAGE_LENGTH_PACKED) {\n            revert HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength(message, message.length);\n        }\n\n        // Since we are encodePacked, we can just decode the first 20 bytes as an address\n        _receiver = address(bytes20(message));\n        _amountLD = OFTComposeMsgCodec.amountLD(_composeMessage);\n    }\n\n    function into_assetBridgeAddress(uint256 _coreIndexId) internal pure returns (address) {\n        return address(uint160(BASE_ASSET_BRIDGE_ADDRESS_UINT256 + _coreIndexId));\n    }\n\n    function into_tokenId(address _assetBridgeAddress) internal pure returns (uint256) {\n        return uint256(uint160(_assetBridgeAddress)) - BASE_ASSET_BRIDGE_ADDRESS_UINT256;\n    }\n}\n\n/*\n0x000000000000000000000000acc732e49f38002af5f29e9f042494e5352073500000000000000001000000000000000000000000a3824bffc05178b1ed611117e5b900adcb189b94000000000000000000009ca6000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000acc732e49f38002af5f29e9f042494e535207350acc732e49f38002af5f29e9f042494e535207350\n\n0x09b34731000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000060000000000000000000009ca6000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000acc732e49f38002af5f29e9f042494e535207350acc732e49f38002af5f29e9f042494e535207350\n\n\n\n\n\n*/"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/MyHyperCoreAdapter.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.22;\n\nimport { HyperCoreAdapter } from \"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol\";\n\ncontract MyHyperCoreAdapter is HyperCoreAdapter {\n    constructor(\n        address _lzEndpoint,\n        address _oft,\n        uint64 _hlIndexId,\n        uint256 _weiDiff\n    ) HyperCoreAdapter(_lzEndpoint, _oft, _hlIndexId, _weiDiff) {}\n\n    function sendAssetToHyperCore(address receiever, uint256 amount) public {\n        _sendAssetToHyperCore(receiever, amount);\n    }\n\n    function fundAddressOnHyperCore(address receiever, uint256 amount) public {\n        _fundAddressOnHyperCore(receiever, amount);\n    }\n}\n"},"contracts/WrappedHyperCoreAdapter.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.22;\n\nimport { HyperCoreAdapter } from \"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol\";\nimport { HyperLiquidComposerCodec } from \"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol\";\nimport { IHyperliquidWritePrecompile } from \"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol\";\n\ncontract WrappedHyperCoreAdapter is HyperCoreAdapter {\n    constructor(\n        address _lzEndpoint,\n        address _oft,\n        uint64 _hlIndexId,\n        uint256 _weiDiff\n    ) HyperCoreAdapter(_lzEndpoint, _oft, _hlIndexId, _weiDiff) {}\n\n    /// @notice Composes a message to be sent to the HyperLiquidLZComposer\n    /// @notice This function is the only new addition to the OFT standard\n    ///\n    /// @dev This function is called by the OFTCore contract when a message is sent\n    ///\n    /// @param _message The encoded message content, expected to be of type: (address receiver).\n    function lzCompose(\n        address /*_oft*/,\n        bytes32 /*_guid*/,\n        bytes calldata _message,\n        address /*_executor*/,\n        bytes calldata /*_extraData*/\n    ) external payable override {\n        // Validate the composeCall based on the docs - https://docs.layerzero.network/v2/developers/evm/oft/oft-patterns-extensions#receiving-compose\n        if (msg.sender != address(endpoint)) {\n            revert HyperLiquidComposer_InvalidCall_NotEndpoint(msg.sender);\n        }\n\n        // Validate the message and decode it -\n        // The message is expected to be of type: (address receiver)\n        // The bytes object should be encoded as an abi.encodePacked() of the receiver address\n        // This is found as SendParam.composeMsg that the OFTCore contract populates on the send() call\n        (address _receiver, uint256 _amountLD) = HyperLiquidComposerCodec.validateAndDecodeMessage(_message);\n\n        // If the message is being sent with a value, we need to fund the address on HyperCore\n        // This is because the HyperCore contract is deployed with a zero balance\n        if (msg.value > 0) {\n            _fundAddressOnHyperCore(_receiver, msg.value);\n        }\n\n        // Transfer the tokens to the HyperLiquid L1 contract\n        // This creates the Transfer event that HyperLiquid L1 listens for\n        // IERC20.Transfer(_receiver, 0x2222222222222222222222222222222222222222, _amountLD)\n        _sendAssetToHyperCore(_receiver, _amountLD);\n    }\n    function sendAssetToHyperCore(address receiever, uint256 amount) public {\n        _sendAssetToHyperCore(receiever, amount);\n    }\n\n    function fundAddressOnHyperCore(address receiever, uint256 amount) public payable {\n        _fundAddressOnHyperCore(receiever, amount);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol","exportedSymbols":{"ILayerZeroComposer":[17]},"id":18,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroComposer","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"59:36:0","text":" @title ILayerZeroComposer"},"fullyImplemented":false,"id":17,"linearizedBaseContracts":[17],"name":"ILayerZeroComposer","nameLocation":"106:18:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"131:727:0","text":" @notice Composes a LayerZero message from an OApp.\n @dev To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).\n @param _from The address initiating the composition, typically the OApp where the lzReceive was called.\n @param _guid The unique identifier for the corresponding LayerZero src/dst tx.\n @param _message The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive.\n @param _executor The address of the executor for the composed message.\n @param _extraData Additional arbitrary data in bytes passed by the entity who executes the lzCompose."},"functionSelector":"d0a10260","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"lzCompose","nameLocation":"872:9:0","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"_from","nameLocation":"899:5:0","nodeType":"VariableDeclaration","scope":16,"src":"891:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"_guid","nameLocation":"922:5:0","nodeType":"VariableDeclaration","scope":16,"src":"914:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6,"name":"bytes32","nodeType":"ElementaryTypeName","src":"914:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"_message","nameLocation":"952:8:0","nodeType":"VariableDeclaration","scope":16,"src":"937:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8,"name":"bytes","nodeType":"ElementaryTypeName","src":"937:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":11,"mutability":"mutable","name":"_executor","nameLocation":"978:9:0","nodeType":"VariableDeclaration","scope":16,"src":"970:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13,"mutability":"mutable","name":"_extraData","nameLocation":"1012:10:0","nodeType":"VariableDeclaration","scope":16,"src":"997:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12,"name":"bytes","nodeType":"ElementaryTypeName","src":"997:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"881:147:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"1045:0:0"},"scope":17,"src":"863:183:0","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":18,"src":"96:952:0","usedErrors":[],"usedEvents":[]}],"src":"33:1016:0"},"id":0},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","exportedSymbols":{"ILayerZeroEndpointV2":[220],"IMessageLibManager":[465],"IMessagingChannel":[601],"IMessagingComposer":[687],"IMessagingContext":[702],"MessagingFee":[51],"MessagingParams":[38],"MessagingReceipt":[46],"Origin":[58]},"id":221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":19,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:1"},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol","file":"./IMessageLibManager.sol","id":21,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":221,"sourceUnit":466,"src":"59:62:1","symbolAliases":[{"foreign":{"id":20,"name":"IMessageLibManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"68:18:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol","file":"./IMessagingComposer.sol","id":23,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":221,"sourceUnit":688,"src":"122:62:1","symbolAliases":[{"foreign":{"id":22,"name":"IMessagingComposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"131:18:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol","file":"./IMessagingChannel.sol","id":25,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":221,"sourceUnit":602,"src":"185:60:1","symbolAliases":[{"foreign":{"id":24,"name":"IMessagingChannel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"194:17:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol","file":"./IMessagingContext.sol","id":27,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":221,"sourceUnit":703,"src":"246:60:1","symbolAliases":[{"foreign":{"id":26,"name":"IMessagingContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"255:17:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"MessagingParams","id":38,"members":[{"constant":false,"id":29,"mutability":"mutable","name":"dstEid","nameLocation":"344:6:1","nodeType":"VariableDeclaration","scope":38,"src":"337:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":28,"name":"uint32","nodeType":"ElementaryTypeName","src":"337:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"receiver","nameLocation":"364:8:1","nodeType":"VariableDeclaration","scope":38,"src":"356:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"356:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"message","nameLocation":"384:7:1","nodeType":"VariableDeclaration","scope":38,"src":"378:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":32,"name":"bytes","nodeType":"ElementaryTypeName","src":"378:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"options","nameLocation":"403:7:1","nodeType":"VariableDeclaration","scope":38,"src":"397:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":34,"name":"bytes","nodeType":"ElementaryTypeName","src":"397:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"payInLzToken","nameLocation":"421:12:1","nodeType":"VariableDeclaration","scope":38,"src":"416:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36,"name":"bool","nodeType":"ElementaryTypeName","src":"416:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"MessagingParams","nameLocation":"315:15:1","nodeType":"StructDefinition","scope":221,"src":"308:128:1","visibility":"public"},{"canonicalName":"MessagingReceipt","id":46,"members":[{"constant":false,"id":40,"mutability":"mutable","name":"guid","nameLocation":"476:4:1","nodeType":"VariableDeclaration","scope":46,"src":"468:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":39,"name":"bytes32","nodeType":"ElementaryTypeName","src":"468:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"nonce","nameLocation":"493:5:1","nodeType":"VariableDeclaration","scope":46,"src":"486:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41,"name":"uint64","nodeType":"ElementaryTypeName","src":"486:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":45,"mutability":"mutable","name":"fee","nameLocation":"517:3:1","nodeType":"VariableDeclaration","scope":46,"src":"504:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_storage_ptr","typeString":"struct MessagingFee"},"typeName":{"id":44,"nodeType":"UserDefinedTypeName","pathNode":{"id":43,"name":"MessagingFee","nameLocations":["504:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":51,"src":"504:12:1"},"referencedDeclaration":51,"src":"504:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"name":"MessagingReceipt","nameLocation":"445:16:1","nodeType":"StructDefinition","scope":221,"src":"438:85:1","visibility":"public"},{"canonicalName":"MessagingFee","id":51,"members":[{"constant":false,"id":48,"mutability":"mutable","name":"nativeFee","nameLocation":"559:9:1","nodeType":"VariableDeclaration","scope":51,"src":"551:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint256","nodeType":"ElementaryTypeName","src":"551:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"lzTokenFee","nameLocation":"582:10:1","nodeType":"VariableDeclaration","scope":51,"src":"574:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"MessagingFee","nameLocation":"532:12:1","nodeType":"StructDefinition","scope":221,"src":"525:70:1","visibility":"public"},{"canonicalName":"Origin","id":58,"members":[{"constant":false,"id":53,"mutability":"mutable","name":"srcEid","nameLocation":"624:6:1","nodeType":"VariableDeclaration","scope":58,"src":"617:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":52,"name":"uint32","nodeType":"ElementaryTypeName","src":"617:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"644:6:1","nodeType":"VariableDeclaration","scope":58,"src":"636:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":54,"name":"bytes32","nodeType":"ElementaryTypeName","src":"636:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"nonce","nameLocation":"663:5:1","nodeType":"VariableDeclaration","scope":58,"src":"656:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":56,"name":"uint64","nodeType":"ElementaryTypeName","src":"656:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Origin","nameLocation":"604:6:1","nodeType":"StructDefinition","scope":221,"src":"597:74:1","visibility":"public"},{"abstract":false,"baseContracts":[{"baseName":{"id":59,"name":"IMessageLibManager","nameLocations":["707:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":465,"src":"707:18:1"},"id":60,"nodeType":"InheritanceSpecifier","src":"707:18:1"},{"baseName":{"id":61,"name":"IMessagingComposer","nameLocations":["727:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":687,"src":"727:18:1"},"id":62,"nodeType":"InheritanceSpecifier","src":"727:18:1"},{"baseName":{"id":63,"name":"IMessagingChannel","nameLocations":["747:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":601,"src":"747:17:1"},"id":64,"nodeType":"InheritanceSpecifier","src":"747:17:1"},{"baseName":{"id":65,"name":"IMessagingContext","nameLocations":["766:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":702,"src":"766:17:1"},"id":66,"nodeType":"InheritanceSpecifier","src":"766:17:1"}],"canonicalName":"ILayerZeroEndpointV2","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":220,"linearizedBaseContracts":[220,702,601,687,465],"name":"ILayerZeroEndpointV2","nameLocation":"683:20:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"1ab700d4ced0c005b164c0f789fd09fcbb0156d4c2041b8a3bfbcd961cd1567f","id":74,"name":"PacketSent","nameLocation":"796:10:1","nodeType":"EventDefinition","parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68,"indexed":false,"mutability":"mutable","name":"encodedPayload","nameLocation":"813:14:1","nodeType":"VariableDeclaration","scope":74,"src":"807:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":67,"name":"bytes","nodeType":"ElementaryTypeName","src":"807:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":70,"indexed":false,"mutability":"mutable","name":"options","nameLocation":"835:7:1","nodeType":"VariableDeclaration","scope":74,"src":"829:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":69,"name":"bytes","nodeType":"ElementaryTypeName","src":"829:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":72,"indexed":false,"mutability":"mutable","name":"sendLibrary","nameLocation":"852:11:1","nodeType":"VariableDeclaration","scope":74,"src":"844:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"806:58:1"},"src":"790:75:1"},{"anonymous":false,"eventSelector":"0d87345f3d1c929caba93e1c3821b54ff3512e12b66aa3cfe54b6bcbc17e59b4","id":83,"name":"PacketVerified","nameLocation":"877:14:1","nodeType":"EventDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"indexed":false,"mutability":"mutable","name":"origin","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":83,"src":"892:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_memory_ptr","typeString":"struct Origin"},"typeName":{"id":76,"nodeType":"UserDefinedTypeName","pathNode":{"id":75,"name":"Origin","nameLocations":["892:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"892:6:1"},"referencedDeclaration":58,"src":"892:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":79,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"915:8:1","nodeType":"VariableDeclaration","scope":83,"src":"907:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":81,"indexed":false,"mutability":"mutable","name":"payloadHash","nameLocation":"933:11:1","nodeType":"VariableDeclaration","scope":83,"src":"925:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":80,"name":"bytes32","nodeType":"ElementaryTypeName","src":"925:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"891:54:1"},"src":"871:75:1"},{"anonymous":false,"eventSelector":"3cd5e48f9730b129dc7550f0fcea9c767b7be37837cd10e55eb35f734f4bca04","id":90,"name":"PacketDelivered","nameLocation":"958:15:1","nodeType":"EventDefinition","parameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"indexed":false,"mutability":"mutable","name":"origin","nameLocation":"981:6:1","nodeType":"VariableDeclaration","scope":90,"src":"974:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_memory_ptr","typeString":"struct Origin"},"typeName":{"id":85,"nodeType":"UserDefinedTypeName","pathNode":{"id":84,"name":"Origin","nameLocations":["974:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"974:6:1"},"referencedDeclaration":58,"src":"974:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":88,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"997:8:1","nodeType":"VariableDeclaration","scope":90,"src":"989:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:33:1"},"src":"952:55:1"},{"anonymous":false,"eventSelector":"7edfa10fe10193301ad8a8bea7e968c7bcabcc64981f368e3aeada40ce26ae2c","id":111,"name":"LzReceiveAlert","nameLocation":"1019:14:1","nodeType":"EventDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"1059:8:1","nodeType":"VariableDeclaration","scope":111,"src":"1043:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":94,"indexed":true,"mutability":"mutable","name":"executor","nameLocation":"1093:8:1","nodeType":"VariableDeclaration","scope":111,"src":"1077:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":97,"indexed":false,"mutability":"mutable","name":"origin","nameLocation":"1118:6:1","nodeType":"VariableDeclaration","scope":111,"src":"1111:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_memory_ptr","typeString":"struct Origin"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"Origin","nameLocations":["1111:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1111:6:1"},"referencedDeclaration":58,"src":"1111:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":99,"indexed":false,"mutability":"mutable","name":"guid","nameLocation":"1142:4:1","nodeType":"VariableDeclaration","scope":111,"src":"1134:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":98,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1134:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":101,"indexed":false,"mutability":"mutable","name":"gas","nameLocation":"1164:3:1","nodeType":"VariableDeclaration","scope":111,"src":"1156:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1185:5:1","nodeType":"VariableDeclaration","scope":111,"src":"1177:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1177:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":105,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"1206:7:1","nodeType":"VariableDeclaration","scope":111,"src":"1200:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":104,"name":"bytes","nodeType":"ElementaryTypeName","src":"1200:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":107,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"1229:9:1","nodeType":"VariableDeclaration","scope":111,"src":"1223:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":106,"name":"bytes","nodeType":"ElementaryTypeName","src":"1223:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":109,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"1254:6:1","nodeType":"VariableDeclaration","scope":111,"src":"1248:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":108,"name":"bytes","nodeType":"ElementaryTypeName","src":"1248:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1033:233:1"},"src":"1013:254:1"},{"anonymous":false,"eventSelector":"d476ec5ec1ac11cec3714d41e7ea49419471aceb9bd0dff1becfc3e363a62396","id":115,"name":"LzTokenSet","nameLocation":"1279:10:1","nodeType":"EventDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1298:5:1","nodeType":"VariableDeclaration","scope":115,"src":"1290:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"1290:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1289:15:1"},"src":"1273:32:1"},{"anonymous":false,"eventSelector":"6ee10e9ed4d6ce9742703a498707862f4b00f1396a87195eb93267b3d7983981","id":121,"name":"DelegateSet","nameLocation":"1317:11:1","nodeType":"EventDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"1337:6:1","nodeType":"VariableDeclaration","scope":121,"src":"1329:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":119,"indexed":false,"mutability":"mutable","name":"delegate","nameLocation":"1353:8:1","nodeType":"VariableDeclaration","scope":121,"src":"1345:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1328:34:1"},"src":"1311:52:1"},{"functionSelector":"ddc28c58","id":132,"implemented":false,"kind":"function","modifiers":[],"name":"quote","nameLocation":"1378:5:1","nodeType":"FunctionDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"_params","nameLocation":"1409:7:1","nodeType":"VariableDeclaration","scope":132,"src":"1384:32:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$38_calldata_ptr","typeString":"struct MessagingParams"},"typeName":{"id":123,"nodeType":"UserDefinedTypeName","pathNode":{"id":122,"name":"MessagingParams","nameLocations":["1384:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"1384:15:1"},"referencedDeclaration":38,"src":"1384:15:1","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$38_storage_ptr","typeString":"struct MessagingParams"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"_sender","nameLocation":"1426:7:1","nodeType":"VariableDeclaration","scope":132,"src":"1418:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"1418:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1383:51:1"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":132,"src":"1458:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":129,"nodeType":"UserDefinedTypeName","pathNode":{"id":128,"name":"MessagingFee","nameLocations":["1458:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":51,"src":"1458:12:1"},"referencedDeclaration":51,"src":"1458:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"src":"1457:21:1"},"scope":220,"src":"1369:110:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2637a450","id":143,"implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"1494:4:1","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"_params","nameLocation":"1533:7:1","nodeType":"VariableDeclaration","scope":143,"src":"1508:32:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$38_calldata_ptr","typeString":"struct MessagingParams"},"typeName":{"id":134,"nodeType":"UserDefinedTypeName","pathNode":{"id":133,"name":"MessagingParams","nameLocations":["1508:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"1508:15:1"},"referencedDeclaration":38,"src":"1508:15:1","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$38_storage_ptr","typeString":"struct MessagingParams"}},"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"_refundAddress","nameLocation":"1558:14:1","nodeType":"VariableDeclaration","scope":143,"src":"1550:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"1550:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1498:80:1"},"returnParameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":143,"src":"1605:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$46_memory_ptr","typeString":"struct MessagingReceipt"},"typeName":{"id":140,"nodeType":"UserDefinedTypeName","pathNode":{"id":139,"name":"MessagingReceipt","nameLocations":["1605:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1605:16:1"},"referencedDeclaration":46,"src":"1605:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$46_storage_ptr","typeString":"struct MessagingReceipt"}},"visibility":"internal"}],"src":"1604:25:1"},"scope":220,"src":"1485:145:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"a825d747","id":153,"implemented":false,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1645:6:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"_origin","nameLocation":"1668:7:1","nodeType":"VariableDeclaration","scope":153,"src":"1652:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":145,"nodeType":"UserDefinedTypeName","pathNode":{"id":144,"name":"Origin","nameLocations":["1652:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1652:6:1"},"referencedDeclaration":58,"src":"1652:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"_receiver","nameLocation":"1685:9:1","nodeType":"VariableDeclaration","scope":153,"src":"1677:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"1677:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"_payloadHash","nameLocation":"1704:12:1","nodeType":"VariableDeclaration","scope":153,"src":"1696:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1696:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1651:66:1"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[],"src":"1726:0:1"},"scope":220,"src":"1636:91:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c9a54a99","id":163,"implemented":false,"kind":"function","modifiers":[],"name":"verifiable","nameLocation":"1742:10:1","nodeType":"FunctionDefinition","parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"_origin","nameLocation":"1769:7:1","nodeType":"VariableDeclaration","scope":163,"src":"1753:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":155,"nodeType":"UserDefinedTypeName","pathNode":{"id":154,"name":"Origin","nameLocations":["1753:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1753:6:1"},"referencedDeclaration":58,"src":"1753:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"_receiver","nameLocation":"1786:9:1","nodeType":"VariableDeclaration","scope":163,"src":"1778:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"1778:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1752:44:1"},"returnParameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":163,"src":"1820:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":160,"name":"bool","nodeType":"ElementaryTypeName","src":"1820:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1819:6:1"},"scope":220,"src":"1733:93:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"861e1ca5","id":173,"implemented":false,"kind":"function","modifiers":[],"name":"initializable","nameLocation":"1841:13:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"_origin","nameLocation":"1871:7:1","nodeType":"VariableDeclaration","scope":173,"src":"1855:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":165,"nodeType":"UserDefinedTypeName","pathNode":{"id":164,"name":"Origin","nameLocations":["1855:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1855:6:1"},"referencedDeclaration":58,"src":"1855:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"_receiver","nameLocation":"1888:9:1","nodeType":"VariableDeclaration","scope":173,"src":"1880:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":167,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1854:44:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":173,"src":"1922:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":170,"name":"bool","nodeType":"ElementaryTypeName","src":"1922:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1921:6:1"},"scope":220,"src":"1832:96:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0c0c389e","id":187,"implemented":false,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"1943:9:1","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"_origin","nameLocation":"1978:7:1","nodeType":"VariableDeclaration","scope":187,"src":"1962:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":175,"nodeType":"UserDefinedTypeName","pathNode":{"id":174,"name":"Origin","nameLocations":["1962:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1962:6:1"},"referencedDeclaration":58,"src":"1962:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"_receiver","nameLocation":"2003:9:1","nodeType":"VariableDeclaration","scope":187,"src":"1995:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"1995:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"_guid","nameLocation":"2030:5:1","nodeType":"VariableDeclaration","scope":187,"src":"2022:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2022:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"_message","nameLocation":"2060:8:1","nodeType":"VariableDeclaration","scope":187,"src":"2045:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":181,"name":"bytes","nodeType":"ElementaryTypeName","src":"2045:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"_extraData","nameLocation":"2093:10:1","nodeType":"VariableDeclaration","scope":187,"src":"2078:25:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":183,"name":"bytes","nodeType":"ElementaryTypeName","src":"2078:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1952:157:1"},"returnParameters":{"id":186,"nodeType":"ParameterList","parameters":[],"src":"2126:0:1"},"scope":220,"src":"1934:193:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2a56c1b0","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"clear","nameLocation":"2269:5:1","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"_oapp","nameLocation":"2283:5:1","nodeType":"VariableDeclaration","scope":199,"src":"2275:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"2275:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"_origin","nameLocation":"2306:7:1","nodeType":"VariableDeclaration","scope":199,"src":"2290:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":191,"nodeType":"UserDefinedTypeName","pathNode":{"id":190,"name":"Origin","nameLocations":["2290:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2290:6:1"},"referencedDeclaration":58,"src":"2290:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$58_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"_guid","nameLocation":"2323:5:1","nodeType":"VariableDeclaration","scope":199,"src":"2315:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2315:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":196,"mutability":"mutable","name":"_message","nameLocation":"2345:8:1","nodeType":"VariableDeclaration","scope":199,"src":"2330:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":195,"name":"bytes","nodeType":"ElementaryTypeName","src":"2330:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2274:80:1"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":220,"src":"2260:104:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c28e0eed","id":204,"implemented":false,"kind":"function","modifiers":[],"name":"setLzToken","nameLocation":"2379:10:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"_lzToken","nameLocation":"2398:8:1","nodeType":"VariableDeclaration","scope":204,"src":"2390:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"2390:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2389:18:1"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"2416:0:1"},"scope":220,"src":"2370:47:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e4fe1d94","id":209,"implemented":false,"kind":"function","modifiers":[],"name":"lzToken","nameLocation":"2432:7:1","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"2439:2:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":209,"src":"2465:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:9:1"},"scope":220,"src":"2423:51:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e1758bd8","id":214,"implemented":false,"kind":"function","modifiers":[],"name":"nativeToken","nameLocation":"2489:11:1","nodeType":"FunctionDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"2500:2:1"},"returnParameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":214,"src":"2526:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"2526:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2525:9:1"},"scope":220,"src":"2480:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ca5eb5e1","id":219,"implemented":false,"kind":"function","modifiers":[],"name":"setDelegate","nameLocation":"2550:11:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"_delegate","nameLocation":"2570:9:1","nodeType":"VariableDeclaration","scope":219,"src":"2562:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"2562:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2561:19:1"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[],"src":"2589:0:1"},"scope":220,"src":"2541:49:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":221,"src":"673:1919:1","usedErrors":[],"usedEvents":[74,83,90,111,115,121,238,244,250,258,266,274,284,477,489,501,615,625,647]}],"src":"33:2560:1"},"id":1},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol","exportedSymbols":{"IMessageLibManager":[465],"SetConfigParam":[229]},"id":466,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":222,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:2"},{"canonicalName":"SetConfigParam","id":229,"members":[{"constant":false,"id":224,"mutability":"mutable","name":"eid","nameLocation":"94:3:2","nodeType":"VariableDeclaration","scope":229,"src":"87:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":223,"name":"uint32","nodeType":"ElementaryTypeName","src":"87:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"configType","nameLocation":"110:10:2","nodeType":"VariableDeclaration","scope":229,"src":"103:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":225,"name":"uint32","nodeType":"ElementaryTypeName","src":"103:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"config","nameLocation":"132:6:2","nodeType":"VariableDeclaration","scope":229,"src":"126:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":227,"name":"bytes","nodeType":"ElementaryTypeName","src":"126:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SetConfigParam","nameLocation":"66:14:2","nodeType":"StructDefinition","scope":466,"src":"59:82:2","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"IMessageLibManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":465,"linearizedBaseContracts":[465],"name":"IMessageLibManager","nameLocation":"153:18:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IMessageLibManager.Timeout","id":234,"members":[{"constant":false,"id":231,"mutability":"mutable","name":"lib","nameLocation":"211:3:2","nodeType":"VariableDeclaration","scope":234,"src":"203:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"203:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"expiry","nameLocation":"232:6:2","nodeType":"VariableDeclaration","scope":234,"src":"224:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"224:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Timeout","nameLocation":"185:7:2","nodeType":"StructDefinition","scope":465,"src":"178:67:2","visibility":"public"},{"anonymous":false,"eventSelector":"6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af5","id":238,"name":"LibraryRegistered","nameLocation":"257:17:2","nodeType":"EventDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"283:6:2","nodeType":"VariableDeclaration","scope":238,"src":"275:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"275:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"274:16:2"},"src":"251:40:2"},{"anonymous":false,"eventSelector":"16aa0f528038ab41019e95bae5b418a50ba8532c5800e3b7ea2f517d3fa625f5","id":244,"name":"DefaultSendLibrarySet","nameLocation":"302:21:2","nodeType":"EventDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"331:3:2","nodeType":"VariableDeclaration","scope":244,"src":"324:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":239,"name":"uint32","nodeType":"ElementaryTypeName","src":"324:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":242,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"344:6:2","nodeType":"VariableDeclaration","scope":244,"src":"336:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"336:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"323:28:2"},"src":"296:56:2"},{"anonymous":false,"eventSelector":"c16891855cffb4a5ac51ac11864a3f3c96ba816cc45fe686c987ae36277de5ec","id":250,"name":"DefaultReceiveLibrarySet","nameLocation":"363:24:2","nodeType":"EventDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"395:3:2","nodeType":"VariableDeclaration","scope":250,"src":"388:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":245,"name":"uint32","nodeType":"ElementaryTypeName","src":"388:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":248,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"408:6:2","nodeType":"VariableDeclaration","scope":250,"src":"400:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"387:28:2"},"src":"357:59:2"},{"anonymous":false,"eventSelector":"55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f8","id":258,"name":"DefaultReceiveLibraryTimeoutSet","nameLocation":"427:31:2","nodeType":"EventDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"466:3:2","nodeType":"VariableDeclaration","scope":258,"src":"459:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":251,"name":"uint32","nodeType":"ElementaryTypeName","src":"459:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":254,"indexed":false,"mutability":"mutable","name":"oldLib","nameLocation":"479:6:2","nodeType":"VariableDeclaration","scope":258,"src":"471:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"471:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"indexed":false,"mutability":"mutable","name":"expiry","nameLocation":"495:6:2","nodeType":"VariableDeclaration","scope":258,"src":"487:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"487:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"458:44:2"},"src":"421:82:2"},{"anonymous":false,"eventSelector":"4cff966ebee29a156dcb34cf72c1d06231fb1777f6bdf6e8089819232f002b1c","id":266,"name":"SendLibrarySet","nameLocation":"514:14:2","nodeType":"EventDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"537:6:2","nodeType":"VariableDeclaration","scope":266,"src":"529:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":262,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"552:3:2","nodeType":"VariableDeclaration","scope":266,"src":"545:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":261,"name":"uint32","nodeType":"ElementaryTypeName","src":"545:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":264,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"565:6:2","nodeType":"VariableDeclaration","scope":266,"src":"557:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"528:44:2"},"src":"508:65:2"},{"anonymous":false,"eventSelector":"cd6f92f5ac6185a5acfa02c92090746cec64d777269cbcd0ed031e396657a1c2","id":274,"name":"ReceiveLibrarySet","nameLocation":"584:17:2","nodeType":"EventDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"610:8:2","nodeType":"VariableDeclaration","scope":274,"src":"602:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"602:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":270,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"627:3:2","nodeType":"VariableDeclaration","scope":274,"src":"620:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":269,"name":"uint32","nodeType":"ElementaryTypeName","src":"620:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":272,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"640:6:2","nodeType":"VariableDeclaration","scope":274,"src":"632:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"601:46:2"},"src":"578:70:2"},{"anonymous":false,"eventSelector":"4e0a5bbfa0c11a64effb1ada324b5437a17272e1aed9320398715ef71bb20928","id":284,"name":"ReceiveLibraryTimeoutSet","nameLocation":"659:24:2","nodeType":"EventDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"692:8:2","nodeType":"VariableDeclaration","scope":284,"src":"684:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":278,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"709:3:2","nodeType":"VariableDeclaration","scope":284,"src":"702:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":277,"name":"uint32","nodeType":"ElementaryTypeName","src":"702:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":280,"indexed":false,"mutability":"mutable","name":"oldLib","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":284,"src":"714:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":282,"indexed":false,"mutability":"mutable","name":"timeout","nameLocation":"738:7:2","nodeType":"VariableDeclaration","scope":284,"src":"730:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"683:63:2"},"src":"653:94:2"},{"functionSelector":"e8964e81","id":289,"implemented":false,"kind":"function","modifiers":[],"name":"registerLibrary","nameLocation":"762:15:2","nodeType":"FunctionDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"_lib","nameLocation":"786:4:2","nodeType":"VariableDeclaration","scope":289,"src":"778:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:14:2"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[],"src":"800:0:2"},"scope":465,"src":"753:48:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"dc706a62","id":296,"implemented":false,"kind":"function","modifiers":[],"name":"isRegisteredLibrary","nameLocation":"816:19:2","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"_lib","nameLocation":"844:4:2","nodeType":"VariableDeclaration","scope":296,"src":"836:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"835:14:2"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":296,"src":"873:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":293,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"872:6:2"},"scope":465,"src":"807:72:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9132e5c3","id":302,"implemented":false,"kind":"function","modifiers":[],"name":"getRegisteredLibraries","nameLocation":"894:22:2","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[],"src":"916:2:2"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"942:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":299,"nodeType":"ArrayTypeName","src":"942:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"941:18:2"},"scope":465,"src":"885:75:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aafea312","id":309,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultSendLibrary","nameLocation":"975:21:2","nodeType":"FunctionDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"_eid","nameLocation":"1004:4:2","nodeType":"VariableDeclaration","scope":309,"src":"997:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":303,"name":"uint32","nodeType":"ElementaryTypeName","src":"997:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"_newLib","nameLocation":"1018:7:2","nodeType":"VariableDeclaration","scope":309,"src":"1010:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"1010:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"996:30:2"},"returnParameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"1035:0:2"},"scope":465,"src":"966:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f64be4c7","id":316,"implemented":false,"kind":"function","modifiers":[],"name":"defaultSendLibrary","nameLocation":"1051:18:2","nodeType":"FunctionDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"_eid","nameLocation":"1077:4:2","nodeType":"VariableDeclaration","scope":316,"src":"1070:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":310,"name":"uint32","nodeType":"ElementaryTypeName","src":"1070:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1069:13:2"},"returnParameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":316,"src":"1106:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"1106:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1105:9:2"},"scope":465,"src":"1042:73:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a718531b","id":325,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultReceiveLibrary","nameLocation":"1130:24:2","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"_eid","nameLocation":"1162:4:2","nodeType":"VariableDeclaration","scope":325,"src":"1155:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":317,"name":"uint32","nodeType":"ElementaryTypeName","src":"1155:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"_newLib","nameLocation":"1176:7:2","nodeType":"VariableDeclaration","scope":325,"src":"1168:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"_gracePeriod","nameLocation":"1193:12:2","nodeType":"VariableDeclaration","scope":325,"src":"1185:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1154:52:2"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[],"src":"1215:0:2"},"scope":465,"src":"1121:95:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6f50a803","id":332,"implemented":false,"kind":"function","modifiers":[],"name":"defaultReceiveLibrary","nameLocation":"1231:21:2","nodeType":"FunctionDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"_eid","nameLocation":"1260:4:2","nodeType":"VariableDeclaration","scope":332,"src":"1253:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":326,"name":"uint32","nodeType":"ElementaryTypeName","src":"1253:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1252:13:2"},"returnParameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":332,"src":"1289:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:9:2"},"scope":465,"src":"1222:76:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d4b4ec8f","id":341,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultReceiveLibraryTimeout","nameLocation":"1313:31:2","nodeType":"FunctionDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"_eid","nameLocation":"1352:4:2","nodeType":"VariableDeclaration","scope":341,"src":"1345:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":333,"name":"uint32","nodeType":"ElementaryTypeName","src":"1345:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"_lib","nameLocation":"1366:4:2","nodeType":"VariableDeclaration","scope":341,"src":"1358:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"1358:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"_expiry","nameLocation":"1380:7:2","nodeType":"VariableDeclaration","scope":341,"src":"1372:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1372:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1344:44:2"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[],"src":"1397:0:2"},"scope":465,"src":"1304:94:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6e83f5bb","id":350,"implemented":false,"kind":"function","modifiers":[],"name":"defaultReceiveLibraryTimeout","nameLocation":"1413:28:2","nodeType":"FunctionDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"_eid","nameLocation":"1449:4:2","nodeType":"VariableDeclaration","scope":350,"src":"1442:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":342,"name":"uint32","nodeType":"ElementaryTypeName","src":"1442:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1441:13:2"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"lib","nameLocation":"1486:3:2","nodeType":"VariableDeclaration","scope":350,"src":"1478:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"1478:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"expiry","nameLocation":"1499:6:2","nodeType":"VariableDeclaration","scope":350,"src":"1491:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1477:29:2"},"scope":465,"src":"1404:103:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6750cd4c","id":357,"implemented":false,"kind":"function","modifiers":[],"name":"isSupportedEid","nameLocation":"1522:14:2","nodeType":"FunctionDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"_eid","nameLocation":"1544:4:2","nodeType":"VariableDeclaration","scope":357,"src":"1537:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":351,"name":"uint32","nodeType":"ElementaryTypeName","src":"1537:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1536:13:2"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":357,"src":"1573:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":354,"name":"bool","nodeType":"ElementaryTypeName","src":"1573:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1572:6:2"},"scope":465,"src":"1513:66:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9d7f9775","id":368,"implemented":false,"kind":"function","modifiers":[],"name":"isValidReceiveLibrary","nameLocation":"1594:21:2","nodeType":"FunctionDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"_receiver","nameLocation":"1624:9:2","nodeType":"VariableDeclaration","scope":368,"src":"1616:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"_eid","nameLocation":"1642:4:2","nodeType":"VariableDeclaration","scope":368,"src":"1635:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":360,"name":"uint32","nodeType":"ElementaryTypeName","src":"1635:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"_lib","nameLocation":"1656:4:2","nodeType":"VariableDeclaration","scope":368,"src":"1648:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:46:2"},"returnParameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":368,"src":"1685:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":365,"name":"bool","nodeType":"ElementaryTypeName","src":"1685:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1684:6:2"},"scope":465,"src":"1585:106:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"1697:59:2","text":"------------------- OApp interfaces -------------------"},"functionSelector":"9535ff30","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"setSendLibrary","nameLocation":"1770:14:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"_oapp","nameLocation":"1793:5:2","nodeType":"VariableDeclaration","scope":378,"src":"1785:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"_eid","nameLocation":"1807:4:2","nodeType":"VariableDeclaration","scope":378,"src":"1800:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":372,"name":"uint32","nodeType":"ElementaryTypeName","src":"1800:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"_newLib","nameLocation":"1821:7:2","nodeType":"VariableDeclaration","scope":378,"src":"1813:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"1813:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1784:45:2"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"1838:0:2"},"scope":465,"src":"1761:78:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b96a277f","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"getSendLibrary","nameLocation":"1854:14:2","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"_sender","nameLocation":"1877:7:2","nodeType":"VariableDeclaration","scope":387,"src":"1869:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":379,"name":"address","nodeType":"ElementaryTypeName","src":"1869:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"_eid","nameLocation":"1893:4:2","nodeType":"VariableDeclaration","scope":387,"src":"1886:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":381,"name":"uint32","nodeType":"ElementaryTypeName","src":"1886:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1868:30:2"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"lib","nameLocation":"1930:3:2","nodeType":"VariableDeclaration","scope":387,"src":"1922:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"1922:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1921:13:2"},"scope":465,"src":"1845:90:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dc93c8a2","id":396,"implemented":false,"kind":"function","modifiers":[],"name":"isDefaultSendLibrary","nameLocation":"1950:20:2","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"_sender","nameLocation":"1979:7:2","nodeType":"VariableDeclaration","scope":396,"src":"1971:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"1971:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"_eid","nameLocation":"1995:4:2","nodeType":"VariableDeclaration","scope":396,"src":"1988:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":390,"name":"uint32","nodeType":"ElementaryTypeName","src":"1988:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1970:30:2"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":396,"src":"2024:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":393,"name":"bool","nodeType":"ElementaryTypeName","src":"2024:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2023:6:2"},"scope":465,"src":"1941:89:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6a14d715","id":407,"implemented":false,"kind":"function","modifiers":[],"name":"setReceiveLibrary","nameLocation":"2045:17:2","nodeType":"FunctionDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"_oapp","nameLocation":"2071:5:2","nodeType":"VariableDeclaration","scope":407,"src":"2063:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"2063:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"_eid","nameLocation":"2085:4:2","nodeType":"VariableDeclaration","scope":407,"src":"2078:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":399,"name":"uint32","nodeType":"ElementaryTypeName","src":"2078:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"_newLib","nameLocation":"2099:7:2","nodeType":"VariableDeclaration","scope":407,"src":"2091:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"2091:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"_gracePeriod","nameLocation":"2116:12:2","nodeType":"VariableDeclaration","scope":407,"src":"2108:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":403,"name":"uint256","nodeType":"ElementaryTypeName","src":"2108:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2062:67:2"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"2138:0:2"},"scope":465,"src":"2036:103:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"402f8468","id":418,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveLibrary","nameLocation":"2154:17:2","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"_receiver","nameLocation":"2180:9:2","nodeType":"VariableDeclaration","scope":418,"src":"2172:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"2172:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"_eid","nameLocation":"2198:4:2","nodeType":"VariableDeclaration","scope":418,"src":"2191:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":410,"name":"uint32","nodeType":"ElementaryTypeName","src":"2191:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2171:32:2"},"returnParameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"lib","nameLocation":"2235:3:2","nodeType":"VariableDeclaration","scope":418,"src":"2227:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"2227:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"isDefault","nameLocation":"2245:9:2","nodeType":"VariableDeclaration","scope":418,"src":"2240:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":415,"name":"bool","nodeType":"ElementaryTypeName","src":"2240:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2226:29:2"},"scope":465,"src":"2145:111:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"183c834f","id":429,"implemented":false,"kind":"function","modifiers":[],"name":"setReceiveLibraryTimeout","nameLocation":"2271:24:2","nodeType":"FunctionDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"_oapp","nameLocation":"2304:5:2","nodeType":"VariableDeclaration","scope":429,"src":"2296:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"2296:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"_eid","nameLocation":"2318:4:2","nodeType":"VariableDeclaration","scope":429,"src":"2311:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":421,"name":"uint32","nodeType":"ElementaryTypeName","src":"2311:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"_lib","nameLocation":"2332:4:2","nodeType":"VariableDeclaration","scope":429,"src":"2324:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"2324:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":426,"mutability":"mutable","name":"_expiry","nameLocation":"2346:7:2","nodeType":"VariableDeclaration","scope":429,"src":"2338:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"2338:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:59:2"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"2363:0:2"},"scope":465,"src":"2262:102:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ef667aa1","id":440,"implemented":false,"kind":"function","modifiers":[],"name":"receiveLibraryTimeout","nameLocation":"2379:21:2","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"_receiver","nameLocation":"2409:9:2","nodeType":"VariableDeclaration","scope":440,"src":"2401:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"2401:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"_eid","nameLocation":"2427:4:2","nodeType":"VariableDeclaration","scope":440,"src":"2420:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":432,"name":"uint32","nodeType":"ElementaryTypeName","src":"2420:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2400:32:2"},"returnParameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"lib","nameLocation":"2464:3:2","nodeType":"VariableDeclaration","scope":440,"src":"2456:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"2456:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"expiry","nameLocation":"2477:6:2","nodeType":"VariableDeclaration","scope":440,"src":"2469:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2455:29:2"},"scope":465,"src":"2370:115:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6dbd9f90","id":451,"implemented":false,"kind":"function","modifiers":[],"name":"setConfig","nameLocation":"2500:9:2","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"_oapp","nameLocation":"2518:5:2","nodeType":"VariableDeclaration","scope":451,"src":"2510:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"2510:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"_lib","nameLocation":"2533:4:2","nodeType":"VariableDeclaration","scope":451,"src":"2525:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"_params","nameLocation":"2565:7:2","nodeType":"VariableDeclaration","scope":451,"src":"2539:33:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SetConfigParam_$229_calldata_ptr_$dyn_calldata_ptr","typeString":"struct SetConfigParam[]"},"typeName":{"baseType":{"id":446,"nodeType":"UserDefinedTypeName","pathNode":{"id":445,"name":"SetConfigParam","nameLocations":["2539:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"2539:14:2"},"referencedDeclaration":229,"src":"2539:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_SetConfigParam_$229_storage_ptr","typeString":"struct SetConfigParam"}},"id":447,"nodeType":"ArrayTypeName","src":"2539:16:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SetConfigParam_$229_storage_$dyn_storage_ptr","typeString":"struct SetConfigParam[]"}},"visibility":"internal"}],"src":"2509:64:2"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"2582:0:2"},"scope":465,"src":"2491:92:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2b3197b9","id":464,"implemented":false,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"2598:9:2","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"_oapp","nameLocation":"2625:5:2","nodeType":"VariableDeclaration","scope":464,"src":"2617:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"2617:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"_lib","nameLocation":"2648:4:2","nodeType":"VariableDeclaration","scope":464,"src":"2640:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"2640:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"_eid","nameLocation":"2669:4:2","nodeType":"VariableDeclaration","scope":464,"src":"2662:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":456,"name":"uint32","nodeType":"ElementaryTypeName","src":"2662:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"_configType","nameLocation":"2690:11:2","nodeType":"VariableDeclaration","scope":464,"src":"2683:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":458,"name":"uint32","nodeType":"ElementaryTypeName","src":"2683:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2607:100:2"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"config","nameLocation":"2744:6:2","nodeType":"VariableDeclaration","scope":464,"src":"2731:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"2731:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2730:21:2"},"scope":465,"src":"2589:163:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":466,"src":"143:2611:2","usedErrors":[],"usedEvents":[238,244,250,258,266,274,284]}],"src":"33:2722:2"},"id":2},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol","exportedSymbols":{"IMessagingChannel":[601]},"id":602,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":467,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IMessagingChannel","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":601,"linearizedBaseContracts":[601],"name":"IMessagingChannel","nameLocation":"69:17:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"28f40053783033ef755556a0c3315379141f51a33aed8334174ffbadd90bde48","id":477,"name":"InboundNonceSkipped","nameLocation":"99:19:3","nodeType":"EventDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"indexed":false,"mutability":"mutable","name":"srcEid","nameLocation":"126:6:3","nodeType":"VariableDeclaration","scope":477,"src":"119:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":468,"name":"uint32","nodeType":"ElementaryTypeName","src":"119:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":471,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"142:6:3","nodeType":"VariableDeclaration","scope":477,"src":"134:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"134:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":473,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"158:8:3","nodeType":"VariableDeclaration","scope":477,"src":"150:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"150:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":475,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"175:5:3","nodeType":"VariableDeclaration","scope":477,"src":"168:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":474,"name":"uint64","nodeType":"ElementaryTypeName","src":"168:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"118:63:3"},"src":"93:89:3"},{"anonymous":false,"eventSelector":"af0450c392c4f702515a457a362328c8aa21916048ca6d0419e248b30cb55292","id":489,"name":"PacketNilified","nameLocation":"193:14:3","nodeType":"EventDefinition","parameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"indexed":false,"mutability":"mutable","name":"srcEid","nameLocation":"215:6:3","nodeType":"VariableDeclaration","scope":489,"src":"208:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":478,"name":"uint32","nodeType":"ElementaryTypeName","src":"208:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":481,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"231:6:3","nodeType":"VariableDeclaration","scope":489,"src":"223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"223:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":483,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"247:8:3","nodeType":"VariableDeclaration","scope":489,"src":"239:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"239:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":485,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"264:5:3","nodeType":"VariableDeclaration","scope":489,"src":"257:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":484,"name":"uint64","nodeType":"ElementaryTypeName","src":"257:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":487,"indexed":false,"mutability":"mutable","name":"payloadHash","nameLocation":"279:11:3","nodeType":"VariableDeclaration","scope":489,"src":"271:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"271:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"207:84:3"},"src":"187:105:3"},{"anonymous":false,"eventSelector":"7f68a37a6e69a0de35024a234558f9efe4b33b58657753d21eaaa82d51c3510e","id":501,"name":"PacketBurnt","nameLocation":"303:11:3","nodeType":"EventDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"indexed":false,"mutability":"mutable","name":"srcEid","nameLocation":"322:6:3","nodeType":"VariableDeclaration","scope":501,"src":"315:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":490,"name":"uint32","nodeType":"ElementaryTypeName","src":"315:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":493,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"338:6:3","nodeType":"VariableDeclaration","scope":501,"src":"330:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"330:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":495,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"354:8:3","nodeType":"VariableDeclaration","scope":501,"src":"346:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"346:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":497,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"371:5:3","nodeType":"VariableDeclaration","scope":501,"src":"364:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":496,"name":"uint64","nodeType":"ElementaryTypeName","src":"364:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":499,"indexed":false,"mutability":"mutable","name":"payloadHash","nameLocation":"386:11:3","nodeType":"VariableDeclaration","scope":501,"src":"378:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"378:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"314:84:3"},"src":"297:102:3"},{"functionSelector":"416ecebf","id":506,"implemented":false,"kind":"function","modifiers":[],"name":"eid","nameLocation":"414:3:3","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[],"src":"417:2:3"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":506,"src":"443:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":503,"name":"uint32","nodeType":"ElementaryTypeName","src":"443:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"442:8:3"},"scope":601,"src":"405:46:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d70b8902","id":517,"implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"614:4:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"_oapp","nameLocation":"627:5:3","nodeType":"VariableDeclaration","scope":517,"src":"619:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"_srcEid","nameLocation":"641:7:3","nodeType":"VariableDeclaration","scope":517,"src":"634:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":509,"name":"uint32","nodeType":"ElementaryTypeName","src":"634:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"_sender","nameLocation":"658:7:3","nodeType":"VariableDeclaration","scope":517,"src":"650:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"650:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"_nonce","nameLocation":"674:6:3","nodeType":"VariableDeclaration","scope":517,"src":"667:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":513,"name":"uint64","nodeType":"ElementaryTypeName","src":"667:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"618:63:3"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"690:0:3"},"scope":601,"src":"605:86:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e80fbf3","id":530,"implemented":false,"kind":"function","modifiers":[],"name":"nilify","nameLocation":"706:6:3","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"_oapp","nameLocation":"721:5:3","nodeType":"VariableDeclaration","scope":530,"src":"713:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"_srcEid","nameLocation":"735:7:3","nodeType":"VariableDeclaration","scope":530,"src":"728:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":520,"name":"uint32","nodeType":"ElementaryTypeName","src":"728:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"_sender","nameLocation":"752:7:3","nodeType":"VariableDeclaration","scope":530,"src":"744:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"744:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"_nonce","nameLocation":"768:6:3","nodeType":"VariableDeclaration","scope":530,"src":"761:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":524,"name":"uint64","nodeType":"ElementaryTypeName","src":"761:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"_payloadHash","nameLocation":"784:12:3","nodeType":"VariableDeclaration","scope":530,"src":"776:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"776:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"712:85:3"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"806:0:3"},"scope":601,"src":"697:110:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"40f80683","id":543,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"822:4:3","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"_oapp","nameLocation":"835:5:3","nodeType":"VariableDeclaration","scope":543,"src":"827:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"827:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"_srcEid","nameLocation":"849:7:3","nodeType":"VariableDeclaration","scope":543,"src":"842:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":533,"name":"uint32","nodeType":"ElementaryTypeName","src":"842:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"_sender","nameLocation":"866:7:3","nodeType":"VariableDeclaration","scope":543,"src":"858:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"858:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"_nonce","nameLocation":"882:6:3","nodeType":"VariableDeclaration","scope":543,"src":"875:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":537,"name":"uint64","nodeType":"ElementaryTypeName","src":"875:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"_payloadHash","nameLocation":"898:12:3","nodeType":"VariableDeclaration","scope":543,"src":"890:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"890:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"826:85:3"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"920:0:3"},"scope":601,"src":"813:108:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"aafe5e07","id":554,"implemented":false,"kind":"function","modifiers":[],"name":"nextGuid","nameLocation":"936:8:3","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"_sender","nameLocation":"953:7:3","nodeType":"VariableDeclaration","scope":554,"src":"945:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"945:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"_dstEid","nameLocation":"969:7:3","nodeType":"VariableDeclaration","scope":554,"src":"962:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":546,"name":"uint32","nodeType":"ElementaryTypeName","src":"962:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"_receiver","nameLocation":"986:9:3","nodeType":"VariableDeclaration","scope":554,"src":"978:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"978:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"944:52:3"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":554,"src":"1020:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1020:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1019:9:3"},"scope":601,"src":"927:102:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a0dd43fc","id":565,"implemented":false,"kind":"function","modifiers":[],"name":"inboundNonce","nameLocation":"1044:12:3","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"_receiver","nameLocation":"1065:9:3","nodeType":"VariableDeclaration","scope":565,"src":"1057:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"1057:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"_srcEid","nameLocation":"1083:7:3","nodeType":"VariableDeclaration","scope":565,"src":"1076:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":557,"name":"uint32","nodeType":"ElementaryTypeName","src":"1076:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"_sender","nameLocation":"1100:7:3","nodeType":"VariableDeclaration","scope":565,"src":"1092:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1092:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1056:52:3"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":565,"src":"1132:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":562,"name":"uint64","nodeType":"ElementaryTypeName","src":"1132:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1131:8:3"},"scope":601,"src":"1035:105:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9c6d7340","id":576,"implemented":false,"kind":"function","modifiers":[],"name":"outboundNonce","nameLocation":"1155:13:3","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"_sender","nameLocation":"1177:7:3","nodeType":"VariableDeclaration","scope":576,"src":"1169:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"_dstEid","nameLocation":"1193:7:3","nodeType":"VariableDeclaration","scope":576,"src":"1186:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":568,"name":"uint32","nodeType":"ElementaryTypeName","src":"1186:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"_receiver","nameLocation":"1210:9:3","nodeType":"VariableDeclaration","scope":576,"src":"1202:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1202:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1168:52:3"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"1244:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":573,"name":"uint64","nodeType":"ElementaryTypeName","src":"1244:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1243:8:3"},"scope":601,"src":"1146:106:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9fc7bcd","id":589,"implemented":false,"kind":"function","modifiers":[],"name":"inboundPayloadHash","nameLocation":"1267:18:3","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"_receiver","nameLocation":"1303:9:3","nodeType":"VariableDeclaration","scope":589,"src":"1295:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"1295:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"_srcEid","nameLocation":"1329:7:3","nodeType":"VariableDeclaration","scope":589,"src":"1322:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":579,"name":"uint32","nodeType":"ElementaryTypeName","src":"1322:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"_sender","nameLocation":"1354:7:3","nodeType":"VariableDeclaration","scope":589,"src":"1346:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1346:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"_nonce","nameLocation":"1378:6:3","nodeType":"VariableDeclaration","scope":589,"src":"1371:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":583,"name":"uint64","nodeType":"ElementaryTypeName","src":"1371:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1285:105:3"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":589,"src":"1414:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1414:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1413:9:3"},"scope":601,"src":"1258:165:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5b17bb70","id":600,"implemented":false,"kind":"function","modifiers":[],"name":"lazyInboundNonce","nameLocation":"1438:16:3","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"_receiver","nameLocation":"1463:9:3","nodeType":"VariableDeclaration","scope":600,"src":"1455:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"_srcEid","nameLocation":"1481:7:3","nodeType":"VariableDeclaration","scope":600,"src":"1474:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":592,"name":"uint32","nodeType":"ElementaryTypeName","src":"1474:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"_sender","nameLocation":"1498:7:3","nodeType":"VariableDeclaration","scope":600,"src":"1490:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1490:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1454:52:3"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":600,"src":"1530:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":597,"name":"uint64","nodeType":"ElementaryTypeName","src":"1530:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1529:8:3"},"scope":601,"src":"1429:109:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":602,"src":"59:1481:3","usedErrors":[],"usedEvents":[477,489,501]}],"src":"33:1508:3"},"id":3},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol","exportedSymbols":{"IMessagingComposer":[687]},"id":688,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":603,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IMessagingComposer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":687,"linearizedBaseContracts":[687],"name":"IMessagingComposer","nameLocation":"69:18:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"3d52ff888d033fd3dd1d8057da59e850c91d91a72c41dfa445b247dfedeb6dc1","id":615,"name":"ComposeSent","nameLocation":"100:11:4","nodeType":"EventDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"120:4:4","nodeType":"VariableDeclaration","scope":615,"src":"112:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"134:2:4","nodeType":"VariableDeclaration","scope":615,"src":"126:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"126:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"indexed":false,"mutability":"mutable","name":"guid","nameLocation":"146:4:4","nodeType":"VariableDeclaration","scope":615,"src":"138:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"138:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":611,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"159:5:4","nodeType":"VariableDeclaration","scope":615,"src":"152:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":610,"name":"uint16","nodeType":"ElementaryTypeName","src":"152:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":613,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"172:7:4","nodeType":"VariableDeclaration","scope":615,"src":"166:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":612,"name":"bytes","nodeType":"ElementaryTypeName","src":"166:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111:69:4"},"src":"94:87:4"},{"anonymous":false,"eventSelector":"0036c98efcf9e6641dfbc9051f66f405253e8e0c2ab4a24dccda15595b7378c8","id":625,"name":"ComposeDelivered","nameLocation":"192:16:4","nodeType":"EventDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"217:4:4","nodeType":"VariableDeclaration","scope":625,"src":"209:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"209:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":619,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"231:2:4","nodeType":"VariableDeclaration","scope":625,"src":"223:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"223:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":621,"indexed":false,"mutability":"mutable","name":"guid","nameLocation":"243:4:4","nodeType":"VariableDeclaration","scope":625,"src":"235:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"235:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":623,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"256:5:4","nodeType":"VariableDeclaration","scope":625,"src":"249:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":622,"name":"uint16","nodeType":"ElementaryTypeName","src":"249:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"208:54:4"},"src":"186:77:4"},{"anonymous":false,"eventSelector":"8a0b1dce321c5c5fb42349bce46d18087c04140de520917661fb923e44a904b9","id":647,"name":"LzComposeAlert","nameLocation":"274:14:4","nodeType":"EventDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"314:4:4","nodeType":"VariableDeclaration","scope":647,"src":"298:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"298:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":629,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"344:2:4","nodeType":"VariableDeclaration","scope":647,"src":"328:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":631,"indexed":true,"mutability":"mutable","name":"executor","nameLocation":"372:8:4","nodeType":"VariableDeclaration","scope":647,"src":"356:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":633,"indexed":false,"mutability":"mutable","name":"guid","nameLocation":"398:4:4","nodeType":"VariableDeclaration","scope":647,"src":"390:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"390:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":635,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"419:5:4","nodeType":"VariableDeclaration","scope":647,"src":"412:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":634,"name":"uint16","nodeType":"ElementaryTypeName","src":"412:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":637,"indexed":false,"mutability":"mutable","name":"gas","nameLocation":"442:3:4","nodeType":"VariableDeclaration","scope":647,"src":"434:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"434:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":639,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"463:5:4","nodeType":"VariableDeclaration","scope":647,"src":"455:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"455:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":641,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"484:7:4","nodeType":"VariableDeclaration","scope":647,"src":"478:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":640,"name":"bytes","nodeType":"ElementaryTypeName","src":"478:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":643,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"507:9:4","nodeType":"VariableDeclaration","scope":647,"src":"501:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":642,"name":"bytes","nodeType":"ElementaryTypeName","src":"501:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":645,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"532:6:4","nodeType":"VariableDeclaration","scope":647,"src":"526:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":644,"name":"bytes","nodeType":"ElementaryTypeName","src":"526:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"288:256:4"},"src":"268:277:4"},{"functionSelector":"35d330b0","id":660,"implemented":false,"kind":"function","modifiers":[],"name":"composeQueue","nameLocation":"560:12:4","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"_from","nameLocation":"590:5:4","nodeType":"VariableDeclaration","scope":660,"src":"582:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"582:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"_to","nameLocation":"613:3:4","nodeType":"VariableDeclaration","scope":660,"src":"605:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"605:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":653,"mutability":"mutable","name":"_guid","nameLocation":"634:5:4","nodeType":"VariableDeclaration","scope":660,"src":"626:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"626:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"_index","nameLocation":"656:6:4","nodeType":"VariableDeclaration","scope":660,"src":"649:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":654,"name":"uint16","nodeType":"ElementaryTypeName","src":"649:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"572:96:4"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"messageHash","nameLocation":"700:11:4","nodeType":"VariableDeclaration","scope":660,"src":"692:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"692:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"691:21:4"},"scope":687,"src":"551:162:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7cb59012","id":671,"implemented":false,"kind":"function","modifiers":[],"name":"sendCompose","nameLocation":"728:11:4","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"_to","nameLocation":"748:3:4","nodeType":"VariableDeclaration","scope":671,"src":"740:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"_guid","nameLocation":"761:5:4","nodeType":"VariableDeclaration","scope":671,"src":"753:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"753:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"_index","nameLocation":"775:6:4","nodeType":"VariableDeclaration","scope":671,"src":"768:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":665,"name":"uint16","nodeType":"ElementaryTypeName","src":"768:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"_message","nameLocation":"798:8:4","nodeType":"VariableDeclaration","scope":671,"src":"783:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":667,"name":"bytes","nodeType":"ElementaryTypeName","src":"783:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"739:68:4"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"816:0:4"},"scope":687,"src":"719:98:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"91d20fa1","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"lzCompose","nameLocation":"832:9:4","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"_from","nameLocation":"859:5:4","nodeType":"VariableDeclaration","scope":686,"src":"851:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"851:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"_to","nameLocation":"882:3:4","nodeType":"VariableDeclaration","scope":686,"src":"874:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"_guid","nameLocation":"903:5:4","nodeType":"VariableDeclaration","scope":686,"src":"895:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"895:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"_index","nameLocation":"925:6:4","nodeType":"VariableDeclaration","scope":686,"src":"918:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":678,"name":"uint16","nodeType":"ElementaryTypeName","src":"918:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"_message","nameLocation":"956:8:4","nodeType":"VariableDeclaration","scope":686,"src":"941:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":680,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"_extraData","nameLocation":"989:10:4","nodeType":"VariableDeclaration","scope":686,"src":"974:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":682,"name":"bytes","nodeType":"ElementaryTypeName","src":"974:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"841:164:4"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"1022:0:4"},"scope":687,"src":"823:200:4","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":688,"src":"59:966:4","usedErrors":[],"usedEvents":[615,625,647]}],"src":"33:993:4"},"id":4},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol","exportedSymbols":{"IMessagingContext":[702]},"id":703,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":689,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IMessagingContext","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":702,"linearizedBaseContracts":[702],"name":"IMessagingContext","nameLocation":"69:17:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"79624ca9","id":694,"implemented":false,"kind":"function","modifiers":[],"name":"isSendingMessage","nameLocation":"102:16:5","nodeType":"FunctionDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"118:2:5"},"returnParameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"144:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":691,"name":"bool","nodeType":"ElementaryTypeName","src":"144:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"143:6:5"},"scope":702,"src":"93:57:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"14f651a9","id":701,"implemented":false,"kind":"function","modifiers":[],"name":"getSendContext","nameLocation":"165:14:5","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[],"src":"179:2:5"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"dstEid","nameLocation":"212:6:5","nodeType":"VariableDeclaration","scope":701,"src":"205:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":696,"name":"uint32","nodeType":"ElementaryTypeName","src":"205:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"sender","nameLocation":"228:6:5","nodeType":"VariableDeclaration","scope":701,"src":"220:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"220:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"204:31:5"},"scope":702,"src":"156:80:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":703,"src":"59:179:5","usedErrors":[],"usedEvents":[]}],"src":"33:206:5"},"id":5},"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol":{"ast":{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol","exportedSymbols":{"ILayerZeroEndpointV2":[220],"IOAppCore":[1089],"OAppCore":[832],"Ownable":[2050]},"id":833,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":704,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:6"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":706,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":833,"sourceUnit":2051,"src":"59:69:6","symbolAliases":[{"foreign":{"id":705,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"68:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol","file":"./interfaces/IOAppCore.sol","id":709,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":833,"sourceUnit":1090,"src":"129:77:6","symbolAliases":[{"foreign":{"id":707,"name":"IOAppCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"138:9:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":708,"name":"ILayerZeroEndpointV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"149:20:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":711,"name":"IOAppCore","nameLocations":["360:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1089,"src":"360:9:6"},"id":712,"nodeType":"InheritanceSpecifier","src":"360:9:6"},{"baseName":{"id":713,"name":"Ownable","nameLocations":["371:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2050,"src":"371:7:6"},"id":714,"nodeType":"InheritanceSpecifier","src":"371:7:6"}],"canonicalName":"OAppCore","contractDependencies":[],"contractKind":"contract","documentation":{"id":710,"nodeType":"StructuredDocumentation","src":"208:121:6","text":" @title OAppCore\n @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations."},"fullyImplemented":false,"id":832,"linearizedBaseContracts":[832,2050,2918,1089],"name":"OAppCore","nameLocation":"348:8:6","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1066],"constant":false,"functionSelector":"5e280f11","id":717,"mutability":"immutable","name":"endpoint","nameLocation":"484:8:6","nodeType":"VariableDeclaration","scope":832,"src":"446:46:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"},"typeName":{"id":716,"nodeType":"UserDefinedTypeName","pathNode":{"id":715,"name":"ILayerZeroEndpointV2","nameLocations":["446:20:6"],"nodeType":"IdentifierPath","referencedDeclaration":220,"src":"446:20:6"},"referencedDeclaration":220,"src":"446:20:6","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"}},"visibility":"public"},{"baseFunctions":[1074],"constant":false,"functionSelector":"bb0b6a53","id":721,"mutability":"mutable","name":"peers","nameLocation":"612:5:6","nodeType":"VariableDeclaration","scope":832,"src":"569:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"},"typeName":{"id":720,"keyName":"eid","keyNameLocation":"584:3:6","keyType":{"id":718,"name":"uint32","nodeType":"ElementaryTypeName","src":"577:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Mapping","src":"569:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"},"valueName":"peer","valueNameLocation":"599:4:6","valueType":{"id":719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"591:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"body":{"id":751,"nodeType":"Block","src":"1037:164:6","statements":[{"expression":{"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":729,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"1047:8:6","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":731,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"1079:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":730,"name":"ILayerZeroEndpointV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"1058:20:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroEndpointV2_$220_$","typeString":"type(contract ILayerZeroEndpointV2)"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1058:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"}},"src":"1047:42:6","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"}},"id":734,"nodeType":"ExpressionStatement","src":"1047:42:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":735,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"1104:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1125:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1117:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"1117:7:6","typeDescriptions":{}}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1117:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1104:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":744,"nodeType":"IfStatement","src":"1100:53:6","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":741,"name":"InvalidDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"1136:15:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1136:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"RevertStatement","src":"1129:24:6"}},{"expression":{"arguments":[{"id":748,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"1184:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":745,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"1163:8:6","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1172:11:6","memberName":"setDelegate","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1163:20:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"ExpressionStatement","src":"1163:31:6"}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"624:358:6","text":" @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\n @param _endpoint The address of the LOCAL Layer Zero endpoint.\n @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\n @dev The delegate typically should be set as the owner of the contract."},"id":752,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"_endpoint","nameLocation":"1007:9:6","nodeType":"VariableDeclaration","scope":752,"src":"999:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"999:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"_delegate","nameLocation":"1026:9:6","nodeType":"VariableDeclaration","scope":752,"src":"1018:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"1018:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"998:38:6"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"1037:0:6"},"scope":832,"src":"987:214:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1082],"body":{"id":767,"nodeType":"Block","src":"1794:38:6","statements":[{"expression":{"arguments":[{"id":763,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1813:4:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":764,"name":"_peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"1819:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":762,"name":"_setPeer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"1804:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$returns$__$","typeString":"function (uint32,bytes32)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1804:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":766,"nodeType":"ExpressionStatement","src":"1804:21:6"}]},"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"1207:512:6","text":" @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n @param _eid The endpoint ID.\n @param _peer The address of the peer to be associated with the corresponding endpoint.\n @dev Only the owner/admin of the OApp can call this function.\n @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\n @dev Set this to bytes32(0) to remove the peer address.\n @dev Peer is a bytes32 to accommodate non-evm chains."},"functionSelector":"3400288b","id":768,"implemented":true,"kind":"function","modifiers":[{"id":760,"kind":"modifierInvocation","modifierName":{"id":759,"name":"onlyOwner","nameLocations":["1784:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1961,"src":"1784:9:6"},"nodeType":"ModifierInvocation","src":"1784:9:6"}],"name":"setPeer","nameLocation":"1733:7:6","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"_eid","nameLocation":"1748:4:6","nodeType":"VariableDeclaration","scope":768,"src":"1741:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":754,"name":"uint32","nodeType":"ElementaryTypeName","src":"1741:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"_peer","nameLocation":"1762:5:6","nodeType":"VariableDeclaration","scope":768,"src":"1754:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1754:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1740:28:6"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[],"src":"1794:0:6"},"scope":832,"src":"1724:108:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":787,"nodeType":"Block","src":"2349:71:6","statements":[{"expression":{"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":776,"name":"peers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"2359:5:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"}},"id":778,"indexExpression":{"id":777,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"2365:4:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2359:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":779,"name":"_peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"2373:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2359:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":781,"nodeType":"ExpressionStatement","src":"2359:19:6"},{"eventCall":{"arguments":[{"id":783,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"2401:4:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":784,"name":"_peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"2407:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":782,"name":"PeerSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2393:7:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$_t_bytes32_$returns$__$","typeString":"function (uint32,bytes32)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2393:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":786,"nodeType":"EmitStatement","src":"2388:25:6"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"1838:443:6","text":" @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n @param _eid The endpoint ID.\n @param _peer The address of the peer to be associated with the corresponding endpoint.\n @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\n @dev Set this to bytes32(0) to remove the peer address.\n @dev Peer is a bytes32 to accommodate non-evm chains."},"id":788,"implemented":true,"kind":"function","modifiers":[],"name":"_setPeer","nameLocation":"2295:8:6","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"_eid","nameLocation":"2311:4:6","nodeType":"VariableDeclaration","scope":788,"src":"2304:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":770,"name":"uint32","nodeType":"ElementaryTypeName","src":"2304:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"_peer","nameLocation":"2325:5:6","nodeType":"VariableDeclaration","scope":788,"src":"2317:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2303:28:6"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"2349:0:6"},"scope":832,"src":"2286:134:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":815,"nodeType":"Block","src":"2797:117:6","statements":[{"assignments":[797],"declarations":[{"constant":false,"id":797,"mutability":"mutable","name":"peer","nameLocation":"2815:4:6","nodeType":"VariableDeclaration","scope":815,"src":"2807:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":796,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2807:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":801,"initialValue":{"baseExpression":{"id":798,"name":"peers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"2822:5:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"}},"id":800,"indexExpression":{"id":799,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2828:4:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2822:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2807:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":802,"name":"peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"2847:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2863:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2855:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2855:7:6","typeDescriptions":{}}},"id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2847:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":812,"nodeType":"IfStatement","src":"2843:43:6","trueBody":{"errorCall":{"arguments":[{"id":809,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2881:4:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":808,"name":"NoPeer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"2874:6:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint32_$returns$__$","typeString":"function (uint32) pure"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":811,"nodeType":"RevertStatement","src":"2867:19:6"}},{"expression":{"id":813,"name":"peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"2903:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":795,"id":814,"nodeType":"Return","src":"2896:11:6"}]},"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"2426:287:6","text":" @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\n ie. the peer is set to bytes32(0).\n @param _eid The endpoint ID.\n @return peer The address of the peer associated with the specified endpoint."},"id":816,"implemented":true,"kind":"function","modifiers":[],"name":"_getPeerOrRevert","nameLocation":"2727:16:6","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"_eid","nameLocation":"2751:4:6","nodeType":"VariableDeclaration","scope":816,"src":"2744:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":790,"name":"uint32","nodeType":"ElementaryTypeName","src":"2744:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2743:13:6"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":816,"src":"2788:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2788:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2787:9:6"},"scope":832,"src":"2718:196:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1088],"body":{"id":830,"nodeType":"Block","src":"3309:48:6","statements":[{"expression":{"arguments":[{"id":827,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"3340:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":824,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"3319:8:6","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3328:11:6","memberName":"setDelegate","nodeType":"MemberAccess","referencedDeclaration":219,"src":"3319:20:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":829,"nodeType":"ExpressionStatement","src":"3319:31:6"}]},"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"2920:327:6","text":" @notice Sets the delegate address for the OApp.\n @param _delegate The address of the delegate to be set.\n @dev Only the owner/admin of the OApp can call this function.\n @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract."},"functionSelector":"ca5eb5e1","id":831,"implemented":true,"kind":"function","modifiers":[{"id":822,"kind":"modifierInvocation","modifierName":{"id":821,"name":"onlyOwner","nameLocations":["3299:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1961,"src":"3299:9:6"},"nodeType":"ModifierInvocation","src":"3299:9:6"}],"name":"setDelegate","nameLocation":"3261:11:6","nodeType":"FunctionDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"_delegate","nameLocation":"3281:9:6","nodeType":"VariableDeclaration","scope":831,"src":"3273:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"3273:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3272:19:6"},"returnParameters":{"id":823,"nodeType":"ParameterList","parameters":[],"src":"3309:0:6"},"scope":832,"src":"3252:105:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":833,"src":"330:3029:6","usedErrors":[1037,1041,1043,1045,1916,1921],"usedEvents":[1051,1927]}],"src":"33:3327:6"},"id":6},"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol":{"ast":{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol","exportedSymbols":{"IERC20":[2218],"MessagingFee":[51],"MessagingParams":[38],"MessagingReceipt":[46],"OAppCore":[832],"OAppSender":[1018],"SafeERC20":[2629]},"id":1019,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":834,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1019,"sourceUnit":2630,"src":"59:92:7","symbolAliases":[{"foreign":{"id":835,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"68:9:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":836,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"79:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","file":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","id":841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1019,"sourceUnit":221,"src":"152:146:7","symbolAliases":[{"foreign":{"id":838,"name":"MessagingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"161:15:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":839,"name":"MessagingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"178:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":840,"name":"MessagingReceipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"192:16:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol","file":"./OAppCore.sol","id":843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1019,"sourceUnit":833,"src":"299:42:7","symbolAliases":[{"foreign":{"id":842,"name":"OAppCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"308:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":845,"name":"OAppCore","nameLocations":["518:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":832,"src":"518:8:7"},"id":846,"nodeType":"InheritanceSpecifier","src":"518:8:7"}],"canonicalName":"OAppSender","contractDependencies":[],"contractKind":"contract","documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"343:142:7","text":" @title OAppSender\n @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint."},"fullyImplemented":true,"id":1018,"linearizedBaseContracts":[1018,832,2050,2918,1089],"name":"OAppSender","nameLocation":"504:10:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":850,"libraryName":{"id":847,"name":"SafeERC20","nameLocations":["539:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":2629,"src":"539:9:7"},"nodeType":"UsingForDirective","src":"533:27:7","typeName":{"id":849,"nodeType":"UserDefinedTypeName","pathNode":{"id":848,"name":"IERC20","nameLocations":["553:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":2218,"src":"553:6:7"},"referencedDeclaration":2218,"src":"553:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}}},{"errorSelector":"9f704120","id":854,"name":"NotEnoughNative","nameLocation":"601:15:7","nodeType":"ErrorDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"msgValue","nameLocation":"625:8:7","nodeType":"VariableDeclaration","scope":854,"src":"617:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"617:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"616:18:7"},"src":"595:40:7"},{"errorSelector":"5373352a","id":856,"name":"LzTokenUnavailable","nameLocation":"646:18:7","nodeType":"ErrorDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[],"src":"664:2:7"},"src":"640:27:7"},{"constant":true,"id":859,"mutability":"constant","name":"SENDER_VERSION","nameLocation":"826:14:7","nodeType":"VariableDeclaration","scope":1018,"src":"801:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":857,"name":"uint64","nodeType":"ElementaryTypeName","src":"801:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"31","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"843:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"baseFunctions":[1059],"body":{"id":871,"nodeType":"Block","src":"1456:43:7","statements":[{"expression":{"components":[{"id":867,"name":"SENDER_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"1474:14:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"30","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1490:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1473:19:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint64_$_t_rational_0_by_1_$","typeString":"tuple(uint64,int_const 0)"}},"functionReturnParameters":866,"id":870,"nodeType":"Return","src":"1466:26:7"}]},"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"851:502:7","text":" @notice Retrieves the OApp version information.\n @return senderVersion The version of the OAppSender.sol contract.\n @return receiverVersion The version of the OAppReceiver.sol contract.\n @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\n ie. this is a SEND only OApp.\n @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions"},"functionSelector":"17442b70","id":872,"implemented":true,"kind":"function","modifiers":[],"name":"oAppVersion","nameLocation":"1367:11:7","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"1378:2:7"},"returnParameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"senderVersion","nameLocation":"1417:13:7","nodeType":"VariableDeclaration","scope":872,"src":"1410:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":862,"name":"uint64","nodeType":"ElementaryTypeName","src":"1410:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"receiverVersion","nameLocation":"1439:15:7","nodeType":"VariableDeclaration","scope":872,"src":"1432:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":864,"name":"uint64","nodeType":"ElementaryTypeName","src":"1432:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1409:46:7"},"scope":1018,"src":"1358:141:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":904,"nodeType":"Block","src":"2230:199:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":890,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"2307:7:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":892,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"2333:7:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":891,"name":"_getPeerOrRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"2316:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint32_$returns$_t_bytes32_$","typeString":"function (uint32) view returns (bytes32)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":894,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"2343:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":895,"name":"_options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"2353:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":896,"name":"_payInLzToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"2363:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":889,"name":"MessagingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"2291:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MessagingParams_$38_storage_ptr_$","typeString":"type(struct MessagingParams storage pointer)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2291:86:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$38_memory_ptr","typeString":"struct MessagingParams memory"}},{"arguments":[{"id":900,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2403:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_OAppSender_$1018","typeString":"contract OAppSender"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OAppSender_$1018","typeString":"contract OAppSender"}],"id":899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2395:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:7","typeDescriptions":{}}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2395:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MessagingParams_$38_memory_ptr","typeString":"struct MessagingParams memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":887,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"2259:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2268:5:7","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":132,"src":"2259:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_struct$_MessagingParams_$38_memory_ptr_$_t_address_$returns$_t_struct$_MessagingFee_$51_memory_ptr_$","typeString":"function (struct MessagingParams memory,address) view external returns (struct MessagingFee memory)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2259:163:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_memory_ptr","typeString":"struct MessagingFee memory"}},"functionReturnParameters":886,"id":903,"nodeType":"Return","src":"2240:182:7"}]},"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"1505:528:7","text":" @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\n @param _dstEid The destination endpoint ID.\n @param _message The message payload.\n @param _options Additional options for the message.\n @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\n @return fee The calculated MessagingFee for the message.\n      - nativeFee: The native fee for the message.\n      - lzTokenFee: The LZ token fee for the message."},"id":905,"implemented":true,"kind":"function","modifiers":[],"name":"_quote","nameLocation":"2047:6:7","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"_dstEid","nameLocation":"2070:7:7","nodeType":"VariableDeclaration","scope":905,"src":"2063:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":874,"name":"uint32","nodeType":"ElementaryTypeName","src":"2063:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"_message","nameLocation":"2100:8:7","nodeType":"VariableDeclaration","scope":905,"src":"2087:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":876,"name":"bytes","nodeType":"ElementaryTypeName","src":"2087:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"_options","nameLocation":"2131:8:7","nodeType":"VariableDeclaration","scope":905,"src":"2118:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":878,"name":"bytes","nodeType":"ElementaryTypeName","src":"2118:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"_payInLzToken","nameLocation":"2154:13:7","nodeType":"VariableDeclaration","scope":905,"src":"2149:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":880,"name":"bool","nodeType":"ElementaryTypeName","src":"2149:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2053:120:7"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"fee","nameLocation":"2225:3:7","nodeType":"VariableDeclaration","scope":905,"src":"2205:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":884,"nodeType":"UserDefinedTypeName","pathNode":{"id":883,"name":"MessagingFee","nameLocations":["2205:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":51,"src":"2205:12:7"},"referencedDeclaration":51,"src":"2205:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"src":"2204:25:7"},"scope":1018,"src":"2038:391:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":959,"nodeType":"Block","src":"3422:532:7","statements":[{"assignments":[924],"declarations":[{"constant":false,"id":924,"mutability":"mutable","name":"messageValue","nameLocation":"3562:12:7","nodeType":"VariableDeclaration","scope":959,"src":"3554:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"3554:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":929,"initialValue":{"arguments":[{"expression":{"id":926,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3588:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_memory_ptr","typeString":"struct MessagingFee memory"}},"id":927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3593:9:7","memberName":"nativeFee","nodeType":"MemberAccess","referencedDeclaration":48,"src":"3588:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":925,"name":"_payNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"3577:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) returns (uint256)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3554:49:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":930,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3617:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_memory_ptr","typeString":"struct MessagingFee memory"}},"id":931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3622:10:7","memberName":"lzTokenFee","nodeType":"MemberAccess","referencedDeclaration":50,"src":"3617:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3635:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3617:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":939,"nodeType":"IfStatement","src":"3613:53:7","trueBody":{"expression":{"arguments":[{"expression":{"id":935,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3650:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_memory_ptr","typeString":"struct MessagingFee memory"}},"id":936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3655:10:7","memberName":"lzTokenFee","nodeType":"MemberAccess","referencedDeclaration":50,"src":"3650:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":934,"name":"_payLzToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"3638:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3638:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":938,"nodeType":"ExpressionStatement","src":"3638:28:7"}},{"expression":{"arguments":[{"arguments":[{"id":945,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"3825:7:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":947,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"3851:7:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":946,"name":"_getPeerOrRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"3834:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint32_$returns$_t_bytes32_$","typeString":"function (uint32) view returns (bytes32)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3834:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":949,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"3861:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":950,"name":"_options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"3871:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":951,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3881:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_memory_ptr","typeString":"struct MessagingFee memory"}},"id":952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3886:10:7","memberName":"lzTokenFee","nodeType":"MemberAccess","referencedDeclaration":50,"src":"3881:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3899:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3881:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":944,"name":"MessagingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"3809:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MessagingParams_$38_storage_ptr_$","typeString":"type(struct MessagingParams storage pointer)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3809:92:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$38_memory_ptr","typeString":"struct MessagingParams memory"}},{"id":956,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"3919:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MessagingParams_$38_memory_ptr","typeString":"struct MessagingParams memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MessagingParams_$38_memory_ptr","typeString":"struct MessagingParams memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":940,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"3755:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3764:4:7","memberName":"send","nodeType":"MemberAccess","referencedDeclaration":143,"src":"3755:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_MessagingParams_$38_memory_ptr_$_t_address_$returns$_t_struct$_MessagingReceipt_$46_memory_ptr_$","typeString":"function (struct MessagingParams memory,address) payable external returns (struct MessagingReceipt memory)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":942,"name":"messageValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3777:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3755:36:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_MessagingParams_$38_memory_ptr_$_t_address_$returns$_t_struct$_MessagingReceipt_$46_memory_ptr_$value","typeString":"function (struct MessagingParams memory,address) payable external returns (struct MessagingReceipt memory)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3755:192:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$46_memory_ptr","typeString":"struct MessagingReceipt memory"}},"functionReturnParameters":922,"id":958,"nodeType":"Return","src":"3677:270:7"}]},"documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"2435:748:7","text":" @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\n @param _dstEid The destination endpoint ID.\n @param _message The message payload.\n @param _options Additional options for the message.\n @param _fee The calculated LayerZero fee for the message.\n      - nativeFee: The native fee.\n      - lzTokenFee: The lzToken fee.\n @param _refundAddress The address to receive any excess fee values sent to the endpoint.\n @return receipt The receipt for the sent message.\n      - guid: The unique identifier for the sent message.\n      - nonce: The nonce of the sent message.\n      - fee: The LayerZero fee incurred for the message."},"id":960,"implemented":true,"kind":"function","modifiers":[],"name":"_lzSend","nameLocation":"3197:7:7","nodeType":"FunctionDefinition","parameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"_dstEid","nameLocation":"3221:7:7","nodeType":"VariableDeclaration","scope":960,"src":"3214:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":907,"name":"uint32","nodeType":"ElementaryTypeName","src":"3214:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"_message","nameLocation":"3251:8:7","nodeType":"VariableDeclaration","scope":960,"src":"3238:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":909,"name":"bytes","nodeType":"ElementaryTypeName","src":"3238:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"_options","nameLocation":"3282:8:7","nodeType":"VariableDeclaration","scope":960,"src":"3269:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":911,"name":"bytes","nodeType":"ElementaryTypeName","src":"3269:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":915,"mutability":"mutable","name":"_fee","nameLocation":"3320:4:7","nodeType":"VariableDeclaration","scope":960,"src":"3300:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":914,"nodeType":"UserDefinedTypeName","pathNode":{"id":913,"name":"MessagingFee","nameLocations":["3300:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":51,"src":"3300:12:7"},"referencedDeclaration":51,"src":"3300:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"_refundAddress","nameLocation":"3342:14:7","nodeType":"VariableDeclaration","scope":960,"src":"3334:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"3334:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3204:158:7"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"receipt","nameLocation":"3413:7:7","nodeType":"VariableDeclaration","scope":960,"src":"3389:31:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$46_memory_ptr","typeString":"struct MessagingReceipt"},"typeName":{"id":920,"nodeType":"UserDefinedTypeName","pathNode":{"id":919,"name":"MessagingReceipt","nameLocations":["3389:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"3389:16:7"},"referencedDeclaration":46,"src":"3389:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$46_storage_ptr","typeString":"struct MessagingReceipt"}},"visibility":"internal"}],"src":"3388:33:7"},"scope":1018,"src":"3188:766:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":980,"nodeType":"Block","src":"4735:106:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4749:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4753:5:7","memberName":"value","nodeType":"MemberAccess","src":"4749:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":970,"name":"_nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"4762:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4749:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":977,"nodeType":"IfStatement","src":"4745:62:7","trueBody":{"errorCall":{"arguments":[{"expression":{"id":973,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4797:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4801:5:7","memberName":"value","nodeType":"MemberAccess","src":"4797:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":972,"name":"NotEnoughNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"4781:15:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4781:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":976,"nodeType":"RevertStatement","src":"4774:33:7"}},{"expression":{"id":978,"name":"_nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"4824:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":967,"id":979,"nodeType":"Return","src":"4817:17:7"}]},"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"3960:685:7","text":" @dev Internal function to pay the native fee associated with the message.\n @param _nativeFee The native fee to be paid.\n @return nativeFee The amount of native currency paid.\n @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\n this will need to be overridden because msg.value would contain multiple lzFees.\n @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\n @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\n @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time."},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"_payNative","nameLocation":"4659:10:7","nodeType":"FunctionDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"_nativeFee","nameLocation":"4678:10:7","nodeType":"VariableDeclaration","scope":981,"src":"4670:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"4670:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4669:20:7"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"nativeFee","nameLocation":"4724:9:7","nodeType":"VariableDeclaration","scope":981,"src":"4716:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"4716:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4715:19:7"},"scope":1018,"src":"4650:191:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1016,"nodeType":"Block","src":"5277:351:7","statements":[{"assignments":[988],"declarations":[{"constant":false,"id":988,"mutability":"mutable","name":"lzToken","nameLocation":"5379:7:7","nodeType":"VariableDeclaration","scope":1016,"src":"5371:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"5371:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":992,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":989,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"5389:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5398:7:7","memberName":"lzToken","nodeType":"MemberAccess","referencedDeclaration":209,"src":"5389:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5371:36:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":993,"name":"lzToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5421:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5440:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5432:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"5432:7:7","typeDescriptions":{}}},"id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5432:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1002,"nodeType":"IfStatement","src":"5417:54:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":999,"name":"LzTokenUnavailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"5451:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5451:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"RevertStatement","src":"5444:27:7"}},{"expression":{"arguments":[{"expression":{"id":1007,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5578:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5582:6:7","memberName":"sender","nodeType":"MemberAccess","src":"5578:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1011,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"5598:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"}],"id":1010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5590:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"5590:7:7","typeDescriptions":{}}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5590:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1013,"name":"_lzTokenFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"5609:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1004,"name":"lzToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5552:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1003,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"5545:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2218_$","typeString":"type(contract IERC20)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5545:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5561:16:7","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2292,"src":"5545:32:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2218_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$2218_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5545:76:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1015,"nodeType":"ExpressionStatement","src":"5545:76:7"}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"4847:366:7","text":" @dev Internal function to pay the LZ token fee associated with the message.\n @param _lzTokenFee The LZ token fee to be paid.\n @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\n @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend()."},"id":1017,"implemented":true,"kind":"function","modifiers":[],"name":"_payLzToken","nameLocation":"5227:11:7","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"_lzTokenFee","nameLocation":"5247:11:7","nodeType":"VariableDeclaration","scope":1017,"src":"5239:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"5239:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5238:21:7"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[],"src":"5277:0:7"},"scope":1018,"src":"5218:410:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1019,"src":"486:5144:7","usedErrors":[854,856,1037,1041,1043,1045,1916,1921],"usedEvents":[1051,1927]}],"src":"33:5598:7"},"id":7},"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol":{"ast":{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol","exportedSymbols":{"ILayerZeroComposer":[17],"IOAppComposer":[1026]},"id":1027,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1020,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:8"},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol","file":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol","id":1022,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1027,"sourceUnit":18,"src":"59:115:8","symbolAliases":[{"foreign":{"id":1021,"name":"ILayerZeroComposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"68:18:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1024,"name":"ILayerZeroComposer","nameLocations":["405:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":17,"src":"405:18:8"},"id":1025,"nodeType":"InheritanceSpecifier","src":"405:18:8"}],"canonicalName":"IOAppComposer","contractDependencies":[],"contractKind":"interface","documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"176:156:8","text":" @title IOAppComposer\n @dev This interface defines the OApp Composer, allowing developers to inherit only the OApp package without the protocol."},"fullyImplemented":false,"id":1026,"linearizedBaseContracts":[1026,17],"name":"IOAppComposer","nameLocation":"388:13:8","nodeType":"ContractDefinition","nodes":[],"scope":1027,"src":"378:48:8","usedErrors":[],"usedEvents":[]}],"src":"33:394:8"},"id":8},"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol":{"ast":{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol","exportedSymbols":{"ILayerZeroEndpointV2":[220],"IOAppCore":[1089]},"id":1090,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1028,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:9"},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","file":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","id":1030,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1090,"sourceUnit":221,"src":"59:119:9","symbolAliases":[{"foreign":{"id":1029,"name":"ILayerZeroEndpointV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"68:20:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IOAppCore","contractDependencies":[],"contractKind":"interface","documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"180:27:9","text":" @title IOAppCore"},"fullyImplemented":false,"id":1089,"linearizedBaseContracts":[1089],"name":"IOAppCore","nameLocation":"218:9:9","nodeType":"ContractDefinition","nodes":[{"errorSelector":"c26bebcc","id":1037,"name":"OnlyPeer","nameLocation":"269:8:9","nodeType":"ErrorDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"eid","nameLocation":"285:3:9","nodeType":"VariableDeclaration","scope":1037,"src":"278:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1032,"name":"uint32","nodeType":"ElementaryTypeName","src":"278:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"sender","nameLocation":"298:6:9","nodeType":"VariableDeclaration","scope":1037,"src":"290:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"290:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"277:28:9"},"src":"263:43:9"},{"errorSelector":"f6ff4fb7","id":1041,"name":"NoPeer","nameLocation":"317:6:9","nodeType":"ErrorDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"eid","nameLocation":"331:3:9","nodeType":"VariableDeclaration","scope":1041,"src":"324:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1038,"name":"uint32","nodeType":"ElementaryTypeName","src":"324:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"323:12:9"},"src":"311:25:9"},{"errorSelector":"0fbdec0a","id":1043,"name":"InvalidEndpointCall","nameLocation":"347:19:9","nodeType":"ErrorDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"366:2:9"},"src":"341:28:9"},{"errorSelector":"b5863604","id":1045,"name":"InvalidDelegate","nameLocation":"380:15:9","nodeType":"ErrorDefinition","parameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"395:2:9"},"src":"374:24:9"},{"anonymous":false,"eventSelector":"238399d427b947898edb290f5ff0f9109849b1c3ba196a42e35f00c50a54b98b","id":1051,"name":"PeerSet","nameLocation":"486:7:9","nodeType":"EventDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"501:3:9","nodeType":"VariableDeclaration","scope":1051,"src":"494:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1046,"name":"uint32","nodeType":"ElementaryTypeName","src":"494:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1049,"indexed":false,"mutability":"mutable","name":"peer","nameLocation":"514:4:9","nodeType":"VariableDeclaration","scope":1051,"src":"506:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"506:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"493:26:9"},"src":"480:40:9"},{"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"526:216:9","text":" @notice Retrieves the OApp version information.\n @return senderVersion The version of the OAppSender.sol contract.\n @return receiverVersion The version of the OAppReceiver.sol contract."},"functionSelector":"17442b70","id":1059,"implemented":false,"kind":"function","modifiers":[],"name":"oAppVersion","nameLocation":"756:11:9","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"767:2:9"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"senderVersion","nameLocation":"800:13:9","nodeType":"VariableDeclaration","scope":1059,"src":"793:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1054,"name":"uint64","nodeType":"ElementaryTypeName","src":"793:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"receiverVersion","nameLocation":"822:15:9","nodeType":"VariableDeclaration","scope":1059,"src":"815:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1056,"name":"uint64","nodeType":"ElementaryTypeName","src":"815:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"792:46:9"},"scope":1089,"src":"747:92:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"845:150:9","text":" @notice Retrieves the LayerZero endpoint associated with the OApp.\n @return iEndpoint The LayerZero endpoint as an interface."},"functionSelector":"5e280f11","id":1066,"implemented":false,"kind":"function","modifiers":[],"name":"endpoint","nameLocation":"1009:8:9","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"1017:2:9"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"iEndpoint","nameLocation":"1064:9:9","nodeType":"VariableDeclaration","scope":1066,"src":"1043:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"},"typeName":{"id":1063,"nodeType":"UserDefinedTypeName","pathNode":{"id":1062,"name":"ILayerZeroEndpointV2","nameLocations":["1043:20:9"],"nodeType":"IdentifierPath","referencedDeclaration":220,"src":"1043:20:9"},"referencedDeclaration":220,"src":"1043:20:9","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$220","typeString":"contract ILayerZeroEndpointV2"}},"visibility":"internal"}],"src":"1042:32:9"},"scope":1089,"src":"1000:75:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"1081:227:9","text":" @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\n @param _eid The endpoint ID.\n @return peer The peer address (OApp instance) associated with the corresponding endpoint."},"functionSelector":"bb0b6a53","id":1074,"implemented":false,"kind":"function","modifiers":[],"name":"peers","nameLocation":"1322:5:9","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"_eid","nameLocation":"1335:4:9","nodeType":"VariableDeclaration","scope":1074,"src":"1328:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1068,"name":"uint32","nodeType":"ElementaryTypeName","src":"1328:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1327:13:9"},"returnParameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"peer","nameLocation":"1372:4:9","nodeType":"VariableDeclaration","scope":1074,"src":"1364:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1364:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1363:14:9"},"scope":1089,"src":"1313:65:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1075,"nodeType":"StructuredDocumentation","src":"1384:224:9","text":" @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n @param _eid The endpoint ID.\n @param _peer The address of the peer to be associated with the corresponding endpoint."},"functionSelector":"3400288b","id":1082,"implemented":false,"kind":"function","modifiers":[],"name":"setPeer","nameLocation":"1622:7:9","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"_eid","nameLocation":"1637:4:9","nodeType":"VariableDeclaration","scope":1082,"src":"1630:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1076,"name":"uint32","nodeType":"ElementaryTypeName","src":"1630:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"_peer","nameLocation":"1651:5:9","nodeType":"VariableDeclaration","scope":1082,"src":"1643:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1643:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1629:28:9"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"1666:0:9"},"scope":1089,"src":"1613:54:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"1673:134:9","text":" @notice Sets the delegate address for the OApp Core.\n @param _delegate The address of the delegate to be set."},"functionSelector":"ca5eb5e1","id":1088,"implemented":false,"kind":"function","modifiers":[],"name":"setDelegate","nameLocation":"1821:11:9","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"_delegate","nameLocation":"1841:9:9","nodeType":"VariableDeclaration","scope":1088,"src":"1833:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"1833:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1832:19:9"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"1860:0:9"},"scope":1089,"src":"1812:49:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1090,"src":"208:1655:9","usedErrors":[1037,1041,1043,1045],"usedEvents":[1051]}],"src":"33:1831:9"},"id":9},"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol":{"ast":{"absolutePath":"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol","exportedSymbols":{"IOFT":[1233],"MessagingFee":[51],"MessagingReceipt":[46],"OFTFeeDetail":[1128],"OFTLimit":[1116],"OFTReceipt":[1122],"SendParam":[1110]},"id":1234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1091,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:10"},{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol","file":"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol","id":1094,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1234,"sourceUnit":1019,"src":"59:103:10","symbolAliases":[{"foreign":{"id":1092,"name":"MessagingReceipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"68:16:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1093,"name":"MessagingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"86:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"SendParam","documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"164:82:10","text":" @dev Struct representing token parameters for the OFT send() operation."},"id":1110,"members":[{"constant":false,"id":1097,"mutability":"mutable","name":"dstEid","nameLocation":"277:6:10","nodeType":"VariableDeclaration","scope":1110,"src":"270:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1096,"name":"uint32","nodeType":"ElementaryTypeName","src":"270:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"to","nameLocation":"325:2:10","nodeType":"VariableDeclaration","scope":1110,"src":"317:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"317:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"amountLD","nameLocation":"363:8:10","nodeType":"VariableDeclaration","scope":1110,"src":"355:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"355:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"minAmountLD","nameLocation":"422:11:10","nodeType":"VariableDeclaration","scope":1110,"src":"414:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"414:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"extraOptions","nameLocation":"490:12:10","nodeType":"VariableDeclaration","scope":1110,"src":"484:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1104,"name":"bytes","nodeType":"ElementaryTypeName","src":"484:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"composeMsg","nameLocation":"596:10:10","nodeType":"VariableDeclaration","scope":1110,"src":"590:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1106,"name":"bytes","nodeType":"ElementaryTypeName","src":"590:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"oftCmd","nameLocation":"668:6:10","nodeType":"VariableDeclaration","scope":1110,"src":"662:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1108,"name":"bytes","nodeType":"ElementaryTypeName","src":"662:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SendParam","nameLocation":"254:9:10","nodeType":"StructDefinition","scope":1234,"src":"247:504:10","visibility":"public"},{"canonicalName":"OFTLimit","documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"753:147:10","text":" @dev Struct representing OFT limit information.\n @dev These amounts can change dynamically and are up the specific oft implementation."},"id":1116,"members":[{"constant":false,"id":1113,"mutability":"mutable","name":"minAmountLD","nameLocation":"931:11:10","nodeType":"VariableDeclaration","scope":1116,"src":"923:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"maxAmountLD","nameLocation":"1027:11:10","nodeType":"VariableDeclaration","scope":1116,"src":"1019:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1019:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"OFTLimit","nameLocation":"908:8:10","nodeType":"StructDefinition","scope":1234,"src":"901:211:10","visibility":"public"},{"canonicalName":"OFTReceipt","documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"1114:60:10","text":" @dev Struct representing OFT receipt information."},"id":1122,"members":[{"constant":false,"id":1119,"mutability":"mutable","name":"amountSentLD","nameLocation":"1207:12:10","nodeType":"VariableDeclaration","scope":1122,"src":"1199:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"amountReceivedLD","nameLocation":"1400:16:10","nodeType":"VariableDeclaration","scope":1122,"src":"1392:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"OFTReceipt","nameLocation":"1182:10:10","nodeType":"StructDefinition","scope":1234,"src":"1175:299:10","visibility":"public"},{"canonicalName":"OFTFeeDetail","documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"1476:154:10","text":" @dev Struct representing OFT fee details.\n @dev Future proof mechanism to provide a standardized way to communicate fees to things like a UI."},"id":1128,"members":[{"constant":false,"id":1125,"mutability":"mutable","name":"feeAmountLD","nameLocation":"1664:11:10","nodeType":"VariableDeclaration","scope":1128,"src":"1657:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1124,"name":"int256","nodeType":"ElementaryTypeName","src":"1657:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"description","nameLocation":"1728:11:10","nodeType":"VariableDeclaration","scope":1128,"src":"1721:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1126,"name":"string","nodeType":"ElementaryTypeName","src":"1721:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"OFTFeeDetail","nameLocation":"1638:12:10","nodeType":"StructDefinition","scope":1234,"src":"1631:138:10","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"IOFT","contractDependencies":[],"contractKind":"interface","documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"1771:197:10","text":" @title IOFT\n @dev Interface for the OftChain (OFT) token.\n @dev Does not inherit ERC20 to accommodate usage by OFTAdapter as well.\n @dev This specific interface ID is '0x02e49c2c'."},"fullyImplemented":false,"id":1233,"linearizedBaseContracts":[1233],"name":"IOFT","nameLocation":"1979:4:10","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1e9714b0","id":1131,"name":"InvalidLocalDecimals","nameLocation":"2025:20:10","nodeType":"ErrorDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"2045:2:10"},"src":"2019:29:10"},{"errorSelector":"71c4efed","id":1137,"name":"SlippageExceeded","nameLocation":"2059:16:10","nodeType":"ErrorDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"amountLD","nameLocation":"2084:8:10","nodeType":"VariableDeclaration","scope":1137,"src":"2076:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"2076:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"minAmountLD","nameLocation":"2102:11:10","nodeType":"VariableDeclaration","scope":1137,"src":"2094:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2094:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2075:39:10"},"src":"2053:62:10"},{"anonymous":false,"eventSelector":"85496b760a4b7f8d66384b9df21b381f5d1b1e79f229a47aaf4c232edc2fe59a","id":1149,"name":"OFTSent","nameLocation":"2141:7:10","nodeType":"EventDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"indexed":true,"mutability":"mutable","name":"guid","nameLocation":"2174:4:10","nodeType":"VariableDeclaration","scope":1149,"src":"2158:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1141,"indexed":false,"mutability":"mutable","name":"dstEid","nameLocation":"2223:6:10","nodeType":"VariableDeclaration","scope":1149,"src":"2216:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1140,"name":"uint32","nodeType":"ElementaryTypeName","src":"2216:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1143,"indexed":true,"mutability":"mutable","name":"fromAddress","nameLocation":"2283:11:10","nodeType":"VariableDeclaration","scope":1149,"src":"2267:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"2267:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"indexed":false,"mutability":"mutable","name":"amountSentLD","nameLocation":"2355:12:10","nodeType":"VariableDeclaration","scope":1149,"src":"2347:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1147,"indexed":false,"mutability":"mutable","name":"amountReceivedLD","nameLocation":"2429:16:10","nodeType":"VariableDeclaration","scope":1149,"src":"2421:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2421:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2148:351:10"},"src":"2135:365:10"},{"anonymous":false,"eventSelector":"efed6d3500546b29533b128a29e3a94d70788727f0507505ac12eaf2e578fd9c","id":1159,"name":"OFTReceived","nameLocation":"2511:11:10","nodeType":"EventDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"indexed":true,"mutability":"mutable","name":"guid","nameLocation":"2548:4:10","nodeType":"VariableDeclaration","scope":1159,"src":"2532:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2532:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1153,"indexed":false,"mutability":"mutable","name":"srcEid","nameLocation":"2597:6:10","nodeType":"VariableDeclaration","scope":1159,"src":"2590:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1152,"name":"uint32","nodeType":"ElementaryTypeName","src":"2590:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1155,"indexed":true,"mutability":"mutable","name":"toAddress","nameLocation":"2652:9:10","nodeType":"VariableDeclaration","scope":1159,"src":"2636:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"2636:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1157,"indexed":false,"mutability":"mutable","name":"amountReceivedLD","nameLocation":"2725:16:10","nodeType":"VariableDeclaration","scope":1159,"src":"2717:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2717:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2522:273:10"},"src":"2505:291:10"},{"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"2802:504:10","text":" @notice Retrieves interfaceID and the version of the OFT.\n @return interfaceId The interface ID.\n @return version The version.\n @dev interfaceId: This specific interface ID is '0x02e49c2c'.\n @dev version: Indicates a cross-chain compatible msg encoding with other OFTs.\n @dev If a new feature is added to the OFT cross-chain msg encoding, the version will be incremented.\n ie. localOFT version(x,1) CAN send messages to remoteOFT version(x,1)"},"functionSelector":"156a0d0f","id":1167,"implemented":false,"kind":"function","modifiers":[],"name":"oftVersion","nameLocation":"3320:10:10","nodeType":"FunctionDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"3330:2:10"},"returnParameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"interfaceId","nameLocation":"3363:11:10","nodeType":"VariableDeclaration","scope":1167,"src":"3356:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1162,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3356:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"version","nameLocation":"3383:7:10","nodeType":"VariableDeclaration","scope":1167,"src":"3376:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1164,"name":"uint64","nodeType":"ElementaryTypeName","src":"3376:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3355:36:10"},"scope":1233,"src":"3311:81:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"3398:154:10","text":" @notice Retrieves the address of the token associated with the OFT.\n @return token The address of the ERC20 token implementation."},"functionSelector":"fc0c546a","id":1173,"implemented":false,"kind":"function","modifiers":[],"name":"token","nameLocation":"3566:5:10","nodeType":"FunctionDefinition","parameters":{"id":1169,"nodeType":"ParameterList","parameters":[],"src":"3571:2:10"},"returnParameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1173,"src":"3597:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"3597:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3596:9:10"},"scope":1233,"src":"3557:49:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1174,"nodeType":"StructuredDocumentation","src":"3612:355:10","text":" @notice Indicates whether the OFT contract requires approval of the 'token()' to send.\n @return requiresApproval Needs approval of the underlying token implementation.\n @dev Allows things like wallet implementers to determine integration requirements,\n without understanding the underlying token implementation."},"functionSelector":"9f68b964","id":1179,"implemented":false,"kind":"function","modifiers":[],"name":"approvalRequired","nameLocation":"3981:16:10","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[],"src":"3997:2:10"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1179,"src":"4023:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1176,"name":"bool","nodeType":"ElementaryTypeName","src":"4023:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4022:6:10"},"scope":1233,"src":"3972:57:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1180,"nodeType":"StructuredDocumentation","src":"4035:130:10","text":" @notice Retrieves the shared decimals of the OFT.\n @return sharedDecimals The shared decimals of the OFT."},"functionSelector":"857749b0","id":1185,"implemented":false,"kind":"function","modifiers":[],"name":"sharedDecimals","nameLocation":"4179:14:10","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[],"src":"4193:2:10"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1185,"src":"4219:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1182,"name":"uint8","nodeType":"ElementaryTypeName","src":"4219:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4218:7:10"},"scope":1233,"src":"4170:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1186,"nodeType":"StructuredDocumentation","src":"4232:339:10","text":" @notice Provides the fee breakdown and settings data for an OFT. Unused in the default implementation.\n @param _sendParam The parameters for the send operation.\n @return limit The OFT limit information.\n @return oftFeeDetails The details of OFT fees.\n @return receipt The OFT receipt information."},"functionSelector":"0d35b415","id":1202,"implemented":false,"kind":"function","modifiers":[],"name":"quoteOFT","nameLocation":"4585:8:10","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"_sendParam","nameLocation":"4622:10:10","nodeType":"VariableDeclaration","scope":1202,"src":"4603:29:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SendParam_$1110_calldata_ptr","typeString":"struct SendParam"},"typeName":{"id":1188,"nodeType":"UserDefinedTypeName","pathNode":{"id":1187,"name":"SendParam","nameLocations":["4603:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1110,"src":"4603:9:10"},"referencedDeclaration":1110,"src":"4603:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_SendParam_$1110_storage_ptr","typeString":"struct SendParam"}},"visibility":"internal"}],"src":"4593:45:10"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"4662:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OFTLimit_$1116_memory_ptr","typeString":"struct OFTLimit"},"typeName":{"id":1192,"nodeType":"UserDefinedTypeName","pathNode":{"id":1191,"name":"OFTLimit","nameLocations":["4662:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1116,"src":"4662:8:10"},"referencedDeclaration":1116,"src":"4662:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_OFTLimit_$1116_storage_ptr","typeString":"struct OFTLimit"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"oftFeeDetails","nameLocation":"4701:13:10","nodeType":"VariableDeclaration","scope":1202,"src":"4679:35:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OFTFeeDetail_$1128_memory_ptr_$dyn_memory_ptr","typeString":"struct OFTFeeDetail[]"},"typeName":{"baseType":{"id":1195,"nodeType":"UserDefinedTypeName","pathNode":{"id":1194,"name":"OFTFeeDetail","nameLocations":["4679:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1128,"src":"4679:12:10"},"referencedDeclaration":1128,"src":"4679:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_OFTFeeDetail_$1128_storage_ptr","typeString":"struct OFTFeeDetail"}},"id":1196,"nodeType":"ArrayTypeName","src":"4679:14:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OFTFeeDetail_$1128_storage_$dyn_storage_ptr","typeString":"struct OFTFeeDetail[]"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"4716:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OFTReceipt_$1122_memory_ptr","typeString":"struct OFTReceipt"},"typeName":{"id":1199,"nodeType":"UserDefinedTypeName","pathNode":{"id":1198,"name":"OFTReceipt","nameLocations":["4716:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1122,"src":"4716:10:10"},"referencedDeclaration":1122,"src":"4716:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_OFTReceipt_$1122_storage_ptr","typeString":"struct OFTReceipt"}},"visibility":"internal"}],"src":"4661:73:10"},"scope":1233,"src":"4576:159:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"4741:437:10","text":" @notice Provides a quote for the send() operation.\n @param _sendParam The parameters for the send() operation.\n @param _payInLzToken Flag indicating whether the caller is paying in the LZ token.\n @return fee The calculated LayerZero messaging fee from the send() operation.\n @dev MessagingFee: LayerZero msg fee\n  - nativeFee: The native fee.\n  - lzTokenFee: The lzToken fee."},"functionSelector":"3b6f743b","id":1214,"implemented":false,"kind":"function","modifiers":[],"name":"quoteSend","nameLocation":"5192:9:10","nodeType":"FunctionDefinition","parameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"_sendParam","nameLocation":"5221:10:10","nodeType":"VariableDeclaration","scope":1214,"src":"5202:29:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SendParam_$1110_calldata_ptr","typeString":"struct SendParam"},"typeName":{"id":1205,"nodeType":"UserDefinedTypeName","pathNode":{"id":1204,"name":"SendParam","nameLocations":["5202:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1110,"src":"5202:9:10"},"referencedDeclaration":1110,"src":"5202:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_SendParam_$1110_storage_ptr","typeString":"struct SendParam"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"_payInLzToken","nameLocation":"5238:13:10","nodeType":"VariableDeclaration","scope":1214,"src":"5233:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1207,"name":"bool","nodeType":"ElementaryTypeName","src":"5233:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5201:51:10"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1214,"src":"5276:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":1211,"nodeType":"UserDefinedTypeName","pathNode":{"id":1210,"name":"MessagingFee","nameLocations":["5276:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":51,"src":"5276:12:10"},"referencedDeclaration":51,"src":"5276:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"src":"5275:21:10"},"scope":1233,"src":"5183:114:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"5303:727:10","text":" @notice Executes the send() operation.\n @param _sendParam The parameters for the send operation.\n @param _fee The fee information supplied by the caller.\n      - nativeFee: The native fee.\n      - lzTokenFee: The lzToken fee.\n @param _refundAddress The address to receive any excess funds from fees etc. on the src.\n @return receipt The LayerZero messaging receipt from the send() operation.\n @return oftReceipt The OFT receipt information.\n @dev MessagingReceipt: LayerZero msg receipt\n  - guid: The unique identifier for the sent message.\n  - nonce: The nonce of the sent message.\n  - fee: The LayerZero fee incurred for the message."},"functionSelector":"c7c7f5b3","id":1232,"implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"6044:4:10","nodeType":"FunctionDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"_sendParam","nameLocation":"6077:10:10","nodeType":"VariableDeclaration","scope":1232,"src":"6058:29:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SendParam_$1110_calldata_ptr","typeString":"struct SendParam"},"typeName":{"id":1217,"nodeType":"UserDefinedTypeName","pathNode":{"id":1216,"name":"SendParam","nameLocations":["6058:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1110,"src":"6058:9:10"},"referencedDeclaration":1110,"src":"6058:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_SendParam_$1110_storage_ptr","typeString":"struct SendParam"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"_fee","nameLocation":"6119:4:10","nodeType":"VariableDeclaration","scope":1232,"src":"6097:26:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_calldata_ptr","typeString":"struct MessagingFee"},"typeName":{"id":1220,"nodeType":"UserDefinedTypeName","pathNode":{"id":1219,"name":"MessagingFee","nameLocations":["6097:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":51,"src":"6097:12:10"},"referencedDeclaration":51,"src":"6097:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$51_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"_refundAddress","nameLocation":"6141:14:10","nodeType":"VariableDeclaration","scope":1232,"src":"6133:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"6133:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6048:113:10"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1232,"src":"6188:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$46_memory_ptr","typeString":"struct MessagingReceipt"},"typeName":{"id":1226,"nodeType":"UserDefinedTypeName","pathNode":{"id":1225,"name":"MessagingReceipt","nameLocations":["6188:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"6188:16:10"},"referencedDeclaration":46,"src":"6188:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$46_storage_ptr","typeString":"struct MessagingReceipt"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1232,"src":"6213:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OFTReceipt_$1122_memory_ptr","typeString":"struct OFTReceipt"},"typeName":{"id":1229,"nodeType":"UserDefinedTypeName","pathNode":{"id":1228,"name":"OFTReceipt","nameLocations":["6213:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1122,"src":"6213:10:10"},"referencedDeclaration":1122,"src":"6213:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_OFTReceipt_$1122_storage_ptr","typeString":"struct OFTReceipt"}},"visibility":"internal"}],"src":"6187:44:10"},"scope":1233,"src":"6035:197:10","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1234,"src":"1969:4265:10","usedErrors":[1131,1137],"usedEvents":[1149,1159]}],"src":"33:6202:10"},"id":10},"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol":{"ast":{"absolutePath":"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol","exportedSymbols":{"OFTComposeMsgCodec":[1402]},"id":1403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1235,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"OFTComposeMsgCodec","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1402,"linearizedBaseContracts":[1402],"name":"OFTComposeMsgCodec","nameLocation":"67:18:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1238,"mutability":"constant","name":"NONCE_OFFSET","nameLocation":"170:12:11","nodeType":"VariableDeclaration","scope":1402,"src":"147:39:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1236,"name":"uint8","nodeType":"ElementaryTypeName","src":"147:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"38","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"185:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"visibility":"private"},{"constant":true,"id":1241,"mutability":"constant","name":"SRC_EID_OFFSET","nameLocation":"215:14:11","nodeType":"VariableDeclaration","scope":1402,"src":"192:42:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1239,"name":"uint8","nodeType":"ElementaryTypeName","src":"192:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3132","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"232:2:11","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"visibility":"private"},{"constant":true,"id":1244,"mutability":"constant","name":"AMOUNT_LD_OFFSET","nameLocation":"263:16:11","nodeType":"VariableDeclaration","scope":1402,"src":"240:44:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1242,"name":"uint8","nodeType":"ElementaryTypeName","src":"240:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3434","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"282:2:11","typeDescriptions":{"typeIdentifier":"t_rational_44_by_1","typeString":"int_const 44"},"value":"44"},"visibility":"private"},{"constant":true,"id":1247,"mutability":"constant","name":"COMPOSE_FROM_OFFSET","nameLocation":"313:19:11","nodeType":"VariableDeclaration","scope":1402,"src":"290:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1245,"name":"uint8","nodeType":"ElementaryTypeName","src":"290:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3736","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"335:2:11","typeDescriptions":{"typeIdentifier":"t_rational_76_by_1","typeString":"int_const 76"},"value":"76"},"visibility":"private"},{"body":{"id":1271,"nodeType":"Block","src":"843:81:11","statements":[{"expression":{"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1261,"name":"_msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"853:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1264,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"877:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1265,"name":"_srcEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"885:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":1266,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"894:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1267,"name":"_composeMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"905:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1262,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"860:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"864:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"860:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"860:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"853:64:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1270,"nodeType":"ExpressionStatement","src":"853:64:11"}]},"documentation":{"id":1248,"nodeType":"StructuredDocumentation","src":"344:291:11","text":" @dev Encodes a OFT composed message.\n @param _nonce The nonce value.\n @param _srcEid The source endpoint ID.\n @param _amountLD The amount in local decimals.\n @param _composeMsg The composed message.\n @return _msg The encoded Composed message."},"id":1272,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"649:6:11","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"_nonce","nameLocation":"672:6:11","nodeType":"VariableDeclaration","scope":1272,"src":"665:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1249,"name":"uint64","nodeType":"ElementaryTypeName","src":"665:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1252,"mutability":"mutable","name":"_srcEid","nameLocation":"695:7:11","nodeType":"VariableDeclaration","scope":1272,"src":"688:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1251,"name":"uint32","nodeType":"ElementaryTypeName","src":"688:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"_amountLD","nameLocation":"720:9:11","nodeType":"VariableDeclaration","scope":1272,"src":"712:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"_composeMsg","nameLocation":"752:11:11","nodeType":"VariableDeclaration","scope":1272,"src":"739:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1255,"name":"bytes","nodeType":"ElementaryTypeName","src":"739:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"655:145:11"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"_msg","nameLocation":"837:4:11","nodeType":"VariableDeclaration","scope":1272,"src":"824:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1258,"name":"bytes","nodeType":"ElementaryTypeName","src":"824:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"823:19:11"},"scope":1402,"src":"640:284:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1290,"nodeType":"Block","src":"1135:59:11","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":1284,"name":"_msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"1166:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":1285,"name":"NONCE_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"1172:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"1166:19:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":1283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1159:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes8_$","typeString":"type(bytes8)"},"typeName":{"id":1282,"name":"bytes8","nodeType":"ElementaryTypeName","src":"1159:6:11","typeDescriptions":{}}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1159:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1152:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1280,"name":"uint64","nodeType":"ElementaryTypeName","src":"1152:6:11","typeDescriptions":{}}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1152:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":1279,"id":1289,"nodeType":"Return","src":"1145:42:11"}]},"documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"930:133:11","text":" @dev Retrieves the nonce for the composed message.\n @param _msg The message.\n @return The nonce value."},"id":1291,"implemented":true,"kind":"function","modifiers":[],"name":"nonce","nameLocation":"1077:5:11","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"_msg","nameLocation":"1098:4:11","nodeType":"VariableDeclaration","scope":1291,"src":"1083:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1274,"name":"bytes","nodeType":"ElementaryTypeName","src":"1083:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1082:21:11"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1291,"src":"1127:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1277,"name":"uint64","nodeType":"ElementaryTypeName","src":"1127:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1126:8:11"},"scope":1402,"src":"1068:126:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1310,"nodeType":"Block","src":"1426:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":1303,"name":"_msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1457:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":1305,"name":"SRC_EID_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"1475:14:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"1457:33:11","startExpression":{"id":1304,"name":"NONCE_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"1462:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":1302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1450:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1301,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1450:6:11","typeDescriptions":{}}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1450:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1443:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1299,"name":"uint32","nodeType":"ElementaryTypeName","src":"1443:6:11","typeDescriptions":{}}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1443:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1298,"id":1309,"nodeType":"Return","src":"1436:56:11"}]},"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"1200:153:11","text":" @dev Retrieves the source endpoint ID for the composed message.\n @param _msg The message.\n @return The source endpoint ID."},"id":1311,"implemented":true,"kind":"function","modifiers":[],"name":"srcEid","nameLocation":"1367:6:11","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"_msg","nameLocation":"1389:4:11","nodeType":"VariableDeclaration","scope":1311,"src":"1374:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1293,"name":"bytes","nodeType":"ElementaryTypeName","src":"1374:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1373:21:11"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1311,"src":"1418:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1296,"name":"uint32","nodeType":"ElementaryTypeName","src":"1418:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1417:8:11"},"scope":1402,"src":"1358:141:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1330,"nodeType":"Block","src":"1747:79:11","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":1323,"name":"_msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"1780:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":1325,"name":"AMOUNT_LD_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"1800:16:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"1780:37:11","startExpression":{"id":1324,"name":"SRC_EID_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"1785:14:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1772:7:11","typeDescriptions":{}}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1772:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1764:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:11","typeDescriptions":{}}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1318,"id":1329,"nodeType":"Return","src":"1757:62:11"}]},"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"1505:166:11","text":" @dev Retrieves the amount in local decimals from the composed message.\n @param _msg The message.\n @return The amount in local decimals."},"id":1331,"implemented":true,"kind":"function","modifiers":[],"name":"amountLD","nameLocation":"1685:8:11","nodeType":"FunctionDefinition","parameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"_msg","nameLocation":"1709:4:11","nodeType":"VariableDeclaration","scope":1331,"src":"1694:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1313,"name":"bytes","nodeType":"ElementaryTypeName","src":"1694:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1693:21:11"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1331,"src":"1738:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"1738:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1737:9:11"},"scope":1402,"src":"1676:150:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1347,"nodeType":"Block","src":"2063:75:11","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1341,"name":"_msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"2088:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":1343,"name":"COMPOSE_FROM_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2110:19:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2088:42:11","startExpression":{"id":1342,"name":"AMOUNT_LD_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"2093:16:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2080:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2080:7:11","typeDescriptions":{}}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2080:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1338,"id":1346,"nodeType":"Return","src":"2073:58:11"}]},"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"1832:152:11","text":" @dev Retrieves the composeFrom value from the composed message.\n @param _msg The message.\n @return The composeFrom value."},"id":1348,"implemented":true,"kind":"function","modifiers":[],"name":"composeFrom","nameLocation":"1998:11:11","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"_msg","nameLocation":"2025:4:11","nodeType":"VariableDeclaration","scope":1348,"src":"2010:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1333,"name":"bytes","nodeType":"ElementaryTypeName","src":"2010:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2009:21:11"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1348,"src":"2054:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2054:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2053:9:11"},"scope":1402,"src":"1989:149:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1360,"nodeType":"Block","src":"2351:50:11","statements":[{"expression":{"baseExpression":{"id":1356,"name":"_msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"2368:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2368:26:11","startExpression":{"id":1357,"name":"COMPOSE_FROM_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2373:19:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":1355,"id":1359,"nodeType":"Return","src":"2361:33:11"}]},"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"2144:124:11","text":" @dev Retrieves the composed message.\n @param _msg The message.\n @return The composed message."},"id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"composeMsg","nameLocation":"2282:10:11","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"_msg","nameLocation":"2308:4:11","nodeType":"VariableDeclaration","scope":1361,"src":"2293:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1350,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2292:21:11"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1361,"src":"2337:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1353,"name":"bytes","nodeType":"ElementaryTypeName","src":"2337:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2336:14:11"},"scope":1402,"src":"2273:128:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1380,"nodeType":"Block","src":"2642:56:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1375,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"2683:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2675:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1373,"name":"uint160","nodeType":"ElementaryTypeName","src":"2675:7:11","typeDescriptions":{}}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2667:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:11","typeDescriptions":{}}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2667:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2659:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2659:7:11","typeDescriptions":{}}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2659:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1368,"id":1379,"nodeType":"Return","src":"2652:39:11"}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"2407:157:11","text":" @dev Converts an address to bytes32.\n @param _addr The address to convert.\n @return The bytes32 representation of the address."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"addressToBytes32","nameLocation":"2578:16:11","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"_addr","nameLocation":"2603:5:11","nodeType":"VariableDeclaration","scope":1381,"src":"2595:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2594:15:11"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"2633:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2633:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2632:9:11"},"scope":1402,"src":"2569:129:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1400,"nodeType":"Block","src":"2935:53:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1395,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"2976:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2968:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:11","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2968:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2960:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1391,"name":"uint160","nodeType":"ElementaryTypeName","src":"2960:7:11","typeDescriptions":{}}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2952:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:11","typeDescriptions":{}}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1388,"id":1399,"nodeType":"Return","src":"2945:36:11"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"2704:156:11","text":" @dev Converts bytes32 to an address.\n @param _b The bytes32 value to convert.\n @return The address representation of bytes32."},"id":1401,"implemented":true,"kind":"function","modifiers":[],"name":"bytes32ToAddress","nameLocation":"2874:16:11","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"_b","nameLocation":"2899:2:11","nodeType":"VariableDeclaration","scope":1401,"src":"2891:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2891:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2890:12:11"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1401,"src":"2926:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2925:9:11"},"scope":1402,"src":"2865:123:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1403,"src":"59:2931:11","usedErrors":[],"usedEvents":[]}],"src":"33:2958:11"},"id":11},"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol":{"ast":{"absolutePath":"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol","exportedSymbols":{"HyperCoreAdapter":[1639],"HyperLiquidComposerCodec":[1902],"IERC20":[2218],"IHyperLiquidComposer":[1672],"IHyperliquidWritePrecompile":[1792],"IOFT":[1233]},"id":1640,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1404,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:12"},{"absolutePath":"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol","file":"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol","id":1406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1640,"sourceUnit":1234,"src":"64:76:12","symbolAliases":[{"foreign":{"id":1405,"name":"IOFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"73:4:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1640,"sourceUnit":2219,"src":"141:72:12","symbolAliases":[{"foreign":{"id":1407,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"150:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol","file":"./library/HyperLiquidComposerCodec.sol","id":1410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1640,"sourceUnit":1903,"src":"215:82:12","symbolAliases":[{"foreign":{"id":1409,"name":"HyperLiquidComposerCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"224:24:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperLiquidComposer.sol","file":"./interfaces/IHyperLiquidComposer.sol","id":1412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1640,"sourceUnit":1673,"src":"298:77:12","symbolAliases":[{"foreign":{"id":1411,"name":"IHyperLiquidComposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"307:20:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol","file":"./interfaces/IHyperliquidWritePrecompile.sol","id":1414,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1640,"sourceUnit":1793,"src":"376:91:12","symbolAliases":[{"foreign":{"id":1413,"name":"IHyperliquidWritePrecompile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"385:27:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1415,"name":"IHyperLiquidComposer","nameLocations":["498:20:12"],"nodeType":"IdentifierPath","referencedDeclaration":1672,"src":"498:20:12"},"id":1416,"nodeType":"InheritanceSpecifier","src":"498:20:12"}],"canonicalName":"HyperCoreAdapter","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1639,"linearizedBaseContracts":[1639,1672,1026,17],"name":"HyperCoreAdapter","nameLocation":"478:16:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1666],"constant":false,"functionSelector":"84123305","id":1418,"mutability":"immutable","name":"OFT_TOKEN_ASSET_BRIDGE_ADDRESS","nameLocation":"550:30:12","nodeType":"VariableDeclaration","scope":1639,"src":"525:55:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[1671],"constant":false,"functionSelector":"9a923b9a","id":1420,"mutability":"immutable","name":"OFT_TOKEN_CORE_INDEX_ID","nameLocation":"610:23:12","nodeType":"VariableDeclaration","scope":1639,"src":"586:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1419,"name":"uint64","nodeType":"ElementaryTypeName","src":"586:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"public"},{"constant":true,"functionSelector":"55cd1378","id":1423,"mutability":"constant","name":"L1WritePrecompileAddress","nameLocation":"664:24:12","nodeType":"VariableDeclaration","scope":1639,"src":"640:93:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307833333333333333333333333333333333333333333333333333333333333333333333333333333333","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"691:42:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3333333333333333333333333333333333333333"},"visibility":"public"},{"constant":true,"functionSelector":"6e3bf0ad","id":1429,"mutability":"constant","name":"HYPE_ASSET_BRIDGE_ADDRESS","nameLocation":"771:25:12","nodeType":"VariableDeclaration","scope":1639,"src":"739:111:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"739:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":{"arguments":[{"hexValue":"307832323232323232323232323232323232323232323232323232323232323232323232323232323232","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"807:42:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x2222222222222222222222222222222222222222"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"799:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"799:8:12","stateMutability":"payable","typeDescriptions":{}}},"id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"799:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"public"},{"constant":true,"functionSelector":"0813f32f","id":1432,"mutability":"constant","name":"HYPER_CORE_INDEX_ID","nameLocation":"879:19:12","nodeType":"VariableDeclaration","scope":1639,"src":"856:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1430,"name":"uint64","nodeType":"ElementaryTypeName","src":"856:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"31313035","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"901:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1105_by_1","typeString":"int_const 1105"},"value":"1105"},"visibility":"public"},{"constant":true,"functionSelector":"dd4c07c8","id":1437,"mutability":"constant","name":"HYPER_CORE_INDEX_ID_DECIMAL_DIFF","nameLocation":"935:32:12","nodeType":"VariableDeclaration","scope":1639,"src":"911:65:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"970:2:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"38","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"975:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"970:6:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"visibility":"public"},{"constant":false,"functionSelector":"5e280f11","id":1439,"mutability":"immutable","name":"endpoint","nameLocation":"1008:8:12","nodeType":"VariableDeclaration","scope":1639,"src":"983:33:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"983:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9b5215f6","id":1442,"mutability":"immutable","name":"oft","nameLocation":"1044:3:12","nodeType":"VariableDeclaration","scope":1639,"src":"1022:25:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IOFT_$1233","typeString":"contract IOFT"},"typeName":{"id":1441,"nodeType":"UserDefinedTypeName","pathNode":{"id":1440,"name":"IOFT","nameLocations":["1022:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":1233,"src":"1022:4:12"},"referencedDeclaration":1233,"src":"1022:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_IOFT_$1233","typeString":"contract IOFT"}},"visibility":"public"},{"constant":false,"functionSelector":"fc0c546a","id":1445,"mutability":"immutable","name":"token","nameLocation":"1077:5:12","nodeType":"VariableDeclaration","scope":1639,"src":"1053:29:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},"typeName":{"id":1444,"nodeType":"UserDefinedTypeName","pathNode":{"id":1443,"name":"IERC20","nameLocations":["1053:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2218,"src":"1053:6:12"},"referencedDeclaration":2218,"src":"1053:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"303f1e81","id":1447,"mutability":"immutable","name":"weiDiff","nameLocation":"1113:7:12","nodeType":"VariableDeclaration","scope":1639,"src":"1088:32:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":1492,"nodeType":"Block","src":"1676:913:12","statements":[{"expression":{"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1459,"name":"oft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"1875:3:12","typeDescriptions":{"typeIdentifier":"t_contract$_IOFT_$1233","typeString":"contract IOFT"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1461,"name":"_oft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"1886:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1460,"name":"IOFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"1881:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOFT_$1233_$","typeString":"type(contract IOFT)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IOFT_$1233","typeString":"contract IOFT"}},"src":"1875:16:12","typeDescriptions":{"typeIdentifier":"t_contract$_IOFT_$1233","typeString":"contract IOFT"}},"id":1464,"nodeType":"ExpressionStatement","src":"1875:16:12"},{"expression":{"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1465,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"1901:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1467,"name":"oft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"1916:3:12","typeDescriptions":{"typeIdentifier":"t_contract$_IOFT_$1233","typeString":"contract IOFT"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1920:5:12","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1173,"src":"1916:9:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1916:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1466,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"1909:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2218_$","typeString":"type(contract IERC20)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"src":"1901:27:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"id":1472,"nodeType":"ExpressionStatement","src":"1901:27:12"},{"expression":{"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1473,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1939:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1474,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"1950:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1939:20:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1476,"nodeType":"ExpressionStatement","src":"1939:20:12"},{"documentation":"@dev Hyperliquid L1 contract address is the prefix + the core index id\n @dev This is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1\n @dev https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addresses\n @dev It is formed by 0x2000...0000 + the core index id","expression":{"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1477,"name":"OFT_TOKEN_ASSET_BRIDGE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"2411:30:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1480,"name":"_coreIndexId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"2493:12:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":1478,"name":"HyperLiquidComposerCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"2444:24:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HyperLiquidComposerCodec_$1902_$","typeString":"type(library HyperLiquidComposerCodec)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2469:23:12","memberName":"into_assetBridgeAddress","nodeType":"MemberAccess","referencedDeclaration":1883,"src":"2444:48:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) pure returns (address)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2444:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2411:95:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1483,"nodeType":"ExpressionStatement","src":"2411:95:12"},{"expression":{"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1484,"name":"OFT_TOKEN_CORE_INDEX_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"2516:23:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1485,"name":"_coreIndexId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"2542:12:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2516:38:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1487,"nodeType":"ExpressionStatement","src":"2516:38:12"},{"expression":{"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1488,"name":"weiDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2564:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1489,"name":"_weiDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2574:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2564:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1491,"nodeType":"ExpressionStatement","src":"2564:18:12"}]},"documentation":{"id":1448,"nodeType":"StructuredDocumentation","src":"1126:461:12","text":"@notice Constructor for the HyperLiquidLZComposer contract\n @dev This constructor is called by the `HyperLiquidOFT` contract\n @dev Post deployment, this address needs to be approved (via approveCaller) by the `owner` of the `HyperLiquidOFT` contract to call the `transferToHyperLiquidL1` function\n @param _endpoint The LayerZero endpoint address\n @param _oft The OFT contract address associated with this composer"},"id":1493,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"_endpoint","nameLocation":"1612:9:12","nodeType":"VariableDeclaration","scope":1493,"src":"1604:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"1604:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"_oft","nameLocation":"1631:4:12","nodeType":"VariableDeclaration","scope":1493,"src":"1623:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"1623:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"_coreIndexId","nameLocation":"1644:12:12","nodeType":"VariableDeclaration","scope":1493,"src":"1637:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1453,"name":"uint64","nodeType":"ElementaryTypeName","src":"1637:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"_weiDiff","nameLocation":"1666:8:12","nodeType":"VariableDeclaration","scope":1493,"src":"1658:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1658:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1603:72:12"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[],"src":"1676:0:12"},"scope":1639,"src":"1592:997:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[16],"body":{"id":1564,"nodeType":"Block","src":"3206:1404:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1508,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3371:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3371:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1512,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"3393:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3385:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1510,"name":"address","nodeType":"ElementaryTypeName","src":"3385:7:12","typeDescriptions":{}}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3371:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1521,"nodeType":"IfStatement","src":"3367:124:12","trueBody":{"id":1520,"nodeType":"Block","src":"3404:87:12","statements":[{"errorCall":{"arguments":[{"expression":{"id":1516,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3469:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3473:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3469:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1515,"name":"HyperLiquidComposer_InvalidCall_NotEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"3425:43:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1519,"nodeType":"RevertStatement","src":"3418:62:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1524,"name":"oft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"3513:3:12","typeDescriptions":{"typeIdentifier":"t_contract$_IOFT_$1233","typeString":"contract IOFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IOFT_$1233","typeString":"contract IOFT"}],"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3505:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"3505:7:12","typeDescriptions":{}}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3505:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1526,"name":"_oft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"3521:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3505:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1537,"nodeType":"IfStatement","src":"3501:116:12","trueBody":{"id":1536,"nodeType":"Block","src":"3527:90:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1531,"name":"oft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"3595:3:12","typeDescriptions":{"typeIdentifier":"t_contract$_IOFT_$1233","typeString":"contract IOFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IOFT_$1233","typeString":"contract IOFT"}],"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3587:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"3587:7:12","typeDescriptions":{}}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3587:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1533,"name":"_oft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"3601:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1528,"name":"HyperLiquidComposer_InvalidCall_NotOFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"3548:38:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3548:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1535,"nodeType":"RevertStatement","src":"3541:65:12"}]}},{"assignments":[1539,1541],"declarations":[{"constant":false,"id":1539,"mutability":"mutable","name":"_receiver","nameLocation":"3952:9:12","nodeType":"VariableDeclaration","scope":1564,"src":"3944:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"3944:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"_amountLD","nameLocation":"3971:9:12","nodeType":"VariableDeclaration","scope":1564,"src":"3963:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"3963:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1546,"initialValue":{"arguments":[{"id":1544,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"4034:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1542,"name":"HyperLiquidComposerCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"3984:24:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HyperLiquidComposerCodec_$1902_$","typeString":"type(library HyperLiquidComposerCodec)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4009:24:12","memberName":"validateAndDecodeMessage","nodeType":"MemberAccess","referencedDeclaration":1865,"src":"3984:49:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_address_$_t_uint256_$","typeString":"function (bytes calldata) pure returns (address,uint256)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3984:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3943:100:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1547,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4235:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4239:5:12","memberName":"value","nodeType":"MemberAccess","src":"4235:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4247:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4235:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1558,"nodeType":"IfStatement","src":"4231:89:12","trueBody":{"id":1557,"nodeType":"Block","src":"4250:70:12","statements":[{"expression":{"arguments":[{"id":1552,"name":"_receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"4288:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1553,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4299:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4303:5:12","memberName":"value","nodeType":"MemberAccess","src":"4299:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1551,"name":"_fundAddressOnHyperCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"4264:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4264:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1556,"nodeType":"ExpressionStatement","src":"4264:45:12"}]}},{"expression":{"arguments":[{"id":1560,"name":"_receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"4582:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1561,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"4593:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1559,"name":"_sendAssetToHyperCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"4560:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4560:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1563,"nodeType":"ExpressionStatement","src":"4560:43:12"}]},"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"2595:395:12","text":"@notice Composes a message to be sent to the HyperLiquidLZComposer\n @notice This function is the only new addition to the OFT standard\n @dev This function is called by the OFTCore contract when a message is sent\n @param _oft The address of the OFT contract.\n @param _message The encoded message content, expected to be of type: (address receiver)."},"functionSelector":"d0a10260","id":1565,"implemented":true,"kind":"function","modifiers":[],"name":"lzCompose","nameLocation":"3004:9:12","nodeType":"FunctionDefinition","overrides":{"id":1506,"nodeType":"OverrideSpecifier","overrides":[],"src":"3197:8:12"},"parameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"_oft","nameLocation":"3031:4:12","nodeType":"VariableDeclaration","scope":1565,"src":"3023:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1495,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1565,"src":"3045:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3045:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"_message","nameLocation":"3087:8:12","nodeType":"VariableDeclaration","scope":1565,"src":"3072:23:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1499,"name":"bytes","nodeType":"ElementaryTypeName","src":"3072:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1565,"src":"3105:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"3105:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1565,"src":"3136:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1503,"name":"bytes","nodeType":"ElementaryTypeName","src":"3136:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3013:158:12"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[],"src":"3206:0:12"},"scope":1639,"src":"2995:1615:12","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":1595,"nodeType":"Block","src":"4699:257:12","statements":[{"expression":{"arguments":[{"id":1575,"name":"OFT_TOKEN_ASSET_BRIDGE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"4724:30:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1576,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"4756:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1572,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"4709:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4715:8:12","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2185,"src":"4709:14:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4709:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1578,"nodeType":"ExpressionStatement","src":"4709:54:12"},{"expression":{"arguments":[{"id":1583,"name":"receiever","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"4849:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1584,"name":"OFT_TOKEN_CORE_INDEX_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"4872:23:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1587,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"4916:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4925:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1589,"name":"weiDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4931:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4916:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4909:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1585,"name":"uint64","nodeType":"ElementaryTypeName","src":"4909:6:12","typeDescriptions":{}}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4909:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"arguments":[{"id":1580,"name":"L1WritePrecompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"4801:24:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1579,"name":"IHyperliquidWritePrecompile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"4773:27:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHyperliquidWritePrecompile_$1792_$","typeString":"type(contract IHyperliquidWritePrecompile)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4773:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IHyperliquidWritePrecompile_$1792","typeString":"contract IHyperliquidWritePrecompile"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:8:12","memberName":"sendSpot","nodeType":"MemberAccess","referencedDeclaration":1784,"src":"4773:62:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint64_$_t_uint64_$returns$__$","typeString":"function (address,uint64,uint64) external"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4773:176:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1594,"nodeType":"ExpressionStatement","src":"4773:176:12"}]},"id":1596,"implemented":true,"kind":"function","modifiers":[],"name":"_sendAssetToHyperCore","nameLocation":"4625:21:12","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"receiever","nameLocation":"4655:9:12","nodeType":"VariableDeclaration","scope":1596,"src":"4647:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"4647:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"amount","nameLocation":"4674:6:12","nodeType":"VariableDeclaration","scope":1596,"src":"4666:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4646:35:12"},"returnParameters":{"id":1571,"nodeType":"ParameterList","parameters":[],"src":"4699:0:12"},"scope":1639,"src":"4616:340:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1633,"nodeType":"Block","src":"5047:351:12","statements":[{"assignments":[1604,null],"declarations":[{"constant":false,"id":1604,"mutability":"mutable","name":"sent","nameLocation":"5063:4:12","nodeType":"VariableDeclaration","scope":1633,"src":"5058:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1603,"name":"bool","nodeType":"ElementaryTypeName","src":"5058:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1611,"initialValue":{"arguments":[{"hexValue":"","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5121:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1605,"name":"HYPE_ASSET_BRIDGE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"5073:25:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5099:4:12","memberName":"call","nodeType":"MemberAccess","src":"5073:30:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1607,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"5112:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5073:47:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5057:67:12"},{"expression":{"arguments":[{"id":1613,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"5142:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64204859504520746f204879706572436f7265","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5148:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f36cc36cc2d8409d2a1ca675856db8c0ac40991b9e411e41e2b8bba2f8104fb","typeString":"literal_string \"Failed to send HYPE to HyperCore\""},"value":"Failed to send HYPE to HyperCore"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f36cc36cc2d8409d2a1ca675856db8c0ac40991b9e411e41e2b8bba2f8104fb","typeString":"literal_string \"Failed to send HYPE to HyperCore\""}],"id":1612,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5134:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5134:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1616,"nodeType":"ExpressionStatement","src":"5134:49:12"},{"expression":{"arguments":[{"id":1621,"name":"receiever","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"5270:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1622,"name":"HYPER_CORE_INDEX_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"5293:19:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1625,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"5333:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5342:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1627,"name":"HYPER_CORE_INDEX_ID_DECIMAL_DIFF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"5348:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5333:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5326:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1623,"name":"uint64","nodeType":"ElementaryTypeName","src":"5326:6:12","typeDescriptions":{}}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5326:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"arguments":[{"id":1618,"name":"L1WritePrecompileAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"5222:24:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1617,"name":"IHyperliquidWritePrecompile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"5194:27:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHyperliquidWritePrecompile_$1792_$","typeString":"type(contract IHyperliquidWritePrecompile)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5194:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IHyperliquidWritePrecompile_$1792","typeString":"contract IHyperliquidWritePrecompile"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5248:8:12","memberName":"sendSpot","nodeType":"MemberAccess","referencedDeclaration":1784,"src":"5194:62:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint64_$_t_uint64_$returns$__$","typeString":"function (address,uint64,uint64) external"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5194:197:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1632,"nodeType":"ExpressionStatement","src":"5194:197:12"}]},"id":1634,"implemented":true,"kind":"function","modifiers":[],"name":"_fundAddressOnHyperCore","nameLocation":"4971:23:12","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"receiever","nameLocation":"5003:9:12","nodeType":"VariableDeclaration","scope":1634,"src":"4995:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"4995:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"amount","nameLocation":"5022:6:12","nodeType":"VariableDeclaration","scope":1634,"src":"5014:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"5014:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4994:35:12"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[],"src":"5047:0:12"},"scope":1639,"src":"4962:436:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1637,"nodeType":"Block","src":"5431:2:12","statements":[]},"id":1638,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"5411:2:12"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[],"src":"5431:0:12"},"scope":1639,"src":"5404:29:12","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1640,"src":"469:4966:12","usedErrors":[1649,1655,1661,1819],"usedEvents":[]}],"src":"39:5397:12"},"id":12},"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperLiquidComposer.sol":{"ast":{"absolutePath":"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperLiquidComposer.sol","exportedSymbols":{"IHyperLiquidComposer":[1672],"IOAppComposer":[1026]},"id":1673,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1641,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:13"},{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol","file":"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol","id":1643,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1673,"sourceUnit":1027,"src":"58:100:13","symbolAliases":[{"foreign":{"id":1642,"name":"IOAppComposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"67:13:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1644,"name":"IOAppComposer","nameLocations":["194:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1026,"src":"194:13:13"},"id":1645,"nodeType":"InheritanceSpecifier","src":"194:13:13"}],"canonicalName":"IHyperLiquidComposer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1672,"linearizedBaseContracts":[1672,1026,17],"name":"IHyperLiquidComposer","nameLocation":"170:20:13","nodeType":"ContractDefinition","nodes":[{"errorSelector":"eee35e6f","id":1649,"name":"HyperLiquidComposer_InvalidCall_NotEndpoint","nameLocation":"220:43:13","nodeType":"ErrorDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"_notEndpointAddress","nameLocation":"272:19:13","nodeType":"VariableDeclaration","scope":1649,"src":"264:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1646,"name":"address","nodeType":"ElementaryTypeName","src":"264:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"263:29:13"},"src":"214:79:13"},{"errorSelector":"86fee0c0","id":1655,"name":"HyperLiquidComposer_InvalidCall_NotOFT","nameLocation":"304:38:13","nodeType":"ErrorDefinition","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"_internalOFTAddress","nameLocation":"351:19:13","nodeType":"VariableDeclaration","scope":1655,"src":"343:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1650,"name":"address","nodeType":"ElementaryTypeName","src":"343:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"_receivedOFTAddress","nameLocation":"380:19:13","nodeType":"VariableDeclaration","scope":1655,"src":"372:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1652,"name":"address","nodeType":"ElementaryTypeName","src":"372:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"342:58:13"},"src":"298:103:13"},{"errorSelector":"db9a4c6b","id":1661,"name":"HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension","nameLocation":"412:60:13","nodeType":"ErrorDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"_oft","nameLocation":"481:4:13","nodeType":"VariableDeclaration","scope":1661,"src":"473:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"473:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"mutability":"mutable","name":"_token","nameLocation":"495:6:13","nodeType":"VariableDeclaration","scope":1661,"src":"487:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"472:30:13"},"src":"406:97:13"},{"functionSelector":"84123305","id":1666,"implemented":false,"kind":"function","modifiers":[],"name":"OFT_TOKEN_ASSET_BRIDGE_ADDRESS","nameLocation":"518:30:13","nodeType":"FunctionDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[],"src":"548:2:13"},"returnParameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"574:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"574:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"573:9:13"},"scope":1672,"src":"509:74:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a923b9a","id":1671,"implemented":false,"kind":"function","modifiers":[],"name":"OFT_TOKEN_CORE_INDEX_ID","nameLocation":"597:23:13","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[],"src":"620:2:13"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"646:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1668,"name":"uint64","nodeType":"ElementaryTypeName","src":"646:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"645:8:13"},"scope":1672,"src":"588:66:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1673,"src":"160:496:13","usedErrors":[1649,1655,1661],"usedEvents":[]}],"src":"32:625:13"},"id":13},"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol":{"ast":{"absolutePath":"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol","exportedSymbols":{"IHyperliquidWritePrecompile":[1792]},"id":1793,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1674,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IHyperliquidWritePrecompile","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1792,"linearizedBaseContracts":[1792],"name":"IHyperliquidWritePrecompile","nameLocation":"67:27:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"7597e7aa503612e7889c5d1f11e2dee5fcefca0e76ab1d7b460f0f1f98d8ddd1","id":1686,"name":"IocOrder","nameLocation":"107:8:14","nodeType":"EventDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"132:4:14","nodeType":"VariableDeclaration","scope":1686,"src":"116:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1675,"name":"address","nodeType":"ElementaryTypeName","src":"116:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1678,"indexed":false,"mutability":"mutable","name":"asset","nameLocation":"145:5:14","nodeType":"VariableDeclaration","scope":1686,"src":"138:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1677,"name":"uint32","nodeType":"ElementaryTypeName","src":"138:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1680,"indexed":false,"mutability":"mutable","name":"isBuy","nameLocation":"157:5:14","nodeType":"VariableDeclaration","scope":1686,"src":"152:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1679,"name":"bool","nodeType":"ElementaryTypeName","src":"152:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1682,"indexed":false,"mutability":"mutable","name":"limitPx","nameLocation":"171:7:14","nodeType":"VariableDeclaration","scope":1686,"src":"164:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1681,"name":"uint64","nodeType":"ElementaryTypeName","src":"164:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1684,"indexed":false,"mutability":"mutable","name":"sz","nameLocation":"187:2:14","nodeType":"VariableDeclaration","scope":1686,"src":"180:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1683,"name":"uint64","nodeType":"ElementaryTypeName","src":"180:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"115:75:14"},"src":"101:90:14"},{"anonymous":false,"eventSelector":"1a729f4ef39a715194f8084eec644ce6f8f01909dc15e5bb0197bb2b7b831376","id":1696,"name":"VaultTransfer","nameLocation":"202:13:14","nodeType":"EventDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"232:4:14","nodeType":"VariableDeclaration","scope":1696,"src":"216:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1687,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1690,"indexed":true,"mutability":"mutable","name":"vault","nameLocation":"254:5:14","nodeType":"VariableDeclaration","scope":1696,"src":"238:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"238:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1692,"indexed":false,"mutability":"mutable","name":"isDeposit","nameLocation":"266:9:14","nodeType":"VariableDeclaration","scope":1696,"src":"261:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1691,"name":"bool","nodeType":"ElementaryTypeName","src":"261:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1694,"indexed":false,"mutability":"mutable","name":"usd","nameLocation":"284:3:14","nodeType":"VariableDeclaration","scope":1696,"src":"277:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1693,"name":"uint64","nodeType":"ElementaryTypeName","src":"277:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"215:73:14"},"src":"196:93:14"},{"anonymous":false,"eventSelector":"475ec8b67801429f179721112a6d5cd50cc1e2dd3d69d829f81b266e79cd026e","id":1706,"name":"TokenDelegate","nameLocation":"300:13:14","nodeType":"EventDefinition","parameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"330:4:14","nodeType":"VariableDeclaration","scope":1706,"src":"314:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"314:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1700,"indexed":true,"mutability":"mutable","name":"validator","nameLocation":"352:9:14","nodeType":"VariableDeclaration","scope":1706,"src":"336:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1699,"name":"address","nodeType":"ElementaryTypeName","src":"336:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1702,"indexed":false,"mutability":"mutable","name":"_wei","nameLocation":"370:4:14","nodeType":"VariableDeclaration","scope":1706,"src":"363:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1701,"name":"uint64","nodeType":"ElementaryTypeName","src":"363:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1704,"indexed":false,"mutability":"mutable","name":"isUndelegate","nameLocation":"381:12:14","nodeType":"VariableDeclaration","scope":1706,"src":"376:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1703,"name":"bool","nodeType":"ElementaryTypeName","src":"376:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"313:81:14"},"src":"294:101:14"},{"anonymous":false,"eventSelector":"d0f1a003ed3bfa57c76de3702b6697f7121de9e9a083464dccb5c1bcf9cdb0d9","id":1712,"name":"CDeposit","nameLocation":"406:8:14","nodeType":"EventDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"431:4:14","nodeType":"VariableDeclaration","scope":1712,"src":"415:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1710,"indexed":false,"mutability":"mutable","name":"_wei","nameLocation":"444:4:14","nodeType":"VariableDeclaration","scope":1712,"src":"437:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1709,"name":"uint64","nodeType":"ElementaryTypeName","src":"437:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"414:35:14"},"src":"400:50:14"},{"anonymous":false,"eventSelector":"41031f020c109ae2c55e59831bb87eb1903104fbc39b347fba3d1d344e6a2023","id":1718,"name":"CWithdrawal","nameLocation":"461:11:14","nodeType":"EventDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"489:4:14","nodeType":"VariableDeclaration","scope":1718,"src":"473:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"473:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1716,"indexed":false,"mutability":"mutable","name":"_wei","nameLocation":"502:4:14","nodeType":"VariableDeclaration","scope":1718,"src":"495:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1715,"name":"uint64","nodeType":"ElementaryTypeName","src":"495:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"472:35:14"},"src":"455:53:14"},{"anonymous":false,"eventSelector":"09f4a089fd53b0b2cd536bc6d609a82b696295ebdcb91c7e216ad11c5223f1d9","id":1728,"name":"SpotSend","nameLocation":"519:8:14","nodeType":"EventDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"544:4:14","nodeType":"VariableDeclaration","scope":1728,"src":"528:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"528:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1722,"indexed":true,"mutability":"mutable","name":"destination","nameLocation":"566:11:14","nodeType":"VariableDeclaration","scope":1728,"src":"550:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1724,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"586:5:14","nodeType":"VariableDeclaration","scope":1728,"src":"579:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1723,"name":"uint64","nodeType":"ElementaryTypeName","src":"579:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1726,"indexed":false,"mutability":"mutable","name":"_wei","nameLocation":"600:4:14","nodeType":"VariableDeclaration","scope":1728,"src":"593:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1725,"name":"uint64","nodeType":"ElementaryTypeName","src":"593:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"527:78:14"},"src":"513:93:14"},{"anonymous":false,"eventSelector":"7a1295c51ef7a78228f94d80495169fb233db371130a00f6fb718bbef7345467","id":1736,"name":"UsdClassTransfer","nameLocation":"617:16:14","nodeType":"EventDefinition","parameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"650:4:14","nodeType":"VariableDeclaration","scope":1736,"src":"634:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1732,"indexed":false,"mutability":"mutable","name":"ntl","nameLocation":"663:3:14","nodeType":"VariableDeclaration","scope":1736,"src":"656:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1731,"name":"uint64","nodeType":"ElementaryTypeName","src":"656:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1734,"indexed":false,"mutability":"mutable","name":"toPerp","nameLocation":"673:6:14","nodeType":"VariableDeclaration","scope":1736,"src":"668:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1733,"name":"bool","nodeType":"ElementaryTypeName","src":"668:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"633:47:14"},"src":"611:70:14"},{"functionSelector":"4e4719ab","id":1747,"implemented":false,"kind":"function","modifiers":[],"name":"sendIocOrder","nameLocation":"696:12:14","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"asset","nameLocation":"716:5:14","nodeType":"VariableDeclaration","scope":1747,"src":"709:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1737,"name":"uint32","nodeType":"ElementaryTypeName","src":"709:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"isBuy","nameLocation":"728:5:14","nodeType":"VariableDeclaration","scope":1747,"src":"723:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1739,"name":"bool","nodeType":"ElementaryTypeName","src":"723:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"limitPx","nameLocation":"742:7:14","nodeType":"VariableDeclaration","scope":1747,"src":"735:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1741,"name":"uint64","nodeType":"ElementaryTypeName","src":"735:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"sz","nameLocation":"758:2:14","nodeType":"VariableDeclaration","scope":1747,"src":"751:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1743,"name":"uint64","nodeType":"ElementaryTypeName","src":"751:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"708:53:14"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[],"src":"770:0:14"},"scope":1792,"src":"687:84:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"258f0dcc","id":1756,"implemented":false,"kind":"function","modifiers":[],"name":"sendVaultTransfer","nameLocation":"786:17:14","nodeType":"FunctionDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"vault","nameLocation":"812:5:14","nodeType":"VariableDeclaration","scope":1756,"src":"804:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"804:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1751,"mutability":"mutable","name":"isDeposit","nameLocation":"824:9:14","nodeType":"VariableDeclaration","scope":1756,"src":"819:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1750,"name":"bool","nodeType":"ElementaryTypeName","src":"819:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"usd","nameLocation":"842:3:14","nodeType":"VariableDeclaration","scope":1756,"src":"835:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1752,"name":"uint64","nodeType":"ElementaryTypeName","src":"835:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"803:43:14"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[],"src":"855:0:14"},"scope":1792,"src":"777:79:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"db30aa53","id":1765,"implemented":false,"kind":"function","modifiers":[],"name":"sendTokenDelegate","nameLocation":"871:17:14","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"validator","nameLocation":"897:9:14","nodeType":"VariableDeclaration","scope":1765,"src":"889:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1760,"mutability":"mutable","name":"_wei","nameLocation":"915:4:14","nodeType":"VariableDeclaration","scope":1765,"src":"908:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1759,"name":"uint64","nodeType":"ElementaryTypeName","src":"908:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"isUndelegate","nameLocation":"926:12:14","nodeType":"VariableDeclaration","scope":1765,"src":"921:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1761,"name":"bool","nodeType":"ElementaryTypeName","src":"921:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"888:51:14"},"returnParameters":{"id":1764,"nodeType":"ParameterList","parameters":[],"src":"948:0:14"},"scope":1792,"src":"862:87:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"414fa437","id":1770,"implemented":false,"kind":"function","modifiers":[],"name":"sendCDeposit","nameLocation":"964:12:14","nodeType":"FunctionDefinition","parameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"_wei","nameLocation":"984:4:14","nodeType":"VariableDeclaration","scope":1770,"src":"977:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1766,"name":"uint64","nodeType":"ElementaryTypeName","src":"977:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"976:13:14"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[],"src":"998:0:14"},"scope":1792,"src":"955:44:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"84918d1e","id":1775,"implemented":false,"kind":"function","modifiers":[],"name":"sendCWithdrawal","nameLocation":"1014:15:14","nodeType":"FunctionDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"mutability":"mutable","name":"_wei","nameLocation":"1037:4:14","nodeType":"VariableDeclaration","scope":1775,"src":"1030:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1771,"name":"uint64","nodeType":"ElementaryTypeName","src":"1030:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1029:13:14"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[],"src":"1051:0:14"},"scope":1792,"src":"1005:47:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0b0ac0ab","id":1784,"implemented":false,"kind":"function","modifiers":[],"name":"sendSpot","nameLocation":"1067:8:14","nodeType":"FunctionDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"destination","nameLocation":"1084:11:14","nodeType":"VariableDeclaration","scope":1784,"src":"1076:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1776,"name":"address","nodeType":"ElementaryTypeName","src":"1076:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"token","nameLocation":"1104:5:14","nodeType":"VariableDeclaration","scope":1784,"src":"1097:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1778,"name":"uint64","nodeType":"ElementaryTypeName","src":"1097:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"_wei","nameLocation":"1118:4:14","nodeType":"VariableDeclaration","scope":1784,"src":"1111:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1780,"name":"uint64","nodeType":"ElementaryTypeName","src":"1111:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1075:48:14"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[],"src":"1132:0:14"},"scope":1792,"src":"1058:75:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2d9d5db6","id":1791,"implemented":false,"kind":"function","modifiers":[],"name":"sendUsdClassTransfer","nameLocation":"1148:20:14","nodeType":"FunctionDefinition","parameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"ntl","nameLocation":"1176:3:14","nodeType":"VariableDeclaration","scope":1791,"src":"1169:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1785,"name":"uint64","nodeType":"ElementaryTypeName","src":"1169:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"toPerp","nameLocation":"1186:6:14","nodeType":"VariableDeclaration","scope":1791,"src":"1181:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1787,"name":"bool","nodeType":"ElementaryTypeName","src":"1181:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1168:25:14"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[],"src":"1202:0:14"},"scope":1792,"src":"1139:64:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1793,"src":"57:1148:14","usedErrors":[],"usedEvents":[1686,1696,1706,1712,1718,1728,1736]}],"src":"32:1174:14"},"id":14},"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol":{"ast":{"absolutePath":"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol","exportedSymbols":{"HyperLiquidComposerCodec":[1902],"OFTComposeMsgCodec":[1402]},"id":1903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1794,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:15"},{"absolutePath":"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol","file":"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol","id":1796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1903,"sourceUnit":1403,"src":"58:98:15","symbolAliases":[{"foreign":{"id":1795,"name":"OFTComposeMsgCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"67:18:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"HyperLiquidComposerCodec","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1902,"linearizedBaseContracts":[1902],"name":"HyperLiquidComposerCodec","nameLocation":"166:24:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"197:228:15","text":"@dev The length of the message that is valid for the HyperLiquidComposer\n @dev This is 20 bytes because addresses are 20 bytes\n @dev We are in encodePacked mode, if we are in encode mode, the length is 42 bytes"},"functionSelector":"807d6c3f","id":1800,"mutability":"constant","name":"VALID_COMPOSE_MESSAGE_LENGTH_PACKED","nameLocation":"454:35:15","nodeType":"VariableDeclaration","scope":1902,"src":"430:64:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"492:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"501:430:15","text":"@dev The base asset bridge address is the address of the HyperLiquid L1 contract\n @dev This is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1\n @dev https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addresses\n @dev It is formed by 0x2000...0000 + the core index id"},"functionSelector":"d58daedf","id":1804,"mutability":"constant","name":"BASE_ASSET_BRIDGE_ADDRESS","nameLocation":"960:25:15","nodeType":"VariableDeclaration","scope":1902,"src":"936:94:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"936:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307832303030303030303030303030303030303030303030303030303030303030303030303030303030","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"988:42:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x2000000000000000000000000000000000000000"},"visibility":"public"},{"constant":true,"functionSelector":"03e41b77","id":1813,"mutability":"constant","name":"BASE_ASSET_BRIDGE_ADDRESS_UINT256","nameLocation":"1060:33:15","nodeType":"VariableDeclaration","scope":1902,"src":"1036:103:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"arguments":[{"arguments":[{"id":1810,"name":"BASE_ASSET_BRIDGE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"1112:25:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1104:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1808,"name":"uint160","nodeType":"ElementaryTypeName","src":"1104:7:15","typeDescriptions":{}}},"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1104:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1096:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1096:7:15","typeDescriptions":{}}},"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"errorSelector":"09b34731","id":1819,"name":"HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength","nameLocation":"1152:57:15","nodeType":"ErrorDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"message","nameLocation":"1216:7:15","nodeType":"VariableDeclaration","scope":1819,"src":"1210:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1814,"name":"bytes","nodeType":"ElementaryTypeName","src":"1210:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"length","nameLocation":"1233:6:15","nodeType":"VariableDeclaration","scope":1819,"src":"1225:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1225:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1209:31:15"},"src":"1146:95:15"},{"body":{"id":1864,"nodeType":"Block","src":"1388:597:15","statements":[{"assignments":[1829],"declarations":[{"constant":false,"id":1829,"mutability":"mutable","name":"message","nameLocation":"1411:7:15","nodeType":"VariableDeclaration","scope":1864,"src":"1398:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1828,"name":"bytes","nodeType":"ElementaryTypeName","src":"1398:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1834,"initialValue":{"arguments":[{"id":1832,"name":"_composeMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"1451:15:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1830,"name":"OFTComposeMsgCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"1421:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OFTComposeMsgCodec_$1402_$","typeString":"type(library OFTComposeMsgCodec)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1440:10:15","memberName":"composeMsg","nodeType":"MemberAccess","referencedDeclaration":1361,"src":"1421:29:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes calldata) pure returns (bytes memory)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1421:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1398:69:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1835,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"1606:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1614:6:15","memberName":"length","nodeType":"MemberAccess","src":"1606:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1837,"name":"VALID_COMPOSE_MESSAGE_LENGTH_PACKED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"1624:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1606:53:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1846,"nodeType":"IfStatement","src":"1602:173:15","trueBody":{"id":1845,"nodeType":"Block","src":"1661:114:15","statements":[{"errorCall":{"arguments":[{"id":1840,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"1740:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":1841,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"1749:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1757:6:15","memberName":"length","nodeType":"MemberAccess","src":"1749:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1839,"name":"HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"1682:57:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes memory,uint256) pure"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1682:82:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1844,"nodeType":"RevertStatement","src":"1675:89:15"}]}},{"expression":{"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1847,"name":"_receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"1875:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1852,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"1903:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1895:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1850,"name":"bytes20","nodeType":"ElementaryTypeName","src":"1895:7:15","typeDescriptions":{}}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1887:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1848,"name":"address","nodeType":"ElementaryTypeName","src":"1887:7:15","typeDescriptions":{}}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1887:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1875:37:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1856,"nodeType":"ExpressionStatement","src":"1875:37:15"},{"expression":{"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1857,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"1922:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1860,"name":"_composeMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"1962:15:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1858,"name":"OFTComposeMsgCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"1934:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OFTComposeMsgCodec_$1402_$","typeString":"type(library OFTComposeMsgCodec)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1953:8:15","memberName":"amountLD","nodeType":"MemberAccess","referencedDeclaration":1331,"src":"1934:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint256_$","typeString":"function (bytes calldata) pure returns (uint256)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1934:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1922:56:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1863,"nodeType":"ExpressionStatement","src":"1922:56:15"}]},"id":1865,"implemented":true,"kind":"function","modifiers":[],"name":"validateAndDecodeMessage","nameLocation":"1256:24:15","nodeType":"FunctionDefinition","parameters":{"id":1822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"_composeMessage","nameLocation":"1305:15:15","nodeType":"VariableDeclaration","scope":1865,"src":"1290:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1820,"name":"bytes","nodeType":"ElementaryTypeName","src":"1290:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1280:46:15"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"_receiver","nameLocation":"1358:9:15","nodeType":"VariableDeclaration","scope":1865,"src":"1350:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"1350:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"_amountLD","nameLocation":"1377:9:15","nodeType":"VariableDeclaration","scope":1865,"src":"1369:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1349:38:15"},"scope":1902,"src":"1247:738:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1882,"nodeType":"Block","src":"2078:90:15","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1876,"name":"BASE_ASSET_BRIDGE_ADDRESS_UINT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"2111:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1877,"name":"_coreIndexId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"2147:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2111:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2103:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1874,"name":"uint160","nodeType":"ElementaryTypeName","src":"2103:7:15","typeDescriptions":{}}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2103:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2095:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"2095:7:15","typeDescriptions":{}}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2095:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1871,"id":1881,"nodeType":"Return","src":"2088:73:15"}]},"id":1883,"implemented":true,"kind":"function","modifiers":[],"name":"into_assetBridgeAddress","nameLocation":"2000:23:15","nodeType":"FunctionDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"_coreIndexId","nameLocation":"2032:12:15","nodeType":"VariableDeclaration","scope":1883,"src":"2024:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1866,"name":"uint256","nodeType":"ElementaryTypeName","src":"2024:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2023:22:15"},"returnParameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1883,"src":"2069:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2068:9:15"},"scope":1902,"src":"1991:177:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"2257:97:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1894,"name":"_assetBridgeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"2290:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2282:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1892,"name":"uint160","nodeType":"ElementaryTypeName","src":"2282:7:15","typeDescriptions":{}}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2282:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2274:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2274:7:15","typeDescriptions":{}}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1897,"name":"BASE_ASSET_BRIDGE_ADDRESS_UINT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"2314:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2274:73:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1889,"id":1899,"nodeType":"Return","src":"2267:80:15"}]},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"into_tokenId","nameLocation":"2183:12:15","nodeType":"FunctionDefinition","parameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"_assetBridgeAddress","nameLocation":"2204:19:15","nodeType":"VariableDeclaration","scope":1901,"src":"2196:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1884,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2195:29:15"},"returnParameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"2248:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2247:9:15"},"scope":1902,"src":"2174:180:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1903,"src":"158:2198:15","usedErrors":[1819],"usedEvents":[]}],"src":"32:3071:15"},"id":15},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2918],"Ownable":[2050]},"id":2051,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1904,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2051,"sourceUnit":2919,"src":"128:45:16","symbolAliases":[{"foreign":{"id":1905,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"136:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1908,"name":"Context","nameLocations":["692:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2918,"src":"692:7:16"},"id":1909,"nodeType":"InheritanceSpecifier","src":"692:7:16"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1907,"nodeType":"StructuredDocumentation","src":"175:487:16","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":2050,"linearizedBaseContracts":[2050,2918],"name":"Ownable","nameLocation":"681:7:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1911,"mutability":"mutable","name":"_owner","nameLocation":"722:6:16","nodeType":"VariableDeclaration","scope":2050,"src":"706:22:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1910,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"735:85:16","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":1916,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:16","nodeType":"ErrorDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"account","nameLocation":"866:7:16","nodeType":"VariableDeclaration","scope":1916,"src":"858:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:16"},"src":"825:50:16"},{"documentation":{"id":1917,"nodeType":"StructuredDocumentation","src":"881:82:16","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":1921,"name":"OwnableInvalidOwner","nameLocation":"974:19:16","nodeType":"ErrorDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"owner","nameLocation":"1002:5:16","nodeType":"VariableDeclaration","scope":1921,"src":"994:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1918,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:16"},"src":"968:41:16"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1927,"name":"OwnershipTransferred","nameLocation":"1021:20:16","nodeType":"EventDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:16","nodeType":"VariableDeclaration","scope":1927,"src":"1042:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1922,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1925,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:16","nodeType":"VariableDeclaration","scope":1927,"src":"1073:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1924,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:16"},"src":"1015:84:16"},{"body":{"id":1952,"nodeType":"Block","src":"1259:153:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1933,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1273:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1934,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:16","typeDescriptions":{}}},"id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1947,"nodeType":"IfStatement","src":"1269:95:16","trueBody":{"id":1946,"nodeType":"Block","src":"1301:63:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:16","typeDescriptions":{}}},"id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1939,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"1322:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1945,"nodeType":"RevertStatement","src":"1315:38:16"}]}},{"expression":{"arguments":[{"id":1949,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1392:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1948,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"1373:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1951,"nodeType":"ExpressionStatement","src":"1373:32:16"}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"1105:115:16","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":1953,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:16","nodeType":"VariableDeclaration","scope":1953,"src":"1237:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:16"},"returnParameters":{"id":1932,"nodeType":"ParameterList","parameters":[],"src":"1259:0:16"},"scope":2050,"src":"1225:187:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1960,"nodeType":"Block","src":"1521:41:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1956,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"1531:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1958,"nodeType":"ExpressionStatement","src":"1531:13:16"},{"id":1959,"nodeType":"PlaceholderStatement","src":"1554:1:16"}]},"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"1418:77:16","text":" @dev Throws if called by any account other than the owner."},"id":1961,"name":"onlyOwner","nameLocation":"1509:9:16","nodeType":"ModifierDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[],"src":"1518:2:16"},"src":"1500:62:16","virtual":false,"visibility":"internal"},{"body":{"id":1969,"nodeType":"Block","src":"1693:30:16","statements":[{"expression":{"id":1967,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"1710:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1966,"id":1968,"nodeType":"Return","src":"1703:13:16"}]},"documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"1568:65:16","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1970,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:16","nodeType":"FunctionDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"1652:2:16"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1970,"src":"1684:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:16"},"scope":2050,"src":"1638:85:16","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1986,"nodeType":"Block","src":"1841:117:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1974,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"1855:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1976,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"1866:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1985,"nodeType":"IfStatement","src":"1851:101:16","trueBody":{"id":1984,"nodeType":"Block","src":"1880:72:16","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1980,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"1928:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1979,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"1901:26:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1983,"nodeType":"RevertStatement","src":"1894:47:16"}]}}]},"documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"1729:62:16","text":" @dev Throws if the sender is not the owner."},"id":1987,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:16","nodeType":"FunctionDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[],"src":"1816:2:16"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[],"src":"1841:0:16"},"scope":2050,"src":"1796:162:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2000,"nodeType":"Block","src":"2347:47:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1994,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:16","typeDescriptions":{}}},"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1993,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2357:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1999,"nodeType":"ExpressionStatement","src":"2357:30:16"}]},"documentation":{"id":1988,"nodeType":"StructuredDocumentation","src":"1964:324:16","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":2001,"implemented":true,"kind":"function","modifiers":[{"id":1991,"kind":"modifierInvocation","modifierName":{"id":1990,"name":"onlyOwner","nameLocations":["2337:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1961,"src":"2337:9:16"},"nodeType":"ModifierInvocation","src":"2337:9:16"}],"name":"renounceOwnership","nameLocation":"2302:17:16","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[],"src":"2319:2:16"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[],"src":"2347:0:16"},"scope":2050,"src":"2293:101:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2028,"nodeType":"Block","src":"2613:145:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2009,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"2627:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2010,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:16","typeDescriptions":{}}},"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2023,"nodeType":"IfStatement","src":"2623:91:16","trueBody":{"id":2022,"nodeType":"Block","src":"2651:63:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:16","typeDescriptions":{}}},"id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2015,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"2672:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2021,"nodeType":"RevertStatement","src":"2665:38:16"}]}},{"expression":{"arguments":[{"id":2025,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"2742:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2024,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2723:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2027,"nodeType":"ExpressionStatement","src":"2723:28:16"}]},"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"2400:138:16","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":2029,"implemented":true,"kind":"function","modifiers":[{"id":2007,"kind":"modifierInvocation","modifierName":{"id":2006,"name":"onlyOwner","nameLocations":["2603:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1961,"src":"2603:9:16"},"nodeType":"ModifierInvocation","src":"2603:9:16"}],"name":"transferOwnership","nameLocation":"2552:17:16","nodeType":"FunctionDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:16","nodeType":"VariableDeclaration","scope":2029,"src":"2570:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2003,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:16"},"returnParameters":{"id":2008,"nodeType":"ParameterList","parameters":[],"src":"2613:0:16"},"scope":2050,"src":"2543:215:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2048,"nodeType":"Block","src":"2975:124:16","statements":[{"assignments":[2036],"declarations":[{"constant":false,"id":2036,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:16","nodeType":"VariableDeclaration","scope":2048,"src":"2985:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2038,"initialValue":{"id":2037,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"3004:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:16"},{"expression":{"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2039,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"3020:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2040,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"3029:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2042,"nodeType":"ExpressionStatement","src":"3020:17:16"},{"eventCall":{"arguments":[{"id":2044,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"3073:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2045,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"3083:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2043,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"3052:20:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2047,"nodeType":"EmitStatement","src":"3047:45:16"}]},"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"2764:143:16","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":2049,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:16","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:16","nodeType":"VariableDeclaration","scope":2049,"src":"2940:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:16"},"returnParameters":{"id":2034,"nodeType":"ParameterList","parameters":[],"src":"2975:0:16"},"scope":2050,"src":"2912:187:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2051,"src":"663:2438:16","usedErrors":[1916,1921],"usedEvents":[1927]}],"src":"102:3000:16"},"id":16},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[2132],"IERC165":[2952],"IERC20":[2218]},"id":2133,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2052,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:17"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":2054,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2133,"sourceUnit":2141,"src":"133:36:17","symbolAliases":[{"foreign":{"id":2053,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"141:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":2056,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2133,"sourceUnit":2137,"src":"170:38:17","symbolAliases":[{"foreign":{"id":2055,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"178:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2058,"name":"IERC20","nameLocations":["590:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":2218,"src":"590:6:17"},"id":2059,"nodeType":"InheritanceSpecifier","src":"590:6:17"},{"baseName":{"id":2060,"name":"IERC165","nameLocations":["598:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":2952,"src":"598:7:17"},"id":2061,"nodeType":"InheritanceSpecifier","src":"598:7:17"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":2057,"nodeType":"StructuredDocumentation","src":"210:357:17","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":2132,"linearizedBaseContracts":[2132,2952,2218],"name":"IERC1363","nameLocation":"578:8:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"1148:370:17","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":2071,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:17","nodeType":"FunctionDefinition","parameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"to","nameLocation":"1556:2:17","nodeType":"VariableDeclaration","scope":2071,"src":"1548:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2063,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"value","nameLocation":"1568:5:17","nodeType":"VariableDeclaration","scope":2071,"src":"1560:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:17"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2071,"src":"1593:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2068,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:17"},"scope":2132,"src":"1523:76:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"1605:453:17","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":2083,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:17","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"to","nameLocation":"2096:2:17","nodeType":"VariableDeclaration","scope":2083,"src":"2088:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2073,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"value","nameLocation":"2108:5:17","nodeType":"VariableDeclaration","scope":2083,"src":"2100:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"data","nameLocation":"2130:4:17","nodeType":"VariableDeclaration","scope":2083,"src":"2115:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2077,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:17"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2083,"src":"2154:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2080,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:17"},"scope":2132,"src":"2063:97:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2084,"nodeType":"StructuredDocumentation","src":"2166:453:17","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":2095,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:17","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"from","nameLocation":"2661:4:17","nodeType":"VariableDeclaration","scope":2095,"src":"2653:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2085,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"to","nameLocation":"2675:2:17","nodeType":"VariableDeclaration","scope":2095,"src":"2667:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2087,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2090,"mutability":"mutable","name":"value","nameLocation":"2687:5:17","nodeType":"VariableDeclaration","scope":2095,"src":"2679:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:17"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2095,"src":"2712:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2092,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:17"},"scope":2132,"src":"2624:94:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"2724:536:17","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":2109,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:17","nodeType":"FunctionDefinition","parameters":{"id":2105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"from","nameLocation":"3302:4:17","nodeType":"VariableDeclaration","scope":2109,"src":"3294:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2097,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2100,"mutability":"mutable","name":"to","nameLocation":"3316:2:17","nodeType":"VariableDeclaration","scope":2109,"src":"3308:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2099,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"value","nameLocation":"3328:5:17","nodeType":"VariableDeclaration","scope":2109,"src":"3320:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2101,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2104,"mutability":"mutable","name":"data","nameLocation":"3350:4:17","nodeType":"VariableDeclaration","scope":2109,"src":"3335:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2103,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:17"},"returnParameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2109,"src":"3374:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2106,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:17"},"scope":2132,"src":"3265:115:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"3386:390:17","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":2119,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:17","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"spender","nameLocation":"3813:7:17","nodeType":"VariableDeclaration","scope":2119,"src":"3805:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"value","nameLocation":"3830:5:17","nodeType":"VariableDeclaration","scope":2119,"src":"3822:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:17"},"returnParameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2119,"src":"3855:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2116,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:17"},"scope":2132,"src":"3781:80:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2120,"nodeType":"StructuredDocumentation","src":"3867:478:17","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":2131,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:17","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"spender","nameLocation":"4382:7:17","nodeType":"VariableDeclaration","scope":2131,"src":"4374:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2121,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2124,"mutability":"mutable","name":"value","nameLocation":"4399:5:17","nodeType":"VariableDeclaration","scope":2131,"src":"4391:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"data","nameLocation":"4421:4:17","nodeType":"VariableDeclaration","scope":2131,"src":"4406:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2125,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:17"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2131,"src":"4445:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2128,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:17"},"scope":2132,"src":"4350:101:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2133,"src":"568:3885:17","usedErrors":[],"usedEvents":[2152,2161]}],"src":"107:4347:17"},"id":17},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[2952]},"id":2137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2134,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":2136,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2137,"sourceUnit":2953,"src":"132:59:18","symbolAliases":[{"foreign":{"id":2135,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"140:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:18"},"id":18},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[2218]},"id":2141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":2140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2141,"sourceUnit":2219,"src":"131:49:19","symbolAliases":[{"foreign":{"id":2139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"139:6:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:19"},"id":19},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2218]},"id":2219,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2142,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"132:71:20","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2218,"linearizedBaseContracts":[2218],"name":"IERC20","nameLocation":"214:6:20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"227:158:20","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2152,"name":"Transfer","nameLocation":"396:8:20","nodeType":"EventDefinition","parameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:20","nodeType":"VariableDeclaration","scope":2152,"src":"405:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2145,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2148,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:20","nodeType":"VariableDeclaration","scope":2152,"src":"427:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2147,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2150,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:20","nodeType":"VariableDeclaration","scope":2152,"src":"447:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2149,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:20"},"src":"390:72:20"},{"anonymous":false,"documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"468:148:20","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2161,"name":"Approval","nameLocation":"627:8:20","nodeType":"EventDefinition","parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:20","nodeType":"VariableDeclaration","scope":2161,"src":"636:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2154,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2157,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:20","nodeType":"VariableDeclaration","scope":2161,"src":"659:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2156,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2159,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:20","nodeType":"VariableDeclaration","scope":2161,"src":"684:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:20"},"src":"621:78:20"},{"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"705:65:20","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2167,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:20","nodeType":"FunctionDefinition","parameters":{"id":2163,"nodeType":"ParameterList","parameters":[],"src":"795:2:20"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2167,"src":"821:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:20"},"scope":2218,"src":"775:55:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2168,"nodeType":"StructuredDocumentation","src":"836:71:20","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2175,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:20","nodeType":"FunctionDefinition","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"account","nameLocation":"939:7:20","nodeType":"VariableDeclaration","scope":2175,"src":"931:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2169,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:20"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2175,"src":"971:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2172,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:20"},"scope":2218,"src":"912:68:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"986:213:20","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2185,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:20","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"to","nameLocation":"1230:2:20","nodeType":"VariableDeclaration","scope":2185,"src":"1222:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"value","nameLocation":"1242:5:20","nodeType":"VariableDeclaration","scope":2185,"src":"1234:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:20"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2185,"src":"1267:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2182,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:20"},"scope":2218,"src":"1204:69:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"1279:264:20","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2195,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:20","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"owner","nameLocation":"1575:5:20","nodeType":"VariableDeclaration","scope":2195,"src":"1567:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2187,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"spender","nameLocation":"1590:7:20","nodeType":"VariableDeclaration","scope":2195,"src":"1582:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2189,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:20"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2195,"src":"1622:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:20"},"scope":2218,"src":"1548:83:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"1637:667:20","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2205,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:20","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"spender","nameLocation":"2334:7:20","nodeType":"VariableDeclaration","scope":2205,"src":"2326:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2197,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"value","nameLocation":"2351:5:20","nodeType":"VariableDeclaration","scope":2205,"src":"2343:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:20"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2205,"src":"2376:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2202,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:20"},"scope":2218,"src":"2309:73:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"2388:297:20","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2217,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:20","nodeType":"FunctionDefinition","parameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"from","nameLocation":"2720:4:20","nodeType":"VariableDeclaration","scope":2217,"src":"2712:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2207,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2210,"mutability":"mutable","name":"to","nameLocation":"2734:2:20","nodeType":"VariableDeclaration","scope":2217,"src":"2726:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2209,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"value","nameLocation":"2746:5:20","nodeType":"VariableDeclaration","scope":2217,"src":"2738:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:20"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2217,"src":"2771:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2214,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:20"},"scope":2218,"src":"2690:87:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2219,"src":"204:2575:20","usedErrors":[],"usedEvents":[2152,2161]}],"src":"106:2674:20"},"id":20},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2888],"IERC1363":[2132],"IERC20":[2218],"SafeERC20":[2629]},"id":2630,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2220,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2630,"sourceUnit":2219,"src":"141:37:21","symbolAliases":[{"foreign":{"id":2221,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"149:6:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":2224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2630,"sourceUnit":2133,"src":"179:58:21","symbolAliases":[{"foreign":{"id":2223,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"187:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":2226,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2630,"sourceUnit":2889,"src":"238:51:21","symbolAliases":[{"foreign":{"id":2225,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"246:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":2227,"nodeType":"StructuredDocumentation","src":"291:458:21","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2629,"linearizedBaseContracts":[2629],"name":"SafeERC20","nameLocation":"758:9:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"774:65:21","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":2232,"name":"SafeERC20FailedOperation","nameLocation":"850:24:21","nodeType":"ErrorDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"token","nameLocation":"883:5:21","nodeType":"VariableDeclaration","scope":2232,"src":"875:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2229,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"874:15:21"},"src":"844:46:21"},{"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"896:71:21","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":2241,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"978:32:21","nodeType":"ErrorDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"spender","nameLocation":"1019:7:21","nodeType":"VariableDeclaration","scope":2241,"src":"1011:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2234,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2237,"mutability":"mutable","name":"currentAllowance","nameLocation":"1036:16:21","nodeType":"VariableDeclaration","scope":2241,"src":"1028:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1062:17:21","nodeType":"VariableDeclaration","scope":2241,"src":"1054:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:70:21"},"src":"972:109:21"},{"body":{"id":2264,"nodeType":"Block","src":"1343:88:21","statements":[{"expression":{"arguments":[{"id":2253,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"1373:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2256,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"1395:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1401:8:21","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2185,"src":"1395:14:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2258,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"1412:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"1416:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1411:11:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2254,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"1380:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:10:21","memberName":"encodeCall","nodeType":"MemberAccess","src":"1380:14:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2252,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"1353:19:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2218_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1353:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2263,"nodeType":"ExpressionStatement","src":"1353:71:21"}]},"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"1087:179:21","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":2265,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1280:12:21","nodeType":"FunctionDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"token","nameLocation":"1300:5:21","nodeType":"VariableDeclaration","scope":2265,"src":"1293:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},"typeName":{"id":2244,"nodeType":"UserDefinedTypeName","pathNode":{"id":2243,"name":"IERC20","nameLocations":["1293:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2218,"src":"1293:6:21"},"referencedDeclaration":2218,"src":"1293:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"to","nameLocation":"1315:2:21","nodeType":"VariableDeclaration","scope":2265,"src":"1307:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"1307:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"value","nameLocation":"1327:5:21","nodeType":"VariableDeclaration","scope":2265,"src":"1319:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1292:41:21"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[],"src":"1343:0:21"},"scope":2629,"src":"1271:160:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2291,"nodeType":"Block","src":"1760:98:21","statements":[{"expression":{"arguments":[{"id":2279,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1790:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2282,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1812:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1818:12:21","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2217,"src":"1812:18:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":2284,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"1833:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2285,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"1839:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1843:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1832:17:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":2280,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"1797:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1801:10:21","memberName":"encodeCall","nodeType":"MemberAccess","src":"1797:14:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2278,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"1770:19:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2218_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1770:81:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2290,"nodeType":"ExpressionStatement","src":"1770:81:21"}]},"documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"1437:228:21","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":2292,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1679:16:21","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"token","nameLocation":"1703:5:21","nodeType":"VariableDeclaration","scope":2292,"src":"1696:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},"typeName":{"id":2268,"nodeType":"UserDefinedTypeName","pathNode":{"id":2267,"name":"IERC20","nameLocations":["1696:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2218,"src":"1696:6:21"},"referencedDeclaration":2218,"src":"1696:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"from","nameLocation":"1718:4:21","nodeType":"VariableDeclaration","scope":2292,"src":"1710:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2270,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2273,"mutability":"mutable","name":"to","nameLocation":"1732:2:21","nodeType":"VariableDeclaration","scope":2292,"src":"1724:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2272,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"value","nameLocation":"1744:5:21","nodeType":"VariableDeclaration","scope":2292,"src":"1736:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1695:55:21"},"returnParameters":{"id":2277,"nodeType":"ParameterList","parameters":[],"src":"1760:0:21"},"scope":2629,"src":"1670:188:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2322,"nodeType":"Block","src":"2600:139:21","statements":[{"assignments":[2304],"declarations":[{"constant":false,"id":2304,"mutability":"mutable","name":"oldAllowance","nameLocation":"2618:12:21","nodeType":"VariableDeclaration","scope":2322,"src":"2610:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"2610:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2313,"initialValue":{"arguments":[{"arguments":[{"id":2309,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2657:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2629","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2629","typeString":"library SafeERC20"}],"id":2308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2649:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2307,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:21","typeDescriptions":{}}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2311,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"2664:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2305,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"2633:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2639:9:21","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2195,"src":"2633:15:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2610:62:21"},{"expression":{"arguments":[{"id":2315,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"2695:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},{"id":2316,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"2702:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2317,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"2711:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"2726:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2711:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2314,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"2682:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2218_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2321,"nodeType":"ExpressionStatement","src":"2682:50:21"}]},"documentation":{"id":2293,"nodeType":"StructuredDocumentation","src":"1864:645:21","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":2323,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2523:21:21","nodeType":"FunctionDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"token","nameLocation":"2552:5:21","nodeType":"VariableDeclaration","scope":2323,"src":"2545:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},"typeName":{"id":2295,"nodeType":"UserDefinedTypeName","pathNode":{"id":2294,"name":"IERC20","nameLocations":["2545:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2218,"src":"2545:6:21"},"referencedDeclaration":2218,"src":"2545:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"spender","nameLocation":"2567:7:21","nodeType":"VariableDeclaration","scope":2323,"src":"2559:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2297,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"value","nameLocation":"2584:5:21","nodeType":"VariableDeclaration","scope":2323,"src":"2576:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2544:46:21"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[],"src":"2600:0:21"},"scope":2629,"src":"2514:225:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2365,"nodeType":"Block","src":"3505:370:21","statements":[{"id":2364,"nodeType":"UncheckedBlock","src":"3515:354:21","statements":[{"assignments":[2335],"declarations":[{"constant":false,"id":2335,"mutability":"mutable","name":"currentAllowance","nameLocation":"3547:16:21","nodeType":"VariableDeclaration","scope":2364,"src":"3539:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2344,"initialValue":{"arguments":[{"arguments":[{"id":2340,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3590:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2629","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2629","typeString":"library SafeERC20"}],"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3582:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"3582:7:21","typeDescriptions":{}}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2342,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3597:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2336,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"3566:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3572:9:21","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2195,"src":"3566:15:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3539:66:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2345,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"3623:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2346,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"3642:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3623:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2355,"nodeType":"IfStatement","src":"3619:160:21","trueBody":{"id":2354,"nodeType":"Block","src":"3661:118:21","statements":[{"errorCall":{"arguments":[{"id":2349,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3719:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2350,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"3728:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2351,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"3746:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2348,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"3686:32:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2353,"nodeType":"RevertStatement","src":"3679:85:21"}]}},{"expression":{"arguments":[{"id":2357,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"3805:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},{"id":2358,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3812:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2359,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"3821:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2360,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"3840:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3821:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2356,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"3792:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2218_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2363,"nodeType":"ExpressionStatement","src":"3792:66:21"}]}]},"documentation":{"id":2324,"nodeType":"StructuredDocumentation","src":"2745:657:21","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":2366,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3416:21:21","nodeType":"FunctionDefinition","parameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"token","nameLocation":"3445:5:21","nodeType":"VariableDeclaration","scope":2366,"src":"3438:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},"typeName":{"id":2326,"nodeType":"UserDefinedTypeName","pathNode":{"id":2325,"name":"IERC20","nameLocations":["3438:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2218,"src":"3438:6:21"},"referencedDeclaration":2218,"src":"3438:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2329,"mutability":"mutable","name":"spender","nameLocation":"3460:7:21","nodeType":"VariableDeclaration","scope":2366,"src":"3452:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2328,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2331,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3477:17:21","nodeType":"VariableDeclaration","scope":2366,"src":"3469:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3469:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3437:58:21"},"returnParameters":{"id":2333,"nodeType":"ParameterList","parameters":[],"src":"3505:0:21"},"scope":2629,"src":"3407:468:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2412,"nodeType":"Block","src":"4529:303:21","statements":[{"assignments":[2378],"declarations":[{"constant":false,"id":2378,"mutability":"mutable","name":"approvalCall","nameLocation":"4552:12:21","nodeType":"VariableDeclaration","scope":2412,"src":"4539:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2377,"name":"bytes","nodeType":"ElementaryTypeName","src":"4539:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2387,"initialValue":{"arguments":[{"expression":{"id":2381,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"4582:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4588:7:21","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2205,"src":"4582:13:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2383,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"4598:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"4607:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4597:16:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2379,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"4567:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4571:10:21","memberName":"encodeCall","nodeType":"MemberAccess","src":"4567:14:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4567:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4539:75:21"},{"condition":{"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4629:45:21","subExpression":{"arguments":[{"id":2389,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"4654:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},{"id":2390,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"4661:12:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2388,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"4630:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2218_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4630:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2411,"nodeType":"IfStatement","src":"4625:201:21","trueBody":{"id":2410,"nodeType":"Block","src":"4676:150:21","statements":[{"expression":{"arguments":[{"id":2394,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"4710:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2397,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"4732:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4738:7:21","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2205,"src":"4732:13:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2399,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"4748:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4757:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2401,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4747:12:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":2395,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"4717:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4721:10:21","memberName":"encodeCall","nodeType":"MemberAccess","src":"4717:14:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2393,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"4690:19:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2218_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2404,"nodeType":"ExpressionStatement","src":"4690:71:21"},{"expression":{"arguments":[{"id":2406,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"4795:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},{"id":2407,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"4802:12:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2405,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"4775:19:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2218_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4775:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2409,"nodeType":"ExpressionStatement","src":"4775:40:21"}]}}]},"documentation":{"id":2367,"nodeType":"StructuredDocumentation","src":"3881:566:21","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":2413,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4461:12:21","nodeType":"FunctionDefinition","parameters":{"id":2375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"token","nameLocation":"4481:5:21","nodeType":"VariableDeclaration","scope":2413,"src":"4474:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},"typeName":{"id":2369,"nodeType":"UserDefinedTypeName","pathNode":{"id":2368,"name":"IERC20","nameLocations":["4474:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2218,"src":"4474:6:21"},"referencedDeclaration":2218,"src":"4474:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"spender","nameLocation":"4496:7:21","nodeType":"VariableDeclaration","scope":2413,"src":"4488:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2371,"name":"address","nodeType":"ElementaryTypeName","src":"4488:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"value","nameLocation":"4513:5:21","nodeType":"VariableDeclaration","scope":2413,"src":"4505:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"4505:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4473:46:21"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[],"src":"4529:0:21"},"scope":2629,"src":"4452:380:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2455,"nodeType":"Block","src":"5279:219:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2426,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"5293:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5296:4:21","memberName":"code","nodeType":"MemberAccess","src":"5293:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5301:6:21","memberName":"length","nodeType":"MemberAccess","src":"5293:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5311:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5293:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5379:39:21","subExpression":{"arguments":[{"id":2440,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"5402:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"5406:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2442,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"5413:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2438,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"5380:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5386:15:21","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":2083,"src":"5380:21:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2453,"nodeType":"IfStatement","src":"5375:117:21","trueBody":{"id":2452,"nodeType":"Block","src":"5420:72:21","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2448,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"5474:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}],"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5466:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2446,"name":"address","nodeType":"ElementaryTypeName","src":"5466:7:21","typeDescriptions":{}}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5466:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2445,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"5441:24:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5441:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2451,"nodeType":"RevertStatement","src":"5434:47:21"}]}},"id":2454,"nodeType":"IfStatement","src":"5289:203:21","trueBody":{"id":2437,"nodeType":"Block","src":"5314:55:21","statements":[{"expression":{"arguments":[{"id":2432,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"5341:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}},{"id":2433,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"5348:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"5352:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2431,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"5328:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2218_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2436,"nodeType":"ExpressionStatement","src":"5328:30:21"}]}}]},"documentation":{"id":2414,"nodeType":"StructuredDocumentation","src":"4838:333:21","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2456,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5185:22:21","nodeType":"FunctionDefinition","parameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"token","nameLocation":"5217:5:21","nodeType":"VariableDeclaration","scope":2456,"src":"5208:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"},"typeName":{"id":2416,"nodeType":"UserDefinedTypeName","pathNode":{"id":2415,"name":"IERC1363","nameLocations":["5208:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2132,"src":"5208:8:21"},"referencedDeclaration":2132,"src":"5208:8:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2419,"mutability":"mutable","name":"to","nameLocation":"5232:2:21","nodeType":"VariableDeclaration","scope":2456,"src":"5224:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2418,"name":"address","nodeType":"ElementaryTypeName","src":"5224:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"value","nameLocation":"5244:5:21","nodeType":"VariableDeclaration","scope":2456,"src":"5236:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"data","nameLocation":"5264:4:21","nodeType":"VariableDeclaration","scope":2456,"src":"5251:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2422,"name":"bytes","nodeType":"ElementaryTypeName","src":"5251:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5207:62:21"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[],"src":"5279:0:21"},"scope":2629,"src":"5176:322:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2502,"nodeType":"Block","src":"6017:239:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2471,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"6031:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6034:4:21","memberName":"code","nodeType":"MemberAccess","src":"6031:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6039:6:21","memberName":"length","nodeType":"MemberAccess","src":"6031:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6049:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6031:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6127:49:21","subExpression":{"arguments":[{"id":2486,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"6154:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2487,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"6160:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"6164:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2489,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"6171:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2484,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"6128:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6134:19:21","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":2109,"src":"6128:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2500,"nodeType":"IfStatement","src":"6123:127:21","trueBody":{"id":2499,"nodeType":"Block","src":"6178:72:21","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2495,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"6232:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}],"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6224:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2493,"name":"address","nodeType":"ElementaryTypeName","src":"6224:7:21","typeDescriptions":{}}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2492,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"6199:24:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2498,"nodeType":"RevertStatement","src":"6192:47:21"}]}},"id":2501,"nodeType":"IfStatement","src":"6027:223:21","trueBody":{"id":2483,"nodeType":"Block","src":"6052:65:21","statements":[{"expression":{"arguments":[{"id":2477,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"6083:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}},{"id":2478,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"6090:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"6096:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"6100:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2476,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6066:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2218_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6066:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2482,"nodeType":"ExpressionStatement","src":"6066:40:21"}]}}]},"documentation":{"id":2457,"nodeType":"StructuredDocumentation","src":"5504:341:21","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2503,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5859:26:21","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"token","nameLocation":"5904:5:21","nodeType":"VariableDeclaration","scope":2503,"src":"5895:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"},"typeName":{"id":2459,"nodeType":"UserDefinedTypeName","pathNode":{"id":2458,"name":"IERC1363","nameLocations":["5895:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2132,"src":"5895:8:21"},"referencedDeclaration":2132,"src":"5895:8:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2462,"mutability":"mutable","name":"from","nameLocation":"5927:4:21","nodeType":"VariableDeclaration","scope":2503,"src":"5919:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2461,"name":"address","nodeType":"ElementaryTypeName","src":"5919:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"to","nameLocation":"5949:2:21","nodeType":"VariableDeclaration","scope":2503,"src":"5941:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2463,"name":"address","nodeType":"ElementaryTypeName","src":"5941:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2466,"mutability":"mutable","name":"value","nameLocation":"5969:5:21","nodeType":"VariableDeclaration","scope":2503,"src":"5961:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"5961:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"data","nameLocation":"5997:4:21","nodeType":"VariableDeclaration","scope":2503,"src":"5984:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2467,"name":"bytes","nodeType":"ElementaryTypeName","src":"5984:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5885:122:21"},"returnParameters":{"id":2470,"nodeType":"ParameterList","parameters":[],"src":"6017:0:21"},"scope":2629,"src":"5850:406:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2545,"nodeType":"Block","src":"7023:218:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2516,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"7037:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7040:4:21","memberName":"code","nodeType":"MemberAccess","src":"7037:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7045:6:21","memberName":"length","nodeType":"MemberAccess","src":"7037:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7055:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7037:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7123:38:21","subExpression":{"arguments":[{"id":2530,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"7145:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"7149:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2532,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"7156:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2528,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"7124:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7130:14:21","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"7124:20:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7124:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2543,"nodeType":"IfStatement","src":"7119:116:21","trueBody":{"id":2542,"nodeType":"Block","src":"7163:72:21","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2538,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"7217:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}],"id":2537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7209:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"7209:7:21","typeDescriptions":{}}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7209:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2535,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"7184:24:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2541,"nodeType":"RevertStatement","src":"7177:47:21"}]}},"id":2544,"nodeType":"IfStatement","src":"7033:202:21","trueBody":{"id":2527,"nodeType":"Block","src":"7058:55:21","statements":[{"expression":{"arguments":[{"id":2522,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"7085:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}},{"id":2523,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"7092:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"7096:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2521,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"7072:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2218_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2526,"nodeType":"ExpressionStatement","src":"7072:30:21"}]}}]},"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"6262:654:21","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":2546,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6930:21:21","nodeType":"FunctionDefinition","parameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"token","nameLocation":"6961:5:21","nodeType":"VariableDeclaration","scope":2546,"src":"6952:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"},"typeName":{"id":2506,"nodeType":"UserDefinedTypeName","pathNode":{"id":2505,"name":"IERC1363","nameLocations":["6952:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2132,"src":"6952:8:21"},"referencedDeclaration":2132,"src":"6952:8:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2132","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"to","nameLocation":"6976:2:21","nodeType":"VariableDeclaration","scope":2546,"src":"6968:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2508,"name":"address","nodeType":"ElementaryTypeName","src":"6968:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"value","nameLocation":"6988:5:21","nodeType":"VariableDeclaration","scope":2546,"src":"6980:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"6980:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"data","nameLocation":"7008:4:21","nodeType":"VariableDeclaration","scope":2546,"src":"6995:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2512,"name":"bytes","nodeType":"ElementaryTypeName","src":"6995:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6951:62:21"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[],"src":"7023:0:21"},"scope":2629,"src":"6921:320:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2586,"nodeType":"Block","src":"7808:650:21","statements":[{"assignments":[2556],"declarations":[{"constant":false,"id":2556,"mutability":"mutable","name":"returnSize","nameLocation":"7826:10:21","nodeType":"VariableDeclaration","scope":2586,"src":"7818:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"7818:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2557,"nodeType":"VariableDeclarationStatement","src":"7818:18:21"},{"assignments":[2559],"declarations":[{"constant":false,"id":2559,"mutability":"mutable","name":"returnValue","nameLocation":"7854:11:21","nodeType":"VariableDeclaration","scope":2586,"src":"7846:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"7846:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2560,"nodeType":"VariableDeclarationStatement","src":"7846:19:21"},{"AST":{"nativeSrc":"7900:396:21","nodeType":"YulBlock","src":"7900:396:21","statements":[{"nativeSrc":"7914:75:21","nodeType":"YulVariableDeclaration","src":"7914:75:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"7934:3:21","nodeType":"YulIdentifier","src":"7934:3:21"},"nativeSrc":"7934:5:21","nodeType":"YulFunctionCall","src":"7934:5:21"},{"name":"token","nativeSrc":"7941:5:21","nodeType":"YulIdentifier","src":"7941:5:21"},{"kind":"number","nativeSrc":"7948:1:21","nodeType":"YulLiteral","src":"7948:1:21","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"7955:4:21","nodeType":"YulIdentifier","src":"7955:4:21"},{"kind":"number","nativeSrc":"7961:4:21","nodeType":"YulLiteral","src":"7961:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7951:3:21","nodeType":"YulIdentifier","src":"7951:3:21"},"nativeSrc":"7951:15:21","nodeType":"YulFunctionCall","src":"7951:15:21"},{"arguments":[{"name":"data","nativeSrc":"7974:4:21","nodeType":"YulIdentifier","src":"7974:4:21"}],"functionName":{"name":"mload","nativeSrc":"7968:5:21","nodeType":"YulIdentifier","src":"7968:5:21"},"nativeSrc":"7968:11:21","nodeType":"YulFunctionCall","src":"7968:11:21"},{"kind":"number","nativeSrc":"7981:1:21","nodeType":"YulLiteral","src":"7981:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7984:4:21","nodeType":"YulLiteral","src":"7984:4:21","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"7929:4:21","nodeType":"YulIdentifier","src":"7929:4:21"},"nativeSrc":"7929:60:21","nodeType":"YulFunctionCall","src":"7929:60:21"},"variables":[{"name":"success","nativeSrc":"7918:7:21","nodeType":"YulTypedName","src":"7918:7:21","type":""}]},{"body":{"nativeSrc":"8050:157:21","nodeType":"YulBlock","src":"8050:157:21","statements":[{"nativeSrc":"8068:22:21","nodeType":"YulVariableDeclaration","src":"8068:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"8085:4:21","nodeType":"YulLiteral","src":"8085:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8079:5:21","nodeType":"YulIdentifier","src":"8079:5:21"},"nativeSrc":"8079:11:21","nodeType":"YulFunctionCall","src":"8079:11:21"},"variables":[{"name":"ptr","nativeSrc":"8072:3:21","nodeType":"YulTypedName","src":"8072:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8122:3:21","nodeType":"YulIdentifier","src":"8122:3:21"},{"kind":"number","nativeSrc":"8127:1:21","nodeType":"YulLiteral","src":"8127:1:21","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8130:14:21","nodeType":"YulIdentifier","src":"8130:14:21"},"nativeSrc":"8130:16:21","nodeType":"YulFunctionCall","src":"8130:16:21"}],"functionName":{"name":"returndatacopy","nativeSrc":"8107:14:21","nodeType":"YulIdentifier","src":"8107:14:21"},"nativeSrc":"8107:40:21","nodeType":"YulFunctionCall","src":"8107:40:21"},"nativeSrc":"8107:40:21","nodeType":"YulExpressionStatement","src":"8107:40:21"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8171:3:21","nodeType":"YulIdentifier","src":"8171:3:21"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8176:14:21","nodeType":"YulIdentifier","src":"8176:14:21"},"nativeSrc":"8176:16:21","nodeType":"YulFunctionCall","src":"8176:16:21"}],"functionName":{"name":"revert","nativeSrc":"8164:6:21","nodeType":"YulIdentifier","src":"8164:6:21"},"nativeSrc":"8164:29:21","nodeType":"YulFunctionCall","src":"8164:29:21"},"nativeSrc":"8164:29:21","nodeType":"YulExpressionStatement","src":"8164:29:21"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8041:7:21","nodeType":"YulIdentifier","src":"8041:7:21"}],"functionName":{"name":"iszero","nativeSrc":"8034:6:21","nodeType":"YulIdentifier","src":"8034:6:21"},"nativeSrc":"8034:15:21","nodeType":"YulFunctionCall","src":"8034:15:21"},"nativeSrc":"8031:176:21","nodeType":"YulIf","src":"8031:176:21"},{"nativeSrc":"8220:30:21","nodeType":"YulAssignment","src":"8220:30:21","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8234:14:21","nodeType":"YulIdentifier","src":"8234:14:21"},"nativeSrc":"8234:16:21","nodeType":"YulFunctionCall","src":"8234:16:21"},"variableNames":[{"name":"returnSize","nativeSrc":"8220:10:21","nodeType":"YulIdentifier","src":"8220:10:21"}]},{"nativeSrc":"8263:23:21","nodeType":"YulAssignment","src":"8263:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"8284:1:21","nodeType":"YulLiteral","src":"8284:1:21","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8278:5:21","nodeType":"YulIdentifier","src":"8278:5:21"},"nativeSrc":"8278:8:21","nodeType":"YulFunctionCall","src":"8278:8:21"},"variableNames":[{"name":"returnValue","nativeSrc":"8263:11:21","nodeType":"YulIdentifier","src":"8263:11:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2552,"isOffset":false,"isSlot":false,"src":"7955:4:21","valueSize":1},{"declaration":2552,"isOffset":false,"isSlot":false,"src":"7974:4:21","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"8220:10:21","valueSize":1},{"declaration":2559,"isOffset":false,"isSlot":false,"src":"8263:11:21","valueSize":1},{"declaration":2550,"isOffset":false,"isSlot":false,"src":"7941:5:21","valueSize":1}],"flags":["memory-safe"],"id":2561,"nodeType":"InlineAssembly","src":"7875:421:21"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2562,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"8310:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8324:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8310:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"8362:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8377:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8362:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8310:68:21","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2567,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"8336:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}],"id":2566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2565,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:21","typeDescriptions":{}}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8343:4:21","memberName":"code","nodeType":"MemberAccess","src":"8328:19:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8348:6:21","memberName":"length","nodeType":"MemberAccess","src":"8328:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8358:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8328:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2585,"nodeType":"IfStatement","src":"8306:146:21","trueBody":{"id":2584,"nodeType":"Block","src":"8380:72:21","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2580,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"8434:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}],"id":2579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2578,"name":"address","nodeType":"ElementaryTypeName","src":"8426:7:21","typeDescriptions":{}}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2577,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"8401:24:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8401:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2583,"nodeType":"RevertStatement","src":"8394:47:21"}]}}]},"documentation":{"id":2547,"nodeType":"StructuredDocumentation","src":"7247:486:21","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":2587,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7747:19:21","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"token","nameLocation":"7774:5:21","nodeType":"VariableDeclaration","scope":2587,"src":"7767:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},"typeName":{"id":2549,"nodeType":"UserDefinedTypeName","pathNode":{"id":2548,"name":"IERC20","nameLocations":["7767:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2218,"src":"7767:6:21"},"referencedDeclaration":2218,"src":"7767:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"data","nameLocation":"7794:4:21","nodeType":"VariableDeclaration","scope":2587,"src":"7781:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2551,"name":"bytes","nodeType":"ElementaryTypeName","src":"7781:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7766:33:21"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[],"src":"7808:0:21"},"scope":2629,"src":"7738:720:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2627,"nodeType":"Block","src":"9049:391:21","statements":[{"assignments":[2599],"declarations":[{"constant":false,"id":2599,"mutability":"mutable","name":"success","nameLocation":"9064:7:21","nodeType":"VariableDeclaration","scope":2627,"src":"9059:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2598,"name":"bool","nodeType":"ElementaryTypeName","src":"9059:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2600,"nodeType":"VariableDeclarationStatement","src":"9059:12:21"},{"assignments":[2602],"declarations":[{"constant":false,"id":2602,"mutability":"mutable","name":"returnSize","nameLocation":"9089:10:21","nodeType":"VariableDeclaration","scope":2627,"src":"9081:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"9081:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2603,"nodeType":"VariableDeclarationStatement","src":"9081:18:21"},{"assignments":[2605],"declarations":[{"constant":false,"id":2605,"mutability":"mutable","name":"returnValue","nameLocation":"9117:11:21","nodeType":"VariableDeclaration","scope":2627,"src":"9109:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"9109:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2606,"nodeType":"VariableDeclarationStatement","src":"9109:19:21"},{"AST":{"nativeSrc":"9163:174:21","nodeType":"YulBlock","src":"9163:174:21","statements":[{"nativeSrc":"9177:71:21","nodeType":"YulAssignment","src":"9177:71:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9193:3:21","nodeType":"YulIdentifier","src":"9193:3:21"},"nativeSrc":"9193:5:21","nodeType":"YulFunctionCall","src":"9193:5:21"},{"name":"token","nativeSrc":"9200:5:21","nodeType":"YulIdentifier","src":"9200:5:21"},{"kind":"number","nativeSrc":"9207:1:21","nodeType":"YulLiteral","src":"9207:1:21","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9214:4:21","nodeType":"YulIdentifier","src":"9214:4:21"},{"kind":"number","nativeSrc":"9220:4:21","nodeType":"YulLiteral","src":"9220:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9210:3:21","nodeType":"YulIdentifier","src":"9210:3:21"},"nativeSrc":"9210:15:21","nodeType":"YulFunctionCall","src":"9210:15:21"},{"arguments":[{"name":"data","nativeSrc":"9233:4:21","nodeType":"YulIdentifier","src":"9233:4:21"}],"functionName":{"name":"mload","nativeSrc":"9227:5:21","nodeType":"YulIdentifier","src":"9227:5:21"},"nativeSrc":"9227:11:21","nodeType":"YulFunctionCall","src":"9227:11:21"},{"kind":"number","nativeSrc":"9240:1:21","nodeType":"YulLiteral","src":"9240:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9243:4:21","nodeType":"YulLiteral","src":"9243:4:21","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9188:4:21","nodeType":"YulIdentifier","src":"9188:4:21"},"nativeSrc":"9188:60:21","nodeType":"YulFunctionCall","src":"9188:60:21"},"variableNames":[{"name":"success","nativeSrc":"9177:7:21","nodeType":"YulIdentifier","src":"9177:7:21"}]},{"nativeSrc":"9261:30:21","nodeType":"YulAssignment","src":"9261:30:21","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9275:14:21","nodeType":"YulIdentifier","src":"9275:14:21"},"nativeSrc":"9275:16:21","nodeType":"YulFunctionCall","src":"9275:16:21"},"variableNames":[{"name":"returnSize","nativeSrc":"9261:10:21","nodeType":"YulIdentifier","src":"9261:10:21"}]},{"nativeSrc":"9304:23:21","nodeType":"YulAssignment","src":"9304:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"9325:1:21","nodeType":"YulLiteral","src":"9325:1:21","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9319:5:21","nodeType":"YulIdentifier","src":"9319:5:21"},"nativeSrc":"9319:8:21","nodeType":"YulFunctionCall","src":"9319:8:21"},"variableNames":[{"name":"returnValue","nativeSrc":"9304:11:21","nodeType":"YulIdentifier","src":"9304:11:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2593,"isOffset":false,"isSlot":false,"src":"9214:4:21","valueSize":1},{"declaration":2593,"isOffset":false,"isSlot":false,"src":"9233:4:21","valueSize":1},{"declaration":2602,"isOffset":false,"isSlot":false,"src":"9261:10:21","valueSize":1},{"declaration":2605,"isOffset":false,"isSlot":false,"src":"9304:11:21","valueSize":1},{"declaration":2599,"isOffset":false,"isSlot":false,"src":"9177:7:21","valueSize":1},{"declaration":2591,"isOffset":false,"isSlot":false,"src":"9200:5:21","valueSize":1}],"flags":["memory-safe"],"id":2607,"nodeType":"InlineAssembly","src":"9138:199:21"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2608,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"9353:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2609,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"9365:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9365:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2620,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"9416:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9416:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9365:67:21","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2614,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"9391:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}],"id":2613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9383:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"9383:7:21","typeDescriptions":{}}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9383:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9398:4:21","memberName":"code","nodeType":"MemberAccess","src":"9383:19:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9403:6:21","memberName":"length","nodeType":"MemberAccess","src":"9383:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9383:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9364:69:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9353:80:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2597,"id":2626,"nodeType":"Return","src":"9346:87:21"}]},"documentation":{"id":2588,"nodeType":"StructuredDocumentation","src":"8464:491:21","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":2628,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8969:23:21","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2591,"mutability":"mutable","name":"token","nameLocation":"9000:5:21","nodeType":"VariableDeclaration","scope":2628,"src":"8993:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"},"typeName":{"id":2590,"nodeType":"UserDefinedTypeName","pathNode":{"id":2589,"name":"IERC20","nameLocations":["8993:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2218,"src":"8993:6:21"},"referencedDeclaration":2218,"src":"8993:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2218","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2593,"mutability":"mutable","name":"data","nameLocation":"9020:4:21","nodeType":"VariableDeclaration","scope":2628,"src":"9007:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2592,"name":"bytes","nodeType":"ElementaryTypeName","src":"9007:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8992:33:21"},"returnParameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2628,"src":"9043:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2595,"name":"bool","nodeType":"ElementaryTypeName","src":"9043:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9042:6:21"},"scope":2629,"src":"8960:480:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2630,"src":"750:8692:21","usedErrors":[2232,2241],"usedEvents":[]}],"src":"115:9328:21"},"id":21},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2888],"Errors":[2940]},"id":2889,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2631,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":2633,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2889,"sourceUnit":2941,"src":"127:36:22","symbolAliases":[{"foreign":{"id":2632,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"135:6:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2634,"nodeType":"StructuredDocumentation","src":"165:67:22","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2888,"linearizedBaseContracts":[2888],"name":"Address","nameLocation":"241:7:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"255:75:22","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2639,"name":"AddressEmptyCode","nameLocation":"341:16:22","nodeType":"ErrorDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"target","nameLocation":"366:6:22","nodeType":"VariableDeclaration","scope":2639,"src":"358:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:22"},"src":"335:39:22"},{"body":{"id":2685,"nodeType":"Block","src":"1361:278:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2649,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1383:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2888","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2888","typeString":"library Address"}],"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:22","typeDescriptions":{}}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:22","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2652,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"1399:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2666,"nodeType":"IfStatement","src":"1371:125:22","trueBody":{"id":2665,"nodeType":"Block","src":"1407:89:22","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2659,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1463:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2888","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2888","typeString":"library Address"}],"id":2658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2657,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:22","typeDescriptions":{}}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:22","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2662,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"1478:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2654,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"1428:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2940_$","typeString":"type(library Errors)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:22","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":2928,"src":"1428:26:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2664,"nodeType":"RevertStatement","src":"1421:64:22"}]}},{"assignments":[2668,null],"declarations":[{"constant":false,"id":2668,"mutability":"mutable","name":"success","nameLocation":"1512:7:22","nodeType":"VariableDeclaration","scope":2685,"src":"1507:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2667,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2675,"initialValue":{"arguments":[{"hexValue":"","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:2:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2669,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"1525:9:22","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:4:22","memberName":"call","nodeType":"MemberAccess","src":"1525:14:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2671,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"1547:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1525:29:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:52:22"},{"condition":{"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1572:8:22","subExpression":{"id":2676,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"1573:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2684,"nodeType":"IfStatement","src":"1568:65:22","trueBody":{"id":2683,"nodeType":"Block","src":"1582:51:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2678,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"1603:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2940_$","typeString":"type(library Errors)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:10:22","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":2931,"src":"1603:17:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2682,"nodeType":"RevertStatement","src":"1596:26:22"}]}}]},"documentation":{"id":2640,"nodeType":"StructuredDocumentation","src":"380:905:22","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2686,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:22","nodeType":"FunctionDefinition","parameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:22","nodeType":"VariableDeclaration","scope":2686,"src":"1309:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:22","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2644,"mutability":"mutable","name":"amount","nameLocation":"1344:6:22","nodeType":"VariableDeclaration","scope":2686,"src":"1336:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:22"},"returnParameters":{"id":2646,"nodeType":"ParameterList","parameters":[],"src":"1361:0:22"},"scope":2888,"src":"1290:349:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2702,"nodeType":"Block","src":"2573:62:22","statements":[{"expression":{"arguments":[{"id":2697,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"2612:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2698,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"2620:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2626:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2696,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"2590:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2695,"id":2701,"nodeType":"Return","src":"2583:45:22"}]},"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"1645:834:22","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2703,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2493:12:22","nodeType":"FunctionDefinition","parameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"target","nameLocation":"2514:6:22","nodeType":"VariableDeclaration","scope":2703,"src":"2506:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2691,"mutability":"mutable","name":"data","nameLocation":"2535:4:22","nodeType":"VariableDeclaration","scope":2703,"src":"2522:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2690,"name":"bytes","nodeType":"ElementaryTypeName","src":"2522:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2505:35:22"},"returnParameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2703,"src":"2559:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2693,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2558:14:22"},"scope":2888,"src":"2484:151:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2752,"nodeType":"Block","src":"3072:294:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2717,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3094:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2888","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2888","typeString":"library Address"}],"id":2716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3086:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2715,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:22","typeDescriptions":{}}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:7:22","memberName":"balance","nodeType":"MemberAccess","src":"3086:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"3110:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2734,"nodeType":"IfStatement","src":"3082:123:22","trueBody":{"id":2733,"nodeType":"Block","src":"3117:88:22","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2727,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3173:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2888","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2888","typeString":"library Address"}],"id":2726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3165:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2725,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:22","typeDescriptions":{}}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:7:22","memberName":"balance","nodeType":"MemberAccess","src":"3165:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"3188:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2722,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"3138:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2940_$","typeString":"type(library Errors)"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:19:22","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":2928,"src":"3138:26:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2732,"nodeType":"RevertStatement","src":"3131:63:22"}]}},{"assignments":[2736,2738],"declarations":[{"constant":false,"id":2736,"mutability":"mutable","name":"success","nameLocation":"3220:7:22","nodeType":"VariableDeclaration","scope":2752,"src":"3215:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2735,"name":"bool","nodeType":"ElementaryTypeName","src":"3215:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2738,"mutability":"mutable","name":"returndata","nameLocation":"3242:10:22","nodeType":"VariableDeclaration","scope":2752,"src":"3229:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2737,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2745,"initialValue":{"arguments":[{"id":2743,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"3282:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2739,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"3256:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:4:22","memberName":"call","nodeType":"MemberAccess","src":"3256:11:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"3275:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3256:25:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3214:73:22"},{"expression":{"arguments":[{"id":2747,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"3331:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2748,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"3339:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2749,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"3348:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2746,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"3304:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2714,"id":2751,"nodeType":"Return","src":"3297:62:22"}]},"documentation":{"id":2704,"nodeType":"StructuredDocumentation","src":"2641:313:22","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2753,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2968:21:22","nodeType":"FunctionDefinition","parameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2706,"mutability":"mutable","name":"target","nameLocation":"2998:6:22","nodeType":"VariableDeclaration","scope":2753,"src":"2990:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2705,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"data","nameLocation":"3019:4:22","nodeType":"VariableDeclaration","scope":2753,"src":"3006:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2707,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2710,"mutability":"mutable","name":"value","nameLocation":"3033:5:22","nodeType":"VariableDeclaration","scope":2753,"src":"3025:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2989:50:22"},"returnParameters":{"id":2714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2753,"src":"3058:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2712,"name":"bytes","nodeType":"ElementaryTypeName","src":"3058:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3057:14:22"},"scope":2888,"src":"2959:407:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2778,"nodeType":"Block","src":"3605:154:22","statements":[{"assignments":[2764,2766],"declarations":[{"constant":false,"id":2764,"mutability":"mutable","name":"success","nameLocation":"3621:7:22","nodeType":"VariableDeclaration","scope":2778,"src":"3616:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2763,"name":"bool","nodeType":"ElementaryTypeName","src":"3616:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2766,"mutability":"mutable","name":"returndata","nameLocation":"3643:10:22","nodeType":"VariableDeclaration","scope":2778,"src":"3630:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2765,"name":"bytes","nodeType":"ElementaryTypeName","src":"3630:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2771,"initialValue":{"arguments":[{"id":2769,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"3675:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2767,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"3657:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:10:22","memberName":"staticcall","nodeType":"MemberAccess","src":"3657:17:22","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3615:65:22"},{"expression":{"arguments":[{"id":2773,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"3724:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2774,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"3732:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2775,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"3741:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2772,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"3697:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2762,"id":2777,"nodeType":"Return","src":"3690:62:22"}]},"documentation":{"id":2754,"nodeType":"StructuredDocumentation","src":"3372:128:22","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2779,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3514:18:22","nodeType":"FunctionDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"target","nameLocation":"3541:6:22","nodeType":"VariableDeclaration","scope":2779,"src":"3533:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2755,"name":"address","nodeType":"ElementaryTypeName","src":"3533:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2758,"mutability":"mutable","name":"data","nameLocation":"3562:4:22","nodeType":"VariableDeclaration","scope":2779,"src":"3549:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2757,"name":"bytes","nodeType":"ElementaryTypeName","src":"3549:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3532:35:22"},"returnParameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2779,"src":"3591:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2760,"name":"bytes","nodeType":"ElementaryTypeName","src":"3591:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3590:14:22"},"scope":2888,"src":"3505:254:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2804,"nodeType":"Block","src":"3997:156:22","statements":[{"assignments":[2790,2792],"declarations":[{"constant":false,"id":2790,"mutability":"mutable","name":"success","nameLocation":"4013:7:22","nodeType":"VariableDeclaration","scope":2804,"src":"4008:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2789,"name":"bool","nodeType":"ElementaryTypeName","src":"4008:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2792,"mutability":"mutable","name":"returndata","nameLocation":"4035:10:22","nodeType":"VariableDeclaration","scope":2804,"src":"4022:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2791,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2797,"initialValue":{"arguments":[{"id":2795,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"4069:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2793,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"4049:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:12:22","memberName":"delegatecall","nodeType":"MemberAccess","src":"4049:19:22","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4007:67:22"},{"expression":{"arguments":[{"id":2799,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"4118:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2800,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"4126:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2801,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"4135:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2798,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"4091:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4091:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2788,"id":2803,"nodeType":"Return","src":"4084:62:22"}]},"documentation":{"id":2780,"nodeType":"StructuredDocumentation","src":"3765:130:22","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2805,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3909:20:22","nodeType":"FunctionDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"target","nameLocation":"3938:6:22","nodeType":"VariableDeclaration","scope":2805,"src":"3930:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2781,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2784,"mutability":"mutable","name":"data","nameLocation":"3959:4:22","nodeType":"VariableDeclaration","scope":2805,"src":"3946:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2783,"name":"bytes","nodeType":"ElementaryTypeName","src":"3946:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3929:35:22"},"returnParameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2805,"src":"3983:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2786,"name":"bytes","nodeType":"ElementaryTypeName","src":"3983:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3982:14:22"},"scope":2888,"src":"3900:253:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2844,"nodeType":"Block","src":"4579:424:22","statements":[{"condition":{"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4593:8:22","subExpression":{"id":2817,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"4594:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2842,"nodeType":"Block","src":"4653:344:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2824,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"4841:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4852:6:22","memberName":"length","nodeType":"MemberAccess","src":"4841:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4841:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2828,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"4867:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:4:22","memberName":"code","nodeType":"MemberAccess","src":"4867:11:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:6:22","memberName":"length","nodeType":"MemberAccess","src":"4867:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4889:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4867:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4841:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2839,"nodeType":"IfStatement","src":"4837:119:22","trueBody":{"id":2838,"nodeType":"Block","src":"4892:64:22","statements":[{"errorCall":{"arguments":[{"id":2835,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"4934:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2834,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"4917:16:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2837,"nodeType":"RevertStatement","src":"4910:31:22"}]}},{"expression":{"id":2840,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"4976:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2816,"id":2841,"nodeType":"Return","src":"4969:17:22"}]},"id":2843,"nodeType":"IfStatement","src":"4589:408:22","trueBody":{"id":2823,"nodeType":"Block","src":"4603:44:22","statements":[{"expression":{"arguments":[{"id":2820,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"4625:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2819,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"4617:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2822,"nodeType":"ExpressionStatement","src":"4617:19:22"}]}}]},"documentation":{"id":2806,"nodeType":"StructuredDocumentation","src":"4159:257:22","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":2845,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4430:26:22","nodeType":"FunctionDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"target","nameLocation":"4474:6:22","nodeType":"VariableDeclaration","scope":2845,"src":"4466:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"4466:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"success","nameLocation":"4495:7:22","nodeType":"VariableDeclaration","scope":2845,"src":"4490:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2809,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2812,"mutability":"mutable","name":"returndata","nameLocation":"4525:10:22","nodeType":"VariableDeclaration","scope":2845,"src":"4512:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2811,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4456:85:22"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2845,"src":"4565:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2814,"name":"bytes","nodeType":"ElementaryTypeName","src":"4565:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:14:22"},"scope":2888,"src":"4421:582:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2866,"nodeType":"Block","src":"5307:122:22","statements":[{"condition":{"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5321:8:22","subExpression":{"id":2855,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"5322:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2864,"nodeType":"Block","src":"5381:42:22","statements":[{"expression":{"id":2862,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"5402:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2854,"id":2863,"nodeType":"Return","src":"5395:17:22"}]},"id":2865,"nodeType":"IfStatement","src":"5317:106:22","trueBody":{"id":2861,"nodeType":"Block","src":"5331:44:22","statements":[{"expression":{"arguments":[{"id":2858,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"5353:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2857,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"5345:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2860,"nodeType":"ExpressionStatement","src":"5345:19:22"}]}}]},"documentation":{"id":2846,"nodeType":"StructuredDocumentation","src":"5009:191:22","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":2867,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5214:16:22","nodeType":"FunctionDefinition","parameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"success","nameLocation":"5236:7:22","nodeType":"VariableDeclaration","scope":2867,"src":"5231:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2847,"name":"bool","nodeType":"ElementaryTypeName","src":"5231:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2850,"mutability":"mutable","name":"returndata","nameLocation":"5258:10:22","nodeType":"VariableDeclaration","scope":2867,"src":"5245:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2849,"name":"bytes","nodeType":"ElementaryTypeName","src":"5245:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5230:39:22"},"returnParameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2867,"src":"5293:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2852,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5292:14:22"},"scope":2888,"src":"5205:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2886,"nodeType":"Block","src":"5598:432:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2873,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"5674:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5685:6:22","memberName":"length","nodeType":"MemberAccess","src":"5674:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5694:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5674:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2884,"nodeType":"Block","src":"5973:51:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2879,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"5994:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2940_$","typeString":"type(library Errors)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:10:22","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":2931,"src":"5994:17:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2883,"nodeType":"RevertStatement","src":"5987:26:22"}]},"id":2885,"nodeType":"IfStatement","src":"5670:354:22","trueBody":{"id":2878,"nodeType":"Block","src":"5697:270:22","statements":[{"AST":{"nativeSrc":"5824:133:22","nodeType":"YulBlock","src":"5824:133:22","statements":[{"nativeSrc":"5842:40:22","nodeType":"YulVariableDeclaration","src":"5842:40:22","value":{"arguments":[{"name":"returndata","nativeSrc":"5871:10:22","nodeType":"YulIdentifier","src":"5871:10:22"}],"functionName":{"name":"mload","nativeSrc":"5865:5:22","nodeType":"YulIdentifier","src":"5865:5:22"},"nativeSrc":"5865:17:22","nodeType":"YulFunctionCall","src":"5865:17:22"},"variables":[{"name":"returndata_size","nativeSrc":"5846:15:22","nodeType":"YulTypedName","src":"5846:15:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5910:2:22","nodeType":"YulLiteral","src":"5910:2:22","type":"","value":"32"},{"name":"returndata","nativeSrc":"5914:10:22","nodeType":"YulIdentifier","src":"5914:10:22"}],"functionName":{"name":"add","nativeSrc":"5906:3:22","nodeType":"YulIdentifier","src":"5906:3:22"},"nativeSrc":"5906:19:22","nodeType":"YulFunctionCall","src":"5906:19:22"},{"name":"returndata_size","nativeSrc":"5927:15:22","nodeType":"YulIdentifier","src":"5927:15:22"}],"functionName":{"name":"revert","nativeSrc":"5899:6:22","nodeType":"YulIdentifier","src":"5899:6:22"},"nativeSrc":"5899:44:22","nodeType":"YulFunctionCall","src":"5899:44:22"},"nativeSrc":"5899:44:22","nodeType":"YulExpressionStatement","src":"5899:44:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":2870,"isOffset":false,"isSlot":false,"src":"5871:10:22","valueSize":1},{"declaration":2870,"isOffset":false,"isSlot":false,"src":"5914:10:22","valueSize":1}],"flags":["memory-safe"],"id":2877,"nodeType":"InlineAssembly","src":"5799:158:22"}]}}]},"documentation":{"id":2868,"nodeType":"StructuredDocumentation","src":"5435:103:22","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":2887,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5552:7:22","nodeType":"FunctionDefinition","parameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"returndata","nameLocation":"5573:10:22","nodeType":"VariableDeclaration","scope":2887,"src":"5560:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2869,"name":"bytes","nodeType":"ElementaryTypeName","src":"5560:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5559:25:22"},"returnParameters":{"id":2872,"nodeType":"ParameterList","parameters":[],"src":"5598:0:22"},"scope":2888,"src":"5543:487:22","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2889,"src":"233:5799:22","usedErrors":[2639],"usedEvents":[]}],"src":"101:5932:22"},"id":22},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2918]},"id":2919,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2890,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:23"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2891,"nodeType":"StructuredDocumentation","src":"127:496:23","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2918,"linearizedBaseContracts":[2918],"name":"Context","nameLocation":"642:7:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":2899,"nodeType":"Block","src":"718:34:23","statements":[{"expression":{"expression":{"id":2896,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"735:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:23","memberName":"sender","nodeType":"MemberAccess","src":"735:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2895,"id":2898,"nodeType":"Return","src":"728:17:23"}]},"id":2900,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:23","nodeType":"FunctionDefinition","parameters":{"id":2892,"nodeType":"ParameterList","parameters":[],"src":"675:2:23"},"returnParameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2900,"src":"709:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2893,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:23"},"scope":2918,"src":"656:96:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2908,"nodeType":"Block","src":"825:32:23","statements":[{"expression":{"expression":{"id":2905,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"842:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:23","memberName":"data","nodeType":"MemberAccess","src":"842:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2904,"id":2907,"nodeType":"Return","src":"835:15:23"}]},"id":2909,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:23","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[],"src":"775:2:23"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2909,"src":"809:14:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2902,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:23"},"scope":2918,"src":"758:99:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2916,"nodeType":"Block","src":"935:25:23","statements":[{"expression":{"hexValue":"30","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2913,"id":2915,"nodeType":"Return","src":"945:8:23"}]},"id":2917,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:23","nodeType":"FunctionDefinition","parameters":{"id":2910,"nodeType":"ParameterList","parameters":[],"src":"892:2:23"},"returnParameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2917,"src":"926:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2911,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:23"},"scope":2918,"src":"863:97:23","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2919,"src":"624:338:23","usedErrors":[],"usedEvents":[]}],"src":"101:862:23"},"id":23},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[2940]},"id":2941,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2920,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":2921,"nodeType":"StructuredDocumentation","src":"126:284:24","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":2940,"linearizedBaseContracts":[2940],"name":"Errors","nameLocation":"419:6:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2922,"nodeType":"StructuredDocumentation","src":"432:94:24","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":2928,"name":"InsufficientBalance","nameLocation":"537:19:24","nodeType":"ErrorDefinition","parameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"balance","nameLocation":"565:7:24","nodeType":"VariableDeclaration","scope":2928,"src":"557:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2923,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2926,"mutability":"mutable","name":"needed","nameLocation":"582:6:24","nodeType":"VariableDeclaration","scope":2928,"src":"574:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2925,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:24"},"src":"531:59:24"},{"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"596:89:24","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":2931,"name":"FailedCall","nameLocation":"696:10:24","nodeType":"ErrorDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[],"src":"706:2:24"},"src":"690:19:24"},{"documentation":{"id":2932,"nodeType":"StructuredDocumentation","src":"715:46:24","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":2934,"name":"FailedDeployment","nameLocation":"772:16:24","nodeType":"ErrorDefinition","parameters":{"id":2933,"nodeType":"ParameterList","parameters":[],"src":"788:2:24"},"src":"766:25:24"},{"documentation":{"id":2935,"nodeType":"StructuredDocumentation","src":"797:58:24","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":2939,"name":"MissingPrecompile","nameLocation":"866:17:24","nodeType":"ErrorDefinition","parameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2939,"src":"884:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2936,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:24"},"src":"860:33:24"}],"scope":2941,"src":"411:484:24","usedErrors":[2928,2931,2934,2939],"usedEvents":[]}],"src":"100:796:24"},"id":24},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2952]},"id":2953,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2942,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2943,"nodeType":"StructuredDocumentation","src":"141:280:25","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2952,"linearizedBaseContracts":[2952],"name":"IERC165","nameLocation":"432:7:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2944,"nodeType":"StructuredDocumentation","src":"446:340:25","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2951,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:25","nodeType":"FunctionDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:25","nodeType":"VariableDeclaration","scope":2951,"src":"818:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2945,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:25"},"returnParameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2951,"src":"861:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2948,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:25"},"scope":2952,"src":"791:76:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2953,"src":"422:447:25","usedErrors":[],"usedEvents":[]}],"src":"115:755:25"},"id":25},"contracts/MyHyperCoreAdapter.sol":{"ast":{"absolutePath":"contracts/MyHyperCoreAdapter.sol","exportedSymbols":{"HyperCoreAdapter":[1639],"MyHyperCoreAdapter":[3003]},"id":3004,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":2954,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"39:24:26"},{"absolutePath":"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol","file":"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol","id":2956,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3004,"sourceUnit":1640,"src":"65:101:26","symbolAliases":[{"foreign":{"id":2955,"name":"HyperCoreAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"74:16:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2957,"name":"HyperCoreAdapter","nameLocations":["199:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":1639,"src":"199:16:26"},"id":2958,"nodeType":"InheritanceSpecifier","src":"199:16:26"}],"canonicalName":"MyHyperCoreAdapter","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3003,"linearizedBaseContracts":[3003,1639,1672,1026,17],"name":"MyHyperCoreAdapter","nameLocation":"177:18:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":2975,"nodeType":"Block","src":"402:2:26","statements":[]},"id":2976,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2969,"name":"_lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"361:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2970,"name":"_oft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"374:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2971,"name":"_hlIndexId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"380:10:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2972,"name":"_weiDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"392:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2973,"kind":"baseConstructorSpecifier","modifierName":{"id":2968,"name":"HyperCoreAdapter","nameLocations":["344:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":1639,"src":"344:16:26"},"nodeType":"ModifierInvocation","src":"344:57:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"_lzEndpoint","nameLocation":"251:11:26","nodeType":"VariableDeclaration","scope":2976,"src":"243:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2959,"name":"address","nodeType":"ElementaryTypeName","src":"243:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2962,"mutability":"mutable","name":"_oft","nameLocation":"280:4:26","nodeType":"VariableDeclaration","scope":2976,"src":"272:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2961,"name":"address","nodeType":"ElementaryTypeName","src":"272:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2964,"mutability":"mutable","name":"_hlIndexId","nameLocation":"301:10:26","nodeType":"VariableDeclaration","scope":2976,"src":"294:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2963,"name":"uint64","nodeType":"ElementaryTypeName","src":"294:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"_weiDiff","nameLocation":"329:8:26","nodeType":"VariableDeclaration","scope":2976,"src":"321:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"321:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"233:110:26"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[],"src":"402:0:26"},"scope":3003,"src":"222:182:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2988,"nodeType":"Block","src":"482:57:26","statements":[{"expression":{"arguments":[{"id":2984,"name":"receiever","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"514:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2985,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"525:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2983,"name":"_sendAssetToHyperCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"492:21:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"492:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2987,"nodeType":"ExpressionStatement","src":"492:40:26"}]},"functionSelector":"d9acf0ec","id":2989,"implemented":true,"kind":"function","modifiers":[],"name":"sendAssetToHyperCore","nameLocation":"419:20:26","nodeType":"FunctionDefinition","parameters":{"id":2981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"receiever","nameLocation":"448:9:26","nodeType":"VariableDeclaration","scope":2989,"src":"440:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2977,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"amount","nameLocation":"467:6:26","nodeType":"VariableDeclaration","scope":2989,"src":"459:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2979,"name":"uint256","nodeType":"ElementaryTypeName","src":"459:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"439:35:26"},"returnParameters":{"id":2982,"nodeType":"ParameterList","parameters":[],"src":"482:0:26"},"scope":3003,"src":"410:129:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3001,"nodeType":"Block","src":"619:59:26","statements":[{"expression":{"arguments":[{"id":2997,"name":"receiever","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"653:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2998,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"664:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2996,"name":"_fundAddressOnHyperCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"629:23:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"629:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3000,"nodeType":"ExpressionStatement","src":"629:42:26"}]},"functionSelector":"b7c312e6","id":3002,"implemented":true,"kind":"function","modifiers":[],"name":"fundAddressOnHyperCore","nameLocation":"554:22:26","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"receiever","nameLocation":"585:9:26","nodeType":"VariableDeclaration","scope":3002,"src":"577:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2990,"name":"address","nodeType":"ElementaryTypeName","src":"577:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"amount","nameLocation":"604:6:26","nodeType":"VariableDeclaration","scope":3002,"src":"596:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"596:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"576:35:26"},"returnParameters":{"id":2995,"nodeType":"ParameterList","parameters":[],"src":"619:0:26"},"scope":3003,"src":"545:133:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3004,"src":"168:512:26","usedErrors":[1649,1655,1661,1819],"usedEvents":[]}],"src":"39:642:26"},"id":26},"contracts/WrappedHyperCoreAdapter.sol":{"ast":{"absolutePath":"contracts/WrappedHyperCoreAdapter.sol","exportedSymbols":{"HyperCoreAdapter":[1639],"HyperLiquidComposerCodec":[1902],"IHyperliquidWritePrecompile":[1792],"WrappedHyperCoreAdapter":[3114]},"id":3115,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3005,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"39:24:27"},{"absolutePath":"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol","file":"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol","id":3007,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3115,"sourceUnit":1640,"src":"65:101:27","symbolAliases":[{"foreign":{"id":3006,"name":"HyperCoreAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"74:16:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol","file":"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol","id":3009,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3115,"sourceUnit":1903,"src":"167:125:27","symbolAliases":[{"foreign":{"id":3008,"name":"HyperLiquidComposerCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"176:24:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol","file":"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol","id":3011,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3115,"sourceUnit":1793,"src":"293:134:27","symbolAliases":[{"foreign":{"id":3010,"name":"IHyperliquidWritePrecompile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"302:27:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3012,"name":"HyperCoreAdapter","nameLocations":["465:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":1639,"src":"465:16:27"},"id":3013,"nodeType":"InheritanceSpecifier","src":"465:16:27"}],"canonicalName":"WrappedHyperCoreAdapter","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3114,"linearizedBaseContracts":[3114,1639,1672,1026,17],"name":"WrappedHyperCoreAdapter","nameLocation":"438:23:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":3030,"nodeType":"Block","src":"668:2:27","statements":[]},"id":3031,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3024,"name":"_lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"627:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3025,"name":"_oft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"640:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3026,"name":"_hlIndexId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"646:10:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3027,"name":"_weiDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"658:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3028,"kind":"baseConstructorSpecifier","modifierName":{"id":3023,"name":"HyperCoreAdapter","nameLocations":["610:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":1639,"src":"610:16:27"},"nodeType":"ModifierInvocation","src":"610:57:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"_lzEndpoint","nameLocation":"517:11:27","nodeType":"VariableDeclaration","scope":3031,"src":"509:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3014,"name":"address","nodeType":"ElementaryTypeName","src":"509:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3017,"mutability":"mutable","name":"_oft","nameLocation":"546:4:27","nodeType":"VariableDeclaration","scope":3031,"src":"538:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3016,"name":"address","nodeType":"ElementaryTypeName","src":"538:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"_hlIndexId","nameLocation":"567:10:27","nodeType":"VariableDeclaration","scope":3031,"src":"560:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3018,"name":"uint64","nodeType":"ElementaryTypeName","src":"560:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"_weiDiff","nameLocation":"595:8:27","nodeType":"VariableDeclaration","scope":3031,"src":"587:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"587:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"499:110:27"},"returnParameters":{"id":3029,"nodeType":"ParameterList","parameters":[],"src":"668:0:27"},"scope":3114,"src":"488:182:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1565],"body":{"id":3086,"nodeType":"Block","src":"1230:1278:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3046,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1395:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1399:6:27","memberName":"sender","nodeType":"MemberAccess","src":"1395:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3050,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1417:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1409:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3048,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:27","typeDescriptions":{}}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1409:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1395:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3059,"nodeType":"IfStatement","src":"1391:124:27","trueBody":{"id":3058,"nodeType":"Block","src":"1428:87:27","statements":[{"errorCall":{"arguments":[{"expression":{"id":3054,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1493:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1497:6:27","memberName":"sender","nodeType":"MemberAccess","src":"1493:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3053,"name":"HyperLiquidComposer_InvalidCall_NotEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"1449:43:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1449:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3057,"nodeType":"RevertStatement","src":"1442:62:27"}]}},{"assignments":[3061,3063],"declarations":[{"constant":false,"id":3061,"mutability":"mutable","name":"_receiver","nameLocation":"1850:9:27","nodeType":"VariableDeclaration","scope":3086,"src":"1842:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3060,"name":"address","nodeType":"ElementaryTypeName","src":"1842:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3063,"mutability":"mutable","name":"_amountLD","nameLocation":"1869:9:27","nodeType":"VariableDeclaration","scope":3086,"src":"1861:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3068,"initialValue":{"arguments":[{"id":3066,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"1932:8:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3064,"name":"HyperLiquidComposerCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"1882:24:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HyperLiquidComposerCodec_$1902_$","typeString":"type(library HyperLiquidComposerCodec)"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1907:24:27","memberName":"validateAndDecodeMessage","nodeType":"MemberAccess","referencedDeclaration":1865,"src":"1882:49:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_address_$_t_uint256_$","typeString":"function (bytes calldata) pure returns (address,uint256)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1882:59:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"1841:100:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3069,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2133:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2137:5:27","memberName":"value","nodeType":"MemberAccess","src":"2133:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2145:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2133:13:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3080,"nodeType":"IfStatement","src":"2129:89:27","trueBody":{"id":3079,"nodeType":"Block","src":"2148:70:27","statements":[{"expression":{"arguments":[{"id":3074,"name":"_receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"2186:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3075,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2197:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2201:5:27","memberName":"value","nodeType":"MemberAccess","src":"2197:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3073,"name":"_fundAddressOnHyperCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"2162:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3078,"nodeType":"ExpressionStatement","src":"2162:45:27"}]}},{"expression":{"arguments":[{"id":3082,"name":"_receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"2480:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3083,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"2491:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3081,"name":"_sendAssetToHyperCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"2458:21:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2458:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3085,"nodeType":"ExpressionStatement","src":"2458:43:27"}]},"documentation":{"id":3032,"nodeType":"StructuredDocumentation","src":"676:342:27","text":"@notice Composes a message to be sent to the HyperLiquidLZComposer\n @notice This function is the only new addition to the OFT standard\n @dev This function is called by the OFTCore contract when a message is sent\n @param _message The encoded message content, expected to be of type: (address receiver)."},"functionSelector":"d0a10260","id":3087,"implemented":true,"kind":"function","modifiers":[],"name":"lzCompose","nameLocation":"1032:9:27","nodeType":"FunctionDefinition","overrides":{"id":3044,"nodeType":"OverrideSpecifier","overrides":[],"src":"1221:8:27"},"parameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"1051:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3033,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"1077:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1077:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"_message","nameLocation":"1119:8:27","nodeType":"VariableDeclaration","scope":3087,"src":"1104:23:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3037,"name":"bytes","nodeType":"ElementaryTypeName","src":"1104:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"1137:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3039,"name":"address","nodeType":"ElementaryTypeName","src":"1137:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"1168:14:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3041,"name":"bytes","nodeType":"ElementaryTypeName","src":"1168:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1041:162:27"},"returnParameters":{"id":3045,"nodeType":"ParameterList","parameters":[],"src":"1230:0:27"},"scope":3114,"src":"1023:1485:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3099,"nodeType":"Block","src":"2585:57:27","statements":[{"expression":{"arguments":[{"id":3095,"name":"receiever","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"2617:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3096,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"2628:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3094,"name":"_sendAssetToHyperCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"2595:21:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2595:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3098,"nodeType":"ExpressionStatement","src":"2595:40:27"}]},"functionSelector":"d9acf0ec","id":3100,"implemented":true,"kind":"function","modifiers":[],"name":"sendAssetToHyperCore","nameLocation":"2522:20:27","nodeType":"FunctionDefinition","parameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"receiever","nameLocation":"2551:9:27","nodeType":"VariableDeclaration","scope":3100,"src":"2543:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3088,"name":"address","nodeType":"ElementaryTypeName","src":"2543:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3091,"mutability":"mutable","name":"amount","nameLocation":"2570:6:27","nodeType":"VariableDeclaration","scope":3100,"src":"2562:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"2562:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2542:35:27"},"returnParameters":{"id":3093,"nodeType":"ParameterList","parameters":[],"src":"2585:0:27"},"scope":3114,"src":"2513:129:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3112,"nodeType":"Block","src":"2730:59:27","statements":[{"expression":{"arguments":[{"id":3108,"name":"receiever","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"2764:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3109,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"2775:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3107,"name":"_fundAddressOnHyperCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"2740:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3111,"nodeType":"ExpressionStatement","src":"2740:42:27"}]},"functionSelector":"b7c312e6","id":3113,"implemented":true,"kind":"function","modifiers":[],"name":"fundAddressOnHyperCore","nameLocation":"2657:22:27","nodeType":"FunctionDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"receiever","nameLocation":"2688:9:27","nodeType":"VariableDeclaration","scope":3113,"src":"2680:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3101,"name":"address","nodeType":"ElementaryTypeName","src":"2680:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"amount","nameLocation":"2707:6:27","nodeType":"VariableDeclaration","scope":3113,"src":"2699:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2679:35:27"},"returnParameters":{"id":3106,"nodeType":"ParameterList","parameters":[],"src":"2730:0:27"},"scope":3114,"src":"2648:141:27","stateMutability":"payable","virtual":false,"visibility":"public"}],"scope":3115,"src":"429:2362:27","usedErrors":[1649,1655,1661,1819],"usedEvents":[]}],"src":"39:2753:27"},"id":27}},"contracts":{"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol":{"ILayerZeroComposer":{"abi":[{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_executor","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzCompose","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"lzCompose(address,bytes32,bytes,address,bytes)":{"details":"To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).","params":{"_executor":"The address of the executor for the composed message.","_extraData":"Additional arbitrary data in bytes passed by the entity who executes the lzCompose.","_from":"The address initiating the composition, typically the OApp where the lzReceive was called.","_guid":"The unique identifier for the corresponding LayerZero src/dst tx.","_message":"The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive."}}},"title":"ILayerZeroComposer","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"lzCompose(address,bytes32,bytes,address,bytes)":"d0a10260"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"lzCompose(address,bytes32,bytes,address,bytes)\":{\"details\":\"To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).\",\"params\":{\"_executor\":\"The address of the executor for the composed message.\",\"_extraData\":\"Additional arbitrary data in bytes passed by the entity who executes the lzCompose.\",\"_from\":\"The address initiating the composition, typically the OApp where the lzReceive was called.\",\"_guid\":\"The unique identifier for the corresponding LayerZero src/dst tx.\",\"_message\":\"The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive.\"}}},\"title\":\"ILayerZeroComposer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"lzCompose(address,bytes32,bytes,address,bytes)\":{\"notice\":\"Composes a LayerZero message from an OApp.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\":\"ILayerZeroComposer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title ILayerZeroComposer\\n */\\ninterface ILayerZeroComposer {\\n    /**\\n     * @notice Composes a LayerZero message from an OApp.\\n     * @dev To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).\\n     * @param _from The address initiating the composition, typically the OApp where the lzReceive was called.\\n     * @param _guid The unique identifier for the corresponding LayerZero src/dst tx.\\n     * @param _message The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive.\\n     * @param _executor The address of the executor for the composed message.\\n     * @param _extraData Additional arbitrary data in bytes passed by the entity who executes the lzCompose.\\n     */\\n    function lzCompose(\\n        address _from,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"lzCompose(address,bytes32,bytes,address,bytes)":{"notice":"Composes a LayerZero message from an OApp."}},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol":{"ILayerZeroEndpointV2":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"}],"name":"ComposeDelivered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"ComposeSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"DefaultReceiveLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"oldLib","type":"address"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"DefaultReceiveLibraryTimeoutSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"DefaultSendLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"delegate","type":"address"}],"name":"DelegateSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"}],"name":"InboundNonceSkipped","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"LibraryRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"address","name":"executor","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"gas","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"reason","type":"bytes"}],"name":"LzComposeAlert","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"executor","type":"address"},{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"indexed":false,"internalType":"struct Origin","name":"origin","type":"tuple"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"gas","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"reason","type":"bytes"}],"name":"LzReceiveAlert","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"LzTokenSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketBurnt","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"indexed":false,"internalType":"struct Origin","name":"origin","type":"tuple"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"}],"name":"PacketDelivered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketNilified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"encodedPayload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"options","type":"bytes"},{"indexed":false,"internalType":"address","name":"sendLibrary","type":"address"}],"name":"PacketSent","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"indexed":false,"internalType":"struct Origin","name":"origin","type":"tuple"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"ReceiveLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"oldLib","type":"address"},{"indexed":false,"internalType":"uint256","name":"timeout","type":"uint256"}],"name":"ReceiveLibraryTimeoutSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"SendLibrarySet","type":"event"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"clear","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"}],"name":"composeQueue","outputs":[{"internalType":"bytes32","name":"messageHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultReceiveLibrary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultReceiveLibraryTimeout","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultSendLibrary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eid","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"uint32","name":"_configType","type":"uint32"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"config","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"getReceiveLibrary","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"bool","name":"isDefault","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRegisteredLibraries","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSendContext","outputs":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"getSendLibrary","outputs":[{"internalType":"address","name":"lib","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"inboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"}],"name":"inboundPayloadHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"initializable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"isDefaultSendLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lib","type":"address"}],"name":"isRegisteredLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingMessage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"isSupportedEid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"}],"name":"isValidReceiveLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"lazyInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzCompose","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"lzToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nativeToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"bytes32","name":"_receiver","type":"bytes32"}],"name":"nextGuid","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"nilify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"bytes32","name":"_receiver","type":"bytes32"}],"name":"outboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"bytes32","name":"receiver","type":"bytes32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"bytes","name":"options","type":"bytes"},{"internalType":"bool","name":"payInLzToken","type":"bool"}],"internalType":"struct MessagingParams","name":"_params","type":"tuple"},{"internalType":"address","name":"_sender","type":"address"}],"name":"quote","outputs":[{"components":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"lzTokenFee","type":"uint256"}],"internalType":"struct MessagingFee","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"receiveLibraryTimeout","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lib","type":"address"}],"name":"registerLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"bytes32","name":"receiver","type":"bytes32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"bytes","name":"options","type":"bytes"},{"internalType":"bool","name":"payInLzToken","type":"bool"}],"internalType":"struct MessagingParams","name":"_params","type":"tuple"},{"internalType":"address","name":"_refundAddress","type":"address"}],"name":"send","outputs":[{"components":[{"internalType":"bytes32","name":"guid","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"components":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"lzTokenFee","type":"uint256"}],"internalType":"struct MessagingFee","name":"fee","type":"tuple"}],"internalType":"struct MessagingReceipt","name":"","type":"tuple"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"sendCompose","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"address","name":"_lib","type":"address"},{"components":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"uint32","name":"configType","type":"uint32"},{"internalType":"bytes","name":"config","type":"bytes"}],"internalType":"struct SetConfigParam[]","name":"_params","type":"tuple[]"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"},{"internalType":"uint256","name":"_gracePeriod","type":"uint256"}],"name":"setDefaultReceiveLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint256","name":"_expiry","type":"uint256"}],"name":"setDefaultReceiveLibraryTimeout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"}],"name":"setDefaultSendLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_lzToken","type":"address"}],"name":"setLzToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"},{"internalType":"uint256","name":"_gracePeriod","type":"uint256"}],"name":"setReceiveLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint256","name":"_expiry","type":"uint256"}],"name":"setReceiveLibraryTimeout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"}],"name":"setSendLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"}],"name":"skip","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"verifiable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"verify","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(address,uint32,bytes32,uint64,bytes32)":"40f80683","clear(address,(uint32,bytes32,uint64),bytes32,bytes)":"2a56c1b0","composeQueue(address,address,bytes32,uint16)":"35d330b0","defaultReceiveLibrary(uint32)":"6f50a803","defaultReceiveLibraryTimeout(uint32)":"6e83f5bb","defaultSendLibrary(uint32)":"f64be4c7","eid()":"416ecebf","getConfig(address,address,uint32,uint32)":"2b3197b9","getReceiveLibrary(address,uint32)":"402f8468","getRegisteredLibraries()":"9132e5c3","getSendContext()":"14f651a9","getSendLibrary(address,uint32)":"b96a277f","inboundNonce(address,uint32,bytes32)":"a0dd43fc","inboundPayloadHash(address,uint32,bytes32,uint64)":"c9fc7bcd","initializable((uint32,bytes32,uint64),address)":"861e1ca5","isDefaultSendLibrary(address,uint32)":"dc93c8a2","isRegisteredLibrary(address)":"dc706a62","isSendingMessage()":"79624ca9","isSupportedEid(uint32)":"6750cd4c","isValidReceiveLibrary(address,uint32,address)":"9d7f9775","lazyInboundNonce(address,uint32,bytes32)":"5b17bb70","lzCompose(address,address,bytes32,uint16,bytes,bytes)":"91d20fa1","lzReceive((uint32,bytes32,uint64),address,bytes32,bytes,bytes)":"0c0c389e","lzToken()":"e4fe1d94","nativeToken()":"e1758bd8","nextGuid(address,uint32,bytes32)":"aafe5e07","nilify(address,uint32,bytes32,uint64,bytes32)":"2e80fbf3","outboundNonce(address,uint32,bytes32)":"9c6d7340","quote((uint32,bytes32,bytes,bytes,bool),address)":"ddc28c58","receiveLibraryTimeout(address,uint32)":"ef667aa1","registerLibrary(address)":"e8964e81","send((uint32,bytes32,bytes,bytes,bool),address)":"2637a450","sendCompose(address,bytes32,uint16,bytes)":"7cb59012","setConfig(address,address,(uint32,uint32,bytes)[])":"6dbd9f90","setDefaultReceiveLibrary(uint32,address,uint256)":"a718531b","setDefaultReceiveLibraryTimeout(uint32,address,uint256)":"d4b4ec8f","setDefaultSendLibrary(uint32,address)":"aafea312","setDelegate(address)":"ca5eb5e1","setLzToken(address)":"c28e0eed","setReceiveLibrary(address,uint32,address,uint256)":"6a14d715","setReceiveLibraryTimeout(address,uint32,address,uint256)":"183c834f","setSendLibrary(address,uint32,address)":"9535ff30","skip(address,uint32,bytes32,uint64)":"d70b8902","verifiable((uint32,bytes32,uint64),address)":"c9a54a99","verify((uint32,bytes32,uint64),address,bytes32)":"a825d747"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"}],\"name\":\"ComposeDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"ComposeSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"DefaultReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultSendLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"DelegateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"InboundNonceSkipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"LibraryRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzComposeAlert\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzReceiveAlert\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LzTokenSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketBurnt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"PacketDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketNilified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sendLibrary\",\"type\":\"address\"}],\"name\":\"PacketSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"ReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"}],\"name\":\"ReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"SendLibrarySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"}],\"name\":\"composeQueue\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eid\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_configType\",\"type\":\"uint32\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"getReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisteredLibraries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSendContext\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"getSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"inboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"inboundPayloadHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"initializable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isDefaultSendLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"isRegisteredLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isSupportedEid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"isValidReceiveLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"lazyInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"nextGuid\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"nilify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"outboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"receiver\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"payInLzToken\",\"type\":\"bool\"}],\"internalType\":\"struct MessagingParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct MessagingFee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"receiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"registerLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"receiver\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"payInLzToken\",\"type\":\"bool\"}],\"internalType\":\"struct MessagingParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"}],\"name\":\"send\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"internalType\":\"struct MessagingReceipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"sendCompose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"configType\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"internalType\":\"struct SetConfigParam[]\",\"name\":\"_params\",\"type\":\"tuple[]\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setDefaultSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lzToken\",\"type\":\"address\"}],\"name\":\"setLzToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"verifiable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setSendLibrary(address,uint32,address)\":{\"notice\":\"------------------- OApp interfaces -------------------\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":\"ILayerZeroEndpointV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"setSendLibrary(address,uint32,address)":{"notice":"------------------- OApp interfaces -------------------"}},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol":{"IMessageLibManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"DefaultReceiveLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"oldLib","type":"address"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"DefaultReceiveLibraryTimeoutSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"DefaultSendLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"LibraryRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"ReceiveLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"oldLib","type":"address"},{"indexed":false,"internalType":"uint256","name":"timeout","type":"uint256"}],"name":"ReceiveLibraryTimeoutSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"SendLibrarySet","type":"event"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultReceiveLibrary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultReceiveLibraryTimeout","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultSendLibrary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"uint32","name":"_configType","type":"uint32"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"config","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"getReceiveLibrary","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"bool","name":"isDefault","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRegisteredLibraries","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"getSendLibrary","outputs":[{"internalType":"address","name":"lib","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"isDefaultSendLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lib","type":"address"}],"name":"isRegisteredLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"isSupportedEid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"}],"name":"isValidReceiveLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"receiveLibraryTimeout","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lib","type":"address"}],"name":"registerLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"address","name":"_lib","type":"address"},{"components":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"uint32","name":"configType","type":"uint32"},{"internalType":"bytes","name":"config","type":"bytes"}],"internalType":"struct SetConfigParam[]","name":"_params","type":"tuple[]"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"},{"internalType":"uint256","name":"_gracePeriod","type":"uint256"}],"name":"setDefaultReceiveLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint256","name":"_expiry","type":"uint256"}],"name":"setDefaultReceiveLibraryTimeout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"}],"name":"setDefaultSendLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"},{"internalType":"uint256","name":"_gracePeriod","type":"uint256"}],"name":"setReceiveLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint256","name":"_expiry","type":"uint256"}],"name":"setReceiveLibraryTimeout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"}],"name":"setSendLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"defaultReceiveLibrary(uint32)":"6f50a803","defaultReceiveLibraryTimeout(uint32)":"6e83f5bb","defaultSendLibrary(uint32)":"f64be4c7","getConfig(address,address,uint32,uint32)":"2b3197b9","getReceiveLibrary(address,uint32)":"402f8468","getRegisteredLibraries()":"9132e5c3","getSendLibrary(address,uint32)":"b96a277f","isDefaultSendLibrary(address,uint32)":"dc93c8a2","isRegisteredLibrary(address)":"dc706a62","isSupportedEid(uint32)":"6750cd4c","isValidReceiveLibrary(address,uint32,address)":"9d7f9775","receiveLibraryTimeout(address,uint32)":"ef667aa1","registerLibrary(address)":"e8964e81","setConfig(address,address,(uint32,uint32,bytes)[])":"6dbd9f90","setDefaultReceiveLibrary(uint32,address,uint256)":"a718531b","setDefaultReceiveLibraryTimeout(uint32,address,uint256)":"d4b4ec8f","setDefaultSendLibrary(uint32,address)":"aafea312","setReceiveLibrary(address,uint32,address,uint256)":"6a14d715","setReceiveLibraryTimeout(address,uint32,address,uint256)":"183c834f","setSendLibrary(address,uint32,address)":"9535ff30"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"DefaultReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultSendLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"LibraryRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"ReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"}],\"name\":\"ReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"SendLibrarySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_configType\",\"type\":\"uint32\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"getReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisteredLibraries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"getSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isDefaultSendLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"isRegisteredLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isSupportedEid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"isValidReceiveLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"receiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"registerLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"configType\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"internalType\":\"struct SetConfigParam[]\",\"name\":\"_params\",\"type\":\"tuple[]\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setDefaultSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setSendLibrary(address,uint32,address)\":{\"notice\":\"------------------- OApp interfaces -------------------\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":\"IMessageLibManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"setSendLibrary(address,uint32,address)":{"notice":"------------------- OApp interfaces -------------------"}},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol":{"IMessagingChannel":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"}],"name":"InboundNonceSkipped","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketBurnt","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketNilified","type":"event"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eid","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"inboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"}],"name":"inboundPayloadHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"lazyInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"bytes32","name":"_receiver","type":"bytes32"}],"name":"nextGuid","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"nilify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"bytes32","name":"_receiver","type":"bytes32"}],"name":"outboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"}],"name":"skip","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(address,uint32,bytes32,uint64,bytes32)":"40f80683","eid()":"416ecebf","inboundNonce(address,uint32,bytes32)":"a0dd43fc","inboundPayloadHash(address,uint32,bytes32,uint64)":"c9fc7bcd","lazyInboundNonce(address,uint32,bytes32)":"5b17bb70","nextGuid(address,uint32,bytes32)":"aafe5e07","nilify(address,uint32,bytes32,uint64,bytes32)":"2e80fbf3","outboundNonce(address,uint32,bytes32)":"9c6d7340","skip(address,uint32,bytes32,uint64)":"d70b8902"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"InboundNonceSkipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketBurnt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketNilified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eid\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"inboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"inboundPayloadHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"lazyInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"nextGuid\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"nilify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"outboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":\"IMessagingChannel\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol":{"IMessagingComposer":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"}],"name":"ComposeDelivered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"ComposeSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"address","name":"executor","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"gas","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"reason","type":"bytes"}],"name":"LzComposeAlert","type":"event"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"}],"name":"composeQueue","outputs":[{"internalType":"bytes32","name":"messageHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzCompose","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"sendCompose","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"composeQueue(address,address,bytes32,uint16)":"35d330b0","lzCompose(address,address,bytes32,uint16,bytes,bytes)":"91d20fa1","sendCompose(address,bytes32,uint16,bytes)":"7cb59012"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"}],\"name\":\"ComposeDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"ComposeSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzComposeAlert\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"}],\"name\":\"composeQueue\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"sendCompose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":\"IMessagingComposer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol":{"IMessagingContext":{"abi":[{"inputs":[],"name":"getSendContext","outputs":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingMessage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getSendContext()":"14f651a9","isSendingMessage()":"79624ca9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getSendContext\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":\"IMessagingContext\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol":{"OAppCore":{"abi":[{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Abstract contract implementing the IOAppCore interface with basic OApp configurations.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Constructor to initialize the OAppCore with the provided endpoint and delegate.The delegate typically should be set as the owner of the contract.","params":{"_delegate":"The delegate capable of making OApp configurations inside of the endpoint.","_endpoint":"The address of the LOCAL Layer Zero endpoint."}},"oAppVersion()":{"returns":{"receiverVersion":"The version of the OAppReceiver.sol contract.","senderVersion":"The version of the OAppSender.sol contract."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setDelegate(address)":{"details":"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.","params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"details":"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.","params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"endpoint":{"return":"The LayerZero endpoint as an interface.","returns":{"_0":"The LayerZero endpoint as an interface."}},"peers":{"params":{"_eid":"The endpoint ID."},"return":"peer The peer address (OApp instance) associated with the corresponding endpoint.","returns":{"peer":"The peer address (OApp instance) associated with the corresponding endpoint."}}},"title":"OAppCore","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"endpoint()":"5e280f11","oAppVersion()":"17442b70","owner()":"8da5cb5b","peers(uint32)":"bb0b6a53","renounceOwnership()":"715018a6","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract implementing the IOAppCore interface with basic OApp configurations.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to initialize the OAppCore with the provided endpoint and delegate.The delegate typically should be set as the owner of the contract.\",\"params\":{\"_delegate\":\"The delegate capable of making OApp configurations inside of the endpoint.\",\"_endpoint\":\"The address of the LOCAL Layer Zero endpoint.\"}},\"oAppVersion()\":{\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol contract.\",\"senderVersion\":\"The version of the OAppSender.sol contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDelegate(address)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\",\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.\",\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"endpoint\":{\"return\":\"The LayerZero endpoint as an interface.\",\"returns\":{\"_0\":\"The LayerZero endpoint as an interface.\"}},\"peers\":{\"params\":{\"_eid\":\"The endpoint ID.\"},\"return\":\"peer The peer address (OApp instance) associated with the corresponding endpoint.\",\"returns\":{\"peer\":\"The peer address (OApp instance) associated with the corresponding endpoint.\"}}},\"title\":\"OAppCore\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":\"OAppCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1911,"contract":"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol:OAppCore","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":721,"contract":"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol:OAppCore","label":"peers","offset":0,"slot":"1","type":"t_mapping(t_uint32,t_bytes32)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_uint32,t_bytes32)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol":{"OAppSender":{"abi":[{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[],"name":"LzTokenUnavailable","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"uint256","name":"msgValue","type":"uint256"}],"name":"NotEnoughNative","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"oAppVersion()":{"details":"Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented. ie. this is a SEND only OApp.If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions","returns":{"receiverVersion":"The version of the OAppReceiver.sol contract.","senderVersion":"The version of the OAppSender.sol contract."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setDelegate(address)":{"details":"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.","params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"details":"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.","params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"OAppSender","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"endpoint()":"5e280f11","oAppVersion()":"17442b70","owner()":"8da5cb5b","peers(uint32)":"bb0b6a53","renounceOwnership()":"715018a6","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LzTokenUnavailable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"NotEnoughNative\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"oAppVersion()\":{\"details\":\"Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented. ie. this is a SEND only OApp.If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\",\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol contract.\",\"senderVersion\":\"The version of the OAppSender.sol contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDelegate(address)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\",\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.\",\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OAppSender\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\":\"OAppSender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { SafeERC20, IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppSender\\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\\n */\\nabstract contract OAppSender is OAppCore {\\n    using SafeERC20 for IERC20;\\n\\n    // Custom error messages\\n    error NotEnoughNative(uint256 msgValue);\\n    error LzTokenUnavailable();\\n\\n    // @dev The version of the OAppSender implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant SENDER_VERSION = 1;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\\n     * ie. this is a SEND only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (SENDER_VERSION, 0);\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\\n     * @return fee The calculated MessagingFee for the message.\\n     *      - nativeFee: The native fee for the message.\\n     *      - lzTokenFee: The LZ token fee for the message.\\n     */\\n    function _quote(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) internal view virtual returns (MessagingFee memory fee) {\\n        return\\n            endpoint.quote(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\\n                address(this)\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _fee The calculated LayerZero fee for the message.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\\n     * @return receipt The receipt for the sent message.\\n     *      - guid: The unique identifier for the sent message.\\n     *      - nonce: The nonce of the sent message.\\n     *      - fee: The LayerZero fee incurred for the message.\\n     */\\n    function _lzSend(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        MessagingFee memory _fee,\\n        address _refundAddress\\n    ) internal virtual returns (MessagingReceipt memory receipt) {\\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\\n        uint256 messageValue = _payNative(_fee.nativeFee);\\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\\n\\n        return\\n            // solhint-disable-next-line check-send-result\\n            endpoint.send{ value: messageValue }(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\\n                _refundAddress\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the native fee associated with the message.\\n     * @param _nativeFee The native fee to be paid.\\n     * @return nativeFee The amount of native currency paid.\\n     *\\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\\n     * this will need to be overridden because msg.value would contain multiple lzFees.\\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\\n     */\\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\\n        return _nativeFee;\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the LZ token fee associated with the message.\\n     * @param _lzTokenFee The LZ token fee to be paid.\\n     *\\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\\n     */\\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\\n        address lzToken = endpoint.lzToken();\\n        if (lzToken == address(0)) revert LzTokenUnavailable();\\n\\n        // Pay LZ token fee by sending tokens to the endpoint.\\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\\n    }\\n}\\n\",\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1911,"contract":"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol:OAppSender","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":721,"contract":"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol:OAppSender","label":"peers","offset":0,"slot":"1","type":"t_mapping(t_uint32,t_bytes32)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_uint32,t_bytes32)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol":{"IOAppComposer":{"abi":[{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_executor","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzCompose","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"This interface defines the OApp Composer, allowing developers to inherit only the OApp package without the protocol.","kind":"dev","methods":{"lzCompose(address,bytes32,bytes,address,bytes)":{"details":"To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).","params":{"_executor":"The address of the executor for the composed message.","_extraData":"Additional arbitrary data in bytes passed by the entity who executes the lzCompose.","_from":"The address initiating the composition, typically the OApp where the lzReceive was called.","_guid":"The unique identifier for the corresponding LayerZero src/dst tx.","_message":"The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive."}}},"title":"IOAppComposer","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"lzCompose(address,bytes32,bytes,address,bytes)":"d0a10260"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface defines the OApp Composer, allowing developers to inherit only the OApp package without the protocol.\",\"kind\":\"dev\",\"methods\":{\"lzCompose(address,bytes32,bytes,address,bytes)\":{\"details\":\"To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).\",\"params\":{\"_executor\":\"The address of the executor for the composed message.\",\"_extraData\":\"Additional arbitrary data in bytes passed by the entity who executes the lzCompose.\",\"_from\":\"The address initiating the composition, typically the OApp where the lzReceive was called.\",\"_guid\":\"The unique identifier for the corresponding LayerZero src/dst tx.\",\"_message\":\"The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive.\"}}},\"title\":\"IOAppComposer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"lzCompose(address,bytes32,bytes,address,bytes)\":{\"notice\":\"Composes a LayerZero message from an OApp.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\":\"IOAppComposer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title ILayerZeroComposer\\n */\\ninterface ILayerZeroComposer {\\n    /**\\n     * @notice Composes a LayerZero message from an OApp.\\n     * @dev To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).\\n     * @param _from The address initiating the composition, typically the OApp where the lzReceive was called.\\n     * @param _guid The unique identifier for the corresponding LayerZero src/dst tx.\\n     * @param _message The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive.\\n     * @param _executor The address of the executor for the composed message.\\n     * @param _extraData Additional arbitrary data in bytes passed by the entity who executes the lzCompose.\\n     */\\n    function lzCompose(\\n        address _from,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroComposer } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\\\";\\n\\n/**\\n * @title IOAppComposer\\n * @dev This interface defines the OApp Composer, allowing developers to inherit only the OApp package without the protocol.\\n */\\n// solhint-disable-next-line no-empty-blocks\\ninterface IOAppComposer is ILayerZeroComposer {}\\n\",\"keccak256\":\"0xe5014c411acb2b59dd74ae74a1bab02cf32d94a41a548a5ab553d64aeeb55dae\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"lzCompose(address,bytes32,bytes,address,bytes)":{"notice":"Composes a LayerZero message from an OApp."}},"version":1}}},"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol":{"IOAppCore":{"abi":[{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"iEndpoint","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"endpoint()":{"returns":{"iEndpoint":"The LayerZero endpoint as an interface."}},"oAppVersion()":{"returns":{"receiverVersion":"The version of the OAppReceiver.sol contract.","senderVersion":"The version of the OAppSender.sol contract."}},"peers(uint32)":{"params":{"_eid":"The endpoint ID."},"returns":{"peer":"The peer address (OApp instance) associated with the corresponding endpoint."}},"setDelegate(address)":{"params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}}},"title":"IOAppCore","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"endpoint()":"5e280f11","oAppVersion()":"17442b70","peers(uint32)":"bb0b6a53","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"iEndpoint\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"endpoint()\":{\"returns\":{\"iEndpoint\":\"The LayerZero endpoint as an interface.\"}},\"oAppVersion()\":{\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol contract.\",\"senderVersion\":\"The version of the OAppSender.sol contract.\"}},\"peers(uint32)\":{\"params\":{\"_eid\":\"The endpoint ID.\"},\"returns\":{\"peer\":\"The peer address (OApp instance) associated with the corresponding endpoint.\"}},\"setDelegate(address)\":{\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}}},\"title\":\"IOAppCore\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp Core.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":\"IOAppCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp Core."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol":{"IOFT":{"abi":[{"inputs":[],"name":"InvalidLocalDecimals","type":"error"},{"inputs":[{"internalType":"uint256","name":"amountLD","type":"uint256"},{"internalType":"uint256","name":"minAmountLD","type":"uint256"}],"name":"SlippageExceeded","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":true,"internalType":"address","name":"toAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountReceivedLD","type":"uint256"}],"name":"OFTReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint32","name":"dstEid","type":"uint32"},{"indexed":true,"internalType":"address","name":"fromAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountSentLD","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountReceivedLD","type":"uint256"}],"name":"OFTSent","type":"event"},{"inputs":[],"name":"approvalRequired","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oftVersion","outputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"},{"internalType":"uint64","name":"version","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"bytes32","name":"to","type":"bytes32"},{"internalType":"uint256","name":"amountLD","type":"uint256"},{"internalType":"uint256","name":"minAmountLD","type":"uint256"},{"internalType":"bytes","name":"extraOptions","type":"bytes"},{"internalType":"bytes","name":"composeMsg","type":"bytes"},{"internalType":"bytes","name":"oftCmd","type":"bytes"}],"internalType":"struct SendParam","name":"_sendParam","type":"tuple"}],"name":"quoteOFT","outputs":[{"components":[{"internalType":"uint256","name":"minAmountLD","type":"uint256"},{"internalType":"uint256","name":"maxAmountLD","type":"uint256"}],"internalType":"struct OFTLimit","name":"","type":"tuple"},{"components":[{"internalType":"int256","name":"feeAmountLD","type":"int256"},{"internalType":"string","name":"description","type":"string"}],"internalType":"struct OFTFeeDetail[]","name":"oftFeeDetails","type":"tuple[]"},{"components":[{"internalType":"uint256","name":"amountSentLD","type":"uint256"},{"internalType":"uint256","name":"amountReceivedLD","type":"uint256"}],"internalType":"struct OFTReceipt","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"bytes32","name":"to","type":"bytes32"},{"internalType":"uint256","name":"amountLD","type":"uint256"},{"internalType":"uint256","name":"minAmountLD","type":"uint256"},{"internalType":"bytes","name":"extraOptions","type":"bytes"},{"internalType":"bytes","name":"composeMsg","type":"bytes"},{"internalType":"bytes","name":"oftCmd","type":"bytes"}],"internalType":"struct SendParam","name":"_sendParam","type":"tuple"},{"internalType":"bool","name":"_payInLzToken","type":"bool"}],"name":"quoteSend","outputs":[{"components":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"lzTokenFee","type":"uint256"}],"internalType":"struct MessagingFee","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"bytes32","name":"to","type":"bytes32"},{"internalType":"uint256","name":"amountLD","type":"uint256"},{"internalType":"uint256","name":"minAmountLD","type":"uint256"},{"internalType":"bytes","name":"extraOptions","type":"bytes"},{"internalType":"bytes","name":"composeMsg","type":"bytes"},{"internalType":"bytes","name":"oftCmd","type":"bytes"}],"internalType":"struct SendParam","name":"_sendParam","type":"tuple"},{"components":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"lzTokenFee","type":"uint256"}],"internalType":"struct MessagingFee","name":"_fee","type":"tuple"},{"internalType":"address","name":"_refundAddress","type":"address"}],"name":"send","outputs":[{"components":[{"internalType":"bytes32","name":"guid","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"components":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"lzTokenFee","type":"uint256"}],"internalType":"struct MessagingFee","name":"fee","type":"tuple"}],"internalType":"struct MessagingReceipt","name":"","type":"tuple"},{"components":[{"internalType":"uint256","name":"amountSentLD","type":"uint256"},{"internalType":"uint256","name":"amountReceivedLD","type":"uint256"}],"internalType":"struct OFTReceipt","name":"","type":"tuple"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"sharedDecimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface for the OftChain (OFT) token.Does not inherit ERC20 to accommodate usage by OFTAdapter as well.This specific interface ID is '0x02e49c2c'.","kind":"dev","methods":{"approvalRequired()":{"details":"Allows things like wallet implementers to determine integration requirements, without understanding the underlying token implementation.","returns":{"_0":"requiresApproval Needs approval of the underlying token implementation."}},"oftVersion()":{"details":"interfaceId: This specific interface ID is '0x02e49c2c'.version: Indicates a cross-chain compatible msg encoding with other OFTs.If a new feature is added to the OFT cross-chain msg encoding, the version will be incremented. ie. localOFT version(x,1) CAN send messages to remoteOFT version(x,1)","returns":{"interfaceId":"The interface ID.","version":"The version."}},"quoteOFT((uint32,bytes32,uint256,uint256,bytes,bytes,bytes))":{"params":{"_sendParam":"The parameters for the send operation."},"returns":{"_0":"limit The OFT limit information.","_2":"receipt The OFT receipt information.","oftFeeDetails":"The details of OFT fees."}},"quoteSend((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bool)":{"details":"MessagingFee: LayerZero msg fee  - nativeFee: The native fee.  - lzTokenFee: The lzToken fee.","params":{"_payInLzToken":"Flag indicating whether the caller is paying in the LZ token.","_sendParam":"The parameters for the send() operation."},"returns":{"_0":"fee The calculated LayerZero messaging fee from the send() operation."}},"send((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),address)":{"details":"MessagingReceipt: LayerZero msg receipt  - guid: The unique identifier for the sent message.  - nonce: The nonce of the sent message.  - fee: The LayerZero fee incurred for the message.","params":{"_fee":"The fee information supplied by the caller.      - nativeFee: The native fee.      - lzTokenFee: The lzToken fee.","_refundAddress":"The address to receive any excess funds from fees etc. on the src.","_sendParam":"The parameters for the send operation."},"returns":{"_0":"receipt The LayerZero messaging receipt from the send() operation.","_1":"oftReceipt The OFT receipt information."}},"sharedDecimals()":{"returns":{"_0":"sharedDecimals The shared decimals of the OFT."}},"token()":{"returns":{"_0":"token The address of the ERC20 token implementation."}}},"title":"IOFT","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approvalRequired()":"9f68b964","oftVersion()":"156a0d0f","quoteOFT((uint32,bytes32,uint256,uint256,bytes,bytes,bytes))":"0d35b415","quoteSend((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bool)":"3b6f743b","send((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),address)":"c7c7f5b3","sharedDecimals()":"857749b0","token()":"fc0c546a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidLocalDecimals\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountLD\",\"type\":\"uint256\"}],\"name\":\"SlippageExceeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceivedLD\",\"type\":\"uint256\"}],\"name\":\"OFTReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSentLD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceivedLD\",\"type\":\"uint256\"}],\"name\":\"OFTSent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"approvalRequired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oftVersion\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountLD\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraOptions\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"composeMsg\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"oftCmd\",\"type\":\"bytes\"}],\"internalType\":\"struct SendParam\",\"name\":\"_sendParam\",\"type\":\"tuple\"}],\"name\":\"quoteOFT\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minAmountLD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountLD\",\"type\":\"uint256\"}],\"internalType\":\"struct OFTLimit\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"feeAmountLD\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct OFTFeeDetail[]\",\"name\":\"oftFeeDetails\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountSentLD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountReceivedLD\",\"type\":\"uint256\"}],\"internalType\":\"struct OFTReceipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountLD\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraOptions\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"composeMsg\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"oftCmd\",\"type\":\"bytes\"}],\"internalType\":\"struct SendParam\",\"name\":\"_sendParam\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"_payInLzToken\",\"type\":\"bool\"}],\"name\":\"quoteSend\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct MessagingFee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountLD\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraOptions\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"composeMsg\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"oftCmd\",\"type\":\"bytes\"}],\"internalType\":\"struct SendParam\",\"name\":\"_sendParam\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct MessagingFee\",\"name\":\"_fee\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"}],\"name\":\"send\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"internalType\":\"struct MessagingReceipt\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountSentLD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountReceivedLD\",\"type\":\"uint256\"}],\"internalType\":\"struct OFTReceipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharedDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the OftChain (OFT) token.Does not inherit ERC20 to accommodate usage by OFTAdapter as well.This specific interface ID is '0x02e49c2c'.\",\"kind\":\"dev\",\"methods\":{\"approvalRequired()\":{\"details\":\"Allows things like wallet implementers to determine integration requirements, without understanding the underlying token implementation.\",\"returns\":{\"_0\":\"requiresApproval Needs approval of the underlying token implementation.\"}},\"oftVersion()\":{\"details\":\"interfaceId: This specific interface ID is '0x02e49c2c'.version: Indicates a cross-chain compatible msg encoding with other OFTs.If a new feature is added to the OFT cross-chain msg encoding, the version will be incremented. ie. localOFT version(x,1) CAN send messages to remoteOFT version(x,1)\",\"returns\":{\"interfaceId\":\"The interface ID.\",\"version\":\"The version.\"}},\"quoteOFT((uint32,bytes32,uint256,uint256,bytes,bytes,bytes))\":{\"params\":{\"_sendParam\":\"The parameters for the send operation.\"},\"returns\":{\"_0\":\"limit The OFT limit information.\",\"_2\":\"receipt The OFT receipt information.\",\"oftFeeDetails\":\"The details of OFT fees.\"}},\"quoteSend((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bool)\":{\"details\":\"MessagingFee: LayerZero msg fee  - nativeFee: The native fee.  - lzTokenFee: The lzToken fee.\",\"params\":{\"_payInLzToken\":\"Flag indicating whether the caller is paying in the LZ token.\",\"_sendParam\":\"The parameters for the send() operation.\"},\"returns\":{\"_0\":\"fee The calculated LayerZero messaging fee from the send() operation.\"}},\"send((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),address)\":{\"details\":\"MessagingReceipt: LayerZero msg receipt  - guid: The unique identifier for the sent message.  - nonce: The nonce of the sent message.  - fee: The LayerZero fee incurred for the message.\",\"params\":{\"_fee\":\"The fee information supplied by the caller.      - nativeFee: The native fee.      - lzTokenFee: The lzToken fee.\",\"_refundAddress\":\"The address to receive any excess funds from fees etc. on the src.\",\"_sendParam\":\"The parameters for the send operation.\"},\"returns\":{\"_0\":\"receipt The LayerZero messaging receipt from the send() operation.\",\"_1\":\"oftReceipt The OFT receipt information.\"}},\"sharedDecimals()\":{\"returns\":{\"_0\":\"sharedDecimals The shared decimals of the OFT.\"}},\"token()\":{\"returns\":{\"_0\":\"token The address of the ERC20 token implementation.\"}}},\"title\":\"IOFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approvalRequired()\":{\"notice\":\"Indicates whether the OFT contract requires approval of the 'token()' to send.\"},\"oftVersion()\":{\"notice\":\"Retrieves interfaceID and the version of the OFT.\"},\"quoteOFT((uint32,bytes32,uint256,uint256,bytes,bytes,bytes))\":{\"notice\":\"Provides the fee breakdown and settings data for an OFT. Unused in the default implementation.\"},\"quoteSend((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bool)\":{\"notice\":\"Provides a quote for the send() operation.\"},\"send((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),address)\":{\"notice\":\"Executes the send() operation.\"},\"sharedDecimals()\":{\"notice\":\"Retrieves the shared decimals of the OFT.\"},\"token()\":{\"notice\":\"Retrieves the address of the token associated with the OFT.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol\":\"IOFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { SafeERC20, IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppSender\\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\\n */\\nabstract contract OAppSender is OAppCore {\\n    using SafeERC20 for IERC20;\\n\\n    // Custom error messages\\n    error NotEnoughNative(uint256 msgValue);\\n    error LzTokenUnavailable();\\n\\n    // @dev The version of the OAppSender implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant SENDER_VERSION = 1;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\\n     * ie. this is a SEND only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (SENDER_VERSION, 0);\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\\n     * @return fee The calculated MessagingFee for the message.\\n     *      - nativeFee: The native fee for the message.\\n     *      - lzTokenFee: The LZ token fee for the message.\\n     */\\n    function _quote(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) internal view virtual returns (MessagingFee memory fee) {\\n        return\\n            endpoint.quote(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\\n                address(this)\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _fee The calculated LayerZero fee for the message.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\\n     * @return receipt The receipt for the sent message.\\n     *      - guid: The unique identifier for the sent message.\\n     *      - nonce: The nonce of the sent message.\\n     *      - fee: The LayerZero fee incurred for the message.\\n     */\\n    function _lzSend(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        MessagingFee memory _fee,\\n        address _refundAddress\\n    ) internal virtual returns (MessagingReceipt memory receipt) {\\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\\n        uint256 messageValue = _payNative(_fee.nativeFee);\\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\\n\\n        return\\n            // solhint-disable-next-line check-send-result\\n            endpoint.send{ value: messageValue }(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\\n                _refundAddress\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the native fee associated with the message.\\n     * @param _nativeFee The native fee to be paid.\\n     * @return nativeFee The amount of native currency paid.\\n     *\\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\\n     * this will need to be overridden because msg.value would contain multiple lzFees.\\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\\n     */\\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\\n        return _nativeFee;\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the LZ token fee associated with the message.\\n     * @param _lzTokenFee The LZ token fee to be paid.\\n     *\\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\\n     */\\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\\n        address lzToken = endpoint.lzToken();\\n        if (lzToken == address(0)) revert LzTokenUnavailable();\\n\\n        // Pay LZ token fee by sending tokens to the endpoint.\\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\\n    }\\n}\\n\",\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { MessagingReceipt, MessagingFee } from \\\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\\\";\\n\\n/**\\n * @dev Struct representing token parameters for the OFT send() operation.\\n */\\nstruct SendParam {\\n    uint32 dstEid; // Destination endpoint ID.\\n    bytes32 to; // Recipient address.\\n    uint256 amountLD; // Amount to send in local decimals.\\n    uint256 minAmountLD; // Minimum amount to send in local decimals.\\n    bytes extraOptions; // Additional options supplied by the caller to be used in the LayerZero message.\\n    bytes composeMsg; // The composed message for the send() operation.\\n    bytes oftCmd; // The OFT command to be executed, unused in default OFT implementations.\\n}\\n\\n/**\\n * @dev Struct representing OFT limit information.\\n * @dev These amounts can change dynamically and are up the specific oft implementation.\\n */\\nstruct OFTLimit {\\n    uint256 minAmountLD; // Minimum amount in local decimals that can be sent to the recipient.\\n    uint256 maxAmountLD; // Maximum amount in local decimals that can be sent to the recipient.\\n}\\n\\n/**\\n * @dev Struct representing OFT receipt information.\\n */\\nstruct OFTReceipt {\\n    uint256 amountSentLD; // Amount of tokens ACTUALLY debited from the sender in local decimals.\\n    // @dev In non-default implementations, the amountReceivedLD COULD differ from this value.\\n    uint256 amountReceivedLD; // Amount of tokens to be received on the remote side.\\n}\\n\\n/**\\n * @dev Struct representing OFT fee details.\\n * @dev Future proof mechanism to provide a standardized way to communicate fees to things like a UI.\\n */\\nstruct OFTFeeDetail {\\n    int256 feeAmountLD; // Amount of the fee in local decimals.\\n    string description; // Description of the fee.\\n}\\n\\n/**\\n * @title IOFT\\n * @dev Interface for the OftChain (OFT) token.\\n * @dev Does not inherit ERC20 to accommodate usage by OFTAdapter as well.\\n * @dev This specific interface ID is '0x02e49c2c'.\\n */\\ninterface IOFT {\\n    // Custom error messages\\n    error InvalidLocalDecimals();\\n    error SlippageExceeded(uint256 amountLD, uint256 minAmountLD);\\n\\n    // Events\\n    event OFTSent(\\n        bytes32 indexed guid, // GUID of the OFT message.\\n        uint32 dstEid, // Destination Endpoint ID.\\n        address indexed fromAddress, // Address of the sender on the src chain.\\n        uint256 amountSentLD, // Amount of tokens sent in local decimals.\\n        uint256 amountReceivedLD // Amount of tokens received in local decimals.\\n    );\\n    event OFTReceived(\\n        bytes32 indexed guid, // GUID of the OFT message.\\n        uint32 srcEid, // Source Endpoint ID.\\n        address indexed toAddress, // Address of the recipient on the dst chain.\\n        uint256 amountReceivedLD // Amount of tokens received in local decimals.\\n    );\\n\\n    /**\\n     * @notice Retrieves interfaceID and the version of the OFT.\\n     * @return interfaceId The interface ID.\\n     * @return version The version.\\n     *\\n     * @dev interfaceId: This specific interface ID is '0x02e49c2c'.\\n     * @dev version: Indicates a cross-chain compatible msg encoding with other OFTs.\\n     * @dev If a new feature is added to the OFT cross-chain msg encoding, the version will be incremented.\\n     * ie. localOFT version(x,1) CAN send messages to remoteOFT version(x,1)\\n     */\\n    function oftVersion() external view returns (bytes4 interfaceId, uint64 version);\\n\\n    /**\\n     * @notice Retrieves the address of the token associated with the OFT.\\n     * @return token The address of the ERC20 token implementation.\\n     */\\n    function token() external view returns (address);\\n\\n    /**\\n     * @notice Indicates whether the OFT contract requires approval of the 'token()' to send.\\n     * @return requiresApproval Needs approval of the underlying token implementation.\\n     *\\n     * @dev Allows things like wallet implementers to determine integration requirements,\\n     * without understanding the underlying token implementation.\\n     */\\n    function approvalRequired() external view returns (bool);\\n\\n    /**\\n     * @notice Retrieves the shared decimals of the OFT.\\n     * @return sharedDecimals The shared decimals of the OFT.\\n     */\\n    function sharedDecimals() external view returns (uint8);\\n\\n    /**\\n     * @notice Provides the fee breakdown and settings data for an OFT. Unused in the default implementation.\\n     * @param _sendParam The parameters for the send operation.\\n     * @return limit The OFT limit information.\\n     * @return oftFeeDetails The details of OFT fees.\\n     * @return receipt The OFT receipt information.\\n     */\\n    function quoteOFT(\\n        SendParam calldata _sendParam\\n    ) external view returns (OFTLimit memory, OFTFeeDetail[] memory oftFeeDetails, OFTReceipt memory);\\n\\n    /**\\n     * @notice Provides a quote for the send() operation.\\n     * @param _sendParam The parameters for the send() operation.\\n     * @param _payInLzToken Flag indicating whether the caller is paying in the LZ token.\\n     * @return fee The calculated LayerZero messaging fee from the send() operation.\\n     *\\n     * @dev MessagingFee: LayerZero msg fee\\n     *  - nativeFee: The native fee.\\n     *  - lzTokenFee: The lzToken fee.\\n     */\\n    function quoteSend(SendParam calldata _sendParam, bool _payInLzToken) external view returns (MessagingFee memory);\\n\\n    /**\\n     * @notice Executes the send() operation.\\n     * @param _sendParam The parameters for the send operation.\\n     * @param _fee The fee information supplied by the caller.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess funds from fees etc. on the src.\\n     * @return receipt The LayerZero messaging receipt from the send() operation.\\n     * @return oftReceipt The OFT receipt information.\\n     *\\n     * @dev MessagingReceipt: LayerZero msg receipt\\n     *  - guid: The unique identifier for the sent message.\\n     *  - nonce: The nonce of the sent message.\\n     *  - fee: The LayerZero fee incurred for the message.\\n     */\\n    function send(\\n        SendParam calldata _sendParam,\\n        MessagingFee calldata _fee,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory, OFTReceipt memory);\\n}\\n\",\"keccak256\":\"0x7ba6bb62fba7ee83451cfb0e727ddeef0e96b4388bd4e9ff0fc6ce103e1101c8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"approvalRequired()":{"notice":"Indicates whether the OFT contract requires approval of the 'token()' to send."},"oftVersion()":{"notice":"Retrieves interfaceID and the version of the OFT."},"quoteOFT((uint32,bytes32,uint256,uint256,bytes,bytes,bytes))":{"notice":"Provides the fee breakdown and settings data for an OFT. Unused in the default implementation."},"quoteSend((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bool)":{"notice":"Provides a quote for the send() operation."},"send((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),address)":{"notice":"Executes the send() operation."},"sharedDecimals()":{"notice":"Retrieves the shared decimals of the OFT."},"token()":{"notice":"Retrieves the address of the token associated with the OFT."}},"version":1}}},"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol":{"OFTComposeMsgCodec":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150eae0310d029a09a609e3d47f56ad7845051c16cb0145ad9f81dfcbe51bf364736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP 0xEA 0xE0 BALANCE 0xD MUL SWAP11 MULMOD 0xA6 MULMOD 0xE3 0xD4 PUSH32 0x56AD7845051C16CB0145AD9F81DFCBE51BF364736F6C63430008160033000000 ","sourceMap":"59:2931:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;59:2931:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150eae0310d029a09a609e3d47f56ad7845051c16cb0145ad9f81dfcbe51bf364736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP 0xEA 0xE0 BALANCE 0xD MUL SWAP11 MULMOD 0xA6 MULMOD 0xE3 0xD4 PUSH32 0x56AD7845051C16CB0145AD9F81DFCBE51BF364736F6C63430008160033000000 ","sourceMap":"59:2931:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"addressToBytes32(address)":"infinite","amountLD(bytes calldata)":"infinite","bytes32ToAddress(bytes32)":"infinite","composeFrom(bytes calldata)":"infinite","composeMsg(bytes calldata)":"infinite","encode(uint64,uint32,uint256,bytes memory)":"infinite","nonce(bytes calldata)":"infinite","srcEid(bytes calldata)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\":\"OFTComposeMsgCodec\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nlibrary OFTComposeMsgCodec {\\n    // Offset constants for decoding composed messages\\n    uint8 private constant NONCE_OFFSET = 8;\\n    uint8 private constant SRC_EID_OFFSET = 12;\\n    uint8 private constant AMOUNT_LD_OFFSET = 44;\\n    uint8 private constant COMPOSE_FROM_OFFSET = 76;\\n\\n    /**\\n     * @dev Encodes a OFT composed message.\\n     * @param _nonce The nonce value.\\n     * @param _srcEid The source endpoint ID.\\n     * @param _amountLD The amount in local decimals.\\n     * @param _composeMsg The composed message.\\n     * @return _msg The encoded Composed message.\\n     */\\n    function encode(\\n        uint64 _nonce,\\n        uint32 _srcEid,\\n        uint256 _amountLD,\\n        bytes memory _composeMsg // 0x[composeFrom][composeMsg]\\n    ) internal pure returns (bytes memory _msg) {\\n        _msg = abi.encodePacked(_nonce, _srcEid, _amountLD, _composeMsg);\\n    }\\n\\n    /**\\n     * @dev Retrieves the nonce for the composed message.\\n     * @param _msg The message.\\n     * @return The nonce value.\\n     */\\n    function nonce(bytes calldata _msg) internal pure returns (uint64) {\\n        return uint64(bytes8(_msg[:NONCE_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the source endpoint ID for the composed message.\\n     * @param _msg The message.\\n     * @return The source endpoint ID.\\n     */\\n    function srcEid(bytes calldata _msg) internal pure returns (uint32) {\\n        return uint32(bytes4(_msg[NONCE_OFFSET:SRC_EID_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the amount in local decimals from the composed message.\\n     * @param _msg The message.\\n     * @return The amount in local decimals.\\n     */\\n    function amountLD(bytes calldata _msg) internal pure returns (uint256) {\\n        return uint256(bytes32(_msg[SRC_EID_OFFSET:AMOUNT_LD_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the composeFrom value from the composed message.\\n     * @param _msg The message.\\n     * @return The composeFrom value.\\n     */\\n    function composeFrom(bytes calldata _msg) internal pure returns (bytes32) {\\n        return bytes32(_msg[AMOUNT_LD_OFFSET:COMPOSE_FROM_OFFSET]);\\n    }\\n\\n    /**\\n     * @dev Retrieves the composed message.\\n     * @param _msg The message.\\n     * @return The composed message.\\n     */\\n    function composeMsg(bytes calldata _msg) internal pure returns (bytes memory) {\\n        return _msg[COMPOSE_FROM_OFFSET:];\\n    }\\n\\n    /**\\n     * @dev Converts an address to bytes32.\\n     * @param _addr The address to convert.\\n     * @return The bytes32 representation of the address.\\n     */\\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\\n        return bytes32(uint256(uint160(_addr)));\\n    }\\n\\n    /**\\n     * @dev Converts bytes32 to an address.\\n     * @param _b The bytes32 value to convert.\\n     * @return The address representation of bytes32.\\n     */\\n    function bytes32ToAddress(bytes32 _b) internal pure returns (address) {\\n        return address(uint160(uint256(_b)));\\n    }\\n}\\n\",\"keccak256\":\"0xaae73d6eb8b9561c43f1802f3c416c00ccd35f172b711f9781ccdf1b25a40db5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol":{"HyperCoreAdapter":{"abi":[{"inputs":[{"internalType":"address","name":"_endpoint","type":"address"},{"internalType":"address","name":"_oft","type":"address"},{"internalType":"uint64","name":"_coreIndexId","type":"uint64"},{"internalType":"uint256","name":"_weiDiff","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength","type":"error"},{"inputs":[{"internalType":"address","name":"_notEndpointAddress","type":"address"}],"name":"HyperLiquidComposer_InvalidCall_NotEndpoint","type":"error"},{"inputs":[{"internalType":"address","name":"_internalOFTAddress","type":"address"},{"internalType":"address","name":"_receivedOFTAddress","type":"address"}],"name":"HyperLiquidComposer_InvalidCall_NotOFT","type":"error"},{"inputs":[{"internalType":"address","name":"_oft","type":"address"},{"internalType":"address","name":"_token","type":"address"}],"name":"HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension","type":"error"},{"inputs":[],"name":"HYPER_CORE_INDEX_ID","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HYPER_CORE_INDEX_ID_DECIMAL_DIFF","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HYPE_ASSET_BRIDGE_ADDRESS","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"L1WritePrecompileAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OFT_TOKEN_ASSET_BRIDGE_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OFT_TOKEN_CORE_INDEX_ID","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oft","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"lzCompose","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"oft","outputs":[{"internalType":"contract IOFT","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"weiDiff","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"This constructor is called by the `HyperLiquidOFT` contractPost deployment, this address needs to be approved (via approveCaller) by the `owner` of the `HyperLiquidOFT` contract to call the `transferToHyperLiquidL1` function","params":{"_endpoint":"The LayerZero endpoint address","_oft":"The OFT contract address associated with this composer"}},"lzCompose(address,bytes32,bytes,address,bytes)":{"details":"This function is called by the OFTCore contract when a message is sent","params":{"_message":"The encoded message content, expected to be of type: (address receiver).","_oft":"The address of the OFT contract."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1493":{"entryPoint":null,"id":1493,"parameterSlots":4,"returnSlots":0},"@into_assetBridgeAddress_1883":{"entryPoint":234,"id":1883,"parameterSlots":1,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":256,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint64t_uint256_fromMemory":{"entryPoint":284,"id":null,"parameterSlots":2,"returnSlots":4},"checked_add_t_uint256":{"entryPoint":408,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:1158:28","nodeType":"YulBlock","src":"0:1158:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"74:117:28","nodeType":"YulBlock","src":"74:117:28","statements":[{"nativeSrc":"84:22:28","nodeType":"YulAssignment","src":"84:22:28","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:28","nodeType":"YulIdentifier","src":"99:6:28"}],"functionName":{"name":"mload","nativeSrc":"93:5:28","nodeType":"YulIdentifier","src":"93:5:28"},"nativeSrc":"93:13:28","nodeType":"YulFunctionCall","src":"93:13:28"},"variableNames":[{"name":"value","nativeSrc":"84:5:28","nodeType":"YulIdentifier","src":"84:5:28"}]},{"body":{"nativeSrc":"169:16:28","nodeType":"YulBlock","src":"169:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:28","nodeType":"YulLiteral","src":"178:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:28","nodeType":"YulLiteral","src":"181:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:28","nodeType":"YulIdentifier","src":"171:6:28"},"nativeSrc":"171:12:28","nodeType":"YulFunctionCall","src":"171:12:28"},"nativeSrc":"171:12:28","nodeType":"YulExpressionStatement","src":"171:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:28","nodeType":"YulIdentifier","src":"128:5:28"},{"arguments":[{"name":"value","nativeSrc":"139:5:28","nodeType":"YulIdentifier","src":"139:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:28","nodeType":"YulLiteral","src":"154:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:28","nodeType":"YulLiteral","src":"159:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:28","nodeType":"YulIdentifier","src":"150:3:28"},"nativeSrc":"150:11:28","nodeType":"YulFunctionCall","src":"150:11:28"},{"kind":"number","nativeSrc":"163:1:28","nodeType":"YulLiteral","src":"163:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:28","nodeType":"YulIdentifier","src":"146:3:28"},"nativeSrc":"146:19:28","nodeType":"YulFunctionCall","src":"146:19:28"}],"functionName":{"name":"and","nativeSrc":"135:3:28","nodeType":"YulIdentifier","src":"135:3:28"},"nativeSrc":"135:31:28","nodeType":"YulFunctionCall","src":"135:31:28"}],"functionName":{"name":"eq","nativeSrc":"125:2:28","nodeType":"YulIdentifier","src":"125:2:28"},"nativeSrc":"125:42:28","nodeType":"YulFunctionCall","src":"125:42:28"}],"functionName":{"name":"iszero","nativeSrc":"118:6:28","nodeType":"YulIdentifier","src":"118:6:28"},"nativeSrc":"118:50:28","nodeType":"YulFunctionCall","src":"118:50:28"},"nativeSrc":"115:70:28","nodeType":"YulIf","src":"115:70:28"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:28","nodeType":"YulTypedName","src":"53:6:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:28","nodeType":"YulTypedName","src":"64:5:28","type":""}],"src":"14:177:28"},{"body":{"nativeSrc":"327:389:28","nodeType":"YulBlock","src":"327:389:28","statements":[{"body":{"nativeSrc":"374:16:28","nodeType":"YulBlock","src":"374:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"383:1:28","nodeType":"YulLiteral","src":"383:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"386:1:28","nodeType":"YulLiteral","src":"386:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"376:6:28","nodeType":"YulIdentifier","src":"376:6:28"},"nativeSrc":"376:12:28","nodeType":"YulFunctionCall","src":"376:12:28"},"nativeSrc":"376:12:28","nodeType":"YulExpressionStatement","src":"376:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"348:7:28","nodeType":"YulIdentifier","src":"348:7:28"},{"name":"headStart","nativeSrc":"357:9:28","nodeType":"YulIdentifier","src":"357:9:28"}],"functionName":{"name":"sub","nativeSrc":"344:3:28","nodeType":"YulIdentifier","src":"344:3:28"},"nativeSrc":"344:23:28","nodeType":"YulFunctionCall","src":"344:23:28"},{"kind":"number","nativeSrc":"369:3:28","nodeType":"YulLiteral","src":"369:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"340:3:28","nodeType":"YulIdentifier","src":"340:3:28"},"nativeSrc":"340:33:28","nodeType":"YulFunctionCall","src":"340:33:28"},"nativeSrc":"337:53:28","nodeType":"YulIf","src":"337:53:28"},{"nativeSrc":"399:50:28","nodeType":"YulAssignment","src":"399:50:28","value":{"arguments":[{"name":"headStart","nativeSrc":"439:9:28","nodeType":"YulIdentifier","src":"439:9:28"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"409:29:28","nodeType":"YulIdentifier","src":"409:29:28"},"nativeSrc":"409:40:28","nodeType":"YulFunctionCall","src":"409:40:28"},"variableNames":[{"name":"value0","nativeSrc":"399:6:28","nodeType":"YulIdentifier","src":"399:6:28"}]},{"nativeSrc":"458:59:28","nodeType":"YulAssignment","src":"458:59:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"502:9:28","nodeType":"YulIdentifier","src":"502:9:28"},{"kind":"number","nativeSrc":"513:2:28","nodeType":"YulLiteral","src":"513:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"498:3:28","nodeType":"YulIdentifier","src":"498:3:28"},"nativeSrc":"498:18:28","nodeType":"YulFunctionCall","src":"498:18:28"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"468:29:28","nodeType":"YulIdentifier","src":"468:29:28"},"nativeSrc":"468:49:28","nodeType":"YulFunctionCall","src":"468:49:28"},"variableNames":[{"name":"value1","nativeSrc":"458:6:28","nodeType":"YulIdentifier","src":"458:6:28"}]},{"nativeSrc":"526:38:28","nodeType":"YulVariableDeclaration","src":"526:38:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"549:9:28","nodeType":"YulIdentifier","src":"549:9:28"},{"kind":"number","nativeSrc":"560:2:28","nodeType":"YulLiteral","src":"560:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"545:3:28","nodeType":"YulIdentifier","src":"545:3:28"},"nativeSrc":"545:18:28","nodeType":"YulFunctionCall","src":"545:18:28"}],"functionName":{"name":"mload","nativeSrc":"539:5:28","nodeType":"YulIdentifier","src":"539:5:28"},"nativeSrc":"539:25:28","nodeType":"YulFunctionCall","src":"539:25:28"},"variables":[{"name":"value","nativeSrc":"530:5:28","nodeType":"YulTypedName","src":"530:5:28","type":""}]},{"body":{"nativeSrc":"626:16:28","nodeType":"YulBlock","src":"626:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"635:1:28","nodeType":"YulLiteral","src":"635:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"638:1:28","nodeType":"YulLiteral","src":"638:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"628:6:28","nodeType":"YulIdentifier","src":"628:6:28"},"nativeSrc":"628:12:28","nodeType":"YulFunctionCall","src":"628:12:28"},"nativeSrc":"628:12:28","nodeType":"YulExpressionStatement","src":"628:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"586:5:28","nodeType":"YulIdentifier","src":"586:5:28"},{"arguments":[{"name":"value","nativeSrc":"597:5:28","nodeType":"YulIdentifier","src":"597:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"612:2:28","nodeType":"YulLiteral","src":"612:2:28","type":"","value":"64"},{"kind":"number","nativeSrc":"616:1:28","nodeType":"YulLiteral","src":"616:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"608:3:28","nodeType":"YulIdentifier","src":"608:3:28"},"nativeSrc":"608:10:28","nodeType":"YulFunctionCall","src":"608:10:28"},{"kind":"number","nativeSrc":"620:1:28","nodeType":"YulLiteral","src":"620:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"604:3:28","nodeType":"YulIdentifier","src":"604:3:28"},"nativeSrc":"604:18:28","nodeType":"YulFunctionCall","src":"604:18:28"}],"functionName":{"name":"and","nativeSrc":"593:3:28","nodeType":"YulIdentifier","src":"593:3:28"},"nativeSrc":"593:30:28","nodeType":"YulFunctionCall","src":"593:30:28"}],"functionName":{"name":"eq","nativeSrc":"583:2:28","nodeType":"YulIdentifier","src":"583:2:28"},"nativeSrc":"583:41:28","nodeType":"YulFunctionCall","src":"583:41:28"}],"functionName":{"name":"iszero","nativeSrc":"576:6:28","nodeType":"YulIdentifier","src":"576:6:28"},"nativeSrc":"576:49:28","nodeType":"YulFunctionCall","src":"576:49:28"},"nativeSrc":"573:69:28","nodeType":"YulIf","src":"573:69:28"},{"nativeSrc":"651:15:28","nodeType":"YulAssignment","src":"651:15:28","value":{"name":"value","nativeSrc":"661:5:28","nodeType":"YulIdentifier","src":"661:5:28"},"variableNames":[{"name":"value2","nativeSrc":"651:6:28","nodeType":"YulIdentifier","src":"651:6:28"}]},{"nativeSrc":"675:35:28","nodeType":"YulAssignment","src":"675:35:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"695:9:28","nodeType":"YulIdentifier","src":"695:9:28"},{"kind":"number","nativeSrc":"706:2:28","nodeType":"YulLiteral","src":"706:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"691:3:28","nodeType":"YulIdentifier","src":"691:3:28"},"nativeSrc":"691:18:28","nodeType":"YulFunctionCall","src":"691:18:28"}],"functionName":{"name":"mload","nativeSrc":"685:5:28","nodeType":"YulIdentifier","src":"685:5:28"},"nativeSrc":"685:25:28","nodeType":"YulFunctionCall","src":"685:25:28"},"variableNames":[{"name":"value3","nativeSrc":"675:6:28","nodeType":"YulIdentifier","src":"675:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint64t_uint256_fromMemory","nativeSrc":"196:520:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"269:9:28","nodeType":"YulTypedName","src":"269:9:28","type":""},{"name":"dataEnd","nativeSrc":"280:7:28","nodeType":"YulTypedName","src":"280:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"292:6:28","nodeType":"YulTypedName","src":"292:6:28","type":""},{"name":"value1","nativeSrc":"300:6:28","nodeType":"YulTypedName","src":"300:6:28","type":""},{"name":"value2","nativeSrc":"308:6:28","nodeType":"YulTypedName","src":"308:6:28","type":""},{"name":"value3","nativeSrc":"316:6:28","nodeType":"YulTypedName","src":"316:6:28","type":""}],"src":"196:520:28"},{"body":{"nativeSrc":"802:127:28","nodeType":"YulBlock","src":"802:127:28","statements":[{"body":{"nativeSrc":"848:16:28","nodeType":"YulBlock","src":"848:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"857:1:28","nodeType":"YulLiteral","src":"857:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"860:1:28","nodeType":"YulLiteral","src":"860:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"850:6:28","nodeType":"YulIdentifier","src":"850:6:28"},"nativeSrc":"850:12:28","nodeType":"YulFunctionCall","src":"850:12:28"},"nativeSrc":"850:12:28","nodeType":"YulExpressionStatement","src":"850:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"823:7:28","nodeType":"YulIdentifier","src":"823:7:28"},{"name":"headStart","nativeSrc":"832:9:28","nodeType":"YulIdentifier","src":"832:9:28"}],"functionName":{"name":"sub","nativeSrc":"819:3:28","nodeType":"YulIdentifier","src":"819:3:28"},"nativeSrc":"819:23:28","nodeType":"YulFunctionCall","src":"819:23:28"},{"kind":"number","nativeSrc":"844:2:28","nodeType":"YulLiteral","src":"844:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"815:3:28","nodeType":"YulIdentifier","src":"815:3:28"},"nativeSrc":"815:32:28","nodeType":"YulFunctionCall","src":"815:32:28"},"nativeSrc":"812:52:28","nodeType":"YulIf","src":"812:52:28"},{"nativeSrc":"873:50:28","nodeType":"YulAssignment","src":"873:50:28","value":{"arguments":[{"name":"headStart","nativeSrc":"913:9:28","nodeType":"YulIdentifier","src":"913:9:28"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"883:29:28","nodeType":"YulIdentifier","src":"883:29:28"},"nativeSrc":"883:40:28","nodeType":"YulFunctionCall","src":"883:40:28"},"variableNames":[{"name":"value0","nativeSrc":"873:6:28","nodeType":"YulIdentifier","src":"873:6:28"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"721:208:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"768:9:28","nodeType":"YulTypedName","src":"768:9:28","type":""},{"name":"dataEnd","nativeSrc":"779:7:28","nodeType":"YulTypedName","src":"779:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"791:6:28","nodeType":"YulTypedName","src":"791:6:28","type":""}],"src":"721:208:28"},{"body":{"nativeSrc":"982:174:28","nodeType":"YulBlock","src":"982:174:28","statements":[{"nativeSrc":"992:16:28","nodeType":"YulAssignment","src":"992:16:28","value":{"arguments":[{"name":"x","nativeSrc":"1003:1:28","nodeType":"YulIdentifier","src":"1003:1:28"},{"name":"y","nativeSrc":"1006:1:28","nodeType":"YulIdentifier","src":"1006:1:28"}],"functionName":{"name":"add","nativeSrc":"999:3:28","nodeType":"YulIdentifier","src":"999:3:28"},"nativeSrc":"999:9:28","nodeType":"YulFunctionCall","src":"999:9:28"},"variableNames":[{"name":"sum","nativeSrc":"992:3:28","nodeType":"YulIdentifier","src":"992:3:28"}]},{"body":{"nativeSrc":"1039:111:28","nodeType":"YulBlock","src":"1039:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1060:1:28","nodeType":"YulLiteral","src":"1060:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1067:3:28","nodeType":"YulLiteral","src":"1067:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"1072:10:28","nodeType":"YulLiteral","src":"1072:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1063:3:28","nodeType":"YulIdentifier","src":"1063:3:28"},"nativeSrc":"1063:20:28","nodeType":"YulFunctionCall","src":"1063:20:28"}],"functionName":{"name":"mstore","nativeSrc":"1053:6:28","nodeType":"YulIdentifier","src":"1053:6:28"},"nativeSrc":"1053:31:28","nodeType":"YulFunctionCall","src":"1053:31:28"},"nativeSrc":"1053:31:28","nodeType":"YulExpressionStatement","src":"1053:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1104:1:28","nodeType":"YulLiteral","src":"1104:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"1107:4:28","nodeType":"YulLiteral","src":"1107:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"1097:6:28","nodeType":"YulIdentifier","src":"1097:6:28"},"nativeSrc":"1097:15:28","nodeType":"YulFunctionCall","src":"1097:15:28"},"nativeSrc":"1097:15:28","nodeType":"YulExpressionStatement","src":"1097:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1132:1:28","nodeType":"YulLiteral","src":"1132:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1135:4:28","nodeType":"YulLiteral","src":"1135:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1125:6:28","nodeType":"YulIdentifier","src":"1125:6:28"},"nativeSrc":"1125:15:28","nodeType":"YulFunctionCall","src":"1125:15:28"},"nativeSrc":"1125:15:28","nodeType":"YulExpressionStatement","src":"1125:15:28"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"1023:1:28","nodeType":"YulIdentifier","src":"1023:1:28"},{"name":"sum","nativeSrc":"1026:3:28","nodeType":"YulIdentifier","src":"1026:3:28"}],"functionName":{"name":"gt","nativeSrc":"1020:2:28","nodeType":"YulIdentifier","src":"1020:2:28"},"nativeSrc":"1020:10:28","nodeType":"YulFunctionCall","src":"1020:10:28"},"nativeSrc":"1017:133:28","nodeType":"YulIf","src":"1017:133:28"}]},"name":"checked_add_t_uint256","nativeSrc":"934:222:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"965:1:28","nodeType":"YulTypedName","src":"965:1:28","type":""},{"name":"y","nativeSrc":"968:1:28","nodeType":"YulTypedName","src":"968:1:28","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"974:3:28","nodeType":"YulTypedName","src":"974:3:28","type":""}],"src":"934:222:28"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint64t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n        value2 := value\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61014060405234801561001157600080fd5b50604051610d0b380380610d0b8339810160408190526100309161011c565b6001600160a01b03831660e081905260408051637e062a3560e11b8152905163fc0c546a916004808201926020929091908290030181865afa15801561007a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009e9190610176565b6001600160a01b0390811661010052841660c0526100c46001600160401b0383166100ea565b6001600160a01b03166080526001600160401b0390911660a05261012052506101b99050565b60006100fa826001609d1b610198565b92915050565b80516001600160a01b038116811461011757600080fd5b919050565b6000806000806080858703121561013257600080fd5b61013b85610100565b935061014960208601610100565b60408601519093506001600160401b038116811461016657600080fd5b6060959095015193969295505050565b60006020828403121561018857600080fd5b61019182610100565b9392505050565b808201808211156100fa57634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e0516101005161012051610ad36102386000396000818160f2015261066601526000818161029601526105b701526000818161023801528181610314015261035801526000818161017401526102c301526000818161020401526106420152600081816101d001526105880152610ad36000f3fe6080604052600436106100a05760003560e01c8063841233051161006457806384123305146101be5780639a923b9a146101f25780639b5215f614610226578063d0a102601461025a578063dd4c07c81461026f578063fc0c546a1461028457600080fd5b80630813f32f146100ac578063303f1e81146100e057806355cd1378146101225780635e280f11146101625780636e3bf0ad1461019657600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100c261045181565b60405167ffffffffffffffff90911681526020015b60405180910390f35b3480156100ec57600080fd5b506101147f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100d7565b34801561012e57600080fd5b5061014a73333333333333333333333333333333333333333381565b6040516001600160a01b0390911681526020016100d7565b34801561016e57600080fd5b5061014a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101a257600080fd5b5061014a73222222222222222222222222222222222222222281565b3480156101ca57600080fd5b5061014a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101fe57600080fd5b506100c27f000000000000000000000000000000000000000000000000000000000000000081565b34801561023257600080fd5b5061014a7f000000000000000000000000000000000000000000000000000000000000000081565b61026d6102683660046107dc565b6102b8565b005b34801561027b57600080fd5b50610114600a81565b34801561029057600080fd5b5061014a7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103085760405163eee35e6f60e01b81523360048201526024015b60405180910390fd5b866001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461038d5760405163021bfb8360e61b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152881660248201526044016102ff565b60008061039a87876103c4565b909250905034156103af576103af823461041d565b6103b98282610571565b505050505050505050565b60008060006103d3858561070a565b905060148151146103fb5780516040516309b3473160e01b81526102ff91839160040161087a565b610404816108cf565b60601c92506104138585610757565b9150509250929050565b6040516000907322222222222222222222222222222222222222229083908381818185875af1925050503d8060008114610473576040519150601f19603f3d011682016040523d82523d6000602084013e610478565b606091505b50509050806104c95760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e64204859504520746f204879706572436f726560448201526064016102ff565b733333333333333333333333333333333333333333630b0ac0ab846104516104f2600a80610a05565b6104fc9087610a11565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015267ffffffffffffffff9182166024840152166044820152606401600060405180830381600087803b15801561055457600080fd5b505af1158015610568573d6000803e3d6000fd5b50505050505050565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610600573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106249190610a33565b50733333333333333333333333333333333333333333630b0ac0ab837f000000000000000000000000000000000000000000000000000000000000000061068c7f0000000000000000000000000000000000000000000000000000000000000000600a610a05565b6106969086610a11565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015267ffffffffffffffff9182166024840152166044820152606401600060405180830381600087803b1580156106ee57600080fd5b505af1158015610702573d6000803e3d6000fd5b505050505050565b606061071982604c8186610a55565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b92915050565b6000610767602c600c8486610a55565b61077091610a7f565b9392505050565b80356001600160a01b038116811461078e57600080fd5b919050565b60008083601f8401126107a557600080fd5b50813567ffffffffffffffff8111156107bd57600080fd5b6020830191508360208285010111156107d557600080fd5b9250929050565b600080600080600080600060a0888a0312156107f757600080fd5b61080088610777565b965060208801359550604088013567ffffffffffffffff8082111561082457600080fd5b6108308b838c01610793565b909750955085915061084460608b01610777565b945060808a013591508082111561085a57600080fd5b506108678a828b01610793565b989b979a50959850939692959293505050565b604081526000835180604084015260005b818110156108a8576020818701810151606086840101520161088b565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b805160208201516bffffffffffffffffffffffff1980821692919060148310156109035780818460140360031b1b83161693505b505050919050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561095c5781600019048211156109425761094261090b565b8085161561094f57918102915b93841c9390800290610926565b509250929050565b60008261097357506001610751565b8161098057506000610751565b816001811461099657600281146109a0576109bc565b6001915050610751565b60ff8411156109b1576109b161090b565b50506001821b610751565b5060208310610133831016604e8410600b84101617156109df575081810a610751565b6109e98383610921565b80600019048211156109fd576109fd61090b565b029392505050565b60006107708383610964565b600082610a2e57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610a4557600080fd5b8151801515811461077057600080fd5b60008085851115610a6557600080fd5b83861115610a7257600080fd5b5050820193919092039150565b8035602083101561075157600019602084900360031b1b169291505056fea264697066735822122033333d1e64ae7d2fd6e6d47babe84e4ec0d0e5c28cb9884e436e8455907fd3d764736f6c63430008160033","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD0B CODESIZE SUB DUP1 PUSH2 0xD0B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0x11C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0xE0 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x7E062A35 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0xFC0C546A SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 MSTORE DUP5 AND PUSH1 0xC0 MSTORE PUSH2 0xC4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH2 0xEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND PUSH1 0xA0 MSTORE PUSH2 0x120 MSTORE POP PUSH2 0x1B9 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA DUP3 PUSH1 0x1 PUSH1 0x9D SHL PUSH2 0x198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B DUP6 PUSH2 0x100 JUMP JUMPDEST SWAP4 POP PUSH2 0x149 PUSH1 0x20 DUP7 ADD PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x191 DUP3 PUSH2 0x100 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xFA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0xAD3 PUSH2 0x238 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xF2 ADD MSTORE PUSH2 0x666 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x296 ADD MSTORE PUSH2 0x5B7 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x238 ADD MSTORE DUP2 DUP2 PUSH2 0x314 ADD MSTORE PUSH2 0x358 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x174 ADD MSTORE PUSH2 0x2C3 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x204 ADD MSTORE PUSH2 0x642 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1D0 ADD MSTORE PUSH2 0x588 ADD MSTORE PUSH2 0xAD3 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84123305 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x84123305 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x9A923B9A EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x9B5215F6 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xD0A10260 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xDD4C07C8 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x813F32F EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x303F1E81 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x55CD1378 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x5E280F11 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x6E3BF0AD EQ PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH2 0x451 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH20 0x3333333333333333333333333333333333333333 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH20 0x2222222222222222222222222222222222222222 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DC JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0xA DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x308 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEEE35E6F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD PUSH4 0x21BFB83 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x39A DUP8 DUP8 PUSH2 0x3C4 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP CALLVALUE ISZERO PUSH2 0x3AF JUMPI PUSH2 0x3AF DUP3 CALLVALUE PUSH2 0x41D JUMP JUMPDEST PUSH2 0x3B9 DUP3 DUP3 PUSH2 0x571 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3D3 DUP6 DUP6 PUSH2 0x70A JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ PUSH2 0x3FB JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x9B34731 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x2FF SWAP2 DUP4 SWAP2 PUSH1 0x4 ADD PUSH2 0x87A JUMP JUMPDEST PUSH2 0x404 DUP2 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP PUSH2 0x413 DUP6 DUP6 PUSH2 0x757 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH20 0x2222222222222222222222222222222222222222 SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x478 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64204859504520746F204879706572436F7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FF JUMP JUMPDEST PUSH20 0x3333333333333333333333333333333333333333 PUSH4 0xB0AC0AB DUP5 PUSH2 0x451 PUSH2 0x4F2 PUSH1 0xA DUP1 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x4FC SWAP1 DUP8 PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x568 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x600 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x624 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST POP PUSH20 0x3333333333333333333333333333333333333333 PUSH4 0xB0AC0AB DUP4 PUSH32 0x0 PUSH2 0x68C PUSH32 0x0 PUSH1 0xA PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x696 SWAP1 DUP7 PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x702 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x719 DUP3 PUSH1 0x4C DUP2 DUP7 PUSH2 0xA55 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x767 PUSH1 0x2C PUSH1 0xC DUP5 DUP7 PUSH2 0xA55 JUMP JUMPDEST PUSH2 0x770 SWAP2 PUSH2 0xA7F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x7A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x800 DUP9 PUSH2 0x777 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x830 DUP12 DUP4 DUP13 ADD PUSH2 0x793 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x844 PUSH1 0x60 DUP12 ADD PUSH2 0x777 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x85A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x867 DUP11 DUP3 DUP12 ADD PUSH2 0x793 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x88B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 PUSH1 0x14 DUP4 LT ISZERO PUSH2 0x903 JUMPI DUP1 DUP2 DUP5 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP4 POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x95C JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x942 JUMPI PUSH2 0x942 PUSH2 0x90B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x94F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x926 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x973 JUMPI POP PUSH1 0x1 PUSH2 0x751 JUMP JUMPDEST DUP2 PUSH2 0x980 JUMPI POP PUSH1 0x0 PUSH2 0x751 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x996 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x9A0 JUMPI PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x9B1 JUMPI PUSH2 0x9B1 PUSH2 0x90B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x751 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x9DF JUMPI POP DUP2 DUP2 EXP PUSH2 0x751 JUMP JUMPDEST PUSH2 0x9E9 DUP4 DUP4 PUSH2 0x921 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x9FD JUMPI PUSH2 0x9FD PUSH2 0x90B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x770 DUP4 DUP4 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA2E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0xA65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x20 DUP4 LT ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 NOT PUSH1 0x20 DUP5 SWAP1 SUB PUSH1 0x3 SHL SHL AND SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER CALLER RETURNDATASIZE 0x1E PUSH5 0xAE7D2FD6E6 0xD4 PUSH28 0xABE84E4EC0D0E5C28CB9884E436E8455907FD3D764736F6C63430008 AND STOP CALLER ","sourceMap":"469:4966:12:-:0;;;1592:997;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1875:16:12;;;;;;1916:11;;;-1:-1:-1;;;1916:11:12;;;;:9;;:11;;;;;;;;;;;;;;;1875:16;1916:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1901:27:12;;;;;1939:20;;;;2444:62;-1:-1:-1;;;;;2444:62:12;;:48;:62::i;:::-;-1:-1:-1;;;;;2411:95:12;;;-1:-1:-1;;;;;2516:38:12;;;;;2564:18;;-1:-1:-1;469:4966:12;;-1:-1:-1;469:4966:12;1991:177:15;2069:7;2111:48;2147:12;-1:-1:-1;;;2111:48:15;:::i;:::-;2088:73;1991:177;-1:-1:-1;;1991:177:15:o;14::28:-;93:13;;-1:-1:-1;;;;;135:31:28;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:520::-;292:6;300;308;316;369:3;357:9;348:7;344:23;340:33;337:53;;;386:1;383;376:12;337:53;409:40;439:9;409:40;:::i;:::-;399:50;;468:49;513:2;502:9;498:18;468:49;:::i;:::-;560:2;545:18;;539:25;458:59;;-1:-1:-1;;;;;;593:30:28;;583:41;;573:69;;638:1;635;628:12;573:69;706:2;691:18;;;;685:25;196:520;;;;-1:-1:-1;;;196:520:28:o;721:208::-;791:6;844:2;832:9;823:7;819:23;815:32;812:52;;;860:1;857;850:12;812:52;883:40;913:9;883:40;:::i;:::-;873:50;721:208;-1:-1:-1;;;721:208:28:o;934:222::-;999:9;;;1020:10;;;1017:133;;;1072:10;1067:3;1063:20;1060:1;1053:31;1107:4;1104:1;1097:15;1135:4;1132:1;1125:15;934:222;469:4966:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@HYPER_CORE_INDEX_ID_1432":{"entryPoint":null,"id":1432,"parameterSlots":0,"returnSlots":0},"@HYPER_CORE_INDEX_ID_DECIMAL_DIFF_1437":{"entryPoint":null,"id":1437,"parameterSlots":0,"returnSlots":0},"@HYPE_ASSET_BRIDGE_ADDRESS_1429":{"entryPoint":null,"id":1429,"parameterSlots":0,"returnSlots":0},"@L1WritePrecompileAddress_1423":{"entryPoint":null,"id":1423,"parameterSlots":0,"returnSlots":0},"@OFT_TOKEN_ASSET_BRIDGE_ADDRESS_1418":{"entryPoint":null,"id":1418,"parameterSlots":0,"returnSlots":0},"@OFT_TOKEN_CORE_INDEX_ID_1420":{"entryPoint":null,"id":1420,"parameterSlots":0,"returnSlots":0},"@_1638":{"entryPoint":null,"id":1638,"parameterSlots":0,"returnSlots":0},"@_fundAddressOnHyperCore_1634":{"entryPoint":1053,"id":1634,"parameterSlots":2,"returnSlots":0},"@_sendAssetToHyperCore_1596":{"entryPoint":1393,"id":1596,"parameterSlots":2,"returnSlots":0},"@amountLD_1331":{"entryPoint":1879,"id":1331,"parameterSlots":2,"returnSlots":1},"@composeMsg_1361":{"entryPoint":1802,"id":1361,"parameterSlots":2,"returnSlots":1},"@endpoint_1439":{"entryPoint":null,"id":1439,"parameterSlots":0,"returnSlots":0},"@lzCompose_1565":{"entryPoint":696,"id":1565,"parameterSlots":7,"returnSlots":0},"@oft_1442":{"entryPoint":null,"id":1442,"parameterSlots":0,"returnSlots":0},"@token_1445":{"entryPoint":null,"id":1445,"parameterSlots":0,"returnSlots":0},"@validateAndDecodeMessage_1865":{"entryPoint":964,"id":1865,"parameterSlots":2,"returnSlots":2},"@weiDiff_1447":{"entryPoint":null,"id":1447,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":1911,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":1939,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr":{"entryPoint":2012,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2611,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint64_t_uint64__to_t_address_t_uint64_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":2170,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$2218__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IOFT_$1233__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f36cc36cc2d8409d2a1ca675856db8c0ac40991b9e411e41e2b8bba2f8104fb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":2645,"id":null,"parameterSlots":4,"returnSlots":2},"checked_div_t_uint256":{"entryPoint":2577,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2337,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":2565,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":2404,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32":{"entryPoint":2687,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20":{"entryPoint":2255,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2315,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7891:28","nodeType":"YulBlock","src":"0:7891:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"113:101:28","nodeType":"YulBlock","src":"113:101:28","statements":[{"nativeSrc":"123:26:28","nodeType":"YulAssignment","src":"123:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"135:9:28","nodeType":"YulIdentifier","src":"135:9:28"},{"kind":"number","nativeSrc":"146:2:28","nodeType":"YulLiteral","src":"146:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"131:3:28","nodeType":"YulIdentifier","src":"131:3:28"},"nativeSrc":"131:18:28","nodeType":"YulFunctionCall","src":"131:18:28"},"variableNames":[{"name":"tail","nativeSrc":"123:4:28","nodeType":"YulIdentifier","src":"123:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"165:9:28","nodeType":"YulIdentifier","src":"165:9:28"},{"arguments":[{"name":"value0","nativeSrc":"180:6:28","nodeType":"YulIdentifier","src":"180:6:28"},{"kind":"number","nativeSrc":"188:18:28","nodeType":"YulLiteral","src":"188:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"176:3:28","nodeType":"YulIdentifier","src":"176:3:28"},"nativeSrc":"176:31:28","nodeType":"YulFunctionCall","src":"176:31:28"}],"functionName":{"name":"mstore","nativeSrc":"158:6:28","nodeType":"YulIdentifier","src":"158:6:28"},"nativeSrc":"158:50:28","nodeType":"YulFunctionCall","src":"158:50:28"},"nativeSrc":"158:50:28","nodeType":"YulExpressionStatement","src":"158:50:28"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"14:200:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"82:9:28","nodeType":"YulTypedName","src":"82:9:28","type":""},{"name":"value0","nativeSrc":"93:6:28","nodeType":"YulTypedName","src":"93:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"104:4:28","nodeType":"YulTypedName","src":"104:4:28","type":""}],"src":"14:200:28"},{"body":{"nativeSrc":"320:76:28","nodeType":"YulBlock","src":"320:76:28","statements":[{"nativeSrc":"330:26:28","nodeType":"YulAssignment","src":"330:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"342:9:28","nodeType":"YulIdentifier","src":"342:9:28"},{"kind":"number","nativeSrc":"353:2:28","nodeType":"YulLiteral","src":"353:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"338:3:28","nodeType":"YulIdentifier","src":"338:3:28"},"nativeSrc":"338:18:28","nodeType":"YulFunctionCall","src":"338:18:28"},"variableNames":[{"name":"tail","nativeSrc":"330:4:28","nodeType":"YulIdentifier","src":"330:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"372:9:28","nodeType":"YulIdentifier","src":"372:9:28"},{"name":"value0","nativeSrc":"383:6:28","nodeType":"YulIdentifier","src":"383:6:28"}],"functionName":{"name":"mstore","nativeSrc":"365:6:28","nodeType":"YulIdentifier","src":"365:6:28"},"nativeSrc":"365:25:28","nodeType":"YulFunctionCall","src":"365:25:28"},"nativeSrc":"365:25:28","nodeType":"YulExpressionStatement","src":"365:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"219:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"289:9:28","nodeType":"YulTypedName","src":"289:9:28","type":""},{"name":"value0","nativeSrc":"300:6:28","nodeType":"YulTypedName","src":"300:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"311:4:28","nodeType":"YulTypedName","src":"311:4:28","type":""}],"src":"219:177:28"},{"body":{"nativeSrc":"502:102:28","nodeType":"YulBlock","src":"502:102:28","statements":[{"nativeSrc":"512:26:28","nodeType":"YulAssignment","src":"512:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"524:9:28","nodeType":"YulIdentifier","src":"524:9:28"},{"kind":"number","nativeSrc":"535:2:28","nodeType":"YulLiteral","src":"535:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"520:3:28","nodeType":"YulIdentifier","src":"520:3:28"},"nativeSrc":"520:18:28","nodeType":"YulFunctionCall","src":"520:18:28"},"variableNames":[{"name":"tail","nativeSrc":"512:4:28","nodeType":"YulIdentifier","src":"512:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"554:9:28","nodeType":"YulIdentifier","src":"554:9:28"},{"arguments":[{"name":"value0","nativeSrc":"569:6:28","nodeType":"YulIdentifier","src":"569:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"585:3:28","nodeType":"YulLiteral","src":"585:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"590:1:28","nodeType":"YulLiteral","src":"590:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"581:3:28","nodeType":"YulIdentifier","src":"581:3:28"},"nativeSrc":"581:11:28","nodeType":"YulFunctionCall","src":"581:11:28"},{"kind":"number","nativeSrc":"594:1:28","nodeType":"YulLiteral","src":"594:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"577:3:28","nodeType":"YulIdentifier","src":"577:3:28"},"nativeSrc":"577:19:28","nodeType":"YulFunctionCall","src":"577:19:28"}],"functionName":{"name":"and","nativeSrc":"565:3:28","nodeType":"YulIdentifier","src":"565:3:28"},"nativeSrc":"565:32:28","nodeType":"YulFunctionCall","src":"565:32:28"}],"functionName":{"name":"mstore","nativeSrc":"547:6:28","nodeType":"YulIdentifier","src":"547:6:28"},"nativeSrc":"547:51:28","nodeType":"YulFunctionCall","src":"547:51:28"},"nativeSrc":"547:51:28","nodeType":"YulExpressionStatement","src":"547:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"401:203:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"471:9:28","nodeType":"YulTypedName","src":"471:9:28","type":""},{"name":"value0","nativeSrc":"482:6:28","nodeType":"YulTypedName","src":"482:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"493:4:28","nodeType":"YulTypedName","src":"493:4:28","type":""}],"src":"401:203:28"},{"body":{"nativeSrc":"726:102:28","nodeType":"YulBlock","src":"726:102:28","statements":[{"nativeSrc":"736:26:28","nodeType":"YulAssignment","src":"736:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"748:9:28","nodeType":"YulIdentifier","src":"748:9:28"},{"kind":"number","nativeSrc":"759:2:28","nodeType":"YulLiteral","src":"759:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"744:3:28","nodeType":"YulIdentifier","src":"744:3:28"},"nativeSrc":"744:18:28","nodeType":"YulFunctionCall","src":"744:18:28"},"variableNames":[{"name":"tail","nativeSrc":"736:4:28","nodeType":"YulIdentifier","src":"736:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"778:9:28","nodeType":"YulIdentifier","src":"778:9:28"},{"arguments":[{"name":"value0","nativeSrc":"793:6:28","nodeType":"YulIdentifier","src":"793:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"809:3:28","nodeType":"YulLiteral","src":"809:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"814:1:28","nodeType":"YulLiteral","src":"814:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"805:3:28","nodeType":"YulIdentifier","src":"805:3:28"},"nativeSrc":"805:11:28","nodeType":"YulFunctionCall","src":"805:11:28"},{"kind":"number","nativeSrc":"818:1:28","nodeType":"YulLiteral","src":"818:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"801:3:28","nodeType":"YulIdentifier","src":"801:3:28"},"nativeSrc":"801:19:28","nodeType":"YulFunctionCall","src":"801:19:28"}],"functionName":{"name":"and","nativeSrc":"789:3:28","nodeType":"YulIdentifier","src":"789:3:28"},"nativeSrc":"789:32:28","nodeType":"YulFunctionCall","src":"789:32:28"}],"functionName":{"name":"mstore","nativeSrc":"771:6:28","nodeType":"YulIdentifier","src":"771:6:28"},"nativeSrc":"771:51:28","nodeType":"YulFunctionCall","src":"771:51:28"},"nativeSrc":"771:51:28","nodeType":"YulExpressionStatement","src":"771:51:28"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nativeSrc":"609:219:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"695:9:28","nodeType":"YulTypedName","src":"695:9:28","type":""},{"name":"value0","nativeSrc":"706:6:28","nodeType":"YulTypedName","src":"706:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"717:4:28","nodeType":"YulTypedName","src":"717:4:28","type":""}],"src":"609:219:28"},{"body":{"nativeSrc":"947:102:28","nodeType":"YulBlock","src":"947:102:28","statements":[{"nativeSrc":"957:26:28","nodeType":"YulAssignment","src":"957:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"969:9:28","nodeType":"YulIdentifier","src":"969:9:28"},{"kind":"number","nativeSrc":"980:2:28","nodeType":"YulLiteral","src":"980:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"965:3:28","nodeType":"YulIdentifier","src":"965:3:28"},"nativeSrc":"965:18:28","nodeType":"YulFunctionCall","src":"965:18:28"},"variableNames":[{"name":"tail","nativeSrc":"957:4:28","nodeType":"YulIdentifier","src":"957:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"999:9:28","nodeType":"YulIdentifier","src":"999:9:28"},{"arguments":[{"name":"value0","nativeSrc":"1014:6:28","nodeType":"YulIdentifier","src":"1014:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1030:3:28","nodeType":"YulLiteral","src":"1030:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"1035:1:28","nodeType":"YulLiteral","src":"1035:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1026:3:28","nodeType":"YulIdentifier","src":"1026:3:28"},"nativeSrc":"1026:11:28","nodeType":"YulFunctionCall","src":"1026:11:28"},{"kind":"number","nativeSrc":"1039:1:28","nodeType":"YulLiteral","src":"1039:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1022:3:28","nodeType":"YulIdentifier","src":"1022:3:28"},"nativeSrc":"1022:19:28","nodeType":"YulFunctionCall","src":"1022:19:28"}],"functionName":{"name":"and","nativeSrc":"1010:3:28","nodeType":"YulIdentifier","src":"1010:3:28"},"nativeSrc":"1010:32:28","nodeType":"YulFunctionCall","src":"1010:32:28"}],"functionName":{"name":"mstore","nativeSrc":"992:6:28","nodeType":"YulIdentifier","src":"992:6:28"},"nativeSrc":"992:51:28","nodeType":"YulFunctionCall","src":"992:51:28"},"nativeSrc":"992:51:28","nodeType":"YulExpressionStatement","src":"992:51:28"}]},"name":"abi_encode_tuple_t_contract$_IOFT_$1233__to_t_address__fromStack_reversed","nativeSrc":"833:216:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"916:9:28","nodeType":"YulTypedName","src":"916:9:28","type":""},{"name":"value0","nativeSrc":"927:6:28","nodeType":"YulTypedName","src":"927:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"938:4:28","nodeType":"YulTypedName","src":"938:4:28","type":""}],"src":"833:216:28"},{"body":{"nativeSrc":"1103:124:28","nodeType":"YulBlock","src":"1103:124:28","statements":[{"nativeSrc":"1113:29:28","nodeType":"YulAssignment","src":"1113:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"1135:6:28","nodeType":"YulIdentifier","src":"1135:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"1122:12:28","nodeType":"YulIdentifier","src":"1122:12:28"},"nativeSrc":"1122:20:28","nodeType":"YulFunctionCall","src":"1122:20:28"},"variableNames":[{"name":"value","nativeSrc":"1113:5:28","nodeType":"YulIdentifier","src":"1113:5:28"}]},{"body":{"nativeSrc":"1205:16:28","nodeType":"YulBlock","src":"1205:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1214:1:28","nodeType":"YulLiteral","src":"1214:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1217:1:28","nodeType":"YulLiteral","src":"1217:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1207:6:28","nodeType":"YulIdentifier","src":"1207:6:28"},"nativeSrc":"1207:12:28","nodeType":"YulFunctionCall","src":"1207:12:28"},"nativeSrc":"1207:12:28","nodeType":"YulExpressionStatement","src":"1207:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1164:5:28","nodeType":"YulIdentifier","src":"1164:5:28"},{"arguments":[{"name":"value","nativeSrc":"1175:5:28","nodeType":"YulIdentifier","src":"1175:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1190:3:28","nodeType":"YulLiteral","src":"1190:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"1195:1:28","nodeType":"YulLiteral","src":"1195:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1186:3:28","nodeType":"YulIdentifier","src":"1186:3:28"},"nativeSrc":"1186:11:28","nodeType":"YulFunctionCall","src":"1186:11:28"},{"kind":"number","nativeSrc":"1199:1:28","nodeType":"YulLiteral","src":"1199:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1182:3:28","nodeType":"YulIdentifier","src":"1182:3:28"},"nativeSrc":"1182:19:28","nodeType":"YulFunctionCall","src":"1182:19:28"}],"functionName":{"name":"and","nativeSrc":"1171:3:28","nodeType":"YulIdentifier","src":"1171:3:28"},"nativeSrc":"1171:31:28","nodeType":"YulFunctionCall","src":"1171:31:28"}],"functionName":{"name":"eq","nativeSrc":"1161:2:28","nodeType":"YulIdentifier","src":"1161:2:28"},"nativeSrc":"1161:42:28","nodeType":"YulFunctionCall","src":"1161:42:28"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:28","nodeType":"YulIdentifier","src":"1154:6:28"},"nativeSrc":"1154:50:28","nodeType":"YulFunctionCall","src":"1154:50:28"},"nativeSrc":"1151:70:28","nodeType":"YulIf","src":"1151:70:28"}]},"name":"abi_decode_address","nativeSrc":"1054:173:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1082:6:28","nodeType":"YulTypedName","src":"1082:6:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1093:5:28","nodeType":"YulTypedName","src":"1093:5:28","type":""}],"src":"1054:173:28"},{"body":{"nativeSrc":"1304:275:28","nodeType":"YulBlock","src":"1304:275:28","statements":[{"body":{"nativeSrc":"1353:16:28","nodeType":"YulBlock","src":"1353:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1362:1:28","nodeType":"YulLiteral","src":"1362:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1365:1:28","nodeType":"YulLiteral","src":"1365:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1355:6:28","nodeType":"YulIdentifier","src":"1355:6:28"},"nativeSrc":"1355:12:28","nodeType":"YulFunctionCall","src":"1355:12:28"},"nativeSrc":"1355:12:28","nodeType":"YulExpressionStatement","src":"1355:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1332:6:28","nodeType":"YulIdentifier","src":"1332:6:28"},{"kind":"number","nativeSrc":"1340:4:28","nodeType":"YulLiteral","src":"1340:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1328:3:28","nodeType":"YulIdentifier","src":"1328:3:28"},"nativeSrc":"1328:17:28","nodeType":"YulFunctionCall","src":"1328:17:28"},{"name":"end","nativeSrc":"1347:3:28","nodeType":"YulIdentifier","src":"1347:3:28"}],"functionName":{"name":"slt","nativeSrc":"1324:3:28","nodeType":"YulIdentifier","src":"1324:3:28"},"nativeSrc":"1324:27:28","nodeType":"YulFunctionCall","src":"1324:27:28"}],"functionName":{"name":"iszero","nativeSrc":"1317:6:28","nodeType":"YulIdentifier","src":"1317:6:28"},"nativeSrc":"1317:35:28","nodeType":"YulFunctionCall","src":"1317:35:28"},"nativeSrc":"1314:55:28","nodeType":"YulIf","src":"1314:55:28"},{"nativeSrc":"1378:30:28","nodeType":"YulAssignment","src":"1378:30:28","value":{"arguments":[{"name":"offset","nativeSrc":"1401:6:28","nodeType":"YulIdentifier","src":"1401:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"1388:12:28","nodeType":"YulIdentifier","src":"1388:12:28"},"nativeSrc":"1388:20:28","nodeType":"YulFunctionCall","src":"1388:20:28"},"variableNames":[{"name":"length","nativeSrc":"1378:6:28","nodeType":"YulIdentifier","src":"1378:6:28"}]},{"body":{"nativeSrc":"1451:16:28","nodeType":"YulBlock","src":"1451:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1460:1:28","nodeType":"YulLiteral","src":"1460:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1463:1:28","nodeType":"YulLiteral","src":"1463:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1453:6:28","nodeType":"YulIdentifier","src":"1453:6:28"},"nativeSrc":"1453:12:28","nodeType":"YulFunctionCall","src":"1453:12:28"},"nativeSrc":"1453:12:28","nodeType":"YulExpressionStatement","src":"1453:12:28"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1423:6:28","nodeType":"YulIdentifier","src":"1423:6:28"},{"kind":"number","nativeSrc":"1431:18:28","nodeType":"YulLiteral","src":"1431:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1420:2:28","nodeType":"YulIdentifier","src":"1420:2:28"},"nativeSrc":"1420:30:28","nodeType":"YulFunctionCall","src":"1420:30:28"},"nativeSrc":"1417:50:28","nodeType":"YulIf","src":"1417:50:28"},{"nativeSrc":"1476:29:28","nodeType":"YulAssignment","src":"1476:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"1492:6:28","nodeType":"YulIdentifier","src":"1492:6:28"},{"kind":"number","nativeSrc":"1500:4:28","nodeType":"YulLiteral","src":"1500:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1488:3:28","nodeType":"YulIdentifier","src":"1488:3:28"},"nativeSrc":"1488:17:28","nodeType":"YulFunctionCall","src":"1488:17:28"},"variableNames":[{"name":"arrayPos","nativeSrc":"1476:8:28","nodeType":"YulIdentifier","src":"1476:8:28"}]},{"body":{"nativeSrc":"1557:16:28","nodeType":"YulBlock","src":"1557:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1566:1:28","nodeType":"YulLiteral","src":"1566:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1569:1:28","nodeType":"YulLiteral","src":"1569:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1559:6:28","nodeType":"YulIdentifier","src":"1559:6:28"},"nativeSrc":"1559:12:28","nodeType":"YulFunctionCall","src":"1559:12:28"},"nativeSrc":"1559:12:28","nodeType":"YulExpressionStatement","src":"1559:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1528:6:28","nodeType":"YulIdentifier","src":"1528:6:28"},{"name":"length","nativeSrc":"1536:6:28","nodeType":"YulIdentifier","src":"1536:6:28"}],"functionName":{"name":"add","nativeSrc":"1524:3:28","nodeType":"YulIdentifier","src":"1524:3:28"},"nativeSrc":"1524:19:28","nodeType":"YulFunctionCall","src":"1524:19:28"},{"kind":"number","nativeSrc":"1545:4:28","nodeType":"YulLiteral","src":"1545:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1520:3:28","nodeType":"YulIdentifier","src":"1520:3:28"},"nativeSrc":"1520:30:28","nodeType":"YulFunctionCall","src":"1520:30:28"},{"name":"end","nativeSrc":"1552:3:28","nodeType":"YulIdentifier","src":"1552:3:28"}],"functionName":{"name":"gt","nativeSrc":"1517:2:28","nodeType":"YulIdentifier","src":"1517:2:28"},"nativeSrc":"1517:39:28","nodeType":"YulFunctionCall","src":"1517:39:28"},"nativeSrc":"1514:59:28","nodeType":"YulIf","src":"1514:59:28"}]},"name":"abi_decode_bytes_calldata","nativeSrc":"1232:347:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1267:6:28","nodeType":"YulTypedName","src":"1267:6:28","type":""},{"name":"end","nativeSrc":"1275:3:28","nodeType":"YulTypedName","src":"1275:3:28","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"1283:8:28","nodeType":"YulTypedName","src":"1283:8:28","type":""},{"name":"length","nativeSrc":"1293:6:28","nodeType":"YulTypedName","src":"1293:6:28","type":""}],"src":"1232:347:28"},{"body":{"nativeSrc":"1760:759:28","nodeType":"YulBlock","src":"1760:759:28","statements":[{"body":{"nativeSrc":"1807:16:28","nodeType":"YulBlock","src":"1807:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1816:1:28","nodeType":"YulLiteral","src":"1816:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1819:1:28","nodeType":"YulLiteral","src":"1819:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1809:6:28","nodeType":"YulIdentifier","src":"1809:6:28"},"nativeSrc":"1809:12:28","nodeType":"YulFunctionCall","src":"1809:12:28"},"nativeSrc":"1809:12:28","nodeType":"YulExpressionStatement","src":"1809:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1781:7:28","nodeType":"YulIdentifier","src":"1781:7:28"},{"name":"headStart","nativeSrc":"1790:9:28","nodeType":"YulIdentifier","src":"1790:9:28"}],"functionName":{"name":"sub","nativeSrc":"1777:3:28","nodeType":"YulIdentifier","src":"1777:3:28"},"nativeSrc":"1777:23:28","nodeType":"YulFunctionCall","src":"1777:23:28"},{"kind":"number","nativeSrc":"1802:3:28","nodeType":"YulLiteral","src":"1802:3:28","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"1773:3:28","nodeType":"YulIdentifier","src":"1773:3:28"},"nativeSrc":"1773:33:28","nodeType":"YulFunctionCall","src":"1773:33:28"},"nativeSrc":"1770:53:28","nodeType":"YulIf","src":"1770:53:28"},{"nativeSrc":"1832:39:28","nodeType":"YulAssignment","src":"1832:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1861:9:28","nodeType":"YulIdentifier","src":"1861:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1842:18:28","nodeType":"YulIdentifier","src":"1842:18:28"},"nativeSrc":"1842:29:28","nodeType":"YulFunctionCall","src":"1842:29:28"},"variableNames":[{"name":"value0","nativeSrc":"1832:6:28","nodeType":"YulIdentifier","src":"1832:6:28"}]},{"nativeSrc":"1880:42:28","nodeType":"YulAssignment","src":"1880:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1907:9:28","nodeType":"YulIdentifier","src":"1907:9:28"},{"kind":"number","nativeSrc":"1918:2:28","nodeType":"YulLiteral","src":"1918:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1903:3:28","nodeType":"YulIdentifier","src":"1903:3:28"},"nativeSrc":"1903:18:28","nodeType":"YulFunctionCall","src":"1903:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"1890:12:28","nodeType":"YulIdentifier","src":"1890:12:28"},"nativeSrc":"1890:32:28","nodeType":"YulFunctionCall","src":"1890:32:28"},"variableNames":[{"name":"value1","nativeSrc":"1880:6:28","nodeType":"YulIdentifier","src":"1880:6:28"}]},{"nativeSrc":"1931:46:28","nodeType":"YulVariableDeclaration","src":"1931:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1962:9:28","nodeType":"YulIdentifier","src":"1962:9:28"},{"kind":"number","nativeSrc":"1973:2:28","nodeType":"YulLiteral","src":"1973:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1958:3:28","nodeType":"YulIdentifier","src":"1958:3:28"},"nativeSrc":"1958:18:28","nodeType":"YulFunctionCall","src":"1958:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"1945:12:28","nodeType":"YulIdentifier","src":"1945:12:28"},"nativeSrc":"1945:32:28","nodeType":"YulFunctionCall","src":"1945:32:28"},"variables":[{"name":"offset","nativeSrc":"1935:6:28","nodeType":"YulTypedName","src":"1935:6:28","type":""}]},{"nativeSrc":"1986:28:28","nodeType":"YulVariableDeclaration","src":"1986:28:28","value":{"kind":"number","nativeSrc":"1996:18:28","nodeType":"YulLiteral","src":"1996:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"1990:2:28","nodeType":"YulTypedName","src":"1990:2:28","type":""}]},{"body":{"nativeSrc":"2041:16:28","nodeType":"YulBlock","src":"2041:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2050:1:28","nodeType":"YulLiteral","src":"2050:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2053:1:28","nodeType":"YulLiteral","src":"2053:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2043:6:28","nodeType":"YulIdentifier","src":"2043:6:28"},"nativeSrc":"2043:12:28","nodeType":"YulFunctionCall","src":"2043:12:28"},"nativeSrc":"2043:12:28","nodeType":"YulExpressionStatement","src":"2043:12:28"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2029:6:28","nodeType":"YulIdentifier","src":"2029:6:28"},{"name":"_1","nativeSrc":"2037:2:28","nodeType":"YulIdentifier","src":"2037:2:28"}],"functionName":{"name":"gt","nativeSrc":"2026:2:28","nodeType":"YulIdentifier","src":"2026:2:28"},"nativeSrc":"2026:14:28","nodeType":"YulFunctionCall","src":"2026:14:28"},"nativeSrc":"2023:34:28","nodeType":"YulIf","src":"2023:34:28"},{"nativeSrc":"2066:84:28","nodeType":"YulVariableDeclaration","src":"2066:84:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2122:9:28","nodeType":"YulIdentifier","src":"2122:9:28"},{"name":"offset","nativeSrc":"2133:6:28","nodeType":"YulIdentifier","src":"2133:6:28"}],"functionName":{"name":"add","nativeSrc":"2118:3:28","nodeType":"YulIdentifier","src":"2118:3:28"},"nativeSrc":"2118:22:28","nodeType":"YulFunctionCall","src":"2118:22:28"},{"name":"dataEnd","nativeSrc":"2142:7:28","nodeType":"YulIdentifier","src":"2142:7:28"}],"functionName":{"name":"abi_decode_bytes_calldata","nativeSrc":"2092:25:28","nodeType":"YulIdentifier","src":"2092:25:28"},"nativeSrc":"2092:58:28","nodeType":"YulFunctionCall","src":"2092:58:28"},"variables":[{"name":"value2_1","nativeSrc":"2070:8:28","nodeType":"YulTypedName","src":"2070:8:28","type":""},{"name":"value3_1","nativeSrc":"2080:8:28","nodeType":"YulTypedName","src":"2080:8:28","type":""}]},{"nativeSrc":"2159:18:28","nodeType":"YulAssignment","src":"2159:18:28","value":{"name":"value2_1","nativeSrc":"2169:8:28","nodeType":"YulIdentifier","src":"2169:8:28"},"variableNames":[{"name":"value2","nativeSrc":"2159:6:28","nodeType":"YulIdentifier","src":"2159:6:28"}]},{"nativeSrc":"2186:18:28","nodeType":"YulAssignment","src":"2186:18:28","value":{"name":"value3_1","nativeSrc":"2196:8:28","nodeType":"YulIdentifier","src":"2196:8:28"},"variableNames":[{"name":"value3","nativeSrc":"2186:6:28","nodeType":"YulIdentifier","src":"2186:6:28"}]},{"nativeSrc":"2213:48:28","nodeType":"YulAssignment","src":"2213:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2246:9:28","nodeType":"YulIdentifier","src":"2246:9:28"},{"kind":"number","nativeSrc":"2257:2:28","nodeType":"YulLiteral","src":"2257:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2242:3:28","nodeType":"YulIdentifier","src":"2242:3:28"},"nativeSrc":"2242:18:28","nodeType":"YulFunctionCall","src":"2242:18:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2223:18:28","nodeType":"YulIdentifier","src":"2223:18:28"},"nativeSrc":"2223:38:28","nodeType":"YulFunctionCall","src":"2223:38:28"},"variableNames":[{"name":"value4","nativeSrc":"2213:6:28","nodeType":"YulIdentifier","src":"2213:6:28"}]},{"nativeSrc":"2270:49:28","nodeType":"YulVariableDeclaration","src":"2270:49:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2303:9:28","nodeType":"YulIdentifier","src":"2303:9:28"},{"kind":"number","nativeSrc":"2314:3:28","nodeType":"YulLiteral","src":"2314:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2299:3:28","nodeType":"YulIdentifier","src":"2299:3:28"},"nativeSrc":"2299:19:28","nodeType":"YulFunctionCall","src":"2299:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"2286:12:28","nodeType":"YulIdentifier","src":"2286:12:28"},"nativeSrc":"2286:33:28","nodeType":"YulFunctionCall","src":"2286:33:28"},"variables":[{"name":"offset_1","nativeSrc":"2274:8:28","nodeType":"YulTypedName","src":"2274:8:28","type":""}]},{"body":{"nativeSrc":"2348:16:28","nodeType":"YulBlock","src":"2348:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2357:1:28","nodeType":"YulLiteral","src":"2357:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2360:1:28","nodeType":"YulLiteral","src":"2360:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2350:6:28","nodeType":"YulIdentifier","src":"2350:6:28"},"nativeSrc":"2350:12:28","nodeType":"YulFunctionCall","src":"2350:12:28"},"nativeSrc":"2350:12:28","nodeType":"YulExpressionStatement","src":"2350:12:28"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"2334:8:28","nodeType":"YulIdentifier","src":"2334:8:28"},{"name":"_1","nativeSrc":"2344:2:28","nodeType":"YulIdentifier","src":"2344:2:28"}],"functionName":{"name":"gt","nativeSrc":"2331:2:28","nodeType":"YulIdentifier","src":"2331:2:28"},"nativeSrc":"2331:16:28","nodeType":"YulFunctionCall","src":"2331:16:28"},"nativeSrc":"2328:36:28","nodeType":"YulIf","src":"2328:36:28"},{"nativeSrc":"2373:86:28","nodeType":"YulVariableDeclaration","src":"2373:86:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2429:9:28","nodeType":"YulIdentifier","src":"2429:9:28"},{"name":"offset_1","nativeSrc":"2440:8:28","nodeType":"YulIdentifier","src":"2440:8:28"}],"functionName":{"name":"add","nativeSrc":"2425:3:28","nodeType":"YulIdentifier","src":"2425:3:28"},"nativeSrc":"2425:24:28","nodeType":"YulFunctionCall","src":"2425:24:28"},{"name":"dataEnd","nativeSrc":"2451:7:28","nodeType":"YulIdentifier","src":"2451:7:28"}],"functionName":{"name":"abi_decode_bytes_calldata","nativeSrc":"2399:25:28","nodeType":"YulIdentifier","src":"2399:25:28"},"nativeSrc":"2399:60:28","nodeType":"YulFunctionCall","src":"2399:60:28"},"variables":[{"name":"value5_1","nativeSrc":"2377:8:28","nodeType":"YulTypedName","src":"2377:8:28","type":""},{"name":"value6_1","nativeSrc":"2387:8:28","nodeType":"YulTypedName","src":"2387:8:28","type":""}]},{"nativeSrc":"2468:18:28","nodeType":"YulAssignment","src":"2468:18:28","value":{"name":"value5_1","nativeSrc":"2478:8:28","nodeType":"YulIdentifier","src":"2478:8:28"},"variableNames":[{"name":"value5","nativeSrc":"2468:6:28","nodeType":"YulIdentifier","src":"2468:6:28"}]},{"nativeSrc":"2495:18:28","nodeType":"YulAssignment","src":"2495:18:28","value":{"name":"value6_1","nativeSrc":"2505:8:28","nodeType":"YulIdentifier","src":"2505:8:28"},"variableNames":[{"name":"value6","nativeSrc":"2495:6:28","nodeType":"YulIdentifier","src":"2495:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr","nativeSrc":"1584:935:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1678:9:28","nodeType":"YulTypedName","src":"1678:9:28","type":""},{"name":"dataEnd","nativeSrc":"1689:7:28","nodeType":"YulTypedName","src":"1689:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1701:6:28","nodeType":"YulTypedName","src":"1701:6:28","type":""},{"name":"value1","nativeSrc":"1709:6:28","nodeType":"YulTypedName","src":"1709:6:28","type":""},{"name":"value2","nativeSrc":"1717:6:28","nodeType":"YulTypedName","src":"1717:6:28","type":""},{"name":"value3","nativeSrc":"1725:6:28","nodeType":"YulTypedName","src":"1725:6:28","type":""},{"name":"value4","nativeSrc":"1733:6:28","nodeType":"YulTypedName","src":"1733:6:28","type":""},{"name":"value5","nativeSrc":"1741:6:28","nodeType":"YulTypedName","src":"1741:6:28","type":""},{"name":"value6","nativeSrc":"1749:6:28","nodeType":"YulTypedName","src":"1749:6:28","type":""}],"src":"1584:935:28"},{"body":{"nativeSrc":"2640:102:28","nodeType":"YulBlock","src":"2640:102:28","statements":[{"nativeSrc":"2650:26:28","nodeType":"YulAssignment","src":"2650:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2662:9:28","nodeType":"YulIdentifier","src":"2662:9:28"},{"kind":"number","nativeSrc":"2673:2:28","nodeType":"YulLiteral","src":"2673:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2658:3:28","nodeType":"YulIdentifier","src":"2658:3:28"},"nativeSrc":"2658:18:28","nodeType":"YulFunctionCall","src":"2658:18:28"},"variableNames":[{"name":"tail","nativeSrc":"2650:4:28","nodeType":"YulIdentifier","src":"2650:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2692:9:28","nodeType":"YulIdentifier","src":"2692:9:28"},{"arguments":[{"name":"value0","nativeSrc":"2707:6:28","nodeType":"YulIdentifier","src":"2707:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2723:3:28","nodeType":"YulLiteral","src":"2723:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"2728:1:28","nodeType":"YulLiteral","src":"2728:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2719:3:28","nodeType":"YulIdentifier","src":"2719:3:28"},"nativeSrc":"2719:11:28","nodeType":"YulFunctionCall","src":"2719:11:28"},{"kind":"number","nativeSrc":"2732:1:28","nodeType":"YulLiteral","src":"2732:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2715:3:28","nodeType":"YulIdentifier","src":"2715:3:28"},"nativeSrc":"2715:19:28","nodeType":"YulFunctionCall","src":"2715:19:28"}],"functionName":{"name":"and","nativeSrc":"2703:3:28","nodeType":"YulIdentifier","src":"2703:3:28"},"nativeSrc":"2703:32:28","nodeType":"YulFunctionCall","src":"2703:32:28"}],"functionName":{"name":"mstore","nativeSrc":"2685:6:28","nodeType":"YulIdentifier","src":"2685:6:28"},"nativeSrc":"2685:51:28","nodeType":"YulFunctionCall","src":"2685:51:28"},"nativeSrc":"2685:51:28","nodeType":"YulExpressionStatement","src":"2685:51:28"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$2218__to_t_address__fromStack_reversed","nativeSrc":"2524:218:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2609:9:28","nodeType":"YulTypedName","src":"2609:9:28","type":""},{"name":"value0","nativeSrc":"2620:6:28","nodeType":"YulTypedName","src":"2620:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2631:4:28","nodeType":"YulTypedName","src":"2631:4:28","type":""}],"src":"2524:218:28"},{"body":{"nativeSrc":"2876:175:28","nodeType":"YulBlock","src":"2876:175:28","statements":[{"nativeSrc":"2886:26:28","nodeType":"YulAssignment","src":"2886:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2898:9:28","nodeType":"YulIdentifier","src":"2898:9:28"},{"kind":"number","nativeSrc":"2909:2:28","nodeType":"YulLiteral","src":"2909:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2894:3:28","nodeType":"YulIdentifier","src":"2894:3:28"},"nativeSrc":"2894:18:28","nodeType":"YulFunctionCall","src":"2894:18:28"},"variableNames":[{"name":"tail","nativeSrc":"2886:4:28","nodeType":"YulIdentifier","src":"2886:4:28"}]},{"nativeSrc":"2921:29:28","nodeType":"YulVariableDeclaration","src":"2921:29:28","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2939:3:28","nodeType":"YulLiteral","src":"2939:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"2944:1:28","nodeType":"YulLiteral","src":"2944:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2935:3:28","nodeType":"YulIdentifier","src":"2935:3:28"},"nativeSrc":"2935:11:28","nodeType":"YulFunctionCall","src":"2935:11:28"},{"kind":"number","nativeSrc":"2948:1:28","nodeType":"YulLiteral","src":"2948:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2931:3:28","nodeType":"YulIdentifier","src":"2931:3:28"},"nativeSrc":"2931:19:28","nodeType":"YulFunctionCall","src":"2931:19:28"},"variables":[{"name":"_1","nativeSrc":"2925:2:28","nodeType":"YulTypedName","src":"2925:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2966:9:28","nodeType":"YulIdentifier","src":"2966:9:28"},{"arguments":[{"name":"value0","nativeSrc":"2981:6:28","nodeType":"YulIdentifier","src":"2981:6:28"},{"name":"_1","nativeSrc":"2989:2:28","nodeType":"YulIdentifier","src":"2989:2:28"}],"functionName":{"name":"and","nativeSrc":"2977:3:28","nodeType":"YulIdentifier","src":"2977:3:28"},"nativeSrc":"2977:15:28","nodeType":"YulFunctionCall","src":"2977:15:28"}],"functionName":{"name":"mstore","nativeSrc":"2959:6:28","nodeType":"YulIdentifier","src":"2959:6:28"},"nativeSrc":"2959:34:28","nodeType":"YulFunctionCall","src":"2959:34:28"},"nativeSrc":"2959:34:28","nodeType":"YulExpressionStatement","src":"2959:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3013:9:28","nodeType":"YulIdentifier","src":"3013:9:28"},{"kind":"number","nativeSrc":"3024:2:28","nodeType":"YulLiteral","src":"3024:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3009:3:28","nodeType":"YulIdentifier","src":"3009:3:28"},"nativeSrc":"3009:18:28","nodeType":"YulFunctionCall","src":"3009:18:28"},{"arguments":[{"name":"value1","nativeSrc":"3033:6:28","nodeType":"YulIdentifier","src":"3033:6:28"},{"name":"_1","nativeSrc":"3041:2:28","nodeType":"YulIdentifier","src":"3041:2:28"}],"functionName":{"name":"and","nativeSrc":"3029:3:28","nodeType":"YulIdentifier","src":"3029:3:28"},"nativeSrc":"3029:15:28","nodeType":"YulFunctionCall","src":"3029:15:28"}],"functionName":{"name":"mstore","nativeSrc":"3002:6:28","nodeType":"YulIdentifier","src":"3002:6:28"},"nativeSrc":"3002:43:28","nodeType":"YulFunctionCall","src":"3002:43:28"},"nativeSrc":"3002:43:28","nodeType":"YulExpressionStatement","src":"3002:43:28"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"2747:304:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2837:9:28","nodeType":"YulTypedName","src":"2837:9:28","type":""},{"name":"value1","nativeSrc":"2848:6:28","nodeType":"YulTypedName","src":"2848:6:28","type":""},{"name":"value0","nativeSrc":"2856:6:28","nodeType":"YulTypedName","src":"2856:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2867:4:28","nodeType":"YulTypedName","src":"2867:4:28","type":""}],"src":"2747:304:28"},{"body":{"nativeSrc":"3203:455:28","nodeType":"YulBlock","src":"3203:455:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3220:9:28","nodeType":"YulIdentifier","src":"3220:9:28"},{"kind":"number","nativeSrc":"3231:2:28","nodeType":"YulLiteral","src":"3231:2:28","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"3213:6:28","nodeType":"YulIdentifier","src":"3213:6:28"},"nativeSrc":"3213:21:28","nodeType":"YulFunctionCall","src":"3213:21:28"},"nativeSrc":"3213:21:28","nodeType":"YulExpressionStatement","src":"3213:21:28"},{"nativeSrc":"3243:27:28","nodeType":"YulVariableDeclaration","src":"3243:27:28","value":{"arguments":[{"name":"value0","nativeSrc":"3263:6:28","nodeType":"YulIdentifier","src":"3263:6:28"}],"functionName":{"name":"mload","nativeSrc":"3257:5:28","nodeType":"YulIdentifier","src":"3257:5:28"},"nativeSrc":"3257:13:28","nodeType":"YulFunctionCall","src":"3257:13:28"},"variables":[{"name":"length","nativeSrc":"3247:6:28","nodeType":"YulTypedName","src":"3247:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3290:9:28","nodeType":"YulIdentifier","src":"3290:9:28"},{"kind":"number","nativeSrc":"3301:2:28","nodeType":"YulLiteral","src":"3301:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3286:3:28","nodeType":"YulIdentifier","src":"3286:3:28"},"nativeSrc":"3286:18:28","nodeType":"YulFunctionCall","src":"3286:18:28"},{"name":"length","nativeSrc":"3306:6:28","nodeType":"YulIdentifier","src":"3306:6:28"}],"functionName":{"name":"mstore","nativeSrc":"3279:6:28","nodeType":"YulIdentifier","src":"3279:6:28"},"nativeSrc":"3279:34:28","nodeType":"YulFunctionCall","src":"3279:34:28"},"nativeSrc":"3279:34:28","nodeType":"YulExpressionStatement","src":"3279:34:28"},{"nativeSrc":"3322:10:28","nodeType":"YulVariableDeclaration","src":"3322:10:28","value":{"kind":"number","nativeSrc":"3331:1:28","nodeType":"YulLiteral","src":"3331:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3326:1:28","nodeType":"YulTypedName","src":"3326:1:28","type":""}]},{"body":{"nativeSrc":"3393:92:28","nodeType":"YulBlock","src":"3393:92:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3422:9:28","nodeType":"YulIdentifier","src":"3422:9:28"},{"name":"i","nativeSrc":"3433:1:28","nodeType":"YulIdentifier","src":"3433:1:28"}],"functionName":{"name":"add","nativeSrc":"3418:3:28","nodeType":"YulIdentifier","src":"3418:3:28"},"nativeSrc":"3418:17:28","nodeType":"YulFunctionCall","src":"3418:17:28"},{"kind":"number","nativeSrc":"3437:2:28","nodeType":"YulLiteral","src":"3437:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3414:3:28","nodeType":"YulIdentifier","src":"3414:3:28"},"nativeSrc":"3414:26:28","nodeType":"YulFunctionCall","src":"3414:26:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"3456:6:28","nodeType":"YulIdentifier","src":"3456:6:28"},{"name":"i","nativeSrc":"3464:1:28","nodeType":"YulIdentifier","src":"3464:1:28"}],"functionName":{"name":"add","nativeSrc":"3452:3:28","nodeType":"YulIdentifier","src":"3452:3:28"},"nativeSrc":"3452:14:28","nodeType":"YulFunctionCall","src":"3452:14:28"},{"kind":"number","nativeSrc":"3468:4:28","nodeType":"YulLiteral","src":"3468:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3448:3:28","nodeType":"YulIdentifier","src":"3448:3:28"},"nativeSrc":"3448:25:28","nodeType":"YulFunctionCall","src":"3448:25:28"}],"functionName":{"name":"mload","nativeSrc":"3442:5:28","nodeType":"YulIdentifier","src":"3442:5:28"},"nativeSrc":"3442:32:28","nodeType":"YulFunctionCall","src":"3442:32:28"}],"functionName":{"name":"mstore","nativeSrc":"3407:6:28","nodeType":"YulIdentifier","src":"3407:6:28"},"nativeSrc":"3407:68:28","nodeType":"YulFunctionCall","src":"3407:68:28"},"nativeSrc":"3407:68:28","nodeType":"YulExpressionStatement","src":"3407:68:28"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3352:1:28","nodeType":"YulIdentifier","src":"3352:1:28"},{"name":"length","nativeSrc":"3355:6:28","nodeType":"YulIdentifier","src":"3355:6:28"}],"functionName":{"name":"lt","nativeSrc":"3349:2:28","nodeType":"YulIdentifier","src":"3349:2:28"},"nativeSrc":"3349:13:28","nodeType":"YulFunctionCall","src":"3349:13:28"},"nativeSrc":"3341:144:28","nodeType":"YulForLoop","post":{"nativeSrc":"3363:21:28","nodeType":"YulBlock","src":"3363:21:28","statements":[{"nativeSrc":"3365:17:28","nodeType":"YulAssignment","src":"3365:17:28","value":{"arguments":[{"name":"i","nativeSrc":"3374:1:28","nodeType":"YulIdentifier","src":"3374:1:28"},{"kind":"number","nativeSrc":"3377:4:28","nodeType":"YulLiteral","src":"3377:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3370:3:28","nodeType":"YulIdentifier","src":"3370:3:28"},"nativeSrc":"3370:12:28","nodeType":"YulFunctionCall","src":"3370:12:28"},"variableNames":[{"name":"i","nativeSrc":"3365:1:28","nodeType":"YulIdentifier","src":"3365:1:28"}]}]},"pre":{"nativeSrc":"3345:3:28","nodeType":"YulBlock","src":"3345:3:28","statements":[]},"src":"3341:144:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3509:9:28","nodeType":"YulIdentifier","src":"3509:9:28"},{"name":"length","nativeSrc":"3520:6:28","nodeType":"YulIdentifier","src":"3520:6:28"}],"functionName":{"name":"add","nativeSrc":"3505:3:28","nodeType":"YulIdentifier","src":"3505:3:28"},"nativeSrc":"3505:22:28","nodeType":"YulFunctionCall","src":"3505:22:28"},{"kind":"number","nativeSrc":"3529:2:28","nodeType":"YulLiteral","src":"3529:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3501:3:28","nodeType":"YulIdentifier","src":"3501:3:28"},"nativeSrc":"3501:31:28","nodeType":"YulFunctionCall","src":"3501:31:28"},{"kind":"number","nativeSrc":"3534:1:28","nodeType":"YulLiteral","src":"3534:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3494:6:28","nodeType":"YulIdentifier","src":"3494:6:28"},"nativeSrc":"3494:42:28","nodeType":"YulFunctionCall","src":"3494:42:28"},"nativeSrc":"3494:42:28","nodeType":"YulExpressionStatement","src":"3494:42:28"},{"nativeSrc":"3545:62:28","nodeType":"YulAssignment","src":"3545:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3561:9:28","nodeType":"YulIdentifier","src":"3561:9:28"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3580:6:28","nodeType":"YulIdentifier","src":"3580:6:28"},{"kind":"number","nativeSrc":"3588:2:28","nodeType":"YulLiteral","src":"3588:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3576:3:28","nodeType":"YulIdentifier","src":"3576:3:28"},"nativeSrc":"3576:15:28","nodeType":"YulFunctionCall","src":"3576:15:28"},{"arguments":[{"kind":"number","nativeSrc":"3597:2:28","nodeType":"YulLiteral","src":"3597:2:28","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3593:3:28","nodeType":"YulIdentifier","src":"3593:3:28"},"nativeSrc":"3593:7:28","nodeType":"YulFunctionCall","src":"3593:7:28"}],"functionName":{"name":"and","nativeSrc":"3572:3:28","nodeType":"YulIdentifier","src":"3572:3:28"},"nativeSrc":"3572:29:28","nodeType":"YulFunctionCall","src":"3572:29:28"}],"functionName":{"name":"add","nativeSrc":"3557:3:28","nodeType":"YulIdentifier","src":"3557:3:28"},"nativeSrc":"3557:45:28","nodeType":"YulFunctionCall","src":"3557:45:28"},{"kind":"number","nativeSrc":"3604:2:28","nodeType":"YulLiteral","src":"3604:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3553:3:28","nodeType":"YulIdentifier","src":"3553:3:28"},"nativeSrc":"3553:54:28","nodeType":"YulFunctionCall","src":"3553:54:28"},"variableNames":[{"name":"tail","nativeSrc":"3545:4:28","nodeType":"YulIdentifier","src":"3545:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3627:9:28","nodeType":"YulIdentifier","src":"3627:9:28"},{"kind":"number","nativeSrc":"3638:4:28","nodeType":"YulLiteral","src":"3638:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3623:3:28","nodeType":"YulIdentifier","src":"3623:3:28"},"nativeSrc":"3623:20:28","nodeType":"YulFunctionCall","src":"3623:20:28"},{"name":"value1","nativeSrc":"3645:6:28","nodeType":"YulIdentifier","src":"3645:6:28"}],"functionName":{"name":"mstore","nativeSrc":"3616:6:28","nodeType":"YulIdentifier","src":"3616:6:28"},"nativeSrc":"3616:36:28","nodeType":"YulFunctionCall","src":"3616:36:28"},"nativeSrc":"3616:36:28","nodeType":"YulExpressionStatement","src":"3616:36:28"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"3056:602:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3164:9:28","nodeType":"YulTypedName","src":"3164:9:28","type":""},{"name":"value1","nativeSrc":"3175:6:28","nodeType":"YulTypedName","src":"3175:6:28","type":""},{"name":"value0","nativeSrc":"3183:6:28","nodeType":"YulTypedName","src":"3183:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3194:4:28","nodeType":"YulTypedName","src":"3194:4:28","type":""}],"src":"3056:602:28"},{"body":{"nativeSrc":"3757:281:28","nodeType":"YulBlock","src":"3757:281:28","statements":[{"nativeSrc":"3767:26:28","nodeType":"YulVariableDeclaration","src":"3767:26:28","value":{"arguments":[{"name":"array","nativeSrc":"3787:5:28","nodeType":"YulIdentifier","src":"3787:5:28"}],"functionName":{"name":"mload","nativeSrc":"3781:5:28","nodeType":"YulIdentifier","src":"3781:5:28"},"nativeSrc":"3781:12:28","nodeType":"YulFunctionCall","src":"3781:12:28"},"variables":[{"name":"length","nativeSrc":"3771:6:28","nodeType":"YulTypedName","src":"3771:6:28","type":""}]},{"nativeSrc":"3802:33:28","nodeType":"YulVariableDeclaration","src":"3802:33:28","value":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"3822:5:28","nodeType":"YulIdentifier","src":"3822:5:28"},{"kind":"number","nativeSrc":"3829:4:28","nodeType":"YulLiteral","src":"3829:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3818:3:28","nodeType":"YulIdentifier","src":"3818:3:28"},"nativeSrc":"3818:16:28","nodeType":"YulFunctionCall","src":"3818:16:28"}],"functionName":{"name":"mload","nativeSrc":"3812:5:28","nodeType":"YulIdentifier","src":"3812:5:28"},"nativeSrc":"3812:23:28","nodeType":"YulFunctionCall","src":"3812:23:28"},"variables":[{"name":"_1","nativeSrc":"3806:2:28","nodeType":"YulTypedName","src":"3806:2:28","type":""}]},{"nativeSrc":"3844:41:28","nodeType":"YulVariableDeclaration","src":"3844:41:28","value":{"arguments":[{"kind":"number","nativeSrc":"3858:26:28","nodeType":"YulLiteral","src":"3858:26:28","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"3854:3:28","nodeType":"YulIdentifier","src":"3854:3:28"},"nativeSrc":"3854:31:28","nodeType":"YulFunctionCall","src":"3854:31:28"},"variables":[{"name":"_2","nativeSrc":"3848:2:28","nodeType":"YulTypedName","src":"3848:2:28","type":""}]},{"nativeSrc":"3894:20:28","nodeType":"YulAssignment","src":"3894:20:28","value":{"arguments":[{"name":"_1","nativeSrc":"3907:2:28","nodeType":"YulIdentifier","src":"3907:2:28"},{"name":"_2","nativeSrc":"3911:2:28","nodeType":"YulIdentifier","src":"3911:2:28"}],"functionName":{"name":"and","nativeSrc":"3903:3:28","nodeType":"YulIdentifier","src":"3903:3:28"},"nativeSrc":"3903:11:28","nodeType":"YulFunctionCall","src":"3903:11:28"},"variableNames":[{"name":"value","nativeSrc":"3894:5:28","nodeType":"YulIdentifier","src":"3894:5:28"}]},{"body":{"nativeSrc":"3949:83:28","nodeType":"YulBlock","src":"3949:83:28","statements":[{"nativeSrc":"3963:59:28","nodeType":"YulAssignment","src":"3963:59:28","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"3980:2:28","nodeType":"YulIdentifier","src":"3980:2:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3992:1:28","nodeType":"YulLiteral","src":"3992:1:28","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"3999:2:28","nodeType":"YulLiteral","src":"3999:2:28","type":"","value":"20"},{"name":"length","nativeSrc":"4003:6:28","nodeType":"YulIdentifier","src":"4003:6:28"}],"functionName":{"name":"sub","nativeSrc":"3995:3:28","nodeType":"YulIdentifier","src":"3995:3:28"},"nativeSrc":"3995:15:28","nodeType":"YulFunctionCall","src":"3995:15:28"}],"functionName":{"name":"shl","nativeSrc":"3988:3:28","nodeType":"YulIdentifier","src":"3988:3:28"},"nativeSrc":"3988:23:28","nodeType":"YulFunctionCall","src":"3988:23:28"},{"name":"_2","nativeSrc":"4013:2:28","nodeType":"YulIdentifier","src":"4013:2:28"}],"functionName":{"name":"shl","nativeSrc":"3984:3:28","nodeType":"YulIdentifier","src":"3984:3:28"},"nativeSrc":"3984:32:28","nodeType":"YulFunctionCall","src":"3984:32:28"}],"functionName":{"name":"and","nativeSrc":"3976:3:28","nodeType":"YulIdentifier","src":"3976:3:28"},"nativeSrc":"3976:41:28","nodeType":"YulFunctionCall","src":"3976:41:28"},{"name":"_2","nativeSrc":"4019:2:28","nodeType":"YulIdentifier","src":"4019:2:28"}],"functionName":{"name":"and","nativeSrc":"3972:3:28","nodeType":"YulIdentifier","src":"3972:3:28"},"nativeSrc":"3972:50:28","nodeType":"YulFunctionCall","src":"3972:50:28"},"variableNames":[{"name":"value","nativeSrc":"3963:5:28","nodeType":"YulIdentifier","src":"3963:5:28"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3929:6:28","nodeType":"YulIdentifier","src":"3929:6:28"},{"kind":"number","nativeSrc":"3937:2:28","nodeType":"YulLiteral","src":"3937:2:28","type":"","value":"20"}],"functionName":{"name":"lt","nativeSrc":"3926:2:28","nodeType":"YulIdentifier","src":"3926:2:28"},"nativeSrc":"3926:14:28","nodeType":"YulFunctionCall","src":"3926:14:28"},"nativeSrc":"3923:109:28","nodeType":"YulIf","src":"3923:109:28"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20","nativeSrc":"3663:375:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"3737:5:28","nodeType":"YulTypedName","src":"3737:5:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3747:5:28","nodeType":"YulTypedName","src":"3747:5:28","type":""}],"src":"3663:375:28"},{"body":{"nativeSrc":"4234:14:28","nodeType":"YulBlock","src":"4234:14:28","statements":[{"nativeSrc":"4236:10:28","nodeType":"YulAssignment","src":"4236:10:28","value":{"name":"pos","nativeSrc":"4243:3:28","nodeType":"YulIdentifier","src":"4243:3:28"},"variableNames":[{"name":"end","nativeSrc":"4236:3:28","nodeType":"YulIdentifier","src":"4236:3:28"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"4043:205:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4218:3:28","nodeType":"YulTypedName","src":"4218:3:28","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4226:3:28","nodeType":"YulTypedName","src":"4226:3:28","type":""}],"src":"4043:205:28"},{"body":{"nativeSrc":"4427:182:28","nodeType":"YulBlock","src":"4427:182:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4444:9:28","nodeType":"YulIdentifier","src":"4444:9:28"},{"kind":"number","nativeSrc":"4455:2:28","nodeType":"YulLiteral","src":"4455:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4437:6:28","nodeType":"YulIdentifier","src":"4437:6:28"},"nativeSrc":"4437:21:28","nodeType":"YulFunctionCall","src":"4437:21:28"},"nativeSrc":"4437:21:28","nodeType":"YulExpressionStatement","src":"4437:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4478:9:28","nodeType":"YulIdentifier","src":"4478:9:28"},{"kind":"number","nativeSrc":"4489:2:28","nodeType":"YulLiteral","src":"4489:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4474:3:28","nodeType":"YulIdentifier","src":"4474:3:28"},"nativeSrc":"4474:18:28","nodeType":"YulFunctionCall","src":"4474:18:28"},{"kind":"number","nativeSrc":"4494:2:28","nodeType":"YulLiteral","src":"4494:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4467:6:28","nodeType":"YulIdentifier","src":"4467:6:28"},"nativeSrc":"4467:30:28","nodeType":"YulFunctionCall","src":"4467:30:28"},"nativeSrc":"4467:30:28","nodeType":"YulExpressionStatement","src":"4467:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4517:9:28","nodeType":"YulIdentifier","src":"4517:9:28"},{"kind":"number","nativeSrc":"4528:2:28","nodeType":"YulLiteral","src":"4528:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4513:3:28","nodeType":"YulIdentifier","src":"4513:3:28"},"nativeSrc":"4513:18:28","nodeType":"YulFunctionCall","src":"4513:18:28"},{"hexValue":"4661696c656420746f2073656e64204859504520746f204879706572436f7265","kind":"string","nativeSrc":"4533:34:28","nodeType":"YulLiteral","src":"4533:34:28","type":"","value":"Failed to send HYPE to HyperCore"}],"functionName":{"name":"mstore","nativeSrc":"4506:6:28","nodeType":"YulIdentifier","src":"4506:6:28"},"nativeSrc":"4506:62:28","nodeType":"YulFunctionCall","src":"4506:62:28"},"nativeSrc":"4506:62:28","nodeType":"YulExpressionStatement","src":"4506:62:28"},{"nativeSrc":"4577:26:28","nodeType":"YulAssignment","src":"4577:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"4589:9:28","nodeType":"YulIdentifier","src":"4589:9:28"},{"kind":"number","nativeSrc":"4600:2:28","nodeType":"YulLiteral","src":"4600:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4585:3:28","nodeType":"YulIdentifier","src":"4585:3:28"},"nativeSrc":"4585:18:28","nodeType":"YulFunctionCall","src":"4585:18:28"},"variableNames":[{"name":"tail","nativeSrc":"4577:4:28","nodeType":"YulIdentifier","src":"4577:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f36cc36cc2d8409d2a1ca675856db8c0ac40991b9e411e41e2b8bba2f8104fb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4253:356:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4404:9:28","nodeType":"YulTypedName","src":"4404:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4418:4:28","nodeType":"YulTypedName","src":"4418:4:28","type":""}],"src":"4253:356:28"},{"body":{"nativeSrc":"4646:95:28","nodeType":"YulBlock","src":"4646:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4663:1:28","nodeType":"YulLiteral","src":"4663:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4670:3:28","nodeType":"YulLiteral","src":"4670:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"4675:10:28","nodeType":"YulLiteral","src":"4675:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4666:3:28","nodeType":"YulIdentifier","src":"4666:3:28"},"nativeSrc":"4666:20:28","nodeType":"YulFunctionCall","src":"4666:20:28"}],"functionName":{"name":"mstore","nativeSrc":"4656:6:28","nodeType":"YulIdentifier","src":"4656:6:28"},"nativeSrc":"4656:31:28","nodeType":"YulFunctionCall","src":"4656:31:28"},"nativeSrc":"4656:31:28","nodeType":"YulExpressionStatement","src":"4656:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4703:1:28","nodeType":"YulLiteral","src":"4703:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"4706:4:28","nodeType":"YulLiteral","src":"4706:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"4696:6:28","nodeType":"YulIdentifier","src":"4696:6:28"},"nativeSrc":"4696:15:28","nodeType":"YulFunctionCall","src":"4696:15:28"},"nativeSrc":"4696:15:28","nodeType":"YulExpressionStatement","src":"4696:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4727:1:28","nodeType":"YulLiteral","src":"4727:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"4730:4:28","nodeType":"YulLiteral","src":"4730:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4720:6:28","nodeType":"YulIdentifier","src":"4720:6:28"},"nativeSrc":"4720:15:28","nodeType":"YulFunctionCall","src":"4720:15:28"},"nativeSrc":"4720:15:28","nodeType":"YulExpressionStatement","src":"4720:15:28"}]},"name":"panic_error_0x11","nativeSrc":"4614:127:28","nodeType":"YulFunctionDefinition","src":"4614:127:28"},{"body":{"nativeSrc":"4810:352:28","nodeType":"YulBlock","src":"4810:352:28","statements":[{"nativeSrc":"4820:16:28","nodeType":"YulVariableDeclaration","src":"4820:16:28","value":{"kind":"number","nativeSrc":"4835:1:28","nodeType":"YulLiteral","src":"4835:1:28","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"4824:7:28","nodeType":"YulTypedName","src":"4824:7:28","type":""}]},{"nativeSrc":"4845:10:28","nodeType":"YulAssignment","src":"4845:10:28","value":{"kind":"number","nativeSrc":"4854:1:28","nodeType":"YulLiteral","src":"4854:1:28","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"4845:5:28","nodeType":"YulIdentifier","src":"4845:5:28"}]},{"nativeSrc":"4864:13:28","nodeType":"YulAssignment","src":"4864:13:28","value":{"name":"_base","nativeSrc":"4872:5:28","nodeType":"YulIdentifier","src":"4872:5:28"},"variableNames":[{"name":"base","nativeSrc":"4864:4:28","nodeType":"YulIdentifier","src":"4864:4:28"}]},{"body":{"nativeSrc":"4928:228:28","nodeType":"YulBlock","src":"4928:228:28","statements":[{"body":{"nativeSrc":"4973:22:28","nodeType":"YulBlock","src":"4973:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4975:16:28","nodeType":"YulIdentifier","src":"4975:16:28"},"nativeSrc":"4975:18:28","nodeType":"YulFunctionCall","src":"4975:18:28"},"nativeSrc":"4975:18:28","nodeType":"YulExpressionStatement","src":"4975:18:28"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"4948:4:28","nodeType":"YulIdentifier","src":"4948:4:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4962:1:28","nodeType":"YulLiteral","src":"4962:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4958:3:28","nodeType":"YulIdentifier","src":"4958:3:28"},"nativeSrc":"4958:6:28","nodeType":"YulFunctionCall","src":"4958:6:28"},{"name":"base","nativeSrc":"4966:4:28","nodeType":"YulIdentifier","src":"4966:4:28"}],"functionName":{"name":"div","nativeSrc":"4954:3:28","nodeType":"YulIdentifier","src":"4954:3:28"},"nativeSrc":"4954:17:28","nodeType":"YulFunctionCall","src":"4954:17:28"}],"functionName":{"name":"gt","nativeSrc":"4945:2:28","nodeType":"YulIdentifier","src":"4945:2:28"},"nativeSrc":"4945:27:28","nodeType":"YulFunctionCall","src":"4945:27:28"},"nativeSrc":"4942:53:28","nodeType":"YulIf","src":"4942:53:28"},{"body":{"nativeSrc":"5034:29:28","nodeType":"YulBlock","src":"5034:29:28","statements":[{"nativeSrc":"5036:25:28","nodeType":"YulAssignment","src":"5036:25:28","value":{"arguments":[{"name":"power","nativeSrc":"5049:5:28","nodeType":"YulIdentifier","src":"5049:5:28"},{"name":"base","nativeSrc":"5056:4:28","nodeType":"YulIdentifier","src":"5056:4:28"}],"functionName":{"name":"mul","nativeSrc":"5045:3:28","nodeType":"YulIdentifier","src":"5045:3:28"},"nativeSrc":"5045:16:28","nodeType":"YulFunctionCall","src":"5045:16:28"},"variableNames":[{"name":"power","nativeSrc":"5036:5:28","nodeType":"YulIdentifier","src":"5036:5:28"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"5015:8:28","nodeType":"YulIdentifier","src":"5015:8:28"},{"name":"power_1","nativeSrc":"5025:7:28","nodeType":"YulIdentifier","src":"5025:7:28"}],"functionName":{"name":"and","nativeSrc":"5011:3:28","nodeType":"YulIdentifier","src":"5011:3:28"},"nativeSrc":"5011:22:28","nodeType":"YulFunctionCall","src":"5011:22:28"},"nativeSrc":"5008:55:28","nodeType":"YulIf","src":"5008:55:28"},{"nativeSrc":"5076:23:28","nodeType":"YulAssignment","src":"5076:23:28","value":{"arguments":[{"name":"base","nativeSrc":"5088:4:28","nodeType":"YulIdentifier","src":"5088:4:28"},{"name":"base","nativeSrc":"5094:4:28","nodeType":"YulIdentifier","src":"5094:4:28"}],"functionName":{"name":"mul","nativeSrc":"5084:3:28","nodeType":"YulIdentifier","src":"5084:3:28"},"nativeSrc":"5084:15:28","nodeType":"YulFunctionCall","src":"5084:15:28"},"variableNames":[{"name":"base","nativeSrc":"5076:4:28","nodeType":"YulIdentifier","src":"5076:4:28"}]},{"nativeSrc":"5112:34:28","nodeType":"YulAssignment","src":"5112:34:28","value":{"arguments":[{"name":"power_1","nativeSrc":"5128:7:28","nodeType":"YulIdentifier","src":"5128:7:28"},{"name":"exponent","nativeSrc":"5137:8:28","nodeType":"YulIdentifier","src":"5137:8:28"}],"functionName":{"name":"shr","nativeSrc":"5124:3:28","nodeType":"YulIdentifier","src":"5124:3:28"},"nativeSrc":"5124:22:28","nodeType":"YulFunctionCall","src":"5124:22:28"},"variableNames":[{"name":"exponent","nativeSrc":"5112:8:28","nodeType":"YulIdentifier","src":"5112:8:28"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4897:8:28","nodeType":"YulIdentifier","src":"4897:8:28"},{"name":"power_1","nativeSrc":"4907:7:28","nodeType":"YulIdentifier","src":"4907:7:28"}],"functionName":{"name":"gt","nativeSrc":"4894:2:28","nodeType":"YulIdentifier","src":"4894:2:28"},"nativeSrc":"4894:21:28","nodeType":"YulFunctionCall","src":"4894:21:28"},"nativeSrc":"4886:270:28","nodeType":"YulForLoop","post":{"nativeSrc":"4916:3:28","nodeType":"YulBlock","src":"4916:3:28","statements":[]},"pre":{"nativeSrc":"4890:3:28","nodeType":"YulBlock","src":"4890:3:28","statements":[]},"src":"4886:270:28"}]},"name":"checked_exp_helper","nativeSrc":"4746:416:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"4774:5:28","nodeType":"YulTypedName","src":"4774:5:28","type":""},{"name":"exponent","nativeSrc":"4781:8:28","nodeType":"YulTypedName","src":"4781:8:28","type":""}],"returnVariables":[{"name":"power","nativeSrc":"4794:5:28","nodeType":"YulTypedName","src":"4794:5:28","type":""},{"name":"base","nativeSrc":"4801:4:28","nodeType":"YulTypedName","src":"4801:4:28","type":""}],"src":"4746:416:28"},{"body":{"nativeSrc":"5226:747:28","nodeType":"YulBlock","src":"5226:747:28","statements":[{"body":{"nativeSrc":"5264:52:28","nodeType":"YulBlock","src":"5264:52:28","statements":[{"nativeSrc":"5278:10:28","nodeType":"YulAssignment","src":"5278:10:28","value":{"kind":"number","nativeSrc":"5287:1:28","nodeType":"YulLiteral","src":"5287:1:28","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"5278:5:28","nodeType":"YulIdentifier","src":"5278:5:28"}]},{"nativeSrc":"5301:5:28","nodeType":"YulLeave","src":"5301:5:28"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"5246:8:28","nodeType":"YulIdentifier","src":"5246:8:28"}],"functionName":{"name":"iszero","nativeSrc":"5239:6:28","nodeType":"YulIdentifier","src":"5239:6:28"},"nativeSrc":"5239:16:28","nodeType":"YulFunctionCall","src":"5239:16:28"},"nativeSrc":"5236:80:28","nodeType":"YulIf","src":"5236:80:28"},{"body":{"nativeSrc":"5349:52:28","nodeType":"YulBlock","src":"5349:52:28","statements":[{"nativeSrc":"5363:10:28","nodeType":"YulAssignment","src":"5363:10:28","value":{"kind":"number","nativeSrc":"5372:1:28","nodeType":"YulLiteral","src":"5372:1:28","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"5363:5:28","nodeType":"YulIdentifier","src":"5363:5:28"}]},{"nativeSrc":"5386:5:28","nodeType":"YulLeave","src":"5386:5:28"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"5335:4:28","nodeType":"YulIdentifier","src":"5335:4:28"}],"functionName":{"name":"iszero","nativeSrc":"5328:6:28","nodeType":"YulIdentifier","src":"5328:6:28"},"nativeSrc":"5328:12:28","nodeType":"YulFunctionCall","src":"5328:12:28"},"nativeSrc":"5325:76:28","nodeType":"YulIf","src":"5325:76:28"},{"cases":[{"body":{"nativeSrc":"5437:52:28","nodeType":"YulBlock","src":"5437:52:28","statements":[{"nativeSrc":"5451:10:28","nodeType":"YulAssignment","src":"5451:10:28","value":{"kind":"number","nativeSrc":"5460:1:28","nodeType":"YulLiteral","src":"5460:1:28","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"5451:5:28","nodeType":"YulIdentifier","src":"5451:5:28"}]},{"nativeSrc":"5474:5:28","nodeType":"YulLeave","src":"5474:5:28"}]},"nativeSrc":"5430:59:28","nodeType":"YulCase","src":"5430:59:28","value":{"kind":"number","nativeSrc":"5435:1:28","nodeType":"YulLiteral","src":"5435:1:28","type":"","value":"1"}},{"body":{"nativeSrc":"5505:123:28","nodeType":"YulBlock","src":"5505:123:28","statements":[{"body":{"nativeSrc":"5540:22:28","nodeType":"YulBlock","src":"5540:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5542:16:28","nodeType":"YulIdentifier","src":"5542:16:28"},"nativeSrc":"5542:18:28","nodeType":"YulFunctionCall","src":"5542:18:28"},"nativeSrc":"5542:18:28","nodeType":"YulExpressionStatement","src":"5542:18:28"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"5525:8:28","nodeType":"YulIdentifier","src":"5525:8:28"},{"kind":"number","nativeSrc":"5535:3:28","nodeType":"YulLiteral","src":"5535:3:28","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"5522:2:28","nodeType":"YulIdentifier","src":"5522:2:28"},"nativeSrc":"5522:17:28","nodeType":"YulFunctionCall","src":"5522:17:28"},"nativeSrc":"5519:43:28","nodeType":"YulIf","src":"5519:43:28"},{"nativeSrc":"5575:25:28","nodeType":"YulAssignment","src":"5575:25:28","value":{"arguments":[{"name":"exponent","nativeSrc":"5588:8:28","nodeType":"YulIdentifier","src":"5588:8:28"},{"kind":"number","nativeSrc":"5598:1:28","nodeType":"YulLiteral","src":"5598:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5584:3:28","nodeType":"YulIdentifier","src":"5584:3:28"},"nativeSrc":"5584:16:28","nodeType":"YulFunctionCall","src":"5584:16:28"},"variableNames":[{"name":"power","nativeSrc":"5575:5:28","nodeType":"YulIdentifier","src":"5575:5:28"}]},{"nativeSrc":"5613:5:28","nodeType":"YulLeave","src":"5613:5:28"}]},"nativeSrc":"5498:130:28","nodeType":"YulCase","src":"5498:130:28","value":{"kind":"number","nativeSrc":"5503:1:28","nodeType":"YulLiteral","src":"5503:1:28","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"5417:4:28","nodeType":"YulIdentifier","src":"5417:4:28"},"nativeSrc":"5410:218:28","nodeType":"YulSwitch","src":"5410:218:28"},{"body":{"nativeSrc":"5726:70:28","nodeType":"YulBlock","src":"5726:70:28","statements":[{"nativeSrc":"5740:28:28","nodeType":"YulAssignment","src":"5740:28:28","value":{"arguments":[{"name":"base","nativeSrc":"5753:4:28","nodeType":"YulIdentifier","src":"5753:4:28"},{"name":"exponent","nativeSrc":"5759:8:28","nodeType":"YulIdentifier","src":"5759:8:28"}],"functionName":{"name":"exp","nativeSrc":"5749:3:28","nodeType":"YulIdentifier","src":"5749:3:28"},"nativeSrc":"5749:19:28","nodeType":"YulFunctionCall","src":"5749:19:28"},"variableNames":[{"name":"power","nativeSrc":"5740:5:28","nodeType":"YulIdentifier","src":"5740:5:28"}]},{"nativeSrc":"5781:5:28","nodeType":"YulLeave","src":"5781:5:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"5650:4:28","nodeType":"YulIdentifier","src":"5650:4:28"},{"kind":"number","nativeSrc":"5656:2:28","nodeType":"YulLiteral","src":"5656:2:28","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"5647:2:28","nodeType":"YulIdentifier","src":"5647:2:28"},"nativeSrc":"5647:12:28","nodeType":"YulFunctionCall","src":"5647:12:28"},{"arguments":[{"name":"exponent","nativeSrc":"5664:8:28","nodeType":"YulIdentifier","src":"5664:8:28"},{"kind":"number","nativeSrc":"5674:2:28","nodeType":"YulLiteral","src":"5674:2:28","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"5661:2:28","nodeType":"YulIdentifier","src":"5661:2:28"},"nativeSrc":"5661:16:28","nodeType":"YulFunctionCall","src":"5661:16:28"}],"functionName":{"name":"and","nativeSrc":"5643:3:28","nodeType":"YulIdentifier","src":"5643:3:28"},"nativeSrc":"5643:35:28","nodeType":"YulFunctionCall","src":"5643:35:28"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"5687:4:28","nodeType":"YulIdentifier","src":"5687:4:28"},{"kind":"number","nativeSrc":"5693:3:28","nodeType":"YulLiteral","src":"5693:3:28","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"5684:2:28","nodeType":"YulIdentifier","src":"5684:2:28"},"nativeSrc":"5684:13:28","nodeType":"YulFunctionCall","src":"5684:13:28"},{"arguments":[{"name":"exponent","nativeSrc":"5702:8:28","nodeType":"YulIdentifier","src":"5702:8:28"},{"kind":"number","nativeSrc":"5712:2:28","nodeType":"YulLiteral","src":"5712:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5699:2:28","nodeType":"YulIdentifier","src":"5699:2:28"},"nativeSrc":"5699:16:28","nodeType":"YulFunctionCall","src":"5699:16:28"}],"functionName":{"name":"and","nativeSrc":"5680:3:28","nodeType":"YulIdentifier","src":"5680:3:28"},"nativeSrc":"5680:36:28","nodeType":"YulFunctionCall","src":"5680:36:28"}],"functionName":{"name":"or","nativeSrc":"5640:2:28","nodeType":"YulIdentifier","src":"5640:2:28"},"nativeSrc":"5640:77:28","nodeType":"YulFunctionCall","src":"5640:77:28"},"nativeSrc":"5637:159:28","nodeType":"YulIf","src":"5637:159:28"},{"nativeSrc":"5805:57:28","nodeType":"YulVariableDeclaration","src":"5805:57:28","value":{"arguments":[{"name":"base","nativeSrc":"5847:4:28","nodeType":"YulIdentifier","src":"5847:4:28"},{"name":"exponent","nativeSrc":"5853:8:28","nodeType":"YulIdentifier","src":"5853:8:28"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"5828:18:28","nodeType":"YulIdentifier","src":"5828:18:28"},"nativeSrc":"5828:34:28","nodeType":"YulFunctionCall","src":"5828:34:28"},"variables":[{"name":"power_1","nativeSrc":"5809:7:28","nodeType":"YulTypedName","src":"5809:7:28","type":""},{"name":"base_1","nativeSrc":"5818:6:28","nodeType":"YulTypedName","src":"5818:6:28","type":""}]},{"body":{"nativeSrc":"5907:22:28","nodeType":"YulBlock","src":"5907:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5909:16:28","nodeType":"YulIdentifier","src":"5909:16:28"},"nativeSrc":"5909:18:28","nodeType":"YulFunctionCall","src":"5909:18:28"},"nativeSrc":"5909:18:28","nodeType":"YulExpressionStatement","src":"5909:18:28"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"5877:7:28","nodeType":"YulIdentifier","src":"5877:7:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5894:1:28","nodeType":"YulLiteral","src":"5894:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5890:3:28","nodeType":"YulIdentifier","src":"5890:3:28"},"nativeSrc":"5890:6:28","nodeType":"YulFunctionCall","src":"5890:6:28"},{"name":"base_1","nativeSrc":"5898:6:28","nodeType":"YulIdentifier","src":"5898:6:28"}],"functionName":{"name":"div","nativeSrc":"5886:3:28","nodeType":"YulIdentifier","src":"5886:3:28"},"nativeSrc":"5886:19:28","nodeType":"YulFunctionCall","src":"5886:19:28"}],"functionName":{"name":"gt","nativeSrc":"5874:2:28","nodeType":"YulIdentifier","src":"5874:2:28"},"nativeSrc":"5874:32:28","nodeType":"YulFunctionCall","src":"5874:32:28"},"nativeSrc":"5871:58:28","nodeType":"YulIf","src":"5871:58:28"},{"nativeSrc":"5938:29:28","nodeType":"YulAssignment","src":"5938:29:28","value":{"arguments":[{"name":"power_1","nativeSrc":"5951:7:28","nodeType":"YulIdentifier","src":"5951:7:28"},{"name":"base_1","nativeSrc":"5960:6:28","nodeType":"YulIdentifier","src":"5960:6:28"}],"functionName":{"name":"mul","nativeSrc":"5947:3:28","nodeType":"YulIdentifier","src":"5947:3:28"},"nativeSrc":"5947:20:28","nodeType":"YulFunctionCall","src":"5947:20:28"},"variableNames":[{"name":"power","nativeSrc":"5938:5:28","nodeType":"YulIdentifier","src":"5938:5:28"}]}]},"name":"checked_exp_unsigned","nativeSrc":"5167:806:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"5197:4:28","nodeType":"YulTypedName","src":"5197:4:28","type":""},{"name":"exponent","nativeSrc":"5203:8:28","nodeType":"YulTypedName","src":"5203:8:28","type":""}],"returnVariables":[{"name":"power","nativeSrc":"5216:5:28","nodeType":"YulTypedName","src":"5216:5:28","type":""}],"src":"5167:806:28"},{"body":{"nativeSrc":"6048:61:28","nodeType":"YulBlock","src":"6048:61:28","statements":[{"nativeSrc":"6058:45:28","nodeType":"YulAssignment","src":"6058:45:28","value":{"arguments":[{"name":"base","nativeSrc":"6088:4:28","nodeType":"YulIdentifier","src":"6088:4:28"},{"name":"exponent","nativeSrc":"6094:8:28","nodeType":"YulIdentifier","src":"6094:8:28"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"6067:20:28","nodeType":"YulIdentifier","src":"6067:20:28"},"nativeSrc":"6067:36:28","nodeType":"YulFunctionCall","src":"6067:36:28"},"variableNames":[{"name":"power","nativeSrc":"6058:5:28","nodeType":"YulIdentifier","src":"6058:5:28"}]}]},"name":"checked_exp_t_uint256_t_uint256","nativeSrc":"5978:131:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"6019:4:28","nodeType":"YulTypedName","src":"6019:4:28","type":""},{"name":"exponent","nativeSrc":"6025:8:28","nodeType":"YulTypedName","src":"6025:8:28","type":""}],"returnVariables":[{"name":"power","nativeSrc":"6038:5:28","nodeType":"YulTypedName","src":"6038:5:28","type":""}],"src":"5978:131:28"},{"body":{"nativeSrc":"6160:171:28","nodeType":"YulBlock","src":"6160:171:28","statements":[{"body":{"nativeSrc":"6191:111:28","nodeType":"YulBlock","src":"6191:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6212:1:28","nodeType":"YulLiteral","src":"6212:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6219:3:28","nodeType":"YulLiteral","src":"6219:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"6224:10:28","nodeType":"YulLiteral","src":"6224:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6215:3:28","nodeType":"YulIdentifier","src":"6215:3:28"},"nativeSrc":"6215:20:28","nodeType":"YulFunctionCall","src":"6215:20:28"}],"functionName":{"name":"mstore","nativeSrc":"6205:6:28","nodeType":"YulIdentifier","src":"6205:6:28"},"nativeSrc":"6205:31:28","nodeType":"YulFunctionCall","src":"6205:31:28"},"nativeSrc":"6205:31:28","nodeType":"YulExpressionStatement","src":"6205:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6256:1:28","nodeType":"YulLiteral","src":"6256:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"6259:4:28","nodeType":"YulLiteral","src":"6259:4:28","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"6249:6:28","nodeType":"YulIdentifier","src":"6249:6:28"},"nativeSrc":"6249:15:28","nodeType":"YulFunctionCall","src":"6249:15:28"},"nativeSrc":"6249:15:28","nodeType":"YulExpressionStatement","src":"6249:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6284:1:28","nodeType":"YulLiteral","src":"6284:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"6287:4:28","nodeType":"YulLiteral","src":"6287:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6277:6:28","nodeType":"YulIdentifier","src":"6277:6:28"},"nativeSrc":"6277:15:28","nodeType":"YulFunctionCall","src":"6277:15:28"},"nativeSrc":"6277:15:28","nodeType":"YulExpressionStatement","src":"6277:15:28"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"6180:1:28","nodeType":"YulIdentifier","src":"6180:1:28"}],"functionName":{"name":"iszero","nativeSrc":"6173:6:28","nodeType":"YulIdentifier","src":"6173:6:28"},"nativeSrc":"6173:9:28","nodeType":"YulFunctionCall","src":"6173:9:28"},"nativeSrc":"6170:132:28","nodeType":"YulIf","src":"6170:132:28"},{"nativeSrc":"6311:14:28","nodeType":"YulAssignment","src":"6311:14:28","value":{"arguments":[{"name":"x","nativeSrc":"6320:1:28","nodeType":"YulIdentifier","src":"6320:1:28"},{"name":"y","nativeSrc":"6323:1:28","nodeType":"YulIdentifier","src":"6323:1:28"}],"functionName":{"name":"div","nativeSrc":"6316:3:28","nodeType":"YulIdentifier","src":"6316:3:28"},"nativeSrc":"6316:9:28","nodeType":"YulFunctionCall","src":"6316:9:28"},"variableNames":[{"name":"r","nativeSrc":"6311:1:28","nodeType":"YulIdentifier","src":"6311:1:28"}]}]},"name":"checked_div_t_uint256","nativeSrc":"6114:217:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6145:1:28","nodeType":"YulTypedName","src":"6145:1:28","type":""},{"name":"y","nativeSrc":"6148:1:28","nodeType":"YulTypedName","src":"6148:1:28","type":""}],"returnVariables":[{"name":"r","nativeSrc":"6154:1:28","nodeType":"YulTypedName","src":"6154:1:28","type":""}],"src":"6114:217:28"},{"body":{"nativeSrc":"6489:243:28","nodeType":"YulBlock","src":"6489:243:28","statements":[{"nativeSrc":"6499:26:28","nodeType":"YulAssignment","src":"6499:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6511:9:28","nodeType":"YulIdentifier","src":"6511:9:28"},{"kind":"number","nativeSrc":"6522:2:28","nodeType":"YulLiteral","src":"6522:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6507:3:28","nodeType":"YulIdentifier","src":"6507:3:28"},"nativeSrc":"6507:18:28","nodeType":"YulFunctionCall","src":"6507:18:28"},"variableNames":[{"name":"tail","nativeSrc":"6499:4:28","nodeType":"YulIdentifier","src":"6499:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6541:9:28","nodeType":"YulIdentifier","src":"6541:9:28"},{"arguments":[{"name":"value0","nativeSrc":"6556:6:28","nodeType":"YulIdentifier","src":"6556:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6572:3:28","nodeType":"YulLiteral","src":"6572:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"6577:1:28","nodeType":"YulLiteral","src":"6577:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6568:3:28","nodeType":"YulIdentifier","src":"6568:3:28"},"nativeSrc":"6568:11:28","nodeType":"YulFunctionCall","src":"6568:11:28"},{"kind":"number","nativeSrc":"6581:1:28","nodeType":"YulLiteral","src":"6581:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6564:3:28","nodeType":"YulIdentifier","src":"6564:3:28"},"nativeSrc":"6564:19:28","nodeType":"YulFunctionCall","src":"6564:19:28"}],"functionName":{"name":"and","nativeSrc":"6552:3:28","nodeType":"YulIdentifier","src":"6552:3:28"},"nativeSrc":"6552:32:28","nodeType":"YulFunctionCall","src":"6552:32:28"}],"functionName":{"name":"mstore","nativeSrc":"6534:6:28","nodeType":"YulIdentifier","src":"6534:6:28"},"nativeSrc":"6534:51:28","nodeType":"YulFunctionCall","src":"6534:51:28"},"nativeSrc":"6534:51:28","nodeType":"YulExpressionStatement","src":"6534:51:28"},{"nativeSrc":"6594:28:28","nodeType":"YulVariableDeclaration","src":"6594:28:28","value":{"kind":"number","nativeSrc":"6604:18:28","nodeType":"YulLiteral","src":"6604:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"6598:2:28","nodeType":"YulTypedName","src":"6598:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6642:9:28","nodeType":"YulIdentifier","src":"6642:9:28"},{"kind":"number","nativeSrc":"6653:2:28","nodeType":"YulLiteral","src":"6653:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6638:3:28","nodeType":"YulIdentifier","src":"6638:3:28"},"nativeSrc":"6638:18:28","nodeType":"YulFunctionCall","src":"6638:18:28"},{"arguments":[{"name":"value1","nativeSrc":"6662:6:28","nodeType":"YulIdentifier","src":"6662:6:28"},{"name":"_1","nativeSrc":"6670:2:28","nodeType":"YulIdentifier","src":"6670:2:28"}],"functionName":{"name":"and","nativeSrc":"6658:3:28","nodeType":"YulIdentifier","src":"6658:3:28"},"nativeSrc":"6658:15:28","nodeType":"YulFunctionCall","src":"6658:15:28"}],"functionName":{"name":"mstore","nativeSrc":"6631:6:28","nodeType":"YulIdentifier","src":"6631:6:28"},"nativeSrc":"6631:43:28","nodeType":"YulFunctionCall","src":"6631:43:28"},"nativeSrc":"6631:43:28","nodeType":"YulExpressionStatement","src":"6631:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6694:9:28","nodeType":"YulIdentifier","src":"6694:9:28"},{"kind":"number","nativeSrc":"6705:2:28","nodeType":"YulLiteral","src":"6705:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6690:3:28","nodeType":"YulIdentifier","src":"6690:3:28"},"nativeSrc":"6690:18:28","nodeType":"YulFunctionCall","src":"6690:18:28"},{"arguments":[{"name":"value2","nativeSrc":"6714:6:28","nodeType":"YulIdentifier","src":"6714:6:28"},{"name":"_1","nativeSrc":"6722:2:28","nodeType":"YulIdentifier","src":"6722:2:28"}],"functionName":{"name":"and","nativeSrc":"6710:3:28","nodeType":"YulIdentifier","src":"6710:3:28"},"nativeSrc":"6710:15:28","nodeType":"YulFunctionCall","src":"6710:15:28"}],"functionName":{"name":"mstore","nativeSrc":"6683:6:28","nodeType":"YulIdentifier","src":"6683:6:28"},"nativeSrc":"6683:43:28","nodeType":"YulFunctionCall","src":"6683:43:28"},"nativeSrc":"6683:43:28","nodeType":"YulExpressionStatement","src":"6683:43:28"}]},"name":"abi_encode_tuple_t_address_t_uint64_t_uint64__to_t_address_t_uint64_t_uint64__fromStack_reversed","nativeSrc":"6336:396:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6442:9:28","nodeType":"YulTypedName","src":"6442:9:28","type":""},{"name":"value2","nativeSrc":"6453:6:28","nodeType":"YulTypedName","src":"6453:6:28","type":""},{"name":"value1","nativeSrc":"6461:6:28","nodeType":"YulTypedName","src":"6461:6:28","type":""},{"name":"value0","nativeSrc":"6469:6:28","nodeType":"YulTypedName","src":"6469:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6480:4:28","nodeType":"YulTypedName","src":"6480:4:28","type":""}],"src":"6336:396:28"},{"body":{"nativeSrc":"6866:145:28","nodeType":"YulBlock","src":"6866:145:28","statements":[{"nativeSrc":"6876:26:28","nodeType":"YulAssignment","src":"6876:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6888:9:28","nodeType":"YulIdentifier","src":"6888:9:28"},{"kind":"number","nativeSrc":"6899:2:28","nodeType":"YulLiteral","src":"6899:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6884:3:28","nodeType":"YulIdentifier","src":"6884:3:28"},"nativeSrc":"6884:18:28","nodeType":"YulFunctionCall","src":"6884:18:28"},"variableNames":[{"name":"tail","nativeSrc":"6876:4:28","nodeType":"YulIdentifier","src":"6876:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6918:9:28","nodeType":"YulIdentifier","src":"6918:9:28"},{"arguments":[{"name":"value0","nativeSrc":"6933:6:28","nodeType":"YulIdentifier","src":"6933:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6949:3:28","nodeType":"YulLiteral","src":"6949:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"6954:1:28","nodeType":"YulLiteral","src":"6954:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6945:3:28","nodeType":"YulIdentifier","src":"6945:3:28"},"nativeSrc":"6945:11:28","nodeType":"YulFunctionCall","src":"6945:11:28"},{"kind":"number","nativeSrc":"6958:1:28","nodeType":"YulLiteral","src":"6958:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6941:3:28","nodeType":"YulIdentifier","src":"6941:3:28"},"nativeSrc":"6941:19:28","nodeType":"YulFunctionCall","src":"6941:19:28"}],"functionName":{"name":"and","nativeSrc":"6929:3:28","nodeType":"YulIdentifier","src":"6929:3:28"},"nativeSrc":"6929:32:28","nodeType":"YulFunctionCall","src":"6929:32:28"}],"functionName":{"name":"mstore","nativeSrc":"6911:6:28","nodeType":"YulIdentifier","src":"6911:6:28"},"nativeSrc":"6911:51:28","nodeType":"YulFunctionCall","src":"6911:51:28"},"nativeSrc":"6911:51:28","nodeType":"YulExpressionStatement","src":"6911:51:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6982:9:28","nodeType":"YulIdentifier","src":"6982:9:28"},{"kind":"number","nativeSrc":"6993:2:28","nodeType":"YulLiteral","src":"6993:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6978:3:28","nodeType":"YulIdentifier","src":"6978:3:28"},"nativeSrc":"6978:18:28","nodeType":"YulFunctionCall","src":"6978:18:28"},{"name":"value1","nativeSrc":"6998:6:28","nodeType":"YulIdentifier","src":"6998:6:28"}],"functionName":{"name":"mstore","nativeSrc":"6971:6:28","nodeType":"YulIdentifier","src":"6971:6:28"},"nativeSrc":"6971:34:28","nodeType":"YulFunctionCall","src":"6971:34:28"},"nativeSrc":"6971:34:28","nodeType":"YulExpressionStatement","src":"6971:34:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"6737:274:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6827:9:28","nodeType":"YulTypedName","src":"6827:9:28","type":""},{"name":"value1","nativeSrc":"6838:6:28","nodeType":"YulTypedName","src":"6838:6:28","type":""},{"name":"value0","nativeSrc":"6846:6:28","nodeType":"YulTypedName","src":"6846:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6857:4:28","nodeType":"YulTypedName","src":"6857:4:28","type":""}],"src":"6737:274:28"},{"body":{"nativeSrc":"7094:199:28","nodeType":"YulBlock","src":"7094:199:28","statements":[{"body":{"nativeSrc":"7140:16:28","nodeType":"YulBlock","src":"7140:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7149:1:28","nodeType":"YulLiteral","src":"7149:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7152:1:28","nodeType":"YulLiteral","src":"7152:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7142:6:28","nodeType":"YulIdentifier","src":"7142:6:28"},"nativeSrc":"7142:12:28","nodeType":"YulFunctionCall","src":"7142:12:28"},"nativeSrc":"7142:12:28","nodeType":"YulExpressionStatement","src":"7142:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7115:7:28","nodeType":"YulIdentifier","src":"7115:7:28"},{"name":"headStart","nativeSrc":"7124:9:28","nodeType":"YulIdentifier","src":"7124:9:28"}],"functionName":{"name":"sub","nativeSrc":"7111:3:28","nodeType":"YulIdentifier","src":"7111:3:28"},"nativeSrc":"7111:23:28","nodeType":"YulFunctionCall","src":"7111:23:28"},{"kind":"number","nativeSrc":"7136:2:28","nodeType":"YulLiteral","src":"7136:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7107:3:28","nodeType":"YulIdentifier","src":"7107:3:28"},"nativeSrc":"7107:32:28","nodeType":"YulFunctionCall","src":"7107:32:28"},"nativeSrc":"7104:52:28","nodeType":"YulIf","src":"7104:52:28"},{"nativeSrc":"7165:29:28","nodeType":"YulVariableDeclaration","src":"7165:29:28","value":{"arguments":[{"name":"headStart","nativeSrc":"7184:9:28","nodeType":"YulIdentifier","src":"7184:9:28"}],"functionName":{"name":"mload","nativeSrc":"7178:5:28","nodeType":"YulIdentifier","src":"7178:5:28"},"nativeSrc":"7178:16:28","nodeType":"YulFunctionCall","src":"7178:16:28"},"variables":[{"name":"value","nativeSrc":"7169:5:28","nodeType":"YulTypedName","src":"7169:5:28","type":""}]},{"body":{"nativeSrc":"7247:16:28","nodeType":"YulBlock","src":"7247:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7256:1:28","nodeType":"YulLiteral","src":"7256:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7259:1:28","nodeType":"YulLiteral","src":"7259:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7249:6:28","nodeType":"YulIdentifier","src":"7249:6:28"},"nativeSrc":"7249:12:28","nodeType":"YulFunctionCall","src":"7249:12:28"},"nativeSrc":"7249:12:28","nodeType":"YulExpressionStatement","src":"7249:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7216:5:28","nodeType":"YulIdentifier","src":"7216:5:28"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7237:5:28","nodeType":"YulIdentifier","src":"7237:5:28"}],"functionName":{"name":"iszero","nativeSrc":"7230:6:28","nodeType":"YulIdentifier","src":"7230:6:28"},"nativeSrc":"7230:13:28","nodeType":"YulFunctionCall","src":"7230:13:28"}],"functionName":{"name":"iszero","nativeSrc":"7223:6:28","nodeType":"YulIdentifier","src":"7223:6:28"},"nativeSrc":"7223:21:28","nodeType":"YulFunctionCall","src":"7223:21:28"}],"functionName":{"name":"eq","nativeSrc":"7213:2:28","nodeType":"YulIdentifier","src":"7213:2:28"},"nativeSrc":"7213:32:28","nodeType":"YulFunctionCall","src":"7213:32:28"}],"functionName":{"name":"iszero","nativeSrc":"7206:6:28","nodeType":"YulIdentifier","src":"7206:6:28"},"nativeSrc":"7206:40:28","nodeType":"YulFunctionCall","src":"7206:40:28"},"nativeSrc":"7203:60:28","nodeType":"YulIf","src":"7203:60:28"},{"nativeSrc":"7272:15:28","nodeType":"YulAssignment","src":"7272:15:28","value":{"name":"value","nativeSrc":"7282:5:28","nodeType":"YulIdentifier","src":"7282:5:28"},"variableNames":[{"name":"value0","nativeSrc":"7272:6:28","nodeType":"YulIdentifier","src":"7272:6:28"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"7016:277:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7060:9:28","nodeType":"YulTypedName","src":"7060:9:28","type":""},{"name":"dataEnd","nativeSrc":"7071:7:28","nodeType":"YulTypedName","src":"7071:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7083:6:28","nodeType":"YulTypedName","src":"7083:6:28","type":""}],"src":"7016:277:28"},{"body":{"nativeSrc":"7428:201:28","nodeType":"YulBlock","src":"7428:201:28","statements":[{"body":{"nativeSrc":"7466:16:28","nodeType":"YulBlock","src":"7466:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7475:1:28","nodeType":"YulLiteral","src":"7475:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7478:1:28","nodeType":"YulLiteral","src":"7478:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7468:6:28","nodeType":"YulIdentifier","src":"7468:6:28"},"nativeSrc":"7468:12:28","nodeType":"YulFunctionCall","src":"7468:12:28"},"nativeSrc":"7468:12:28","nodeType":"YulExpressionStatement","src":"7468:12:28"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"7444:10:28","nodeType":"YulIdentifier","src":"7444:10:28"},{"name":"endIndex","nativeSrc":"7456:8:28","nodeType":"YulIdentifier","src":"7456:8:28"}],"functionName":{"name":"gt","nativeSrc":"7441:2:28","nodeType":"YulIdentifier","src":"7441:2:28"},"nativeSrc":"7441:24:28","nodeType":"YulFunctionCall","src":"7441:24:28"},"nativeSrc":"7438:44:28","nodeType":"YulIf","src":"7438:44:28"},{"body":{"nativeSrc":"7515:16:28","nodeType":"YulBlock","src":"7515:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7524:1:28","nodeType":"YulLiteral","src":"7524:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7527:1:28","nodeType":"YulLiteral","src":"7527:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7517:6:28","nodeType":"YulIdentifier","src":"7517:6:28"},"nativeSrc":"7517:12:28","nodeType":"YulFunctionCall","src":"7517:12:28"},"nativeSrc":"7517:12:28","nodeType":"YulExpressionStatement","src":"7517:12:28"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"7497:8:28","nodeType":"YulIdentifier","src":"7497:8:28"},{"name":"length","nativeSrc":"7507:6:28","nodeType":"YulIdentifier","src":"7507:6:28"}],"functionName":{"name":"gt","nativeSrc":"7494:2:28","nodeType":"YulIdentifier","src":"7494:2:28"},"nativeSrc":"7494:20:28","nodeType":"YulFunctionCall","src":"7494:20:28"},"nativeSrc":"7491:40:28","nodeType":"YulIf","src":"7491:40:28"},{"nativeSrc":"7540:36:28","nodeType":"YulAssignment","src":"7540:36:28","value":{"arguments":[{"name":"offset","nativeSrc":"7557:6:28","nodeType":"YulIdentifier","src":"7557:6:28"},{"name":"startIndex","nativeSrc":"7565:10:28","nodeType":"YulIdentifier","src":"7565:10:28"}],"functionName":{"name":"add","nativeSrc":"7553:3:28","nodeType":"YulIdentifier","src":"7553:3:28"},"nativeSrc":"7553:23:28","nodeType":"YulFunctionCall","src":"7553:23:28"},"variableNames":[{"name":"offsetOut","nativeSrc":"7540:9:28","nodeType":"YulIdentifier","src":"7540:9:28"}]},{"nativeSrc":"7585:38:28","nodeType":"YulAssignment","src":"7585:38:28","value":{"arguments":[{"name":"endIndex","nativeSrc":"7602:8:28","nodeType":"YulIdentifier","src":"7602:8:28"},{"name":"startIndex","nativeSrc":"7612:10:28","nodeType":"YulIdentifier","src":"7612:10:28"}],"functionName":{"name":"sub","nativeSrc":"7598:3:28","nodeType":"YulIdentifier","src":"7598:3:28"},"nativeSrc":"7598:25:28","nodeType":"YulFunctionCall","src":"7598:25:28"},"variableNames":[{"name":"lengthOut","nativeSrc":"7585:9:28","nodeType":"YulIdentifier","src":"7585:9:28"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"7298:331:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7362:6:28","nodeType":"YulTypedName","src":"7362:6:28","type":""},{"name":"length","nativeSrc":"7370:6:28","nodeType":"YulTypedName","src":"7370:6:28","type":""},{"name":"startIndex","nativeSrc":"7378:10:28","nodeType":"YulTypedName","src":"7378:10:28","type":""},{"name":"endIndex","nativeSrc":"7390:8:28","nodeType":"YulTypedName","src":"7390:8:28","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"7403:9:28","nodeType":"YulTypedName","src":"7403:9:28","type":""},{"name":"lengthOut","nativeSrc":"7414:9:28","nodeType":"YulTypedName","src":"7414:9:28","type":""}],"src":"7298:331:28"},{"body":{"nativeSrc":"7735:154:28","nodeType":"YulBlock","src":"7735:154:28","statements":[{"nativeSrc":"7745:28:28","nodeType":"YulAssignment","src":"7745:28:28","value":{"arguments":[{"name":"array","nativeSrc":"7767:5:28","nodeType":"YulIdentifier","src":"7767:5:28"}],"functionName":{"name":"calldataload","nativeSrc":"7754:12:28","nodeType":"YulIdentifier","src":"7754:12:28"},"nativeSrc":"7754:19:28","nodeType":"YulFunctionCall","src":"7754:19:28"},"variableNames":[{"name":"value","nativeSrc":"7745:5:28","nodeType":"YulIdentifier","src":"7745:5:28"}]},{"body":{"nativeSrc":"7805:78:28","nodeType":"YulBlock","src":"7805:78:28","statements":[{"nativeSrc":"7819:54:28","nodeType":"YulAssignment","src":"7819:54:28","value":{"arguments":[{"name":"value","nativeSrc":"7832:5:28","nodeType":"YulIdentifier","src":"7832:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7847:1:28","nodeType":"YulLiteral","src":"7847:1:28","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"7854:2:28","nodeType":"YulLiteral","src":"7854:2:28","type":"","value":"32"},{"name":"len","nativeSrc":"7858:3:28","nodeType":"YulIdentifier","src":"7858:3:28"}],"functionName":{"name":"sub","nativeSrc":"7850:3:28","nodeType":"YulIdentifier","src":"7850:3:28"},"nativeSrc":"7850:12:28","nodeType":"YulFunctionCall","src":"7850:12:28"}],"functionName":{"name":"shl","nativeSrc":"7843:3:28","nodeType":"YulIdentifier","src":"7843:3:28"},"nativeSrc":"7843:20:28","nodeType":"YulFunctionCall","src":"7843:20:28"},{"arguments":[{"kind":"number","nativeSrc":"7869:1:28","nodeType":"YulLiteral","src":"7869:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"7865:3:28","nodeType":"YulIdentifier","src":"7865:3:28"},"nativeSrc":"7865:6:28","nodeType":"YulFunctionCall","src":"7865:6:28"}],"functionName":{"name":"shl","nativeSrc":"7839:3:28","nodeType":"YulIdentifier","src":"7839:3:28"},"nativeSrc":"7839:33:28","nodeType":"YulFunctionCall","src":"7839:33:28"}],"functionName":{"name":"and","nativeSrc":"7828:3:28","nodeType":"YulIdentifier","src":"7828:3:28"},"nativeSrc":"7828:45:28","nodeType":"YulFunctionCall","src":"7828:45:28"},"variableNames":[{"name":"value","nativeSrc":"7819:5:28","nodeType":"YulIdentifier","src":"7819:5:28"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"7788:3:28","nodeType":"YulIdentifier","src":"7788:3:28"},{"kind":"number","nativeSrc":"7793:2:28","nodeType":"YulLiteral","src":"7793:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7785:2:28","nodeType":"YulIdentifier","src":"7785:2:28"},"nativeSrc":"7785:11:28","nodeType":"YulFunctionCall","src":"7785:11:28"},"nativeSrc":"7782:101:28","nodeType":"YulIf","src":"7782:101:28"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32","nativeSrc":"7634:255:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"7710:5:28","nodeType":"YulTypedName","src":"7710:5:28","type":""},{"name":"len","nativeSrc":"7717:3:28","nodeType":"YulTypedName","src":"7717:3:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7725:5:28","nodeType":"YulTypedName","src":"7725:5:28","type":""}],"src":"7634:255:28"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IOFT_$1233__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_address(add(headStart, 96))\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$2218__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let length := mload(value0)\n        mstore(add(headStart, 64), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(headStart, i), 96), mload(add(add(value0, i), 0x20)))\n        }\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n        mstore(add(headStart, 0x20), value1)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value\n    {\n        let length := mload(array)\n        let _1 := mload(add(array, 0x20))\n        let _2 := not(0xffffffffffffffffffffffff)\n        value := and(_1, _2)\n        if lt(length, 20)\n        {\n            value := and(and(_1, shl(shl(3, sub(20, length)), _2)), _2)\n        }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_4f36cc36cc2d8409d2a1ca675856db8c0ac40991b9e411e41e2b8bba2f8104fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Failed to send HYPE to HyperCore\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint64_t_uint64__to_t_address_t_uint64_t_uint64__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        let _1 := 0xffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32(array, len) -> value\n    {\n        value := calldataload(array)\n        if lt(len, 32)\n        {\n            value := and(value, shl(shl(3, sub(32, len)), not(0)))\n        }\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1418":[{"length":32,"start":464},{"length":32,"start":1416}],"1420":[{"length":32,"start":516},{"length":32,"start":1602}],"1439":[{"length":32,"start":372},{"length":32,"start":707}],"1442":[{"length":32,"start":568},{"length":32,"start":788},{"length":32,"start":856}],"1445":[{"length":32,"start":662},{"length":32,"start":1463}],"1447":[{"length":32,"start":242},{"length":32,"start":1638}]},"linkReferences":{},"object":"6080604052600436106100a05760003560e01c8063841233051161006457806384123305146101be5780639a923b9a146101f25780639b5215f614610226578063d0a102601461025a578063dd4c07c81461026f578063fc0c546a1461028457600080fd5b80630813f32f146100ac578063303f1e81146100e057806355cd1378146101225780635e280f11146101625780636e3bf0ad1461019657600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100c261045181565b60405167ffffffffffffffff90911681526020015b60405180910390f35b3480156100ec57600080fd5b506101147f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100d7565b34801561012e57600080fd5b5061014a73333333333333333333333333333333333333333381565b6040516001600160a01b0390911681526020016100d7565b34801561016e57600080fd5b5061014a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101a257600080fd5b5061014a73222222222222222222222222222222222222222281565b3480156101ca57600080fd5b5061014a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101fe57600080fd5b506100c27f000000000000000000000000000000000000000000000000000000000000000081565b34801561023257600080fd5b5061014a7f000000000000000000000000000000000000000000000000000000000000000081565b61026d6102683660046107dc565b6102b8565b005b34801561027b57600080fd5b50610114600a81565b34801561029057600080fd5b5061014a7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103085760405163eee35e6f60e01b81523360048201526024015b60405180910390fd5b866001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461038d5760405163021bfb8360e61b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152881660248201526044016102ff565b60008061039a87876103c4565b909250905034156103af576103af823461041d565b6103b98282610571565b505050505050505050565b60008060006103d3858561070a565b905060148151146103fb5780516040516309b3473160e01b81526102ff91839160040161087a565b610404816108cf565b60601c92506104138585610757565b9150509250929050565b6040516000907322222222222222222222222222222222222222229083908381818185875af1925050503d8060008114610473576040519150601f19603f3d011682016040523d82523d6000602084013e610478565b606091505b50509050806104c95760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e64204859504520746f204879706572436f726560448201526064016102ff565b733333333333333333333333333333333333333333630b0ac0ab846104516104f2600a80610a05565b6104fc9087610a11565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015267ffffffffffffffff9182166024840152166044820152606401600060405180830381600087803b15801561055457600080fd5b505af1158015610568573d6000803e3d6000fd5b50505050505050565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610600573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106249190610a33565b50733333333333333333333333333333333333333333630b0ac0ab837f000000000000000000000000000000000000000000000000000000000000000061068c7f0000000000000000000000000000000000000000000000000000000000000000600a610a05565b6106969086610a11565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015267ffffffffffffffff9182166024840152166044820152606401600060405180830381600087803b1580156106ee57600080fd5b505af1158015610702573d6000803e3d6000fd5b505050505050565b606061071982604c8186610a55565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b92915050565b6000610767602c600c8486610a55565b61077091610a7f565b9392505050565b80356001600160a01b038116811461078e57600080fd5b919050565b60008083601f8401126107a557600080fd5b50813567ffffffffffffffff8111156107bd57600080fd5b6020830191508360208285010111156107d557600080fd5b9250929050565b600080600080600080600060a0888a0312156107f757600080fd5b61080088610777565b965060208801359550604088013567ffffffffffffffff8082111561082457600080fd5b6108308b838c01610793565b909750955085915061084460608b01610777565b945060808a013591508082111561085a57600080fd5b506108678a828b01610793565b989b979a50959850939692959293505050565b604081526000835180604084015260005b818110156108a8576020818701810151606086840101520161088b565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b805160208201516bffffffffffffffffffffffff1980821692919060148310156109035780818460140360031b1b83161693505b505050919050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561095c5781600019048211156109425761094261090b565b8085161561094f57918102915b93841c9390800290610926565b509250929050565b60008261097357506001610751565b8161098057506000610751565b816001811461099657600281146109a0576109bc565b6001915050610751565b60ff8411156109b1576109b161090b565b50506001821b610751565b5060208310610133831016604e8410600b84101617156109df575081810a610751565b6109e98383610921565b80600019048211156109fd576109fd61090b565b029392505050565b60006107708383610964565b600082610a2e57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610a4557600080fd5b8151801515811461077057600080fd5b60008085851115610a6557600080fd5b83861115610a7257600080fd5b5050820193919092039150565b8035602083101561075157600019602084900360031b1b169291505056fea264697066735822122033333d1e64ae7d2fd6e6d47babe84e4ec0d0e5c28cb9884e436e8455907fd3d764736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84123305 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x84123305 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x9A923B9A EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x9B5215F6 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xD0A10260 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xDD4C07C8 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x813F32F EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x303F1E81 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x55CD1378 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x5E280F11 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x6E3BF0AD EQ PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH2 0x451 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH20 0x3333333333333333333333333333333333333333 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH20 0x2222222222222222222222222222222222222222 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DC JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0xA DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x308 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEEE35E6F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD PUSH4 0x21BFB83 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x39A DUP8 DUP8 PUSH2 0x3C4 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP CALLVALUE ISZERO PUSH2 0x3AF JUMPI PUSH2 0x3AF DUP3 CALLVALUE PUSH2 0x41D JUMP JUMPDEST PUSH2 0x3B9 DUP3 DUP3 PUSH2 0x571 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3D3 DUP6 DUP6 PUSH2 0x70A JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ PUSH2 0x3FB JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x9B34731 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x2FF SWAP2 DUP4 SWAP2 PUSH1 0x4 ADD PUSH2 0x87A JUMP JUMPDEST PUSH2 0x404 DUP2 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP PUSH2 0x413 DUP6 DUP6 PUSH2 0x757 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH20 0x2222222222222222222222222222222222222222 SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x478 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64204859504520746F204879706572436F7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FF JUMP JUMPDEST PUSH20 0x3333333333333333333333333333333333333333 PUSH4 0xB0AC0AB DUP5 PUSH2 0x451 PUSH2 0x4F2 PUSH1 0xA DUP1 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x4FC SWAP1 DUP8 PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x568 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x600 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x624 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST POP PUSH20 0x3333333333333333333333333333333333333333 PUSH4 0xB0AC0AB DUP4 PUSH32 0x0 PUSH2 0x68C PUSH32 0x0 PUSH1 0xA PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x696 SWAP1 DUP7 PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x702 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x719 DUP3 PUSH1 0x4C DUP2 DUP7 PUSH2 0xA55 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x767 PUSH1 0x2C PUSH1 0xC DUP5 DUP7 PUSH2 0xA55 JUMP JUMPDEST PUSH2 0x770 SWAP2 PUSH2 0xA7F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x7A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x800 DUP9 PUSH2 0x777 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x830 DUP12 DUP4 DUP13 ADD PUSH2 0x793 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x844 PUSH1 0x60 DUP12 ADD PUSH2 0x777 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x85A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x867 DUP11 DUP3 DUP12 ADD PUSH2 0x793 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x88B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 PUSH1 0x14 DUP4 LT ISZERO PUSH2 0x903 JUMPI DUP1 DUP2 DUP5 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP4 POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x95C JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x942 JUMPI PUSH2 0x942 PUSH2 0x90B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x94F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x926 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x973 JUMPI POP PUSH1 0x1 PUSH2 0x751 JUMP JUMPDEST DUP2 PUSH2 0x980 JUMPI POP PUSH1 0x0 PUSH2 0x751 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x996 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x9A0 JUMPI PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x9B1 JUMPI PUSH2 0x9B1 PUSH2 0x90B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x751 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x9DF JUMPI POP DUP2 DUP2 EXP PUSH2 0x751 JUMP JUMPDEST PUSH2 0x9E9 DUP4 DUP4 PUSH2 0x921 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x9FD JUMPI PUSH2 0x9FD PUSH2 0x90B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x770 DUP4 DUP4 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA2E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0xA65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x20 DUP4 LT ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 NOT PUSH1 0x20 DUP5 SWAP1 SUB PUSH1 0x3 SHL SHL AND SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER CALLER RETURNDATASIZE 0x1E PUSH5 0xAE7D2FD6E6 0xD4 PUSH28 0xABE84E4EC0D0E5C28CB9884E436E8455907FD3D764736F6C63430008 AND STOP CALLER ","sourceMap":"469:4966:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:49;;;;;;;;;;;;901:4;856:49;;;;;188:18:28;176:31;;;158:50;;146:2;131:18;856:49:12;;;;;;;;1088:32;;;;;;;;;;;;;;;;;;365:25:28;;;353:2;338:18;1088:32:12;219:177:28;640:93:12;;;;;;;;;;;;691:42;640:93;;;;;-1:-1:-1;;;;;565:32:28;;;547:51;;535:2;520:18;640:93:12;401:203:28;983:33:12;;;;;;;;;;;;;;;739:111;;;;;;;;;;;;807:42;739:111;;525:55;;;;;;;;;;;;;;;586:47;;;;;;;;;;;;;;;1022:25;;;;;;;;;;;;;;;2995:1615;;;;;;:::i;:::-;;:::i;:::-;;911:65;;;;;;;;;;;;970:6;911:65;;1053:29;;;;;;;;;;;;;;;2995:1615;3371:10;-1:-1:-1;;;;;3393:8:12;3371:31;;3367:124;;3425:55;;-1:-1:-1;;;3425:55:12;;3469:10;3425:55;;;547:51:28;520:18;;3425:55:12;;;;;;;;3367:124;3521:4;-1:-1:-1;;;;;3505:20:12;3513:3;-1:-1:-1;;;;;3505:20:12;;3501:116;;3548:58;;-1:-1:-1;;;3548:58:12;;-1:-1:-1;;;;;3595:3:12;2977:15:28;;3548:58:12;;;2959:34:28;3029:15;;3009:18;;;3002:43;2894:18;;3548:58:12;2747:304:28;3501:116:12;3944:17;3963;3984:59;4034:8;;3984:49;:59::i;:::-;3943:100;;-1:-1:-1;3943:100:12;-1:-1:-1;4235:9:12;:13;4231:89;;4264:45;4288:9;4299;4264:23;:45::i;:::-;4560:43;4582:9;4593;4560:21;:43::i;:::-;3206:1404;;2995:1615;;;;;;;:::o;1247:738:15:-;1350:17;1369;1398:20;1421:46;1451:15;;1421:29;:46::i;:::-;1398:69;;492:2;1606:7;:14;:53;1602:173;;1749:14;;1682:82;;-1:-1:-1;;;1682:82:15;;;;1740:7;;1682:82;;;:::i;1602:173::-;1895:16;1903:7;1895:16;:::i;:::-;1887:25;;1875:37;;1934:44;1962:15;;1934:27;:44::i;:::-;1922:56;;1388:597;1247:738;;;;;:::o;4962:436:12:-;5073:51;;5058:9;;807:42;;5112:6;;5058:9;5073:51;5058:9;5073:51;5112:6;807:42;5073:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5057:67;;;5142:4;5134:49;;;;-1:-1:-1;;;5134:49:12;;4455:2:28;5134:49:12;;;4437:21:28;;;4474:18;;;4467:30;4533:34;4513:18;;;4506:62;4585:18;;5134:49:12;4253:356:28;5134:49:12;691:42;5194:62;5270:9;901:4;5342:38;970:6;;5342:38;:::i;:::-;5333:47;;:6;:47;:::i;:::-;5194:197;;-1:-1:-1;;;;;;5194:197:12;;;;;;;-1:-1:-1;;;;;6552:32:28;;;5194:197:12;;;6534:51:28;6604:18;6658:15;;;6638:18;;;6631:43;6710:15;6690:18;;;6683:43;6507:18;;5194:197:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5047:351;4962:436;;:::o;4616:340::-;4709:54;;-1:-1:-1;;;4709:54:12;;-1:-1:-1;;;;;4724:30:12;6929:32:28;;4709:54:12;;;6911:51:28;6978:18;;;6971:34;;;4709:5:12;:14;;;;6884:18:28;;4709:54:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;691:42:12;4773:62;4849:9;4872:23;4925:13;4931:7;4925:2;:13;:::i;:::-;4916:22;;:6;:22;:::i;:::-;4773:176;;-1:-1:-1;;;;;;4773:176:12;;;;;;;-1:-1:-1;;;;;6552:32:28;;;4773:176:12;;;6534:51:28;6604:18;6658:15;;;6638:18;;;6631:43;6710:15;6690:18;;;6683:43;6507:18;;4773:176:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4616:340;;:::o;2273:128:11:-;2337:12;2368:26;:4;335:2;2368:4;;:26;:::i;:::-;2361:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2361:33:11;;-1:-1:-1;;;;2273:128:11;;;;;:::o;1676:150::-;1738:7;1780:37;282:2;232;1780:4;;:37;:::i;:::-;1772:46;;;:::i;:::-;1764:55;1676:150;-1:-1:-1;;;1676:150:11:o;1054:173:28:-;1122:20;;-1:-1:-1;;;;;1171:31:28;;1161:42;;1151:70;;1217:1;1214;1207:12;1151:70;1054:173;;;:::o;1232:347::-;1283:8;1293:6;1347:3;1340:4;1332:6;1328:17;1324:27;1314:55;;1365:1;1362;1355:12;1314:55;-1:-1:-1;1388:20:28;;1431:18;1420:30;;1417:50;;;1463:1;1460;1453:12;1417:50;1500:4;1492:6;1488:17;1476:29;;1552:3;1545:4;1536:6;1528;1524:19;1520:30;1517:39;1514:59;;;1569:1;1566;1559:12;1514:59;1232:347;;;;;:::o;1584:935::-;1701:6;1709;1717;1725;1733;1741;1749;1802:3;1790:9;1781:7;1777:23;1773:33;1770:53;;;1819:1;1816;1809:12;1770:53;1842:29;1861:9;1842:29;:::i;:::-;1832:39;;1918:2;1907:9;1903:18;1890:32;1880:42;;1973:2;1962:9;1958:18;1945:32;1996:18;2037:2;2029:6;2026:14;2023:34;;;2053:1;2050;2043:12;2023:34;2092:58;2142:7;2133:6;2122:9;2118:22;2092:58;:::i;:::-;2169:8;;-1:-1:-1;2066:84:28;-1:-1:-1;2066:84:28;;-1:-1:-1;2223:38:28;2257:2;2242:18;;2223:38;:::i;:::-;2213:48;;2314:3;2303:9;2299:19;2286:33;2270:49;;2344:2;2334:8;2331:16;2328:36;;;2360:1;2357;2350:12;2328:36;;2399:60;2451:7;2440:8;2429:9;2425:24;2399:60;:::i;:::-;1584:935;;;;-1:-1:-1;1584:935:28;;-1:-1:-1;1584:935:28;;;;2373:86;;-1:-1:-1;;;1584:935:28:o;3056:602::-;3231:2;3220:9;3213:21;3194:4;3263:6;3257:13;3306:6;3301:2;3290:9;3286:18;3279:34;3331:1;3341:144;3355:6;3352:1;3349:13;3341:144;;;3468:4;3452:14;;;3448:25;;3442:32;3437:2;3418:17;;;3414:26;3407:68;3370:12;3341:144;;;3345:3;3534:1;3529:2;3520:6;3509:9;3505:22;3501:31;3494:42;3604:2;3597;3593:7;3588:2;3580:6;3576:15;3572:29;3561:9;3557:45;3553:54;3545:62;;;3645:6;3638:4;3627:9;3623:20;3616:36;3056:602;;;;;:::o;3663:375::-;3781:12;;3829:4;3818:16;;3812:23;-1:-1:-1;;3903:11:28;;;;3781:12;3812:23;3937:2;3926:14;;3923:109;;;4019:2;4013;4003:6;3999:2;3995:15;3992:1;3988:23;3984:32;3980:2;3976:41;3972:50;3963:59;;3923:109;;;;3663:375;;;:::o;4614:127::-;4675:10;4670:3;4666:20;4663:1;4656:31;4706:4;4703:1;4696:15;4730:4;4727:1;4720:15;4746:416;4835:1;4872:5;4835:1;4886:270;4907:7;4897:8;4894:21;4886:270;;;4966:4;4962:1;4958:6;4954:17;4948:4;4945:27;4942:53;;;4975:18;;:::i;:::-;5025:7;5015:8;5011:22;5008:55;;;5045:16;;;;5008:55;5124:22;;;;5084:15;;;;4886:270;;;4890:3;4746:416;;;;;:::o;5167:806::-;5216:5;5246:8;5236:80;;-1:-1:-1;5287:1:28;5301:5;;5236:80;5335:4;5325:76;;-1:-1:-1;5372:1:28;5386:5;;5325:76;5417:4;5435:1;5430:59;;;;5503:1;5498:130;;;;5410:218;;5430:59;5460:1;5451:10;;5474:5;;;5498:130;5535:3;5525:8;5522:17;5519:43;;;5542:18;;:::i;:::-;-1:-1:-1;;5598:1:28;5584:16;;5613:5;;5410:218;;5712:2;5702:8;5699:16;5693:3;5687:4;5684:13;5680:36;5674:2;5664:8;5661:16;5656:2;5650:4;5647:12;5643:35;5640:77;5637:159;;;-1:-1:-1;5749:19:28;;;5781:5;;5637:159;5828:34;5853:8;5847:4;5828:34;:::i;:::-;5898:6;5894:1;5890:6;5886:19;5877:7;5874:32;5871:58;;;5909:18;;:::i;:::-;5947:20;;5167:806;-1:-1:-1;;;5167:806:28:o;5978:131::-;6038:5;6067:36;6094:8;6088:4;6067:36;:::i;6114:217::-;6154:1;6180;6170:132;;6224:10;6219:3;6215:20;6212:1;6205:31;6259:4;6256:1;6249:15;6287:4;6284:1;6277:15;6170:132;-1:-1:-1;6316:9:28;;6114:217::o;7016:277::-;7083:6;7136:2;7124:9;7115:7;7111:23;7107:32;7104:52;;;7152:1;7149;7142:12;7104:52;7184:9;7178:16;7237:5;7230:13;7223:21;7216:5;7213:32;7203:60;;7259:1;7256;7249:12;7298:331;7403:9;7414;7456:8;7444:10;7441:24;7438:44;;;7478:1;7475;7468:12;7438:44;7507:6;7497:8;7494:20;7491:40;;;7527:1;7524;7517:12;7491:40;-1:-1:-1;;7553:23:28;;;7598:25;;;;;-1:-1:-1;7298:331:28:o;7634:255::-;7754:19;;7793:2;7785:11;;7782:101;;;-1:-1:-1;;7854:2:28;7850:12;;;7847:1;7843:20;7839:33;7828:45;7634:255;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"554200","executionCost":"infinite","totalCost":"infinite"},"external":{"HYPER_CORE_INDEX_ID()":"194","HYPER_CORE_INDEX_ID_DECIMAL_DIFF()":"283","HYPE_ASSET_BRIDGE_ADDRESS()":"305","L1WritePrecompileAddress()":"261","OFT_TOKEN_ASSET_BRIDGE_ADDRESS()":"infinite","OFT_TOKEN_CORE_INDEX_ID()":"infinite","endpoint()":"infinite","lzCompose(address,bytes32,bytes,address,bytes)":"infinite","oft()":"infinite","token()":"infinite","weiDiff()":"infinite"},"internal":{"_fundAddressOnHyperCore(address,uint256)":"infinite","_sendAssetToHyperCore(address,uint256)":"infinite"}},"methodIdentifiers":{"HYPER_CORE_INDEX_ID()":"0813f32f","HYPER_CORE_INDEX_ID_DECIMAL_DIFF()":"dd4c07c8","HYPE_ASSET_BRIDGE_ADDRESS()":"6e3bf0ad","L1WritePrecompileAddress()":"55cd1378","OFT_TOKEN_ASSET_BRIDGE_ADDRESS()":"84123305","OFT_TOKEN_CORE_INDEX_ID()":"9a923b9a","endpoint()":"5e280f11","lzCompose(address,bytes32,bytes,address,bytes)":"d0a10260","oft()":"9b5215f6","token()":"fc0c546a","weiDiff()":"303f1e81"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_endpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oft\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_coreIndexId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_weiDiff\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notEndpointAddress\",\"type\":\"address\"}],\"name\":\"HyperLiquidComposer_InvalidCall_NotEndpoint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalOFTAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receivedOFTAddress\",\"type\":\"address\"}],\"name\":\"HyperLiquidComposer_InvalidCall_NotOFT\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HYPER_CORE_INDEX_ID\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HYPER_CORE_INDEX_ID_DECIMAL_DIFF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HYPE_ASSET_BRIDGE_ADDRESS\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"L1WritePrecompileAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OFT_TOKEN_ASSET_BRIDGE_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OFT_TOKEN_CORE_INDEX_ID\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oft\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oft\",\"outputs\":[{\"internalType\":\"contract IOFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiDiff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"This constructor is called by the `HyperLiquidOFT` contractPost deployment, this address needs to be approved (via approveCaller) by the `owner` of the `HyperLiquidOFT` contract to call the `transferToHyperLiquidL1` function\",\"params\":{\"_endpoint\":\"The LayerZero endpoint address\",\"_oft\":\"The OFT contract address associated with this composer\"}},\"lzCompose(address,bytes32,bytes,address,bytes)\":{\"details\":\"This function is called by the OFTCore contract when a message is sent\",\"params\":{\"_message\":\"The encoded message content, expected to be of type: (address receiver).\",\"_oft\":\"The address of the OFT contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor for the HyperLiquidLZComposer contract\"},\"lzCompose(address,bytes32,bytes,address,bytes)\":{\"notice\":\"Composes a message to be sent to the HyperLiquidLZComposerThis function is the only new addition to the OFT standard\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol\":\"HyperCoreAdapter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title ILayerZeroComposer\\n */\\ninterface ILayerZeroComposer {\\n    /**\\n     * @notice Composes a LayerZero message from an OApp.\\n     * @dev To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).\\n     * @param _from The address initiating the composition, typically the OApp where the lzReceive was called.\\n     * @param _guid The unique identifier for the corresponding LayerZero src/dst tx.\\n     * @param _message The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive.\\n     * @param _executor The address of the executor for the composed message.\\n     * @param _extraData Additional arbitrary data in bytes passed by the entity who executes the lzCompose.\\n     */\\n    function lzCompose(\\n        address _from,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { SafeERC20, IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppSender\\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\\n */\\nabstract contract OAppSender is OAppCore {\\n    using SafeERC20 for IERC20;\\n\\n    // Custom error messages\\n    error NotEnoughNative(uint256 msgValue);\\n    error LzTokenUnavailable();\\n\\n    // @dev The version of the OAppSender implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant SENDER_VERSION = 1;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\\n     * ie. this is a SEND only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (SENDER_VERSION, 0);\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\\n     * @return fee The calculated MessagingFee for the message.\\n     *      - nativeFee: The native fee for the message.\\n     *      - lzTokenFee: The LZ token fee for the message.\\n     */\\n    function _quote(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) internal view virtual returns (MessagingFee memory fee) {\\n        return\\n            endpoint.quote(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\\n                address(this)\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _fee The calculated LayerZero fee for the message.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\\n     * @return receipt The receipt for the sent message.\\n     *      - guid: The unique identifier for the sent message.\\n     *      - nonce: The nonce of the sent message.\\n     *      - fee: The LayerZero fee incurred for the message.\\n     */\\n    function _lzSend(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        MessagingFee memory _fee,\\n        address _refundAddress\\n    ) internal virtual returns (MessagingReceipt memory receipt) {\\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\\n        uint256 messageValue = _payNative(_fee.nativeFee);\\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\\n\\n        return\\n            // solhint-disable-next-line check-send-result\\n            endpoint.send{ value: messageValue }(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\\n                _refundAddress\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the native fee associated with the message.\\n     * @param _nativeFee The native fee to be paid.\\n     * @return nativeFee The amount of native currency paid.\\n     *\\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\\n     * this will need to be overridden because msg.value would contain multiple lzFees.\\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\\n     */\\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\\n        return _nativeFee;\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the LZ token fee associated with the message.\\n     * @param _lzTokenFee The LZ token fee to be paid.\\n     *\\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\\n     */\\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\\n        address lzToken = endpoint.lzToken();\\n        if (lzToken == address(0)) revert LzTokenUnavailable();\\n\\n        // Pay LZ token fee by sending tokens to the endpoint.\\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\\n    }\\n}\\n\",\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroComposer } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\\\";\\n\\n/**\\n * @title IOAppComposer\\n * @dev This interface defines the OApp Composer, allowing developers to inherit only the OApp package without the protocol.\\n */\\n// solhint-disable-next-line no-empty-blocks\\ninterface IOAppComposer is ILayerZeroComposer {}\\n\",\"keccak256\":\"0xe5014c411acb2b59dd74ae74a1bab02cf32d94a41a548a5ab553d64aeeb55dae\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { MessagingReceipt, MessagingFee } from \\\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\\\";\\n\\n/**\\n * @dev Struct representing token parameters for the OFT send() operation.\\n */\\nstruct SendParam {\\n    uint32 dstEid; // Destination endpoint ID.\\n    bytes32 to; // Recipient address.\\n    uint256 amountLD; // Amount to send in local decimals.\\n    uint256 minAmountLD; // Minimum amount to send in local decimals.\\n    bytes extraOptions; // Additional options supplied by the caller to be used in the LayerZero message.\\n    bytes composeMsg; // The composed message for the send() operation.\\n    bytes oftCmd; // The OFT command to be executed, unused in default OFT implementations.\\n}\\n\\n/**\\n * @dev Struct representing OFT limit information.\\n * @dev These amounts can change dynamically and are up the specific oft implementation.\\n */\\nstruct OFTLimit {\\n    uint256 minAmountLD; // Minimum amount in local decimals that can be sent to the recipient.\\n    uint256 maxAmountLD; // Maximum amount in local decimals that can be sent to the recipient.\\n}\\n\\n/**\\n * @dev Struct representing OFT receipt information.\\n */\\nstruct OFTReceipt {\\n    uint256 amountSentLD; // Amount of tokens ACTUALLY debited from the sender in local decimals.\\n    // @dev In non-default implementations, the amountReceivedLD COULD differ from this value.\\n    uint256 amountReceivedLD; // Amount of tokens to be received on the remote side.\\n}\\n\\n/**\\n * @dev Struct representing OFT fee details.\\n * @dev Future proof mechanism to provide a standardized way to communicate fees to things like a UI.\\n */\\nstruct OFTFeeDetail {\\n    int256 feeAmountLD; // Amount of the fee in local decimals.\\n    string description; // Description of the fee.\\n}\\n\\n/**\\n * @title IOFT\\n * @dev Interface for the OftChain (OFT) token.\\n * @dev Does not inherit ERC20 to accommodate usage by OFTAdapter as well.\\n * @dev This specific interface ID is '0x02e49c2c'.\\n */\\ninterface IOFT {\\n    // Custom error messages\\n    error InvalidLocalDecimals();\\n    error SlippageExceeded(uint256 amountLD, uint256 minAmountLD);\\n\\n    // Events\\n    event OFTSent(\\n        bytes32 indexed guid, // GUID of the OFT message.\\n        uint32 dstEid, // Destination Endpoint ID.\\n        address indexed fromAddress, // Address of the sender on the src chain.\\n        uint256 amountSentLD, // Amount of tokens sent in local decimals.\\n        uint256 amountReceivedLD // Amount of tokens received in local decimals.\\n    );\\n    event OFTReceived(\\n        bytes32 indexed guid, // GUID of the OFT message.\\n        uint32 srcEid, // Source Endpoint ID.\\n        address indexed toAddress, // Address of the recipient on the dst chain.\\n        uint256 amountReceivedLD // Amount of tokens received in local decimals.\\n    );\\n\\n    /**\\n     * @notice Retrieves interfaceID and the version of the OFT.\\n     * @return interfaceId The interface ID.\\n     * @return version The version.\\n     *\\n     * @dev interfaceId: This specific interface ID is '0x02e49c2c'.\\n     * @dev version: Indicates a cross-chain compatible msg encoding with other OFTs.\\n     * @dev If a new feature is added to the OFT cross-chain msg encoding, the version will be incremented.\\n     * ie. localOFT version(x,1) CAN send messages to remoteOFT version(x,1)\\n     */\\n    function oftVersion() external view returns (bytes4 interfaceId, uint64 version);\\n\\n    /**\\n     * @notice Retrieves the address of the token associated with the OFT.\\n     * @return token The address of the ERC20 token implementation.\\n     */\\n    function token() external view returns (address);\\n\\n    /**\\n     * @notice Indicates whether the OFT contract requires approval of the 'token()' to send.\\n     * @return requiresApproval Needs approval of the underlying token implementation.\\n     *\\n     * @dev Allows things like wallet implementers to determine integration requirements,\\n     * without understanding the underlying token implementation.\\n     */\\n    function approvalRequired() external view returns (bool);\\n\\n    /**\\n     * @notice Retrieves the shared decimals of the OFT.\\n     * @return sharedDecimals The shared decimals of the OFT.\\n     */\\n    function sharedDecimals() external view returns (uint8);\\n\\n    /**\\n     * @notice Provides the fee breakdown and settings data for an OFT. Unused in the default implementation.\\n     * @param _sendParam The parameters for the send operation.\\n     * @return limit The OFT limit information.\\n     * @return oftFeeDetails The details of OFT fees.\\n     * @return receipt The OFT receipt information.\\n     */\\n    function quoteOFT(\\n        SendParam calldata _sendParam\\n    ) external view returns (OFTLimit memory, OFTFeeDetail[] memory oftFeeDetails, OFTReceipt memory);\\n\\n    /**\\n     * @notice Provides a quote for the send() operation.\\n     * @param _sendParam The parameters for the send() operation.\\n     * @param _payInLzToken Flag indicating whether the caller is paying in the LZ token.\\n     * @return fee The calculated LayerZero messaging fee from the send() operation.\\n     *\\n     * @dev MessagingFee: LayerZero msg fee\\n     *  - nativeFee: The native fee.\\n     *  - lzTokenFee: The lzToken fee.\\n     */\\n    function quoteSend(SendParam calldata _sendParam, bool _payInLzToken) external view returns (MessagingFee memory);\\n\\n    /**\\n     * @notice Executes the send() operation.\\n     * @param _sendParam The parameters for the send operation.\\n     * @param _fee The fee information supplied by the caller.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess funds from fees etc. on the src.\\n     * @return receipt The LayerZero messaging receipt from the send() operation.\\n     * @return oftReceipt The OFT receipt information.\\n     *\\n     * @dev MessagingReceipt: LayerZero msg receipt\\n     *  - guid: The unique identifier for the sent message.\\n     *  - nonce: The nonce of the sent message.\\n     *  - fee: The LayerZero fee incurred for the message.\\n     */\\n    function send(\\n        SendParam calldata _sendParam,\\n        MessagingFee calldata _fee,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory, OFTReceipt memory);\\n}\\n\",\"keccak256\":\"0x7ba6bb62fba7ee83451cfb0e727ddeef0e96b4388bd4e9ff0fc6ce103e1101c8\",\"license\":\"MIT\"},\"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nlibrary OFTComposeMsgCodec {\\n    // Offset constants for decoding composed messages\\n    uint8 private constant NONCE_OFFSET = 8;\\n    uint8 private constant SRC_EID_OFFSET = 12;\\n    uint8 private constant AMOUNT_LD_OFFSET = 44;\\n    uint8 private constant COMPOSE_FROM_OFFSET = 76;\\n\\n    /**\\n     * @dev Encodes a OFT composed message.\\n     * @param _nonce The nonce value.\\n     * @param _srcEid The source endpoint ID.\\n     * @param _amountLD The amount in local decimals.\\n     * @param _composeMsg The composed message.\\n     * @return _msg The encoded Composed message.\\n     */\\n    function encode(\\n        uint64 _nonce,\\n        uint32 _srcEid,\\n        uint256 _amountLD,\\n        bytes memory _composeMsg // 0x[composeFrom][composeMsg]\\n    ) internal pure returns (bytes memory _msg) {\\n        _msg = abi.encodePacked(_nonce, _srcEid, _amountLD, _composeMsg);\\n    }\\n\\n    /**\\n     * @dev Retrieves the nonce for the composed message.\\n     * @param _msg The message.\\n     * @return The nonce value.\\n     */\\n    function nonce(bytes calldata _msg) internal pure returns (uint64) {\\n        return uint64(bytes8(_msg[:NONCE_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the source endpoint ID for the composed message.\\n     * @param _msg The message.\\n     * @return The source endpoint ID.\\n     */\\n    function srcEid(bytes calldata _msg) internal pure returns (uint32) {\\n        return uint32(bytes4(_msg[NONCE_OFFSET:SRC_EID_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the amount in local decimals from the composed message.\\n     * @param _msg The message.\\n     * @return The amount in local decimals.\\n     */\\n    function amountLD(bytes calldata _msg) internal pure returns (uint256) {\\n        return uint256(bytes32(_msg[SRC_EID_OFFSET:AMOUNT_LD_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the composeFrom value from the composed message.\\n     * @param _msg The message.\\n     * @return The composeFrom value.\\n     */\\n    function composeFrom(bytes calldata _msg) internal pure returns (bytes32) {\\n        return bytes32(_msg[AMOUNT_LD_OFFSET:COMPOSE_FROM_OFFSET]);\\n    }\\n\\n    /**\\n     * @dev Retrieves the composed message.\\n     * @param _msg The message.\\n     * @return The composed message.\\n     */\\n    function composeMsg(bytes calldata _msg) internal pure returns (bytes memory) {\\n        return _msg[COMPOSE_FROM_OFFSET:];\\n    }\\n\\n    /**\\n     * @dev Converts an address to bytes32.\\n     * @param _addr The address to convert.\\n     * @return The bytes32 representation of the address.\\n     */\\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\\n        return bytes32(uint256(uint160(_addr)));\\n    }\\n\\n    /**\\n     * @dev Converts bytes32 to an address.\\n     * @param _b The bytes32 value to convert.\\n     * @return The address representation of bytes32.\\n     */\\n    function bytes32ToAddress(bytes32 _b) internal pure returns (address) {\\n        return address(uint160(uint256(_b)));\\n    }\\n}\\n\",\"keccak256\":\"0xaae73d6eb8b9561c43f1802f3c416c00ccd35f172b711f9781ccdf1b25a40db5\",\"license\":\"MIT\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport { IOFT } from \\\"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol\\\";\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport { HyperLiquidComposerCodec } from \\\"./library/HyperLiquidComposerCodec.sol\\\";\\nimport { IHyperLiquidComposer } from \\\"./interfaces/IHyperLiquidComposer.sol\\\";\\nimport { IHyperliquidWritePrecompile } from \\\"./interfaces/IHyperliquidWritePrecompile.sol\\\";\\n\\ncontract HyperCoreAdapter is IHyperLiquidComposer {\\n    address public immutable OFT_TOKEN_ASSET_BRIDGE_ADDRESS;\\n    uint64 public immutable OFT_TOKEN_CORE_INDEX_ID;\\n\\n    address public constant L1WritePrecompileAddress = 0x3333333333333333333333333333333333333333;\\n    address payable public constant HYPE_ASSET_BRIDGE_ADDRESS = payable(0x2222222222222222222222222222222222222222);\\n    uint64 public constant HYPER_CORE_INDEX_ID = 1105;\\n    uint256 public constant HYPER_CORE_INDEX_ID_DECIMAL_DIFF = 18 - 8;\\n\\n    address public immutable endpoint;\\n    IOFT public immutable oft;\\n    IERC20 public immutable token;\\n    uint256 public immutable weiDiff;\\n    /// @notice Constructor for the HyperLiquidLZComposer contract\\n    ///\\n    /// @dev This constructor is called by the `HyperLiquidOFT` contract\\n    /// @dev Post deployment, this address needs to be approved (via approveCaller) by the `owner` of the `HyperLiquidOFT` contract to call the `transferToHyperLiquidL1` function\\n    ///\\n    /// @param _endpoint The LayerZero endpoint address\\n    /// @param _oft The OFT contract address associated with this composer\\n    constructor(address _endpoint, address _oft, uint64 _coreIndexId, uint256 _weiDiff) {\\n        // Validate that the OFT contract implements the `IHyperLiquidERC20Extended` interface\\n        // This is to ensure that the OFT contract has the `transferToHyperLiquidL1` function\\n        oft = IOFT(_oft);\\n        token = IERC20(oft.token());\\n\\n        endpoint = _endpoint;\\n\\n        /// @dev Hyperliquid L1 contract address is the prefix + the core index id\\n        /// @dev This is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1\\n        /// @dev https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addresses\\n        /// @dev It is formed by 0x2000...0000 + the core index id\\n        OFT_TOKEN_ASSET_BRIDGE_ADDRESS = HyperLiquidComposerCodec.into_assetBridgeAddress(_coreIndexId);\\n        OFT_TOKEN_CORE_INDEX_ID = _coreIndexId;\\n        weiDiff = _weiDiff;\\n    }\\n\\n    /// @notice Composes a message to be sent to the HyperLiquidLZComposer\\n    /// @notice This function is the only new addition to the OFT standard\\n    ///\\n    /// @dev This function is called by the OFTCore contract when a message is sent\\n    ///\\n    /// @param _oft The address of the OFT contract.\\n    /// @param _message The encoded message content, expected to be of type: (address receiver).\\n    function lzCompose(\\n        address _oft,\\n        bytes32 /*_guid*/,\\n        bytes calldata _message,\\n        address /*_executor*/,\\n        bytes calldata /*_extraData*/\\n    ) external payable virtual override {\\n        // Validate the composeCall based on the docs - https://docs.layerzero.network/v2/developers/evm/oft/oft-patterns-extensions#receiving-compose\\n        if (msg.sender != address(endpoint)) {\\n            revert HyperLiquidComposer_InvalidCall_NotEndpoint(msg.sender);\\n        }\\n\\n        if (address(oft) != _oft) {\\n            revert HyperLiquidComposer_InvalidCall_NotOFT(address(oft), _oft);\\n        }\\n\\n        // Validate the message and decode it -\\n        // The message is expected to be of type: (address receiver)\\n        // The bytes object should be encoded as an abi.encodePacked() of the receiver address\\n        // This is found as SendParam.composeMsg that the OFTCore contract populates on the send() call\\n        (address _receiver, uint256 _amountLD) = HyperLiquidComposerCodec.validateAndDecodeMessage(_message);\\n\\n        // If the message is being sent with a value, we need to fund the address on HyperCore\\n        // This is because the HyperCore contract is deployed with a zero balance\\n        if (msg.value > 0) {\\n            _fundAddressOnHyperCore(_receiver, msg.value);\\n        }\\n\\n        // Transfer the tokens to the HyperLiquid L1 contract\\n        // This creates the Transfer event that HyperLiquid L1 listens for\\n        // IERC20.Transfer(_receiver, 0x2222222222222222222222222222222222222222, _amountLD)\\n        _sendAssetToHyperCore(_receiver, _amountLD);\\n    }\\n\\n    function _sendAssetToHyperCore(address receiever, uint256 amount) internal virtual {\\n        token.transfer(OFT_TOKEN_ASSET_BRIDGE_ADDRESS, amount);\\n        IHyperliquidWritePrecompile(L1WritePrecompileAddress).sendSpot(\\n            receiever,\\n            OFT_TOKEN_CORE_INDEX_ID,\\n            uint64(amount / 10 ** weiDiff)\\n        );\\n    }\\n\\n    function _fundAddressOnHyperCore(address receiever, uint256 amount) internal virtual {\\n        (bool sent, ) = HYPE_ASSET_BRIDGE_ADDRESS.call{ value: amount }(\\\"\\\");\\n        require(sent, \\\"Failed to send HYPE to HyperCore\\\");\\n\\n        IHyperliquidWritePrecompile(L1WritePrecompileAddress).sendSpot(\\n            receiever,\\n            HYPER_CORE_INDEX_ID,\\n            uint64(amount / 10 ** HYPER_CORE_INDEX_ID_DECIMAL_DIFF)\\n        );\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x7428b911c93f0b26405050aa6835966b8753b34407a541e30721aff19eb92c72\",\"license\":\"UNLICENSED\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperLiquidComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IOAppComposer } from \\\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\\\";\\n\\ninterface IHyperLiquidComposer is IOAppComposer {\\n    error HyperLiquidComposer_InvalidCall_NotEndpoint(address _notEndpointAddress);\\n    error HyperLiquidComposer_InvalidCall_NotOFT(address _internalOFTAddress, address _receivedOFTAddress);\\n    error HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension(address _oft, address _token);\\n\\n    function OFT_TOKEN_ASSET_BRIDGE_ADDRESS() external view returns (address);\\n    function OFT_TOKEN_CORE_INDEX_ID() external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x05e81b73564bcb006142ae9bb1f0d56fcdb46f87b23cb54cee5cc7561fb4aff4\",\"license\":\"MIT\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IHyperliquidWritePrecompile {\\n    event IocOrder(address indexed user, uint32 asset, bool isBuy, uint64 limitPx, uint64 sz);\\n    event VaultTransfer(address indexed user, address indexed vault, bool isDeposit, uint64 usd);\\n    event TokenDelegate(address indexed user, address indexed validator, uint64 _wei, bool isUndelegate);\\n    event CDeposit(address indexed user, uint64 _wei);\\n    event CWithdrawal(address indexed user, uint64 _wei);\\n    event SpotSend(address indexed user, address indexed destination, uint64 token, uint64 _wei);\\n    event UsdClassTransfer(address indexed user, uint64 ntl, bool toPerp);\\n\\n    function sendIocOrder(uint32 asset, bool isBuy, uint64 limitPx, uint64 sz) external;\\n\\n    function sendVaultTransfer(address vault, bool isDeposit, uint64 usd) external;\\n\\n    function sendTokenDelegate(address validator, uint64 _wei, bool isUndelegate) external;\\n\\n    function sendCDeposit(uint64 _wei) external;\\n\\n    function sendCWithdrawal(uint64 _wei) external;\\n\\n    function sendSpot(address destination, uint64 token, uint64 _wei) external;\\n\\n    function sendUsdClassTransfer(uint64 ntl, bool toPerp) external;\\n}\\n\",\"keccak256\":\"0x8b59963667fc84a937495215a81d66fc69d044ed882df333f303cd1af36c781f\",\"license\":\"MIT\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { OFTComposeMsgCodec } from \\\"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\\\";\\n\\nlibrary HyperLiquidComposerCodec {\\n    /// @dev The length of the message that is valid for the HyperLiquidComposer\\n    /// @dev This is 20 bytes because addresses are 20 bytes\\n    /// @dev We are in encodePacked mode, if we are in encode mode, the length is 42 bytes\\n    uint256 public constant VALID_COMPOSE_MESSAGE_LENGTH_PACKED = 20;\\n\\n    /// @dev The base asset bridge address is the address of the HyperLiquid L1 contract\\n    /// @dev This is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1\\n    /// @dev https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addresses\\n    /// @dev It is formed by 0x2000...0000 + the core index id\\n    address public constant BASE_ASSET_BRIDGE_ADDRESS = 0x2000000000000000000000000000000000000000;\\n    uint256 public constant BASE_ASSET_BRIDGE_ADDRESS_UINT256 = uint256(uint160(BASE_ASSET_BRIDGE_ADDRESS));\\n\\n    error HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength(bytes message, uint256 length);\\n\\n    function validateAndDecodeMessage(\\n        bytes calldata _composeMessage\\n    ) internal pure returns (address _receiver, uint256 _amountLD) {\\n        bytes memory message = OFTComposeMsgCodec.composeMsg(_composeMessage);\\n\\n        // Addresses in EVM are 20 bytes\\n        // So if the message's length is not 20 bytes, we can pre-emptively revert\\n        if (message.length != VALID_COMPOSE_MESSAGE_LENGTH_PACKED) {\\n            revert HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength(message, message.length);\\n        }\\n\\n        // Since we are encodePacked, we can just decode the first 20 bytes as an address\\n        _receiver = address(bytes20(message));\\n        _amountLD = OFTComposeMsgCodec.amountLD(_composeMessage);\\n    }\\n\\n    function into_assetBridgeAddress(uint256 _coreIndexId) internal pure returns (address) {\\n        return address(uint160(BASE_ASSET_BRIDGE_ADDRESS_UINT256 + _coreIndexId));\\n    }\\n\\n    function into_tokenId(address _assetBridgeAddress) internal pure returns (uint256) {\\n        return uint256(uint160(_assetBridgeAddress)) - BASE_ASSET_BRIDGE_ADDRESS_UINT256;\\n    }\\n}\\n\\n/*\\n0x000000000000000000000000acc732e49f38002af5f29e9f042494e5352073500000000000000001000000000000000000000000a3824bffc05178b1ed611117e5b900adcb189b94000000000000000000009ca6000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000acc732e49f38002af5f29e9f042494e535207350acc732e49f38002af5f29e9f042494e535207350\\n\\n0x09b34731000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000060000000000000000000009ca6000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000acc732e49f38002af5f29e9f042494e535207350acc732e49f38002af5f29e9f042494e535207350\\n\\n\\n\\n\\n\\n*/\",\"keccak256\":\"0x20e64cf6c616e309034bd740dc13246e2dc0c7765e5dfe3fe9b28b42460e52d0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Constructor for the HyperLiquidLZComposer contract"},"lzCompose(address,bytes32,bytes,address,bytes)":{"notice":"Composes a message to be sent to the HyperLiquidLZComposerThis function is the only new addition to the OFT standard"}},"version":1}}},"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperLiquidComposer.sol":{"IHyperLiquidComposer":{"abi":[{"inputs":[{"internalType":"address","name":"_notEndpointAddress","type":"address"}],"name":"HyperLiquidComposer_InvalidCall_NotEndpoint","type":"error"},{"inputs":[{"internalType":"address","name":"_internalOFTAddress","type":"address"},{"internalType":"address","name":"_receivedOFTAddress","type":"address"}],"name":"HyperLiquidComposer_InvalidCall_NotOFT","type":"error"},{"inputs":[{"internalType":"address","name":"_oft","type":"address"},{"internalType":"address","name":"_token","type":"address"}],"name":"HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension","type":"error"},{"inputs":[],"name":"OFT_TOKEN_ASSET_BRIDGE_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OFT_TOKEN_CORE_INDEX_ID","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_executor","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzCompose","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"lzCompose(address,bytes32,bytes,address,bytes)":{"details":"To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).","params":{"_executor":"The address of the executor for the composed message.","_extraData":"Additional arbitrary data in bytes passed by the entity who executes the lzCompose.","_from":"The address initiating the composition, typically the OApp where the lzReceive was called.","_guid":"The unique identifier for the corresponding LayerZero src/dst tx.","_message":"The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"OFT_TOKEN_ASSET_BRIDGE_ADDRESS()":"84123305","OFT_TOKEN_CORE_INDEX_ID()":"9a923b9a","lzCompose(address,bytes32,bytes,address,bytes)":"d0a10260"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notEndpointAddress\",\"type\":\"address\"}],\"name\":\"HyperLiquidComposer_InvalidCall_NotEndpoint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalOFTAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receivedOFTAddress\",\"type\":\"address\"}],\"name\":\"HyperLiquidComposer_InvalidCall_NotOFT\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OFT_TOKEN_ASSET_BRIDGE_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OFT_TOKEN_CORE_INDEX_ID\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"lzCompose(address,bytes32,bytes,address,bytes)\":{\"details\":\"To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).\",\"params\":{\"_executor\":\"The address of the executor for the composed message.\",\"_extraData\":\"Additional arbitrary data in bytes passed by the entity who executes the lzCompose.\",\"_from\":\"The address initiating the composition, typically the OApp where the lzReceive was called.\",\"_guid\":\"The unique identifier for the corresponding LayerZero src/dst tx.\",\"_message\":\"The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"lzCompose(address,bytes32,bytes,address,bytes)\":{\"notice\":\"Composes a LayerZero message from an OApp.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperLiquidComposer.sol\":\"IHyperLiquidComposer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title ILayerZeroComposer\\n */\\ninterface ILayerZeroComposer {\\n    /**\\n     * @notice Composes a LayerZero message from an OApp.\\n     * @dev To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).\\n     * @param _from The address initiating the composition, typically the OApp where the lzReceive was called.\\n     * @param _guid The unique identifier for the corresponding LayerZero src/dst tx.\\n     * @param _message The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive.\\n     * @param _executor The address of the executor for the composed message.\\n     * @param _extraData Additional arbitrary data in bytes passed by the entity who executes the lzCompose.\\n     */\\n    function lzCompose(\\n        address _from,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroComposer } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\\\";\\n\\n/**\\n * @title IOAppComposer\\n * @dev This interface defines the OApp Composer, allowing developers to inherit only the OApp package without the protocol.\\n */\\n// solhint-disable-next-line no-empty-blocks\\ninterface IOAppComposer is ILayerZeroComposer {}\\n\",\"keccak256\":\"0xe5014c411acb2b59dd74ae74a1bab02cf32d94a41a548a5ab553d64aeeb55dae\",\"license\":\"MIT\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperLiquidComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IOAppComposer } from \\\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\\\";\\n\\ninterface IHyperLiquidComposer is IOAppComposer {\\n    error HyperLiquidComposer_InvalidCall_NotEndpoint(address _notEndpointAddress);\\n    error HyperLiquidComposer_InvalidCall_NotOFT(address _internalOFTAddress, address _receivedOFTAddress);\\n    error HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension(address _oft, address _token);\\n\\n    function OFT_TOKEN_ASSET_BRIDGE_ADDRESS() external view returns (address);\\n    function OFT_TOKEN_CORE_INDEX_ID() external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x05e81b73564bcb006142ae9bb1f0d56fcdb46f87b23cb54cee5cc7561fb4aff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"lzCompose(address,bytes32,bytes,address,bytes)":{"notice":"Composes a LayerZero message from an OApp."}},"version":1}}},"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol":{"IHyperliquidWritePrecompile":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint64","name":"_wei","type":"uint64"}],"name":"CDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint64","name":"_wei","type":"uint64"}],"name":"CWithdrawal","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint32","name":"asset","type":"uint32"},{"indexed":false,"internalType":"bool","name":"isBuy","type":"bool"},{"indexed":false,"internalType":"uint64","name":"limitPx","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"sz","type":"uint64"}],"name":"IocOrder","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":false,"internalType":"uint64","name":"token","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"_wei","type":"uint64"}],"name":"SpotSend","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"validator","type":"address"},{"indexed":false,"internalType":"uint64","name":"_wei","type":"uint64"},{"indexed":false,"internalType":"bool","name":"isUndelegate","type":"bool"}],"name":"TokenDelegate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint64","name":"ntl","type":"uint64"},{"indexed":false,"internalType":"bool","name":"toPerp","type":"bool"}],"name":"UsdClassTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"vault","type":"address"},{"indexed":false,"internalType":"bool","name":"isDeposit","type":"bool"},{"indexed":false,"internalType":"uint64","name":"usd","type":"uint64"}],"name":"VaultTransfer","type":"event"},{"inputs":[{"internalType":"uint64","name":"_wei","type":"uint64"}],"name":"sendCDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_wei","type":"uint64"}],"name":"sendCWithdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"asset","type":"uint32"},{"internalType":"bool","name":"isBuy","type":"bool"},{"internalType":"uint64","name":"limitPx","type":"uint64"},{"internalType":"uint64","name":"sz","type":"uint64"}],"name":"sendIocOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"uint64","name":"token","type":"uint64"},{"internalType":"uint64","name":"_wei","type":"uint64"}],"name":"sendSpot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"},{"internalType":"uint64","name":"_wei","type":"uint64"},{"internalType":"bool","name":"isUndelegate","type":"bool"}],"name":"sendTokenDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"ntl","type":"uint64"},{"internalType":"bool","name":"toPerp","type":"bool"}],"name":"sendUsdClassTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"bool","name":"isDeposit","type":"bool"},{"internalType":"uint64","name":"usd","type":"uint64"}],"name":"sendVaultTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"sendCDeposit(uint64)":"414fa437","sendCWithdrawal(uint64)":"84918d1e","sendIocOrder(uint32,bool,uint64,uint64)":"4e4719ab","sendSpot(address,uint64,uint64)":"0b0ac0ab","sendTokenDelegate(address,uint64,bool)":"db30aa53","sendUsdClassTransfer(uint64,bool)":"2d9d5db6","sendVaultTransfer(address,bool,uint64)":"258f0dcc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_wei\",\"type\":\"uint64\"}],\"name\":\"CDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_wei\",\"type\":\"uint64\"}],\"name\":\"CWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"asset\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"limitPx\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sz\",\"type\":\"uint64\"}],\"name\":\"IocOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"token\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_wei\",\"type\":\"uint64\"}],\"name\":\"SpotSend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_wei\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isUndelegate\",\"type\":\"bool\"}],\"name\":\"TokenDelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"ntl\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"toPerp\",\"type\":\"bool\"}],\"name\":\"UsdClassTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isDeposit\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"usd\",\"type\":\"uint64\"}],\"name\":\"VaultTransfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_wei\",\"type\":\"uint64\"}],\"name\":\"sendCDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_wei\",\"type\":\"uint64\"}],\"name\":\"sendCWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"asset\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"limitPx\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sz\",\"type\":\"uint64\"}],\"name\":\"sendIocOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"token\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_wei\",\"type\":\"uint64\"}],\"name\":\"sendSpot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_wei\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isUndelegate\",\"type\":\"bool\"}],\"name\":\"sendTokenDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"ntl\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"toPerp\",\"type\":\"bool\"}],\"name\":\"sendUsdClassTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDeposit\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"usd\",\"type\":\"uint64\"}],\"name\":\"sendVaultTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol\":\"IHyperliquidWritePrecompile\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IHyperliquidWritePrecompile {\\n    event IocOrder(address indexed user, uint32 asset, bool isBuy, uint64 limitPx, uint64 sz);\\n    event VaultTransfer(address indexed user, address indexed vault, bool isDeposit, uint64 usd);\\n    event TokenDelegate(address indexed user, address indexed validator, uint64 _wei, bool isUndelegate);\\n    event CDeposit(address indexed user, uint64 _wei);\\n    event CWithdrawal(address indexed user, uint64 _wei);\\n    event SpotSend(address indexed user, address indexed destination, uint64 token, uint64 _wei);\\n    event UsdClassTransfer(address indexed user, uint64 ntl, bool toPerp);\\n\\n    function sendIocOrder(uint32 asset, bool isBuy, uint64 limitPx, uint64 sz) external;\\n\\n    function sendVaultTransfer(address vault, bool isDeposit, uint64 usd) external;\\n\\n    function sendTokenDelegate(address validator, uint64 _wei, bool isUndelegate) external;\\n\\n    function sendCDeposit(uint64 _wei) external;\\n\\n    function sendCWithdrawal(uint64 _wei) external;\\n\\n    function sendSpot(address destination, uint64 token, uint64 _wei) external;\\n\\n    function sendUsdClassTransfer(uint64 ntl, bool toPerp) external;\\n}\\n\",\"keccak256\":\"0x8b59963667fc84a937495215a81d66fc69d044ed882df333f303cd1af36c781f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol":{"HyperLiquidComposerCodec":{"abi":[{"inputs":[{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength","type":"error"},{"inputs":[],"name":"BASE_ASSET_BRIDGE_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BASE_ASSET_BRIDGE_ADDRESS_UINT256","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VALID_COMPOSE_MESSAGE_LENGTH_PACKED","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"stateVariables":{"BASE_ASSET_BRIDGE_ADDRESS":{"details":"The base asset bridge address is the address of the HyperLiquid L1 contractThis is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addressesIt is formed by 0x2000...0000 + the core index id"},"VALID_COMPOSE_MESSAGE_LENGTH_PACKED":{"details":"The length of the message that is valid for the HyperLiquidComposerThis is 20 bytes because addresses are 20 bytesWe are in encodePacked mode, if we are in encode mode, the length is 42 bytes"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60c7610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060475760003560e01c806303e41b7714604c578063807d6c3f146069578063d58daedf146070575b600080fd5b60566001609d1b81565b6040519081526020015b60405180910390f35b6056601481565b607a6001609d1b81565b6040516001600160a01b039091168152602001606056fea2646970667358221220087f6bc34ef883d2eafaa122a91a29903bd29599ac807fcc9fdd216bd07a9f8064736f6c63430008160033","opcodes":"PUSH1 0xC7 PUSH2 0x39 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x47 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3E41B77 EQ PUSH1 0x4C JUMPI DUP1 PUSH4 0x807D6C3F EQ PUSH1 0x69 JUMPI DUP1 PUSH4 0xD58DAEDF EQ PUSH1 0x70 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x56 PUSH1 0x1 PUSH1 0x9D SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x56 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x7A PUSH1 0x1 PUSH1 0x9D SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD PUSH32 0x6BC34EF883D2EAFAA122A91A29903BD29599AC807FCC9FDD216BD07A9F806473 PUSH16 0x6C634300081600330000000000000000 ","sourceMap":"158:2198:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;158:2198:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BASE_ASSET_BRIDGE_ADDRESS_1804":{"entryPoint":null,"id":1804,"parameterSlots":0,"returnSlots":0},"@BASE_ASSET_BRIDGE_ADDRESS_UINT256_1813":{"entryPoint":null,"id":1813,"parameterSlots":0,"returnSlots":0},"@VALID_COMPOSE_MESSAGE_LENGTH_PACKED_1800":{"entryPoint":null,"id":1800,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:417:28","nodeType":"YulBlock","src":"0:417:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"123:76:28","nodeType":"YulBlock","src":"123:76:28","statements":[{"nativeSrc":"133:26:28","nodeType":"YulAssignment","src":"133:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"145:9:28","nodeType":"YulIdentifier","src":"145:9:28"},{"kind":"number","nativeSrc":"156:2:28","nodeType":"YulLiteral","src":"156:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"141:3:28","nodeType":"YulIdentifier","src":"141:3:28"},"nativeSrc":"141:18:28","nodeType":"YulFunctionCall","src":"141:18:28"},"variableNames":[{"name":"tail","nativeSrc":"133:4:28","nodeType":"YulIdentifier","src":"133:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"175:9:28","nodeType":"YulIdentifier","src":"175:9:28"},{"name":"value0","nativeSrc":"186:6:28","nodeType":"YulIdentifier","src":"186:6:28"}],"functionName":{"name":"mstore","nativeSrc":"168:6:28","nodeType":"YulIdentifier","src":"168:6:28"},"nativeSrc":"168:25:28","nodeType":"YulFunctionCall","src":"168:25:28"},"nativeSrc":"168:25:28","nodeType":"YulExpressionStatement","src":"168:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nativeSrc":"14:185:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"92:9:28","nodeType":"YulTypedName","src":"92:9:28","type":""},{"name":"value0","nativeSrc":"103:6:28","nodeType":"YulTypedName","src":"103:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"114:4:28","nodeType":"YulTypedName","src":"114:4:28","type":""}],"src":"14:185:28"},{"body":{"nativeSrc":"313:102:28","nodeType":"YulBlock","src":"313:102:28","statements":[{"nativeSrc":"323:26:28","nodeType":"YulAssignment","src":"323:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"335:9:28","nodeType":"YulIdentifier","src":"335:9:28"},{"kind":"number","nativeSrc":"346:2:28","nodeType":"YulLiteral","src":"346:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"331:3:28","nodeType":"YulIdentifier","src":"331:3:28"},"nativeSrc":"331:18:28","nodeType":"YulFunctionCall","src":"331:18:28"},"variableNames":[{"name":"tail","nativeSrc":"323:4:28","nodeType":"YulIdentifier","src":"323:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"365:9:28","nodeType":"YulIdentifier","src":"365:9:28"},{"arguments":[{"name":"value0","nativeSrc":"380:6:28","nodeType":"YulIdentifier","src":"380:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"396:3:28","nodeType":"YulLiteral","src":"396:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"401:1:28","nodeType":"YulLiteral","src":"401:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"392:3:28","nodeType":"YulIdentifier","src":"392:3:28"},"nativeSrc":"392:11:28","nodeType":"YulFunctionCall","src":"392:11:28"},{"kind":"number","nativeSrc":"405:1:28","nodeType":"YulLiteral","src":"405:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"388:3:28","nodeType":"YulIdentifier","src":"388:3:28"},"nativeSrc":"388:19:28","nodeType":"YulFunctionCall","src":"388:19:28"}],"functionName":{"name":"and","nativeSrc":"376:3:28","nodeType":"YulIdentifier","src":"376:3:28"},"nativeSrc":"376:32:28","nodeType":"YulFunctionCall","src":"376:32:28"}],"functionName":{"name":"mstore","nativeSrc":"358:6:28","nodeType":"YulIdentifier","src":"358:6:28"},"nativeSrc":"358:51:28","nodeType":"YulFunctionCall","src":"358:51:28"},"nativeSrc":"358:51:28","nodeType":"YulExpressionStatement","src":"358:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed","nativeSrc":"204:211:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"282:9:28","nodeType":"YulTypedName","src":"282:9:28","type":""},{"name":"value0","nativeSrc":"293:6:28","nodeType":"YulTypedName","src":"293:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"304:4:28","nodeType":"YulTypedName","src":"304:4:28","type":""}],"src":"204:211:28"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060475760003560e01c806303e41b7714604c578063807d6c3f146069578063d58daedf146070575b600080fd5b60566001609d1b81565b6040519081526020015b60405180910390f35b6056601481565b607a6001609d1b81565b6040516001600160a01b039091168152602001606056fea2646970667358221220087f6bc34ef883d2eafaa122a91a29903bd29599ac807fcc9fdd216bd07a9f8064736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x47 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3E41B77 EQ PUSH1 0x4C JUMPI DUP1 PUSH4 0x807D6C3F EQ PUSH1 0x69 JUMPI DUP1 PUSH4 0xD58DAEDF EQ PUSH1 0x70 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x56 PUSH1 0x1 PUSH1 0x9D SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x56 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x7A PUSH1 0x1 PUSH1 0x9D SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD PUSH32 0x6BC34EF883D2EAFAA122A91A29903BD29599AC807FCC9FDD216BD07A9F806473 PUSH16 0x6C634300081600330000000000000000 ","sourceMap":"158:2198:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1036:103;;-1:-1:-1;;;1036:103:15;;;;;168:25:28;;;156:2;141:18;1036:103:15;;;;;;;;430:64;;492:2;430:64;;936:94;;-1:-1:-1;;;936:94:15;;;;;-1:-1:-1;;;;;376:32:28;;;358:51;;346:2;331:18;936:94:15;204:211:28"},"gasEstimates":{"creation":{"codeDepositCost":"39800","executionCost":"124","totalCost":"39924"},"external":{"BASE_ASSET_BRIDGE_ADDRESS()":"228","BASE_ASSET_BRIDGE_ADDRESS_UINT256()":"152","VALID_COMPOSE_MESSAGE_LENGTH_PACKED()":"168"},"internal":{"into_assetBridgeAddress(uint256)":"infinite","into_tokenId(address)":"infinite","validateAndDecodeMessage(bytes calldata)":"infinite"}},"methodIdentifiers":{"BASE_ASSET_BRIDGE_ADDRESS()":"d58daedf","BASE_ASSET_BRIDGE_ADDRESS_UINT256()":"03e41b77","VALID_COMPOSE_MESSAGE_LENGTH_PACKED()":"807d6c3f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BASE_ASSET_BRIDGE_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_ASSET_BRIDGE_ADDRESS_UINT256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALID_COMPOSE_MESSAGE_LENGTH_PACKED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"BASE_ASSET_BRIDGE_ADDRESS\":{\"details\":\"The base asset bridge address is the address of the HyperLiquid L1 contractThis is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addressesIt is formed by 0x2000...0000 + the core index id\"},\"VALID_COMPOSE_MESSAGE_LENGTH_PACKED\":{\"details\":\"The length of the message that is valid for the HyperLiquidComposerThis is 20 bytes because addresses are 20 bytesWe are in encodePacked mode, if we are in encode mode, the length is 42 bytes\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol\":\"HyperLiquidComposerCodec\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nlibrary OFTComposeMsgCodec {\\n    // Offset constants for decoding composed messages\\n    uint8 private constant NONCE_OFFSET = 8;\\n    uint8 private constant SRC_EID_OFFSET = 12;\\n    uint8 private constant AMOUNT_LD_OFFSET = 44;\\n    uint8 private constant COMPOSE_FROM_OFFSET = 76;\\n\\n    /**\\n     * @dev Encodes a OFT composed message.\\n     * @param _nonce The nonce value.\\n     * @param _srcEid The source endpoint ID.\\n     * @param _amountLD The amount in local decimals.\\n     * @param _composeMsg The composed message.\\n     * @return _msg The encoded Composed message.\\n     */\\n    function encode(\\n        uint64 _nonce,\\n        uint32 _srcEid,\\n        uint256 _amountLD,\\n        bytes memory _composeMsg // 0x[composeFrom][composeMsg]\\n    ) internal pure returns (bytes memory _msg) {\\n        _msg = abi.encodePacked(_nonce, _srcEid, _amountLD, _composeMsg);\\n    }\\n\\n    /**\\n     * @dev Retrieves the nonce for the composed message.\\n     * @param _msg The message.\\n     * @return The nonce value.\\n     */\\n    function nonce(bytes calldata _msg) internal pure returns (uint64) {\\n        return uint64(bytes8(_msg[:NONCE_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the source endpoint ID for the composed message.\\n     * @param _msg The message.\\n     * @return The source endpoint ID.\\n     */\\n    function srcEid(bytes calldata _msg) internal pure returns (uint32) {\\n        return uint32(bytes4(_msg[NONCE_OFFSET:SRC_EID_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the amount in local decimals from the composed message.\\n     * @param _msg The message.\\n     * @return The amount in local decimals.\\n     */\\n    function amountLD(bytes calldata _msg) internal pure returns (uint256) {\\n        return uint256(bytes32(_msg[SRC_EID_OFFSET:AMOUNT_LD_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the composeFrom value from the composed message.\\n     * @param _msg The message.\\n     * @return The composeFrom value.\\n     */\\n    function composeFrom(bytes calldata _msg) internal pure returns (bytes32) {\\n        return bytes32(_msg[AMOUNT_LD_OFFSET:COMPOSE_FROM_OFFSET]);\\n    }\\n\\n    /**\\n     * @dev Retrieves the composed message.\\n     * @param _msg The message.\\n     * @return The composed message.\\n     */\\n    function composeMsg(bytes calldata _msg) internal pure returns (bytes memory) {\\n        return _msg[COMPOSE_FROM_OFFSET:];\\n    }\\n\\n    /**\\n     * @dev Converts an address to bytes32.\\n     * @param _addr The address to convert.\\n     * @return The bytes32 representation of the address.\\n     */\\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\\n        return bytes32(uint256(uint160(_addr)));\\n    }\\n\\n    /**\\n     * @dev Converts bytes32 to an address.\\n     * @param _b The bytes32 value to convert.\\n     * @return The address representation of bytes32.\\n     */\\n    function bytes32ToAddress(bytes32 _b) internal pure returns (address) {\\n        return address(uint160(uint256(_b)));\\n    }\\n}\\n\",\"keccak256\":\"0xaae73d6eb8b9561c43f1802f3c416c00ccd35f172b711f9781ccdf1b25a40db5\",\"license\":\"MIT\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { OFTComposeMsgCodec } from \\\"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\\\";\\n\\nlibrary HyperLiquidComposerCodec {\\n    /// @dev The length of the message that is valid for the HyperLiquidComposer\\n    /// @dev This is 20 bytes because addresses are 20 bytes\\n    /// @dev We are in encodePacked mode, if we are in encode mode, the length is 42 bytes\\n    uint256 public constant VALID_COMPOSE_MESSAGE_LENGTH_PACKED = 20;\\n\\n    /// @dev The base asset bridge address is the address of the HyperLiquid L1 contract\\n    /// @dev This is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1\\n    /// @dev https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addresses\\n    /// @dev It is formed by 0x2000...0000 + the core index id\\n    address public constant BASE_ASSET_BRIDGE_ADDRESS = 0x2000000000000000000000000000000000000000;\\n    uint256 public constant BASE_ASSET_BRIDGE_ADDRESS_UINT256 = uint256(uint160(BASE_ASSET_BRIDGE_ADDRESS));\\n\\n    error HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength(bytes message, uint256 length);\\n\\n    function validateAndDecodeMessage(\\n        bytes calldata _composeMessage\\n    ) internal pure returns (address _receiver, uint256 _amountLD) {\\n        bytes memory message = OFTComposeMsgCodec.composeMsg(_composeMessage);\\n\\n        // Addresses in EVM are 20 bytes\\n        // So if the message's length is not 20 bytes, we can pre-emptively revert\\n        if (message.length != VALID_COMPOSE_MESSAGE_LENGTH_PACKED) {\\n            revert HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength(message, message.length);\\n        }\\n\\n        // Since we are encodePacked, we can just decode the first 20 bytes as an address\\n        _receiver = address(bytes20(message));\\n        _amountLD = OFTComposeMsgCodec.amountLD(_composeMessage);\\n    }\\n\\n    function into_assetBridgeAddress(uint256 _coreIndexId) internal pure returns (address) {\\n        return address(uint160(BASE_ASSET_BRIDGE_ADDRESS_UINT256 + _coreIndexId));\\n    }\\n\\n    function into_tokenId(address _assetBridgeAddress) internal pure returns (uint256) {\\n        return uint256(uint160(_assetBridgeAddress)) - BASE_ASSET_BRIDGE_ADDRESS_UINT256;\\n    }\\n}\\n\\n/*\\n0x000000000000000000000000acc732e49f38002af5f29e9f042494e5352073500000000000000001000000000000000000000000a3824bffc05178b1ed611117e5b900adcb189b94000000000000000000009ca6000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000acc732e49f38002af5f29e9f042494e535207350acc732e49f38002af5f29e9f042494e535207350\\n\\n0x09b34731000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000060000000000000000000009ca6000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000acc732e49f38002af5f29e9f042494e535207350acc732e49f38002af5f29e9f042494e535207350\\n\\n\\n\\n\\n\\n*/\",\"keccak256\":\"0x20e64cf6c616e309034bd740dc13246e2dc0c7765e5dfe3fe9b28b42460e52d0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1911,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"approveAndCall(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"approveAndCall(address,uint256,bytes)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"data":"Additional data with no specified format, sent in call to `spender`.","spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferAndCall(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferAndCall(address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFromAndCall(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFromAndCall(address,address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}}},"title":"IERC1363","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-20 standard as defined in the ERC.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"devdoc":{"details":"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","errors":{"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)":[{"details":"Indicates a failed `decreaseAllowance` request."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC-20 token failed."}]},"kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e2d4aa3c317780aad14de5fcb5eadb5c2ddf8d18d1fba62ba142d5d8b266f7b664736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xD4 0xAA EXTCODECOPY BALANCE PUSH24 0x80AAD14DE5FCB5EADB5C2DDF8D18D1FBA62BA142D5D8B266 0xF7 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"750:8692:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;750:8692:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e2d4aa3c317780aad14de5fcb5eadb5c2ddf8d18d1fba62ba142d5d8b266f7b664736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xD4 0xAA EXTCODECOPY BALANCE PUSH24 0x80AAD14DE5FCB5EADB5C2DDF8D18D1FBA62BA142D5D8B266 0xF7 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"750:8692:21:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite","transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122040fe4c7a5cf02d28cfc2a42e519ef4cf6dc6591196a25cded03008626f579bf064736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH INVALID 0x4C PUSH27 0x5CF02D28CFC2A42E519EF4CF6DC6591196A25CDED03008626F579B CREATE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"233:5799:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5799:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122040fe4c7a5cf02d28cfc2a42e519ef4cf6dc6591196a25cded03008626f579bf064736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH INVALID 0x4C PUSH27 0x5CF02D28CFC2A42E519EF4CF6DC6591196A25CDED03008626F579B CREATE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"233:5799:22:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"devdoc":{"details":"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._","errors":{"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"FailedDeployment()":[{"details":"The deployment failed."}],"InsufficientBalance(uint256,uint256)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"MissingPrecompile(address)":[{"details":"A necessary precompile is missing."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204dc9d5abf73c2dbd9a8371aa17f429ee6e5bf442558fed171264f729582e6c7b64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xC9 0xD5 0xAB 0xF7 EXTCODECOPY 0x2D 0xBD SWAP11 DUP4 PUSH18 0xAA17F429EE6E5BF442558FED171264F72958 0x2E PUSH13 0x7B64736F6C6343000816003300 ","sourceMap":"411:484:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204dc9d5abf73c2dbd9a8371aa17f429ee6e5bf442558fed171264f729582e6c7b64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xC9 0xD5 0xAB 0xF7 EXTCODECOPY 0x2D 0xBD SWAP11 DUP4 PUSH18 0xAA17F429EE6E5BF442558FED171264F72958 0x2E PUSH13 0x7B64736F6C6343000816003300 ","sourceMap":"411:484:24:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MyHyperCoreAdapter.sol":{"MyHyperCoreAdapter":{"abi":[{"inputs":[{"internalType":"address","name":"_lzEndpoint","type":"address"},{"internalType":"address","name":"_oft","type":"address"},{"internalType":"uint64","name":"_hlIndexId","type":"uint64"},{"internalType":"uint256","name":"_weiDiff","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength","type":"error"},{"inputs":[{"internalType":"address","name":"_notEndpointAddress","type":"address"}],"name":"HyperLiquidComposer_InvalidCall_NotEndpoint","type":"error"},{"inputs":[{"internalType":"address","name":"_internalOFTAddress","type":"address"},{"internalType":"address","name":"_receivedOFTAddress","type":"address"}],"name":"HyperLiquidComposer_InvalidCall_NotOFT","type":"error"},{"inputs":[{"internalType":"address","name":"_oft","type":"address"},{"internalType":"address","name":"_token","type":"address"}],"name":"HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension","type":"error"},{"inputs":[],"name":"HYPER_CORE_INDEX_ID","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HYPER_CORE_INDEX_ID_DECIMAL_DIFF","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HYPE_ASSET_BRIDGE_ADDRESS","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"L1WritePrecompileAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OFT_TOKEN_ASSET_BRIDGE_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OFT_TOKEN_CORE_INDEX_ID","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiever","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"fundAddressOnHyperCore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oft","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"lzCompose","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"oft","outputs":[{"internalType":"contract IOFT","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiever","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"sendAssetToHyperCore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"weiDiff","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"lzCompose(address,bytes32,bytes,address,bytes)":{"details":"This function is called by the OFTCore contract when a message is sent","params":{"_message":"The encoded message content, expected to be of type: (address receiver).","_oft":"The address of the OFT contract."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1493":{"entryPoint":null,"id":1493,"parameterSlots":4,"returnSlots":0},"@_2976":{"entryPoint":null,"id":2976,"parameterSlots":4,"returnSlots":0},"@into_assetBridgeAddress_1883":{"entryPoint":269,"id":1883,"parameterSlots":1,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":293,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":418,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint64t_uint256_fromMemory":{"entryPoint":322,"id":null,"parameterSlots":2,"returnSlots":4},"checked_add_t_uint256":{"entryPoint":455,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:1158:28","nodeType":"YulBlock","src":"0:1158:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"74:117:28","nodeType":"YulBlock","src":"74:117:28","statements":[{"nativeSrc":"84:22:28","nodeType":"YulAssignment","src":"84:22:28","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:28","nodeType":"YulIdentifier","src":"99:6:28"}],"functionName":{"name":"mload","nativeSrc":"93:5:28","nodeType":"YulIdentifier","src":"93:5:28"},"nativeSrc":"93:13:28","nodeType":"YulFunctionCall","src":"93:13:28"},"variableNames":[{"name":"value","nativeSrc":"84:5:28","nodeType":"YulIdentifier","src":"84:5:28"}]},{"body":{"nativeSrc":"169:16:28","nodeType":"YulBlock","src":"169:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:28","nodeType":"YulLiteral","src":"178:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:28","nodeType":"YulLiteral","src":"181:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:28","nodeType":"YulIdentifier","src":"171:6:28"},"nativeSrc":"171:12:28","nodeType":"YulFunctionCall","src":"171:12:28"},"nativeSrc":"171:12:28","nodeType":"YulExpressionStatement","src":"171:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:28","nodeType":"YulIdentifier","src":"128:5:28"},{"arguments":[{"name":"value","nativeSrc":"139:5:28","nodeType":"YulIdentifier","src":"139:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:28","nodeType":"YulLiteral","src":"154:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:28","nodeType":"YulLiteral","src":"159:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:28","nodeType":"YulIdentifier","src":"150:3:28"},"nativeSrc":"150:11:28","nodeType":"YulFunctionCall","src":"150:11:28"},{"kind":"number","nativeSrc":"163:1:28","nodeType":"YulLiteral","src":"163:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:28","nodeType":"YulIdentifier","src":"146:3:28"},"nativeSrc":"146:19:28","nodeType":"YulFunctionCall","src":"146:19:28"}],"functionName":{"name":"and","nativeSrc":"135:3:28","nodeType":"YulIdentifier","src":"135:3:28"},"nativeSrc":"135:31:28","nodeType":"YulFunctionCall","src":"135:31:28"}],"functionName":{"name":"eq","nativeSrc":"125:2:28","nodeType":"YulIdentifier","src":"125:2:28"},"nativeSrc":"125:42:28","nodeType":"YulFunctionCall","src":"125:42:28"}],"functionName":{"name":"iszero","nativeSrc":"118:6:28","nodeType":"YulIdentifier","src":"118:6:28"},"nativeSrc":"118:50:28","nodeType":"YulFunctionCall","src":"118:50:28"},"nativeSrc":"115:70:28","nodeType":"YulIf","src":"115:70:28"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:28","nodeType":"YulTypedName","src":"53:6:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:28","nodeType":"YulTypedName","src":"64:5:28","type":""}],"src":"14:177:28"},{"body":{"nativeSrc":"327:389:28","nodeType":"YulBlock","src":"327:389:28","statements":[{"body":{"nativeSrc":"374:16:28","nodeType":"YulBlock","src":"374:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"383:1:28","nodeType":"YulLiteral","src":"383:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"386:1:28","nodeType":"YulLiteral","src":"386:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"376:6:28","nodeType":"YulIdentifier","src":"376:6:28"},"nativeSrc":"376:12:28","nodeType":"YulFunctionCall","src":"376:12:28"},"nativeSrc":"376:12:28","nodeType":"YulExpressionStatement","src":"376:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"348:7:28","nodeType":"YulIdentifier","src":"348:7:28"},{"name":"headStart","nativeSrc":"357:9:28","nodeType":"YulIdentifier","src":"357:9:28"}],"functionName":{"name":"sub","nativeSrc":"344:3:28","nodeType":"YulIdentifier","src":"344:3:28"},"nativeSrc":"344:23:28","nodeType":"YulFunctionCall","src":"344:23:28"},{"kind":"number","nativeSrc":"369:3:28","nodeType":"YulLiteral","src":"369:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"340:3:28","nodeType":"YulIdentifier","src":"340:3:28"},"nativeSrc":"340:33:28","nodeType":"YulFunctionCall","src":"340:33:28"},"nativeSrc":"337:53:28","nodeType":"YulIf","src":"337:53:28"},{"nativeSrc":"399:50:28","nodeType":"YulAssignment","src":"399:50:28","value":{"arguments":[{"name":"headStart","nativeSrc":"439:9:28","nodeType":"YulIdentifier","src":"439:9:28"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"409:29:28","nodeType":"YulIdentifier","src":"409:29:28"},"nativeSrc":"409:40:28","nodeType":"YulFunctionCall","src":"409:40:28"},"variableNames":[{"name":"value0","nativeSrc":"399:6:28","nodeType":"YulIdentifier","src":"399:6:28"}]},{"nativeSrc":"458:59:28","nodeType":"YulAssignment","src":"458:59:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"502:9:28","nodeType":"YulIdentifier","src":"502:9:28"},{"kind":"number","nativeSrc":"513:2:28","nodeType":"YulLiteral","src":"513:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"498:3:28","nodeType":"YulIdentifier","src":"498:3:28"},"nativeSrc":"498:18:28","nodeType":"YulFunctionCall","src":"498:18:28"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"468:29:28","nodeType":"YulIdentifier","src":"468:29:28"},"nativeSrc":"468:49:28","nodeType":"YulFunctionCall","src":"468:49:28"},"variableNames":[{"name":"value1","nativeSrc":"458:6:28","nodeType":"YulIdentifier","src":"458:6:28"}]},{"nativeSrc":"526:38:28","nodeType":"YulVariableDeclaration","src":"526:38:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"549:9:28","nodeType":"YulIdentifier","src":"549:9:28"},{"kind":"number","nativeSrc":"560:2:28","nodeType":"YulLiteral","src":"560:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"545:3:28","nodeType":"YulIdentifier","src":"545:3:28"},"nativeSrc":"545:18:28","nodeType":"YulFunctionCall","src":"545:18:28"}],"functionName":{"name":"mload","nativeSrc":"539:5:28","nodeType":"YulIdentifier","src":"539:5:28"},"nativeSrc":"539:25:28","nodeType":"YulFunctionCall","src":"539:25:28"},"variables":[{"name":"value","nativeSrc":"530:5:28","nodeType":"YulTypedName","src":"530:5:28","type":""}]},{"body":{"nativeSrc":"626:16:28","nodeType":"YulBlock","src":"626:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"635:1:28","nodeType":"YulLiteral","src":"635:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"638:1:28","nodeType":"YulLiteral","src":"638:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"628:6:28","nodeType":"YulIdentifier","src":"628:6:28"},"nativeSrc":"628:12:28","nodeType":"YulFunctionCall","src":"628:12:28"},"nativeSrc":"628:12:28","nodeType":"YulExpressionStatement","src":"628:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"586:5:28","nodeType":"YulIdentifier","src":"586:5:28"},{"arguments":[{"name":"value","nativeSrc":"597:5:28","nodeType":"YulIdentifier","src":"597:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"612:2:28","nodeType":"YulLiteral","src":"612:2:28","type":"","value":"64"},{"kind":"number","nativeSrc":"616:1:28","nodeType":"YulLiteral","src":"616:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"608:3:28","nodeType":"YulIdentifier","src":"608:3:28"},"nativeSrc":"608:10:28","nodeType":"YulFunctionCall","src":"608:10:28"},{"kind":"number","nativeSrc":"620:1:28","nodeType":"YulLiteral","src":"620:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"604:3:28","nodeType":"YulIdentifier","src":"604:3:28"},"nativeSrc":"604:18:28","nodeType":"YulFunctionCall","src":"604:18:28"}],"functionName":{"name":"and","nativeSrc":"593:3:28","nodeType":"YulIdentifier","src":"593:3:28"},"nativeSrc":"593:30:28","nodeType":"YulFunctionCall","src":"593:30:28"}],"functionName":{"name":"eq","nativeSrc":"583:2:28","nodeType":"YulIdentifier","src":"583:2:28"},"nativeSrc":"583:41:28","nodeType":"YulFunctionCall","src":"583:41:28"}],"functionName":{"name":"iszero","nativeSrc":"576:6:28","nodeType":"YulIdentifier","src":"576:6:28"},"nativeSrc":"576:49:28","nodeType":"YulFunctionCall","src":"576:49:28"},"nativeSrc":"573:69:28","nodeType":"YulIf","src":"573:69:28"},{"nativeSrc":"651:15:28","nodeType":"YulAssignment","src":"651:15:28","value":{"name":"value","nativeSrc":"661:5:28","nodeType":"YulIdentifier","src":"661:5:28"},"variableNames":[{"name":"value2","nativeSrc":"651:6:28","nodeType":"YulIdentifier","src":"651:6:28"}]},{"nativeSrc":"675:35:28","nodeType":"YulAssignment","src":"675:35:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"695:9:28","nodeType":"YulIdentifier","src":"695:9:28"},{"kind":"number","nativeSrc":"706:2:28","nodeType":"YulLiteral","src":"706:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"691:3:28","nodeType":"YulIdentifier","src":"691:3:28"},"nativeSrc":"691:18:28","nodeType":"YulFunctionCall","src":"691:18:28"}],"functionName":{"name":"mload","nativeSrc":"685:5:28","nodeType":"YulIdentifier","src":"685:5:28"},"nativeSrc":"685:25:28","nodeType":"YulFunctionCall","src":"685:25:28"},"variableNames":[{"name":"value3","nativeSrc":"675:6:28","nodeType":"YulIdentifier","src":"675:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint64t_uint256_fromMemory","nativeSrc":"196:520:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"269:9:28","nodeType":"YulTypedName","src":"269:9:28","type":""},{"name":"dataEnd","nativeSrc":"280:7:28","nodeType":"YulTypedName","src":"280:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"292:6:28","nodeType":"YulTypedName","src":"292:6:28","type":""},{"name":"value1","nativeSrc":"300:6:28","nodeType":"YulTypedName","src":"300:6:28","type":""},{"name":"value2","nativeSrc":"308:6:28","nodeType":"YulTypedName","src":"308:6:28","type":""},{"name":"value3","nativeSrc":"316:6:28","nodeType":"YulTypedName","src":"316:6:28","type":""}],"src":"196:520:28"},{"body":{"nativeSrc":"802:127:28","nodeType":"YulBlock","src":"802:127:28","statements":[{"body":{"nativeSrc":"848:16:28","nodeType":"YulBlock","src":"848:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"857:1:28","nodeType":"YulLiteral","src":"857:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"860:1:28","nodeType":"YulLiteral","src":"860:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"850:6:28","nodeType":"YulIdentifier","src":"850:6:28"},"nativeSrc":"850:12:28","nodeType":"YulFunctionCall","src":"850:12:28"},"nativeSrc":"850:12:28","nodeType":"YulExpressionStatement","src":"850:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"823:7:28","nodeType":"YulIdentifier","src":"823:7:28"},{"name":"headStart","nativeSrc":"832:9:28","nodeType":"YulIdentifier","src":"832:9:28"}],"functionName":{"name":"sub","nativeSrc":"819:3:28","nodeType":"YulIdentifier","src":"819:3:28"},"nativeSrc":"819:23:28","nodeType":"YulFunctionCall","src":"819:23:28"},{"kind":"number","nativeSrc":"844:2:28","nodeType":"YulLiteral","src":"844:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"815:3:28","nodeType":"YulIdentifier","src":"815:3:28"},"nativeSrc":"815:32:28","nodeType":"YulFunctionCall","src":"815:32:28"},"nativeSrc":"812:52:28","nodeType":"YulIf","src":"812:52:28"},{"nativeSrc":"873:50:28","nodeType":"YulAssignment","src":"873:50:28","value":{"arguments":[{"name":"headStart","nativeSrc":"913:9:28","nodeType":"YulIdentifier","src":"913:9:28"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"883:29:28","nodeType":"YulIdentifier","src":"883:29:28"},"nativeSrc":"883:40:28","nodeType":"YulFunctionCall","src":"883:40:28"},"variableNames":[{"name":"value0","nativeSrc":"873:6:28","nodeType":"YulIdentifier","src":"873:6:28"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"721:208:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"768:9:28","nodeType":"YulTypedName","src":"768:9:28","type":""},{"name":"dataEnd","nativeSrc":"779:7:28","nodeType":"YulTypedName","src":"779:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"791:6:28","nodeType":"YulTypedName","src":"791:6:28","type":""}],"src":"721:208:28"},{"body":{"nativeSrc":"982:174:28","nodeType":"YulBlock","src":"982:174:28","statements":[{"nativeSrc":"992:16:28","nodeType":"YulAssignment","src":"992:16:28","value":{"arguments":[{"name":"x","nativeSrc":"1003:1:28","nodeType":"YulIdentifier","src":"1003:1:28"},{"name":"y","nativeSrc":"1006:1:28","nodeType":"YulIdentifier","src":"1006:1:28"}],"functionName":{"name":"add","nativeSrc":"999:3:28","nodeType":"YulIdentifier","src":"999:3:28"},"nativeSrc":"999:9:28","nodeType":"YulFunctionCall","src":"999:9:28"},"variableNames":[{"name":"sum","nativeSrc":"992:3:28","nodeType":"YulIdentifier","src":"992:3:28"}]},{"body":{"nativeSrc":"1039:111:28","nodeType":"YulBlock","src":"1039:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1060:1:28","nodeType":"YulLiteral","src":"1060:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1067:3:28","nodeType":"YulLiteral","src":"1067:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"1072:10:28","nodeType":"YulLiteral","src":"1072:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1063:3:28","nodeType":"YulIdentifier","src":"1063:3:28"},"nativeSrc":"1063:20:28","nodeType":"YulFunctionCall","src":"1063:20:28"}],"functionName":{"name":"mstore","nativeSrc":"1053:6:28","nodeType":"YulIdentifier","src":"1053:6:28"},"nativeSrc":"1053:31:28","nodeType":"YulFunctionCall","src":"1053:31:28"},"nativeSrc":"1053:31:28","nodeType":"YulExpressionStatement","src":"1053:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1104:1:28","nodeType":"YulLiteral","src":"1104:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"1107:4:28","nodeType":"YulLiteral","src":"1107:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"1097:6:28","nodeType":"YulIdentifier","src":"1097:6:28"},"nativeSrc":"1097:15:28","nodeType":"YulFunctionCall","src":"1097:15:28"},"nativeSrc":"1097:15:28","nodeType":"YulExpressionStatement","src":"1097:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1132:1:28","nodeType":"YulLiteral","src":"1132:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1135:4:28","nodeType":"YulLiteral","src":"1135:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1125:6:28","nodeType":"YulIdentifier","src":"1125:6:28"},"nativeSrc":"1125:15:28","nodeType":"YulFunctionCall","src":"1125:15:28"},"nativeSrc":"1125:15:28","nodeType":"YulExpressionStatement","src":"1125:15:28"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"1023:1:28","nodeType":"YulIdentifier","src":"1023:1:28"},{"name":"sum","nativeSrc":"1026:3:28","nodeType":"YulIdentifier","src":"1026:3:28"}],"functionName":{"name":"gt","nativeSrc":"1020:2:28","nodeType":"YulIdentifier","src":"1020:2:28"},"nativeSrc":"1020:10:28","nodeType":"YulFunctionCall","src":"1020:10:28"},"nativeSrc":"1017:133:28","nodeType":"YulIf","src":"1017:133:28"}]},"name":"checked_add_t_uint256","nativeSrc":"934:222:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"965:1:28","nodeType":"YulTypedName","src":"965:1:28","type":""},{"name":"y","nativeSrc":"968:1:28","nodeType":"YulTypedName","src":"968:1:28","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"974:3:28","nodeType":"YulTypedName","src":"974:3:28","type":""}],"src":"934:222:28"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint64t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n        value2 := value\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101406040523480156200001257600080fd5b5060405162000de538038062000de5833981016040819052620000359162000142565b83838383826001600160a01b031660e0816001600160a01b03168152505060e0516001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000094573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ba9190620001a2565b6001600160a01b0390811661010052841660c052620000e26001600160401b0383166200010d565b6001600160a01b03166080526001600160401b0390911660a0526101205250620001e9945050505050565b60006200011f826001609d1b620001c7565b92915050565b80516001600160a01b03811681146200013d57600080fd5b919050565b600080600080608085870312156200015957600080fd5b620001648562000125565b9350620001746020860162000125565b60408601519093506001600160401b03811681146200019257600080fd5b6060959095015193969295505050565b600060208284031215620001b557600080fd5b620001c08262000125565b9392505050565b808201808211156200011f57634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e0516101005161012051610b7b6200026a6000396000818161011801526106e40152600081816102fc015261063501526000818161025e0152818161038801526103cc01526000818161019a015261033701526000818161022a01526106c00152600081816101f601526106060152610b7b6000f3fe6080604052600436106100c65760003560e01c80639a923b9a1161007f578063d0a1026011610059578063d0a10260146102a2578063d9acf0ec146102b5578063dd4c07c8146102d5578063fc0c546a146102ea57600080fd5b80639a923b9a146102185780639b5215f61461024c578063b7c312e61461028057600080fd5b80630813f32f146100d2578063303f1e811461010657806355cd1378146101485780635e280f11146101885780636e3bf0ad146101bc57806384123305146101e457600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506100e861045181565b60405167ffffffffffffffff90911681526020015b60405180910390f35b34801561011257600080fd5b5061013a7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100fd565b34801561015457600080fd5b5061017073333333333333333333333333333333333333333381565b6040516001600160a01b0390911681526020016100fd565b34801561019457600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b3480156101c857600080fd5b5061017073222222222222222222222222222222222222222281565b3480156101f057600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b34801561022457600080fd5b506100e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561025857600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b34801561028c57600080fd5b506102a061029b366004610811565b61031e565b005b6102a06102b0366004610884565b61032c565b3480156102c157600080fd5b506102a06102d0366004610811565b610438565b3480156102e157600080fd5b5061013a600a81565b3480156102f657600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b6103288282610442565b5050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461037c5760405163eee35e6f60e01b81523360048201526024015b60405180910390fd5b866001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146104015760405163021bfb8360e61b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015288166024820152604401610373565b60008061040e8787610596565b90925090503415610423576104238234610442565b61042d82826105ef565b505050505050505050565b61032882826105ef565b6040516000907322222222222222222222222222222222222222229083908381818185875af1925050503d8060008114610498576040519150601f19603f3d011682016040523d82523d6000602084013e61049d565b606091505b50509050806104ee5760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e64204859504520746f204879706572436f72656044820152606401610373565b733333333333333333333333333333333333333333630b0ac0ab84610451610517600a80610a1c565b6105219087610a28565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015267ffffffffffffffff9182166024840152166044820152606401600060405180830381600087803b15801561057957600080fd5b505af115801561058d573d6000803e3d6000fd5b50505050505050565b60008060006105a58585610788565b905060148151146105cd5780516040516309b3473160e01b8152610373918391600401610a4a565b6105d681610a9f565b60601c92506105e585856107d5565b9150509250929050565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561067e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a29190610adb565b50733333333333333333333333333333333333333333630b0ac0ab837f000000000000000000000000000000000000000000000000000000000000000061070a7f0000000000000000000000000000000000000000000000000000000000000000600a610a1c565b6107149086610a28565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015267ffffffffffffffff9182166024840152166044820152606401600060405180830381600087803b15801561076c57600080fd5b505af1158015610780573d6000803e3d6000fd5b505050505050565b606061079782604c8186610afd565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b92915050565b60006107e5602c600c8486610afd565b6107ee91610b27565b9392505050565b80356001600160a01b038116811461080c57600080fd5b919050565b6000806040838503121561082457600080fd5b61082d836107f5565b946020939093013593505050565b60008083601f84011261084d57600080fd5b50813567ffffffffffffffff81111561086557600080fd5b60208301915083602082850101111561087d57600080fd5b9250929050565b600080600080600080600060a0888a03121561089f57600080fd5b6108a8886107f5565b965060208801359550604088013567ffffffffffffffff808211156108cc57600080fd5b6108d88b838c0161083b565b90975095508591506108ec60608b016107f5565b945060808a013591508082111561090257600080fd5b5061090f8a828b0161083b565b989b979a50959850939692959293505050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561097357816000190482111561095957610959610922565b8085161561096657918102915b93841c939080029061093d565b509250929050565b60008261098a575060016107cf565b81610997575060006107cf565b81600181146109ad57600281146109b7576109d3565b60019150506107cf565b60ff8411156109c8576109c8610922565b50506001821b6107cf565b5060208310610133831016604e8410600b84101617156109f6575081810a6107cf565b610a008383610938565b8060001904821115610a1457610a14610922565b029392505050565b60006107ee838361097b565b600082610a4557634e487b7160e01b600052601260045260246000fd5b500490565b604081526000835180604084015260005b81811015610a785760208187018101516060868401015201610a5b565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b805160208201516bffffffffffffffffffffffff198082169291906014831015610ad35780818460140360031b1b83161693505b505050919050565b600060208284031215610aed57600080fd5b815180151581146107ee57600080fd5b60008085851115610b0d57600080fd5b83861115610b1a57600080fd5b5050820193919092039150565b803560208310156107cf57600019602084900360031b1b169291505056fea2646970667358221220c4f2710927a196119e967aafdb892ea710f6b3d7b1399206d6df3be388014a1764736f6c63430008160033","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xDE5 CODESIZE SUB DUP1 PUSH3 0xDE5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x142 JUMP JUMPDEST DUP4 DUP4 DUP4 DUP4 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xE0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0xE0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xBA SWAP2 SWAP1 PUSH3 0x1A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 MSTORE DUP5 AND PUSH1 0xC0 MSTORE PUSH3 0xE2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH3 0x10D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND PUSH1 0xA0 MSTORE PUSH2 0x120 MSTORE POP PUSH3 0x1E9 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11F DUP3 PUSH1 0x1 PUSH1 0x9D SHL PUSH3 0x1C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x164 DUP6 PUSH3 0x125 JUMP JUMPDEST SWAP4 POP PUSH3 0x174 PUSH1 0x20 DUP7 ADD PUSH3 0x125 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1C0 DUP3 PUSH3 0x125 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x11F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0xB7B PUSH3 0x26A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x118 ADD MSTORE PUSH2 0x6E4 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2FC ADD MSTORE PUSH2 0x635 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x25E ADD MSTORE DUP2 DUP2 PUSH2 0x388 ADD MSTORE PUSH2 0x3CC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x19A ADD MSTORE PUSH2 0x337 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x22A ADD MSTORE PUSH2 0x6C0 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1F6 ADD MSTORE PUSH2 0x606 ADD MSTORE PUSH2 0xB7B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A923B9A GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD0A10260 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD0A10260 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xD9ACF0EC EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xDD4C07C8 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A923B9A EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x9B5215F6 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xB7C312E6 EQ PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x813F32F EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x303F1E81 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x55CD1378 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x5E280F11 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x6E3BF0AD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x84123305 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xCD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x451 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH20 0x3333333333333333333333333333333333333333 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH20 0x2222222222222222222222222222222222222222 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH1 0xA DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x328 DUP3 DUP3 PUSH2 0x442 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEEE35E6F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x401 JUMPI PUSH1 0x40 MLOAD PUSH4 0x21BFB83 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x373 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x40E DUP8 DUP8 PUSH2 0x596 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP CALLVALUE ISZERO PUSH2 0x423 JUMPI PUSH2 0x423 DUP3 CALLVALUE PUSH2 0x442 JUMP JUMPDEST PUSH2 0x42D DUP3 DUP3 PUSH2 0x5EF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x328 DUP3 DUP3 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH20 0x2222222222222222222222222222222222222222 SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x49D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64204859504520746F204879706572436F7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x373 JUMP JUMPDEST PUSH20 0x3333333333333333333333333333333333333333 PUSH4 0xB0AC0AB DUP5 PUSH2 0x451 PUSH2 0x517 PUSH1 0xA DUP1 PUSH2 0xA1C JUMP JUMPDEST PUSH2 0x521 SWAP1 DUP8 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x5A5 DUP6 DUP6 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ PUSH2 0x5CD JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x9B34731 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x373 SWAP2 DUP4 SWAP2 PUSH1 0x4 ADD PUSH2 0xA4A JUMP JUMPDEST PUSH2 0x5D6 DUP2 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP PUSH2 0x5E5 DUP6 DUP6 PUSH2 0x7D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x67E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A2 SWAP2 SWAP1 PUSH2 0xADB JUMP JUMPDEST POP PUSH20 0x3333333333333333333333333333333333333333 PUSH4 0xB0AC0AB DUP4 PUSH32 0x0 PUSH2 0x70A PUSH32 0x0 PUSH1 0xA PUSH2 0xA1C JUMP JUMPDEST PUSH2 0x714 SWAP1 DUP7 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x76C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x780 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x797 DUP3 PUSH1 0x4C DUP2 DUP7 PUSH2 0xAFD JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E5 PUSH1 0x2C PUSH1 0xC DUP5 DUP7 PUSH2 0xAFD JUMP JUMPDEST PUSH2 0x7EE SWAP2 PUSH2 0xB27 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x82D DUP4 PUSH2 0x7F5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A8 DUP9 PUSH2 0x7F5 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D8 DUP12 DUP4 DUP13 ADD PUSH2 0x83B JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x8EC PUSH1 0x60 DUP12 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90F DUP11 DUP3 DUP12 ADD PUSH2 0x83B JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x973 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x959 JUMPI PUSH2 0x959 PUSH2 0x922 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x966 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x93D JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x98A JUMPI POP PUSH1 0x1 PUSH2 0x7CF JUMP JUMPDEST DUP2 PUSH2 0x997 JUMPI POP PUSH1 0x0 PUSH2 0x7CF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x9AD JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x9B7 JUMPI PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x7CF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x9C8 JUMPI PUSH2 0x9C8 PUSH2 0x922 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x7CF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x9F6 JUMPI POP DUP2 DUP2 EXP PUSH2 0x7CF JUMP JUMPDEST PUSH2 0xA00 DUP4 DUP4 PUSH2 0x938 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xA14 JUMPI PUSH2 0xA14 PUSH2 0x922 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EE DUP4 DUP4 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA45 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA78 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xA5B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 PUSH1 0x14 DUP4 LT ISZERO PUSH2 0xAD3 JUMPI DUP1 DUP2 DUP5 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP4 POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0xB0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0xB1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x20 DUP4 LT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x0 NOT PUSH1 0x20 DUP5 SWAP1 SUB PUSH1 0x3 SHL SHL AND SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 CALLCODE PUSH18 0x927A196119E967AAFDB892EA710F6B3D7B1 CODECOPY SWAP3 MOD 0xD6 0xDF EXTCODESIZE 0xE3 DUP9 ADD 0x4A OR PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"168:512:26:-:0;;;222:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;361:11;374:4;380:10;392:8;1886:4:12;-1:-1:-1;;;;;1875:16:12;;;-1:-1:-1;;;;;1875:16:12;;;;;1916:3;;-1:-1:-1;;;;;1916:9:12;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1901:27:12;;;;;1939:20;;;;2444:62;-1:-1:-1;;;;;2444:62:12;;:48;:62::i;:::-;-1:-1:-1;;;;;2411:95:12;;;-1:-1:-1;;;;;2516:38:12;;;;;2564:18;;-1:-1:-1;168:512:26;;-1:-1:-1;;;;;168:512:26;1991:177:15;2069:7;2111:48;2147:12;-1:-1:-1;;;2111:48:15;:::i;:::-;2088:73;1991:177;-1:-1:-1;;1991:177:15:o;14::28:-;93:13;;-1:-1:-1;;;;;135:31:28;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:520::-;292:6;300;308;316;369:3;357:9;348:7;344:23;340:33;337:53;;;386:1;383;376:12;337:53;409:40;439:9;409:40;:::i;:::-;399:50;;468:49;513:2;502:9;498:18;468:49;:::i;:::-;560:2;545:18;;539:25;458:59;;-1:-1:-1;;;;;;593:30:28;;583:41;;573:69;;638:1;635;628:12;573:69;706:2;691:18;;;;685:25;196:520;;;;-1:-1:-1;;;196:520:28:o;721:208::-;791:6;844:2;832:9;823:7;819:23;815:32;812:52;;;860:1;857;850:12;812:52;883:40;913:9;883:40;:::i;:::-;873:50;721:208;-1:-1:-1;;;721:208:28:o;934:222::-;999:9;;;1020:10;;;1017:133;;;1072:10;1067:3;1063:20;1060:1;1053:31;1107:4;1104:1;1097:15;1135:4;1132:1;1125:15;934:222;168:512:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@HYPER_CORE_INDEX_ID_1432":{"entryPoint":null,"id":1432,"parameterSlots":0,"returnSlots":0},"@HYPER_CORE_INDEX_ID_DECIMAL_DIFF_1437":{"entryPoint":null,"id":1437,"parameterSlots":0,"returnSlots":0},"@HYPE_ASSET_BRIDGE_ADDRESS_1429":{"entryPoint":null,"id":1429,"parameterSlots":0,"returnSlots":0},"@L1WritePrecompileAddress_1423":{"entryPoint":null,"id":1423,"parameterSlots":0,"returnSlots":0},"@OFT_TOKEN_ASSET_BRIDGE_ADDRESS_1418":{"entryPoint":null,"id":1418,"parameterSlots":0,"returnSlots":0},"@OFT_TOKEN_CORE_INDEX_ID_1420":{"entryPoint":null,"id":1420,"parameterSlots":0,"returnSlots":0},"@_1638":{"entryPoint":null,"id":1638,"parameterSlots":0,"returnSlots":0},"@_fundAddressOnHyperCore_1634":{"entryPoint":1090,"id":1634,"parameterSlots":2,"returnSlots":0},"@_sendAssetToHyperCore_1596":{"entryPoint":1519,"id":1596,"parameterSlots":2,"returnSlots":0},"@amountLD_1331":{"entryPoint":2005,"id":1331,"parameterSlots":2,"returnSlots":1},"@composeMsg_1361":{"entryPoint":1928,"id":1361,"parameterSlots":2,"returnSlots":1},"@endpoint_1439":{"entryPoint":null,"id":1439,"parameterSlots":0,"returnSlots":0},"@fundAddressOnHyperCore_3002":{"entryPoint":798,"id":3002,"parameterSlots":2,"returnSlots":0},"@lzCompose_1565":{"entryPoint":812,"id":1565,"parameterSlots":7,"returnSlots":0},"@oft_1442":{"entryPoint":null,"id":1442,"parameterSlots":0,"returnSlots":0},"@sendAssetToHyperCore_2989":{"entryPoint":1080,"id":2989,"parameterSlots":2,"returnSlots":0},"@token_1445":{"entryPoint":null,"id":1445,"parameterSlots":0,"returnSlots":0},"@validateAndDecodeMessage_1865":{"entryPoint":1430,"id":1865,"parameterSlots":2,"returnSlots":2},"@weiDiff_1447":{"entryPoint":null,"id":1447,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":2037,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":2107,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr":{"entryPoint":2180,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2065,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint64_t_uint64__to_t_address_t_uint64_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":2634,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$2218__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IOFT_$1233__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f36cc36cc2d8409d2a1ca675856db8c0ac40991b9e411e41e2b8bba2f8104fb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":2813,"id":null,"parameterSlots":4,"returnSlots":2},"checked_div_t_uint256":{"entryPoint":2600,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2360,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":2588,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":2427,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32":{"entryPoint":2855,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20":{"entryPoint":2719,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2338,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:8150:28","nodeType":"YulBlock","src":"0:8150:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"113:101:28","nodeType":"YulBlock","src":"113:101:28","statements":[{"nativeSrc":"123:26:28","nodeType":"YulAssignment","src":"123:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"135:9:28","nodeType":"YulIdentifier","src":"135:9:28"},{"kind":"number","nativeSrc":"146:2:28","nodeType":"YulLiteral","src":"146:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"131:3:28","nodeType":"YulIdentifier","src":"131:3:28"},"nativeSrc":"131:18:28","nodeType":"YulFunctionCall","src":"131:18:28"},"variableNames":[{"name":"tail","nativeSrc":"123:4:28","nodeType":"YulIdentifier","src":"123:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"165:9:28","nodeType":"YulIdentifier","src":"165:9:28"},{"arguments":[{"name":"value0","nativeSrc":"180:6:28","nodeType":"YulIdentifier","src":"180:6:28"},{"kind":"number","nativeSrc":"188:18:28","nodeType":"YulLiteral","src":"188:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"176:3:28","nodeType":"YulIdentifier","src":"176:3:28"},"nativeSrc":"176:31:28","nodeType":"YulFunctionCall","src":"176:31:28"}],"functionName":{"name":"mstore","nativeSrc":"158:6:28","nodeType":"YulIdentifier","src":"158:6:28"},"nativeSrc":"158:50:28","nodeType":"YulFunctionCall","src":"158:50:28"},"nativeSrc":"158:50:28","nodeType":"YulExpressionStatement","src":"158:50:28"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"14:200:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"82:9:28","nodeType":"YulTypedName","src":"82:9:28","type":""},{"name":"value0","nativeSrc":"93:6:28","nodeType":"YulTypedName","src":"93:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"104:4:28","nodeType":"YulTypedName","src":"104:4:28","type":""}],"src":"14:200:28"},{"body":{"nativeSrc":"320:76:28","nodeType":"YulBlock","src":"320:76:28","statements":[{"nativeSrc":"330:26:28","nodeType":"YulAssignment","src":"330:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"342:9:28","nodeType":"YulIdentifier","src":"342:9:28"},{"kind":"number","nativeSrc":"353:2:28","nodeType":"YulLiteral","src":"353:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"338:3:28","nodeType":"YulIdentifier","src":"338:3:28"},"nativeSrc":"338:18:28","nodeType":"YulFunctionCall","src":"338:18:28"},"variableNames":[{"name":"tail","nativeSrc":"330:4:28","nodeType":"YulIdentifier","src":"330:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"372:9:28","nodeType":"YulIdentifier","src":"372:9:28"},{"name":"value0","nativeSrc":"383:6:28","nodeType":"YulIdentifier","src":"383:6:28"}],"functionName":{"name":"mstore","nativeSrc":"365:6:28","nodeType":"YulIdentifier","src":"365:6:28"},"nativeSrc":"365:25:28","nodeType":"YulFunctionCall","src":"365:25:28"},"nativeSrc":"365:25:28","nodeType":"YulExpressionStatement","src":"365:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"219:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"289:9:28","nodeType":"YulTypedName","src":"289:9:28","type":""},{"name":"value0","nativeSrc":"300:6:28","nodeType":"YulTypedName","src":"300:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"311:4:28","nodeType":"YulTypedName","src":"311:4:28","type":""}],"src":"219:177:28"},{"body":{"nativeSrc":"502:102:28","nodeType":"YulBlock","src":"502:102:28","statements":[{"nativeSrc":"512:26:28","nodeType":"YulAssignment","src":"512:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"524:9:28","nodeType":"YulIdentifier","src":"524:9:28"},{"kind":"number","nativeSrc":"535:2:28","nodeType":"YulLiteral","src":"535:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"520:3:28","nodeType":"YulIdentifier","src":"520:3:28"},"nativeSrc":"520:18:28","nodeType":"YulFunctionCall","src":"520:18:28"},"variableNames":[{"name":"tail","nativeSrc":"512:4:28","nodeType":"YulIdentifier","src":"512:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"554:9:28","nodeType":"YulIdentifier","src":"554:9:28"},{"arguments":[{"name":"value0","nativeSrc":"569:6:28","nodeType":"YulIdentifier","src":"569:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"585:3:28","nodeType":"YulLiteral","src":"585:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"590:1:28","nodeType":"YulLiteral","src":"590:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"581:3:28","nodeType":"YulIdentifier","src":"581:3:28"},"nativeSrc":"581:11:28","nodeType":"YulFunctionCall","src":"581:11:28"},{"kind":"number","nativeSrc":"594:1:28","nodeType":"YulLiteral","src":"594:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"577:3:28","nodeType":"YulIdentifier","src":"577:3:28"},"nativeSrc":"577:19:28","nodeType":"YulFunctionCall","src":"577:19:28"}],"functionName":{"name":"and","nativeSrc":"565:3:28","nodeType":"YulIdentifier","src":"565:3:28"},"nativeSrc":"565:32:28","nodeType":"YulFunctionCall","src":"565:32:28"}],"functionName":{"name":"mstore","nativeSrc":"547:6:28","nodeType":"YulIdentifier","src":"547:6:28"},"nativeSrc":"547:51:28","nodeType":"YulFunctionCall","src":"547:51:28"},"nativeSrc":"547:51:28","nodeType":"YulExpressionStatement","src":"547:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"401:203:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"471:9:28","nodeType":"YulTypedName","src":"471:9:28","type":""},{"name":"value0","nativeSrc":"482:6:28","nodeType":"YulTypedName","src":"482:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"493:4:28","nodeType":"YulTypedName","src":"493:4:28","type":""}],"src":"401:203:28"},{"body":{"nativeSrc":"726:102:28","nodeType":"YulBlock","src":"726:102:28","statements":[{"nativeSrc":"736:26:28","nodeType":"YulAssignment","src":"736:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"748:9:28","nodeType":"YulIdentifier","src":"748:9:28"},{"kind":"number","nativeSrc":"759:2:28","nodeType":"YulLiteral","src":"759:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"744:3:28","nodeType":"YulIdentifier","src":"744:3:28"},"nativeSrc":"744:18:28","nodeType":"YulFunctionCall","src":"744:18:28"},"variableNames":[{"name":"tail","nativeSrc":"736:4:28","nodeType":"YulIdentifier","src":"736:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"778:9:28","nodeType":"YulIdentifier","src":"778:9:28"},{"arguments":[{"name":"value0","nativeSrc":"793:6:28","nodeType":"YulIdentifier","src":"793:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"809:3:28","nodeType":"YulLiteral","src":"809:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"814:1:28","nodeType":"YulLiteral","src":"814:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"805:3:28","nodeType":"YulIdentifier","src":"805:3:28"},"nativeSrc":"805:11:28","nodeType":"YulFunctionCall","src":"805:11:28"},{"kind":"number","nativeSrc":"818:1:28","nodeType":"YulLiteral","src":"818:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"801:3:28","nodeType":"YulIdentifier","src":"801:3:28"},"nativeSrc":"801:19:28","nodeType":"YulFunctionCall","src":"801:19:28"}],"functionName":{"name":"and","nativeSrc":"789:3:28","nodeType":"YulIdentifier","src":"789:3:28"},"nativeSrc":"789:32:28","nodeType":"YulFunctionCall","src":"789:32:28"}],"functionName":{"name":"mstore","nativeSrc":"771:6:28","nodeType":"YulIdentifier","src":"771:6:28"},"nativeSrc":"771:51:28","nodeType":"YulFunctionCall","src":"771:51:28"},"nativeSrc":"771:51:28","nodeType":"YulExpressionStatement","src":"771:51:28"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nativeSrc":"609:219:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"695:9:28","nodeType":"YulTypedName","src":"695:9:28","type":""},{"name":"value0","nativeSrc":"706:6:28","nodeType":"YulTypedName","src":"706:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"717:4:28","nodeType":"YulTypedName","src":"717:4:28","type":""}],"src":"609:219:28"},{"body":{"nativeSrc":"947:102:28","nodeType":"YulBlock","src":"947:102:28","statements":[{"nativeSrc":"957:26:28","nodeType":"YulAssignment","src":"957:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"969:9:28","nodeType":"YulIdentifier","src":"969:9:28"},{"kind":"number","nativeSrc":"980:2:28","nodeType":"YulLiteral","src":"980:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"965:3:28","nodeType":"YulIdentifier","src":"965:3:28"},"nativeSrc":"965:18:28","nodeType":"YulFunctionCall","src":"965:18:28"},"variableNames":[{"name":"tail","nativeSrc":"957:4:28","nodeType":"YulIdentifier","src":"957:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"999:9:28","nodeType":"YulIdentifier","src":"999:9:28"},{"arguments":[{"name":"value0","nativeSrc":"1014:6:28","nodeType":"YulIdentifier","src":"1014:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1030:3:28","nodeType":"YulLiteral","src":"1030:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"1035:1:28","nodeType":"YulLiteral","src":"1035:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1026:3:28","nodeType":"YulIdentifier","src":"1026:3:28"},"nativeSrc":"1026:11:28","nodeType":"YulFunctionCall","src":"1026:11:28"},{"kind":"number","nativeSrc":"1039:1:28","nodeType":"YulLiteral","src":"1039:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1022:3:28","nodeType":"YulIdentifier","src":"1022:3:28"},"nativeSrc":"1022:19:28","nodeType":"YulFunctionCall","src":"1022:19:28"}],"functionName":{"name":"and","nativeSrc":"1010:3:28","nodeType":"YulIdentifier","src":"1010:3:28"},"nativeSrc":"1010:32:28","nodeType":"YulFunctionCall","src":"1010:32:28"}],"functionName":{"name":"mstore","nativeSrc":"992:6:28","nodeType":"YulIdentifier","src":"992:6:28"},"nativeSrc":"992:51:28","nodeType":"YulFunctionCall","src":"992:51:28"},"nativeSrc":"992:51:28","nodeType":"YulExpressionStatement","src":"992:51:28"}]},"name":"abi_encode_tuple_t_contract$_IOFT_$1233__to_t_address__fromStack_reversed","nativeSrc":"833:216:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"916:9:28","nodeType":"YulTypedName","src":"916:9:28","type":""},{"name":"value0","nativeSrc":"927:6:28","nodeType":"YulTypedName","src":"927:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"938:4:28","nodeType":"YulTypedName","src":"938:4:28","type":""}],"src":"833:216:28"},{"body":{"nativeSrc":"1103:124:28","nodeType":"YulBlock","src":"1103:124:28","statements":[{"nativeSrc":"1113:29:28","nodeType":"YulAssignment","src":"1113:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"1135:6:28","nodeType":"YulIdentifier","src":"1135:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"1122:12:28","nodeType":"YulIdentifier","src":"1122:12:28"},"nativeSrc":"1122:20:28","nodeType":"YulFunctionCall","src":"1122:20:28"},"variableNames":[{"name":"value","nativeSrc":"1113:5:28","nodeType":"YulIdentifier","src":"1113:5:28"}]},{"body":{"nativeSrc":"1205:16:28","nodeType":"YulBlock","src":"1205:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1214:1:28","nodeType":"YulLiteral","src":"1214:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1217:1:28","nodeType":"YulLiteral","src":"1217:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1207:6:28","nodeType":"YulIdentifier","src":"1207:6:28"},"nativeSrc":"1207:12:28","nodeType":"YulFunctionCall","src":"1207:12:28"},"nativeSrc":"1207:12:28","nodeType":"YulExpressionStatement","src":"1207:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1164:5:28","nodeType":"YulIdentifier","src":"1164:5:28"},{"arguments":[{"name":"value","nativeSrc":"1175:5:28","nodeType":"YulIdentifier","src":"1175:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1190:3:28","nodeType":"YulLiteral","src":"1190:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"1195:1:28","nodeType":"YulLiteral","src":"1195:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1186:3:28","nodeType":"YulIdentifier","src":"1186:3:28"},"nativeSrc":"1186:11:28","nodeType":"YulFunctionCall","src":"1186:11:28"},{"kind":"number","nativeSrc":"1199:1:28","nodeType":"YulLiteral","src":"1199:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1182:3:28","nodeType":"YulIdentifier","src":"1182:3:28"},"nativeSrc":"1182:19:28","nodeType":"YulFunctionCall","src":"1182:19:28"}],"functionName":{"name":"and","nativeSrc":"1171:3:28","nodeType":"YulIdentifier","src":"1171:3:28"},"nativeSrc":"1171:31:28","nodeType":"YulFunctionCall","src":"1171:31:28"}],"functionName":{"name":"eq","nativeSrc":"1161:2:28","nodeType":"YulIdentifier","src":"1161:2:28"},"nativeSrc":"1161:42:28","nodeType":"YulFunctionCall","src":"1161:42:28"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:28","nodeType":"YulIdentifier","src":"1154:6:28"},"nativeSrc":"1154:50:28","nodeType":"YulFunctionCall","src":"1154:50:28"},"nativeSrc":"1151:70:28","nodeType":"YulIf","src":"1151:70:28"}]},"name":"abi_decode_address","nativeSrc":"1054:173:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1082:6:28","nodeType":"YulTypedName","src":"1082:6:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1093:5:28","nodeType":"YulTypedName","src":"1093:5:28","type":""}],"src":"1054:173:28"},{"body":{"nativeSrc":"1319:167:28","nodeType":"YulBlock","src":"1319:167:28","statements":[{"body":{"nativeSrc":"1365:16:28","nodeType":"YulBlock","src":"1365:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1374:1:28","nodeType":"YulLiteral","src":"1374:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1377:1:28","nodeType":"YulLiteral","src":"1377:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1367:6:28","nodeType":"YulIdentifier","src":"1367:6:28"},"nativeSrc":"1367:12:28","nodeType":"YulFunctionCall","src":"1367:12:28"},"nativeSrc":"1367:12:28","nodeType":"YulExpressionStatement","src":"1367:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1340:7:28","nodeType":"YulIdentifier","src":"1340:7:28"},{"name":"headStart","nativeSrc":"1349:9:28","nodeType":"YulIdentifier","src":"1349:9:28"}],"functionName":{"name":"sub","nativeSrc":"1336:3:28","nodeType":"YulIdentifier","src":"1336:3:28"},"nativeSrc":"1336:23:28","nodeType":"YulFunctionCall","src":"1336:23:28"},{"kind":"number","nativeSrc":"1361:2:28","nodeType":"YulLiteral","src":"1361:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1332:3:28","nodeType":"YulIdentifier","src":"1332:3:28"},"nativeSrc":"1332:32:28","nodeType":"YulFunctionCall","src":"1332:32:28"},"nativeSrc":"1329:52:28","nodeType":"YulIf","src":"1329:52:28"},{"nativeSrc":"1390:39:28","nodeType":"YulAssignment","src":"1390:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1419:9:28","nodeType":"YulIdentifier","src":"1419:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1400:18:28","nodeType":"YulIdentifier","src":"1400:18:28"},"nativeSrc":"1400:29:28","nodeType":"YulFunctionCall","src":"1400:29:28"},"variableNames":[{"name":"value0","nativeSrc":"1390:6:28","nodeType":"YulIdentifier","src":"1390:6:28"}]},{"nativeSrc":"1438:42:28","nodeType":"YulAssignment","src":"1438:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1465:9:28","nodeType":"YulIdentifier","src":"1465:9:28"},{"kind":"number","nativeSrc":"1476:2:28","nodeType":"YulLiteral","src":"1476:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1461:3:28","nodeType":"YulIdentifier","src":"1461:3:28"},"nativeSrc":"1461:18:28","nodeType":"YulFunctionCall","src":"1461:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"1448:12:28","nodeType":"YulIdentifier","src":"1448:12:28"},"nativeSrc":"1448:32:28","nodeType":"YulFunctionCall","src":"1448:32:28"},"variableNames":[{"name":"value1","nativeSrc":"1438:6:28","nodeType":"YulIdentifier","src":"1438:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1232:254:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1277:9:28","nodeType":"YulTypedName","src":"1277:9:28","type":""},{"name":"dataEnd","nativeSrc":"1288:7:28","nodeType":"YulTypedName","src":"1288:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1300:6:28","nodeType":"YulTypedName","src":"1300:6:28","type":""},{"name":"value1","nativeSrc":"1308:6:28","nodeType":"YulTypedName","src":"1308:6:28","type":""}],"src":"1232:254:28"},{"body":{"nativeSrc":"1563:275:28","nodeType":"YulBlock","src":"1563:275:28","statements":[{"body":{"nativeSrc":"1612:16:28","nodeType":"YulBlock","src":"1612:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1621:1:28","nodeType":"YulLiteral","src":"1621:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1624:1:28","nodeType":"YulLiteral","src":"1624:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1614:6:28","nodeType":"YulIdentifier","src":"1614:6:28"},"nativeSrc":"1614:12:28","nodeType":"YulFunctionCall","src":"1614:12:28"},"nativeSrc":"1614:12:28","nodeType":"YulExpressionStatement","src":"1614:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1591:6:28","nodeType":"YulIdentifier","src":"1591:6:28"},{"kind":"number","nativeSrc":"1599:4:28","nodeType":"YulLiteral","src":"1599:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1587:3:28","nodeType":"YulIdentifier","src":"1587:3:28"},"nativeSrc":"1587:17:28","nodeType":"YulFunctionCall","src":"1587:17:28"},{"name":"end","nativeSrc":"1606:3:28","nodeType":"YulIdentifier","src":"1606:3:28"}],"functionName":{"name":"slt","nativeSrc":"1583:3:28","nodeType":"YulIdentifier","src":"1583:3:28"},"nativeSrc":"1583:27:28","nodeType":"YulFunctionCall","src":"1583:27:28"}],"functionName":{"name":"iszero","nativeSrc":"1576:6:28","nodeType":"YulIdentifier","src":"1576:6:28"},"nativeSrc":"1576:35:28","nodeType":"YulFunctionCall","src":"1576:35:28"},"nativeSrc":"1573:55:28","nodeType":"YulIf","src":"1573:55:28"},{"nativeSrc":"1637:30:28","nodeType":"YulAssignment","src":"1637:30:28","value":{"arguments":[{"name":"offset","nativeSrc":"1660:6:28","nodeType":"YulIdentifier","src":"1660:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"1647:12:28","nodeType":"YulIdentifier","src":"1647:12:28"},"nativeSrc":"1647:20:28","nodeType":"YulFunctionCall","src":"1647:20:28"},"variableNames":[{"name":"length","nativeSrc":"1637:6:28","nodeType":"YulIdentifier","src":"1637:6:28"}]},{"body":{"nativeSrc":"1710:16:28","nodeType":"YulBlock","src":"1710:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1719:1:28","nodeType":"YulLiteral","src":"1719:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1722:1:28","nodeType":"YulLiteral","src":"1722:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1712:6:28","nodeType":"YulIdentifier","src":"1712:6:28"},"nativeSrc":"1712:12:28","nodeType":"YulFunctionCall","src":"1712:12:28"},"nativeSrc":"1712:12:28","nodeType":"YulExpressionStatement","src":"1712:12:28"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1682:6:28","nodeType":"YulIdentifier","src":"1682:6:28"},{"kind":"number","nativeSrc":"1690:18:28","nodeType":"YulLiteral","src":"1690:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1679:2:28","nodeType":"YulIdentifier","src":"1679:2:28"},"nativeSrc":"1679:30:28","nodeType":"YulFunctionCall","src":"1679:30:28"},"nativeSrc":"1676:50:28","nodeType":"YulIf","src":"1676:50:28"},{"nativeSrc":"1735:29:28","nodeType":"YulAssignment","src":"1735:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"1751:6:28","nodeType":"YulIdentifier","src":"1751:6:28"},{"kind":"number","nativeSrc":"1759:4:28","nodeType":"YulLiteral","src":"1759:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1747:3:28","nodeType":"YulIdentifier","src":"1747:3:28"},"nativeSrc":"1747:17:28","nodeType":"YulFunctionCall","src":"1747:17:28"},"variableNames":[{"name":"arrayPos","nativeSrc":"1735:8:28","nodeType":"YulIdentifier","src":"1735:8:28"}]},{"body":{"nativeSrc":"1816:16:28","nodeType":"YulBlock","src":"1816:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1825:1:28","nodeType":"YulLiteral","src":"1825:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1828:1:28","nodeType":"YulLiteral","src":"1828:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1818:6:28","nodeType":"YulIdentifier","src":"1818:6:28"},"nativeSrc":"1818:12:28","nodeType":"YulFunctionCall","src":"1818:12:28"},"nativeSrc":"1818:12:28","nodeType":"YulExpressionStatement","src":"1818:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1787:6:28","nodeType":"YulIdentifier","src":"1787:6:28"},{"name":"length","nativeSrc":"1795:6:28","nodeType":"YulIdentifier","src":"1795:6:28"}],"functionName":{"name":"add","nativeSrc":"1783:3:28","nodeType":"YulIdentifier","src":"1783:3:28"},"nativeSrc":"1783:19:28","nodeType":"YulFunctionCall","src":"1783:19:28"},{"kind":"number","nativeSrc":"1804:4:28","nodeType":"YulLiteral","src":"1804:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1779:3:28","nodeType":"YulIdentifier","src":"1779:3:28"},"nativeSrc":"1779:30:28","nodeType":"YulFunctionCall","src":"1779:30:28"},{"name":"end","nativeSrc":"1811:3:28","nodeType":"YulIdentifier","src":"1811:3:28"}],"functionName":{"name":"gt","nativeSrc":"1776:2:28","nodeType":"YulIdentifier","src":"1776:2:28"},"nativeSrc":"1776:39:28","nodeType":"YulFunctionCall","src":"1776:39:28"},"nativeSrc":"1773:59:28","nodeType":"YulIf","src":"1773:59:28"}]},"name":"abi_decode_bytes_calldata","nativeSrc":"1491:347:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1526:6:28","nodeType":"YulTypedName","src":"1526:6:28","type":""},{"name":"end","nativeSrc":"1534:3:28","nodeType":"YulTypedName","src":"1534:3:28","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"1542:8:28","nodeType":"YulTypedName","src":"1542:8:28","type":""},{"name":"length","nativeSrc":"1552:6:28","nodeType":"YulTypedName","src":"1552:6:28","type":""}],"src":"1491:347:28"},{"body":{"nativeSrc":"2019:759:28","nodeType":"YulBlock","src":"2019:759:28","statements":[{"body":{"nativeSrc":"2066:16:28","nodeType":"YulBlock","src":"2066:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2075:1:28","nodeType":"YulLiteral","src":"2075:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2078:1:28","nodeType":"YulLiteral","src":"2078:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2068:6:28","nodeType":"YulIdentifier","src":"2068:6:28"},"nativeSrc":"2068:12:28","nodeType":"YulFunctionCall","src":"2068:12:28"},"nativeSrc":"2068:12:28","nodeType":"YulExpressionStatement","src":"2068:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2040:7:28","nodeType":"YulIdentifier","src":"2040:7:28"},{"name":"headStart","nativeSrc":"2049:9:28","nodeType":"YulIdentifier","src":"2049:9:28"}],"functionName":{"name":"sub","nativeSrc":"2036:3:28","nodeType":"YulIdentifier","src":"2036:3:28"},"nativeSrc":"2036:23:28","nodeType":"YulFunctionCall","src":"2036:23:28"},{"kind":"number","nativeSrc":"2061:3:28","nodeType":"YulLiteral","src":"2061:3:28","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"2032:3:28","nodeType":"YulIdentifier","src":"2032:3:28"},"nativeSrc":"2032:33:28","nodeType":"YulFunctionCall","src":"2032:33:28"},"nativeSrc":"2029:53:28","nodeType":"YulIf","src":"2029:53:28"},{"nativeSrc":"2091:39:28","nodeType":"YulAssignment","src":"2091:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2120:9:28","nodeType":"YulIdentifier","src":"2120:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2101:18:28","nodeType":"YulIdentifier","src":"2101:18:28"},"nativeSrc":"2101:29:28","nodeType":"YulFunctionCall","src":"2101:29:28"},"variableNames":[{"name":"value0","nativeSrc":"2091:6:28","nodeType":"YulIdentifier","src":"2091:6:28"}]},{"nativeSrc":"2139:42:28","nodeType":"YulAssignment","src":"2139:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2166:9:28","nodeType":"YulIdentifier","src":"2166:9:28"},{"kind":"number","nativeSrc":"2177:2:28","nodeType":"YulLiteral","src":"2177:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2162:3:28","nodeType":"YulIdentifier","src":"2162:3:28"},"nativeSrc":"2162:18:28","nodeType":"YulFunctionCall","src":"2162:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"2149:12:28","nodeType":"YulIdentifier","src":"2149:12:28"},"nativeSrc":"2149:32:28","nodeType":"YulFunctionCall","src":"2149:32:28"},"variableNames":[{"name":"value1","nativeSrc":"2139:6:28","nodeType":"YulIdentifier","src":"2139:6:28"}]},{"nativeSrc":"2190:46:28","nodeType":"YulVariableDeclaration","src":"2190:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2221:9:28","nodeType":"YulIdentifier","src":"2221:9:28"},{"kind":"number","nativeSrc":"2232:2:28","nodeType":"YulLiteral","src":"2232:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2217:3:28","nodeType":"YulIdentifier","src":"2217:3:28"},"nativeSrc":"2217:18:28","nodeType":"YulFunctionCall","src":"2217:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"2204:12:28","nodeType":"YulIdentifier","src":"2204:12:28"},"nativeSrc":"2204:32:28","nodeType":"YulFunctionCall","src":"2204:32:28"},"variables":[{"name":"offset","nativeSrc":"2194:6:28","nodeType":"YulTypedName","src":"2194:6:28","type":""}]},{"nativeSrc":"2245:28:28","nodeType":"YulVariableDeclaration","src":"2245:28:28","value":{"kind":"number","nativeSrc":"2255:18:28","nodeType":"YulLiteral","src":"2255:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"2249:2:28","nodeType":"YulTypedName","src":"2249:2:28","type":""}]},{"body":{"nativeSrc":"2300:16:28","nodeType":"YulBlock","src":"2300:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2309:1:28","nodeType":"YulLiteral","src":"2309:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2312:1:28","nodeType":"YulLiteral","src":"2312:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2302:6:28","nodeType":"YulIdentifier","src":"2302:6:28"},"nativeSrc":"2302:12:28","nodeType":"YulFunctionCall","src":"2302:12:28"},"nativeSrc":"2302:12:28","nodeType":"YulExpressionStatement","src":"2302:12:28"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2288:6:28","nodeType":"YulIdentifier","src":"2288:6:28"},{"name":"_1","nativeSrc":"2296:2:28","nodeType":"YulIdentifier","src":"2296:2:28"}],"functionName":{"name":"gt","nativeSrc":"2285:2:28","nodeType":"YulIdentifier","src":"2285:2:28"},"nativeSrc":"2285:14:28","nodeType":"YulFunctionCall","src":"2285:14:28"},"nativeSrc":"2282:34:28","nodeType":"YulIf","src":"2282:34:28"},{"nativeSrc":"2325:84:28","nodeType":"YulVariableDeclaration","src":"2325:84:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2381:9:28","nodeType":"YulIdentifier","src":"2381:9:28"},{"name":"offset","nativeSrc":"2392:6:28","nodeType":"YulIdentifier","src":"2392:6:28"}],"functionName":{"name":"add","nativeSrc":"2377:3:28","nodeType":"YulIdentifier","src":"2377:3:28"},"nativeSrc":"2377:22:28","nodeType":"YulFunctionCall","src":"2377:22:28"},{"name":"dataEnd","nativeSrc":"2401:7:28","nodeType":"YulIdentifier","src":"2401:7:28"}],"functionName":{"name":"abi_decode_bytes_calldata","nativeSrc":"2351:25:28","nodeType":"YulIdentifier","src":"2351:25:28"},"nativeSrc":"2351:58:28","nodeType":"YulFunctionCall","src":"2351:58:28"},"variables":[{"name":"value2_1","nativeSrc":"2329:8:28","nodeType":"YulTypedName","src":"2329:8:28","type":""},{"name":"value3_1","nativeSrc":"2339:8:28","nodeType":"YulTypedName","src":"2339:8:28","type":""}]},{"nativeSrc":"2418:18:28","nodeType":"YulAssignment","src":"2418:18:28","value":{"name":"value2_1","nativeSrc":"2428:8:28","nodeType":"YulIdentifier","src":"2428:8:28"},"variableNames":[{"name":"value2","nativeSrc":"2418:6:28","nodeType":"YulIdentifier","src":"2418:6:28"}]},{"nativeSrc":"2445:18:28","nodeType":"YulAssignment","src":"2445:18:28","value":{"name":"value3_1","nativeSrc":"2455:8:28","nodeType":"YulIdentifier","src":"2455:8:28"},"variableNames":[{"name":"value3","nativeSrc":"2445:6:28","nodeType":"YulIdentifier","src":"2445:6:28"}]},{"nativeSrc":"2472:48:28","nodeType":"YulAssignment","src":"2472:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2505:9:28","nodeType":"YulIdentifier","src":"2505:9:28"},{"kind":"number","nativeSrc":"2516:2:28","nodeType":"YulLiteral","src":"2516:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2501:3:28","nodeType":"YulIdentifier","src":"2501:3:28"},"nativeSrc":"2501:18:28","nodeType":"YulFunctionCall","src":"2501:18:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2482:18:28","nodeType":"YulIdentifier","src":"2482:18:28"},"nativeSrc":"2482:38:28","nodeType":"YulFunctionCall","src":"2482:38:28"},"variableNames":[{"name":"value4","nativeSrc":"2472:6:28","nodeType":"YulIdentifier","src":"2472:6:28"}]},{"nativeSrc":"2529:49:28","nodeType":"YulVariableDeclaration","src":"2529:49:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2562:9:28","nodeType":"YulIdentifier","src":"2562:9:28"},{"kind":"number","nativeSrc":"2573:3:28","nodeType":"YulLiteral","src":"2573:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2558:3:28","nodeType":"YulIdentifier","src":"2558:3:28"},"nativeSrc":"2558:19:28","nodeType":"YulFunctionCall","src":"2558:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"2545:12:28","nodeType":"YulIdentifier","src":"2545:12:28"},"nativeSrc":"2545:33:28","nodeType":"YulFunctionCall","src":"2545:33:28"},"variables":[{"name":"offset_1","nativeSrc":"2533:8:28","nodeType":"YulTypedName","src":"2533:8:28","type":""}]},{"body":{"nativeSrc":"2607:16:28","nodeType":"YulBlock","src":"2607:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2616:1:28","nodeType":"YulLiteral","src":"2616:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2619:1:28","nodeType":"YulLiteral","src":"2619:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2609:6:28","nodeType":"YulIdentifier","src":"2609:6:28"},"nativeSrc":"2609:12:28","nodeType":"YulFunctionCall","src":"2609:12:28"},"nativeSrc":"2609:12:28","nodeType":"YulExpressionStatement","src":"2609:12:28"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"2593:8:28","nodeType":"YulIdentifier","src":"2593:8:28"},{"name":"_1","nativeSrc":"2603:2:28","nodeType":"YulIdentifier","src":"2603:2:28"}],"functionName":{"name":"gt","nativeSrc":"2590:2:28","nodeType":"YulIdentifier","src":"2590:2:28"},"nativeSrc":"2590:16:28","nodeType":"YulFunctionCall","src":"2590:16:28"},"nativeSrc":"2587:36:28","nodeType":"YulIf","src":"2587:36:28"},{"nativeSrc":"2632:86:28","nodeType":"YulVariableDeclaration","src":"2632:86:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2688:9:28","nodeType":"YulIdentifier","src":"2688:9:28"},{"name":"offset_1","nativeSrc":"2699:8:28","nodeType":"YulIdentifier","src":"2699:8:28"}],"functionName":{"name":"add","nativeSrc":"2684:3:28","nodeType":"YulIdentifier","src":"2684:3:28"},"nativeSrc":"2684:24:28","nodeType":"YulFunctionCall","src":"2684:24:28"},{"name":"dataEnd","nativeSrc":"2710:7:28","nodeType":"YulIdentifier","src":"2710:7:28"}],"functionName":{"name":"abi_decode_bytes_calldata","nativeSrc":"2658:25:28","nodeType":"YulIdentifier","src":"2658:25:28"},"nativeSrc":"2658:60:28","nodeType":"YulFunctionCall","src":"2658:60:28"},"variables":[{"name":"value5_1","nativeSrc":"2636:8:28","nodeType":"YulTypedName","src":"2636:8:28","type":""},{"name":"value6_1","nativeSrc":"2646:8:28","nodeType":"YulTypedName","src":"2646:8:28","type":""}]},{"nativeSrc":"2727:18:28","nodeType":"YulAssignment","src":"2727:18:28","value":{"name":"value5_1","nativeSrc":"2737:8:28","nodeType":"YulIdentifier","src":"2737:8:28"},"variableNames":[{"name":"value5","nativeSrc":"2727:6:28","nodeType":"YulIdentifier","src":"2727:6:28"}]},{"nativeSrc":"2754:18:28","nodeType":"YulAssignment","src":"2754:18:28","value":{"name":"value6_1","nativeSrc":"2764:8:28","nodeType":"YulIdentifier","src":"2764:8:28"},"variableNames":[{"name":"value6","nativeSrc":"2754:6:28","nodeType":"YulIdentifier","src":"2754:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr","nativeSrc":"1843:935:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1937:9:28","nodeType":"YulTypedName","src":"1937:9:28","type":""},{"name":"dataEnd","nativeSrc":"1948:7:28","nodeType":"YulTypedName","src":"1948:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1960:6:28","nodeType":"YulTypedName","src":"1960:6:28","type":""},{"name":"value1","nativeSrc":"1968:6:28","nodeType":"YulTypedName","src":"1968:6:28","type":""},{"name":"value2","nativeSrc":"1976:6:28","nodeType":"YulTypedName","src":"1976:6:28","type":""},{"name":"value3","nativeSrc":"1984:6:28","nodeType":"YulTypedName","src":"1984:6:28","type":""},{"name":"value4","nativeSrc":"1992:6:28","nodeType":"YulTypedName","src":"1992:6:28","type":""},{"name":"value5","nativeSrc":"2000:6:28","nodeType":"YulTypedName","src":"2000:6:28","type":""},{"name":"value6","nativeSrc":"2008:6:28","nodeType":"YulTypedName","src":"2008:6:28","type":""}],"src":"1843:935:28"},{"body":{"nativeSrc":"2899:102:28","nodeType":"YulBlock","src":"2899:102:28","statements":[{"nativeSrc":"2909:26:28","nodeType":"YulAssignment","src":"2909:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2921:9:28","nodeType":"YulIdentifier","src":"2921:9:28"},{"kind":"number","nativeSrc":"2932:2:28","nodeType":"YulLiteral","src":"2932:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2917:3:28","nodeType":"YulIdentifier","src":"2917:3:28"},"nativeSrc":"2917:18:28","nodeType":"YulFunctionCall","src":"2917:18:28"},"variableNames":[{"name":"tail","nativeSrc":"2909:4:28","nodeType":"YulIdentifier","src":"2909:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2951:9:28","nodeType":"YulIdentifier","src":"2951:9:28"},{"arguments":[{"name":"value0","nativeSrc":"2966:6:28","nodeType":"YulIdentifier","src":"2966:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2982:3:28","nodeType":"YulLiteral","src":"2982:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"2987:1:28","nodeType":"YulLiteral","src":"2987:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2978:3:28","nodeType":"YulIdentifier","src":"2978:3:28"},"nativeSrc":"2978:11:28","nodeType":"YulFunctionCall","src":"2978:11:28"},{"kind":"number","nativeSrc":"2991:1:28","nodeType":"YulLiteral","src":"2991:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2974:3:28","nodeType":"YulIdentifier","src":"2974:3:28"},"nativeSrc":"2974:19:28","nodeType":"YulFunctionCall","src":"2974:19:28"}],"functionName":{"name":"and","nativeSrc":"2962:3:28","nodeType":"YulIdentifier","src":"2962:3:28"},"nativeSrc":"2962:32:28","nodeType":"YulFunctionCall","src":"2962:32:28"}],"functionName":{"name":"mstore","nativeSrc":"2944:6:28","nodeType":"YulIdentifier","src":"2944:6:28"},"nativeSrc":"2944:51:28","nodeType":"YulFunctionCall","src":"2944:51:28"},"nativeSrc":"2944:51:28","nodeType":"YulExpressionStatement","src":"2944:51:28"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$2218__to_t_address__fromStack_reversed","nativeSrc":"2783:218:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2868:9:28","nodeType":"YulTypedName","src":"2868:9:28","type":""},{"name":"value0","nativeSrc":"2879:6:28","nodeType":"YulTypedName","src":"2879:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2890:4:28","nodeType":"YulTypedName","src":"2890:4:28","type":""}],"src":"2783:218:28"},{"body":{"nativeSrc":"3135:175:28","nodeType":"YulBlock","src":"3135:175:28","statements":[{"nativeSrc":"3145:26:28","nodeType":"YulAssignment","src":"3145:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3157:9:28","nodeType":"YulIdentifier","src":"3157:9:28"},{"kind":"number","nativeSrc":"3168:2:28","nodeType":"YulLiteral","src":"3168:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3153:3:28","nodeType":"YulIdentifier","src":"3153:3:28"},"nativeSrc":"3153:18:28","nodeType":"YulFunctionCall","src":"3153:18:28"},"variableNames":[{"name":"tail","nativeSrc":"3145:4:28","nodeType":"YulIdentifier","src":"3145:4:28"}]},{"nativeSrc":"3180:29:28","nodeType":"YulVariableDeclaration","src":"3180:29:28","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3198:3:28","nodeType":"YulLiteral","src":"3198:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"3203:1:28","nodeType":"YulLiteral","src":"3203:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3194:3:28","nodeType":"YulIdentifier","src":"3194:3:28"},"nativeSrc":"3194:11:28","nodeType":"YulFunctionCall","src":"3194:11:28"},{"kind":"number","nativeSrc":"3207:1:28","nodeType":"YulLiteral","src":"3207:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3190:3:28","nodeType":"YulIdentifier","src":"3190:3:28"},"nativeSrc":"3190:19:28","nodeType":"YulFunctionCall","src":"3190:19:28"},"variables":[{"name":"_1","nativeSrc":"3184:2:28","nodeType":"YulTypedName","src":"3184:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3225:9:28","nodeType":"YulIdentifier","src":"3225:9:28"},{"arguments":[{"name":"value0","nativeSrc":"3240:6:28","nodeType":"YulIdentifier","src":"3240:6:28"},{"name":"_1","nativeSrc":"3248:2:28","nodeType":"YulIdentifier","src":"3248:2:28"}],"functionName":{"name":"and","nativeSrc":"3236:3:28","nodeType":"YulIdentifier","src":"3236:3:28"},"nativeSrc":"3236:15:28","nodeType":"YulFunctionCall","src":"3236:15:28"}],"functionName":{"name":"mstore","nativeSrc":"3218:6:28","nodeType":"YulIdentifier","src":"3218:6:28"},"nativeSrc":"3218:34:28","nodeType":"YulFunctionCall","src":"3218:34:28"},"nativeSrc":"3218:34:28","nodeType":"YulExpressionStatement","src":"3218:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3272:9:28","nodeType":"YulIdentifier","src":"3272:9:28"},{"kind":"number","nativeSrc":"3283:2:28","nodeType":"YulLiteral","src":"3283:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3268:3:28","nodeType":"YulIdentifier","src":"3268:3:28"},"nativeSrc":"3268:18:28","nodeType":"YulFunctionCall","src":"3268:18:28"},{"arguments":[{"name":"value1","nativeSrc":"3292:6:28","nodeType":"YulIdentifier","src":"3292:6:28"},{"name":"_1","nativeSrc":"3300:2:28","nodeType":"YulIdentifier","src":"3300:2:28"}],"functionName":{"name":"and","nativeSrc":"3288:3:28","nodeType":"YulIdentifier","src":"3288:3:28"},"nativeSrc":"3288:15:28","nodeType":"YulFunctionCall","src":"3288:15:28"}],"functionName":{"name":"mstore","nativeSrc":"3261:6:28","nodeType":"YulIdentifier","src":"3261:6:28"},"nativeSrc":"3261:43:28","nodeType":"YulFunctionCall","src":"3261:43:28"},"nativeSrc":"3261:43:28","nodeType":"YulExpressionStatement","src":"3261:43:28"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"3006:304:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3096:9:28","nodeType":"YulTypedName","src":"3096:9:28","type":""},{"name":"value1","nativeSrc":"3107:6:28","nodeType":"YulTypedName","src":"3107:6:28","type":""},{"name":"value0","nativeSrc":"3115:6:28","nodeType":"YulTypedName","src":"3115:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3126:4:28","nodeType":"YulTypedName","src":"3126:4:28","type":""}],"src":"3006:304:28"},{"body":{"nativeSrc":"3506:14:28","nodeType":"YulBlock","src":"3506:14:28","statements":[{"nativeSrc":"3508:10:28","nodeType":"YulAssignment","src":"3508:10:28","value":{"name":"pos","nativeSrc":"3515:3:28","nodeType":"YulIdentifier","src":"3515:3:28"},"variableNames":[{"name":"end","nativeSrc":"3508:3:28","nodeType":"YulIdentifier","src":"3508:3:28"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"3315:205:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3490:3:28","nodeType":"YulTypedName","src":"3490:3:28","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3498:3:28","nodeType":"YulTypedName","src":"3498:3:28","type":""}],"src":"3315:205:28"},{"body":{"nativeSrc":"3699:182:28","nodeType":"YulBlock","src":"3699:182:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3716:9:28","nodeType":"YulIdentifier","src":"3716:9:28"},{"kind":"number","nativeSrc":"3727:2:28","nodeType":"YulLiteral","src":"3727:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3709:6:28","nodeType":"YulIdentifier","src":"3709:6:28"},"nativeSrc":"3709:21:28","nodeType":"YulFunctionCall","src":"3709:21:28"},"nativeSrc":"3709:21:28","nodeType":"YulExpressionStatement","src":"3709:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3750:9:28","nodeType":"YulIdentifier","src":"3750:9:28"},{"kind":"number","nativeSrc":"3761:2:28","nodeType":"YulLiteral","src":"3761:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3746:3:28","nodeType":"YulIdentifier","src":"3746:3:28"},"nativeSrc":"3746:18:28","nodeType":"YulFunctionCall","src":"3746:18:28"},{"kind":"number","nativeSrc":"3766:2:28","nodeType":"YulLiteral","src":"3766:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3739:6:28","nodeType":"YulIdentifier","src":"3739:6:28"},"nativeSrc":"3739:30:28","nodeType":"YulFunctionCall","src":"3739:30:28"},"nativeSrc":"3739:30:28","nodeType":"YulExpressionStatement","src":"3739:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3789:9:28","nodeType":"YulIdentifier","src":"3789:9:28"},{"kind":"number","nativeSrc":"3800:2:28","nodeType":"YulLiteral","src":"3800:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3785:3:28","nodeType":"YulIdentifier","src":"3785:3:28"},"nativeSrc":"3785:18:28","nodeType":"YulFunctionCall","src":"3785:18:28"},{"hexValue":"4661696c656420746f2073656e64204859504520746f204879706572436f7265","kind":"string","nativeSrc":"3805:34:28","nodeType":"YulLiteral","src":"3805:34:28","type":"","value":"Failed to send HYPE to HyperCore"}],"functionName":{"name":"mstore","nativeSrc":"3778:6:28","nodeType":"YulIdentifier","src":"3778:6:28"},"nativeSrc":"3778:62:28","nodeType":"YulFunctionCall","src":"3778:62:28"},"nativeSrc":"3778:62:28","nodeType":"YulExpressionStatement","src":"3778:62:28"},{"nativeSrc":"3849:26:28","nodeType":"YulAssignment","src":"3849:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3861:9:28","nodeType":"YulIdentifier","src":"3861:9:28"},{"kind":"number","nativeSrc":"3872:2:28","nodeType":"YulLiteral","src":"3872:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3857:3:28","nodeType":"YulIdentifier","src":"3857:3:28"},"nativeSrc":"3857:18:28","nodeType":"YulFunctionCall","src":"3857:18:28"},"variableNames":[{"name":"tail","nativeSrc":"3849:4:28","nodeType":"YulIdentifier","src":"3849:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f36cc36cc2d8409d2a1ca675856db8c0ac40991b9e411e41e2b8bba2f8104fb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3525:356:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3676:9:28","nodeType":"YulTypedName","src":"3676:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3690:4:28","nodeType":"YulTypedName","src":"3690:4:28","type":""}],"src":"3525:356:28"},{"body":{"nativeSrc":"3918:95:28","nodeType":"YulBlock","src":"3918:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3935:1:28","nodeType":"YulLiteral","src":"3935:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3942:3:28","nodeType":"YulLiteral","src":"3942:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"3947:10:28","nodeType":"YulLiteral","src":"3947:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3938:3:28","nodeType":"YulIdentifier","src":"3938:3:28"},"nativeSrc":"3938:20:28","nodeType":"YulFunctionCall","src":"3938:20:28"}],"functionName":{"name":"mstore","nativeSrc":"3928:6:28","nodeType":"YulIdentifier","src":"3928:6:28"},"nativeSrc":"3928:31:28","nodeType":"YulFunctionCall","src":"3928:31:28"},"nativeSrc":"3928:31:28","nodeType":"YulExpressionStatement","src":"3928:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3975:1:28","nodeType":"YulLiteral","src":"3975:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"3978:4:28","nodeType":"YulLiteral","src":"3978:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3968:6:28","nodeType":"YulIdentifier","src":"3968:6:28"},"nativeSrc":"3968:15:28","nodeType":"YulFunctionCall","src":"3968:15:28"},"nativeSrc":"3968:15:28","nodeType":"YulExpressionStatement","src":"3968:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3999:1:28","nodeType":"YulLiteral","src":"3999:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"4002:4:28","nodeType":"YulLiteral","src":"4002:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3992:6:28","nodeType":"YulIdentifier","src":"3992:6:28"},"nativeSrc":"3992:15:28","nodeType":"YulFunctionCall","src":"3992:15:28"},"nativeSrc":"3992:15:28","nodeType":"YulExpressionStatement","src":"3992:15:28"}]},"name":"panic_error_0x11","nativeSrc":"3886:127:28","nodeType":"YulFunctionDefinition","src":"3886:127:28"},{"body":{"nativeSrc":"4082:352:28","nodeType":"YulBlock","src":"4082:352:28","statements":[{"nativeSrc":"4092:16:28","nodeType":"YulVariableDeclaration","src":"4092:16:28","value":{"kind":"number","nativeSrc":"4107:1:28","nodeType":"YulLiteral","src":"4107:1:28","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"4096:7:28","nodeType":"YulTypedName","src":"4096:7:28","type":""}]},{"nativeSrc":"4117:10:28","nodeType":"YulAssignment","src":"4117:10:28","value":{"kind":"number","nativeSrc":"4126:1:28","nodeType":"YulLiteral","src":"4126:1:28","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"4117:5:28","nodeType":"YulIdentifier","src":"4117:5:28"}]},{"nativeSrc":"4136:13:28","nodeType":"YulAssignment","src":"4136:13:28","value":{"name":"_base","nativeSrc":"4144:5:28","nodeType":"YulIdentifier","src":"4144:5:28"},"variableNames":[{"name":"base","nativeSrc":"4136:4:28","nodeType":"YulIdentifier","src":"4136:4:28"}]},{"body":{"nativeSrc":"4200:228:28","nodeType":"YulBlock","src":"4200:228:28","statements":[{"body":{"nativeSrc":"4245:22:28","nodeType":"YulBlock","src":"4245:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4247:16:28","nodeType":"YulIdentifier","src":"4247:16:28"},"nativeSrc":"4247:18:28","nodeType":"YulFunctionCall","src":"4247:18:28"},"nativeSrc":"4247:18:28","nodeType":"YulExpressionStatement","src":"4247:18:28"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"4220:4:28","nodeType":"YulIdentifier","src":"4220:4:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4234:1:28","nodeType":"YulLiteral","src":"4234:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4230:3:28","nodeType":"YulIdentifier","src":"4230:3:28"},"nativeSrc":"4230:6:28","nodeType":"YulFunctionCall","src":"4230:6:28"},{"name":"base","nativeSrc":"4238:4:28","nodeType":"YulIdentifier","src":"4238:4:28"}],"functionName":{"name":"div","nativeSrc":"4226:3:28","nodeType":"YulIdentifier","src":"4226:3:28"},"nativeSrc":"4226:17:28","nodeType":"YulFunctionCall","src":"4226:17:28"}],"functionName":{"name":"gt","nativeSrc":"4217:2:28","nodeType":"YulIdentifier","src":"4217:2:28"},"nativeSrc":"4217:27:28","nodeType":"YulFunctionCall","src":"4217:27:28"},"nativeSrc":"4214:53:28","nodeType":"YulIf","src":"4214:53:28"},{"body":{"nativeSrc":"4306:29:28","nodeType":"YulBlock","src":"4306:29:28","statements":[{"nativeSrc":"4308:25:28","nodeType":"YulAssignment","src":"4308:25:28","value":{"arguments":[{"name":"power","nativeSrc":"4321:5:28","nodeType":"YulIdentifier","src":"4321:5:28"},{"name":"base","nativeSrc":"4328:4:28","nodeType":"YulIdentifier","src":"4328:4:28"}],"functionName":{"name":"mul","nativeSrc":"4317:3:28","nodeType":"YulIdentifier","src":"4317:3:28"},"nativeSrc":"4317:16:28","nodeType":"YulFunctionCall","src":"4317:16:28"},"variableNames":[{"name":"power","nativeSrc":"4308:5:28","nodeType":"YulIdentifier","src":"4308:5:28"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4287:8:28","nodeType":"YulIdentifier","src":"4287:8:28"},{"name":"power_1","nativeSrc":"4297:7:28","nodeType":"YulIdentifier","src":"4297:7:28"}],"functionName":{"name":"and","nativeSrc":"4283:3:28","nodeType":"YulIdentifier","src":"4283:3:28"},"nativeSrc":"4283:22:28","nodeType":"YulFunctionCall","src":"4283:22:28"},"nativeSrc":"4280:55:28","nodeType":"YulIf","src":"4280:55:28"},{"nativeSrc":"4348:23:28","nodeType":"YulAssignment","src":"4348:23:28","value":{"arguments":[{"name":"base","nativeSrc":"4360:4:28","nodeType":"YulIdentifier","src":"4360:4:28"},{"name":"base","nativeSrc":"4366:4:28","nodeType":"YulIdentifier","src":"4366:4:28"}],"functionName":{"name":"mul","nativeSrc":"4356:3:28","nodeType":"YulIdentifier","src":"4356:3:28"},"nativeSrc":"4356:15:28","nodeType":"YulFunctionCall","src":"4356:15:28"},"variableNames":[{"name":"base","nativeSrc":"4348:4:28","nodeType":"YulIdentifier","src":"4348:4:28"}]},{"nativeSrc":"4384:34:28","nodeType":"YulAssignment","src":"4384:34:28","value":{"arguments":[{"name":"power_1","nativeSrc":"4400:7:28","nodeType":"YulIdentifier","src":"4400:7:28"},{"name":"exponent","nativeSrc":"4409:8:28","nodeType":"YulIdentifier","src":"4409:8:28"}],"functionName":{"name":"shr","nativeSrc":"4396:3:28","nodeType":"YulIdentifier","src":"4396:3:28"},"nativeSrc":"4396:22:28","nodeType":"YulFunctionCall","src":"4396:22:28"},"variableNames":[{"name":"exponent","nativeSrc":"4384:8:28","nodeType":"YulIdentifier","src":"4384:8:28"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4169:8:28","nodeType":"YulIdentifier","src":"4169:8:28"},{"name":"power_1","nativeSrc":"4179:7:28","nodeType":"YulIdentifier","src":"4179:7:28"}],"functionName":{"name":"gt","nativeSrc":"4166:2:28","nodeType":"YulIdentifier","src":"4166:2:28"},"nativeSrc":"4166:21:28","nodeType":"YulFunctionCall","src":"4166:21:28"},"nativeSrc":"4158:270:28","nodeType":"YulForLoop","post":{"nativeSrc":"4188:3:28","nodeType":"YulBlock","src":"4188:3:28","statements":[]},"pre":{"nativeSrc":"4162:3:28","nodeType":"YulBlock","src":"4162:3:28","statements":[]},"src":"4158:270:28"}]},"name":"checked_exp_helper","nativeSrc":"4018:416:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"4046:5:28","nodeType":"YulTypedName","src":"4046:5:28","type":""},{"name":"exponent","nativeSrc":"4053:8:28","nodeType":"YulTypedName","src":"4053:8:28","type":""}],"returnVariables":[{"name":"power","nativeSrc":"4066:5:28","nodeType":"YulTypedName","src":"4066:5:28","type":""},{"name":"base","nativeSrc":"4073:4:28","nodeType":"YulTypedName","src":"4073:4:28","type":""}],"src":"4018:416:28"},{"body":{"nativeSrc":"4498:747:28","nodeType":"YulBlock","src":"4498:747:28","statements":[{"body":{"nativeSrc":"4536:52:28","nodeType":"YulBlock","src":"4536:52:28","statements":[{"nativeSrc":"4550:10:28","nodeType":"YulAssignment","src":"4550:10:28","value":{"kind":"number","nativeSrc":"4559:1:28","nodeType":"YulLiteral","src":"4559:1:28","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"4550:5:28","nodeType":"YulIdentifier","src":"4550:5:28"}]},{"nativeSrc":"4573:5:28","nodeType":"YulLeave","src":"4573:5:28"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4518:8:28","nodeType":"YulIdentifier","src":"4518:8:28"}],"functionName":{"name":"iszero","nativeSrc":"4511:6:28","nodeType":"YulIdentifier","src":"4511:6:28"},"nativeSrc":"4511:16:28","nodeType":"YulFunctionCall","src":"4511:16:28"},"nativeSrc":"4508:80:28","nodeType":"YulIf","src":"4508:80:28"},{"body":{"nativeSrc":"4621:52:28","nodeType":"YulBlock","src":"4621:52:28","statements":[{"nativeSrc":"4635:10:28","nodeType":"YulAssignment","src":"4635:10:28","value":{"kind":"number","nativeSrc":"4644:1:28","nodeType":"YulLiteral","src":"4644:1:28","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"4635:5:28","nodeType":"YulIdentifier","src":"4635:5:28"}]},{"nativeSrc":"4658:5:28","nodeType":"YulLeave","src":"4658:5:28"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"4607:4:28","nodeType":"YulIdentifier","src":"4607:4:28"}],"functionName":{"name":"iszero","nativeSrc":"4600:6:28","nodeType":"YulIdentifier","src":"4600:6:28"},"nativeSrc":"4600:12:28","nodeType":"YulFunctionCall","src":"4600:12:28"},"nativeSrc":"4597:76:28","nodeType":"YulIf","src":"4597:76:28"},{"cases":[{"body":{"nativeSrc":"4709:52:28","nodeType":"YulBlock","src":"4709:52:28","statements":[{"nativeSrc":"4723:10:28","nodeType":"YulAssignment","src":"4723:10:28","value":{"kind":"number","nativeSrc":"4732:1:28","nodeType":"YulLiteral","src":"4732:1:28","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"4723:5:28","nodeType":"YulIdentifier","src":"4723:5:28"}]},{"nativeSrc":"4746:5:28","nodeType":"YulLeave","src":"4746:5:28"}]},"nativeSrc":"4702:59:28","nodeType":"YulCase","src":"4702:59:28","value":{"kind":"number","nativeSrc":"4707:1:28","nodeType":"YulLiteral","src":"4707:1:28","type":"","value":"1"}},{"body":{"nativeSrc":"4777:123:28","nodeType":"YulBlock","src":"4777:123:28","statements":[{"body":{"nativeSrc":"4812:22:28","nodeType":"YulBlock","src":"4812:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4814:16:28","nodeType":"YulIdentifier","src":"4814:16:28"},"nativeSrc":"4814:18:28","nodeType":"YulFunctionCall","src":"4814:18:28"},"nativeSrc":"4814:18:28","nodeType":"YulExpressionStatement","src":"4814:18:28"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4797:8:28","nodeType":"YulIdentifier","src":"4797:8:28"},{"kind":"number","nativeSrc":"4807:3:28","nodeType":"YulLiteral","src":"4807:3:28","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"4794:2:28","nodeType":"YulIdentifier","src":"4794:2:28"},"nativeSrc":"4794:17:28","nodeType":"YulFunctionCall","src":"4794:17:28"},"nativeSrc":"4791:43:28","nodeType":"YulIf","src":"4791:43:28"},{"nativeSrc":"4847:25:28","nodeType":"YulAssignment","src":"4847:25:28","value":{"arguments":[{"name":"exponent","nativeSrc":"4860:8:28","nodeType":"YulIdentifier","src":"4860:8:28"},{"kind":"number","nativeSrc":"4870:1:28","nodeType":"YulLiteral","src":"4870:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4856:3:28","nodeType":"YulIdentifier","src":"4856:3:28"},"nativeSrc":"4856:16:28","nodeType":"YulFunctionCall","src":"4856:16:28"},"variableNames":[{"name":"power","nativeSrc":"4847:5:28","nodeType":"YulIdentifier","src":"4847:5:28"}]},{"nativeSrc":"4885:5:28","nodeType":"YulLeave","src":"4885:5:28"}]},"nativeSrc":"4770:130:28","nodeType":"YulCase","src":"4770:130:28","value":{"kind":"number","nativeSrc":"4775:1:28","nodeType":"YulLiteral","src":"4775:1:28","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"4689:4:28","nodeType":"YulIdentifier","src":"4689:4:28"},"nativeSrc":"4682:218:28","nodeType":"YulSwitch","src":"4682:218:28"},{"body":{"nativeSrc":"4998:70:28","nodeType":"YulBlock","src":"4998:70:28","statements":[{"nativeSrc":"5012:28:28","nodeType":"YulAssignment","src":"5012:28:28","value":{"arguments":[{"name":"base","nativeSrc":"5025:4:28","nodeType":"YulIdentifier","src":"5025:4:28"},{"name":"exponent","nativeSrc":"5031:8:28","nodeType":"YulIdentifier","src":"5031:8:28"}],"functionName":{"name":"exp","nativeSrc":"5021:3:28","nodeType":"YulIdentifier","src":"5021:3:28"},"nativeSrc":"5021:19:28","nodeType":"YulFunctionCall","src":"5021:19:28"},"variableNames":[{"name":"power","nativeSrc":"5012:5:28","nodeType":"YulIdentifier","src":"5012:5:28"}]},{"nativeSrc":"5053:5:28","nodeType":"YulLeave","src":"5053:5:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"4922:4:28","nodeType":"YulIdentifier","src":"4922:4:28"},{"kind":"number","nativeSrc":"4928:2:28","nodeType":"YulLiteral","src":"4928:2:28","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"4919:2:28","nodeType":"YulIdentifier","src":"4919:2:28"},"nativeSrc":"4919:12:28","nodeType":"YulFunctionCall","src":"4919:12:28"},{"arguments":[{"name":"exponent","nativeSrc":"4936:8:28","nodeType":"YulIdentifier","src":"4936:8:28"},{"kind":"number","nativeSrc":"4946:2:28","nodeType":"YulLiteral","src":"4946:2:28","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"4933:2:28","nodeType":"YulIdentifier","src":"4933:2:28"},"nativeSrc":"4933:16:28","nodeType":"YulFunctionCall","src":"4933:16:28"}],"functionName":{"name":"and","nativeSrc":"4915:3:28","nodeType":"YulIdentifier","src":"4915:3:28"},"nativeSrc":"4915:35:28","nodeType":"YulFunctionCall","src":"4915:35:28"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"4959:4:28","nodeType":"YulIdentifier","src":"4959:4:28"},{"kind":"number","nativeSrc":"4965:3:28","nodeType":"YulLiteral","src":"4965:3:28","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"4956:2:28","nodeType":"YulIdentifier","src":"4956:2:28"},"nativeSrc":"4956:13:28","nodeType":"YulFunctionCall","src":"4956:13:28"},{"arguments":[{"name":"exponent","nativeSrc":"4974:8:28","nodeType":"YulIdentifier","src":"4974:8:28"},{"kind":"number","nativeSrc":"4984:2:28","nodeType":"YulLiteral","src":"4984:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4971:2:28","nodeType":"YulIdentifier","src":"4971:2:28"},"nativeSrc":"4971:16:28","nodeType":"YulFunctionCall","src":"4971:16:28"}],"functionName":{"name":"and","nativeSrc":"4952:3:28","nodeType":"YulIdentifier","src":"4952:3:28"},"nativeSrc":"4952:36:28","nodeType":"YulFunctionCall","src":"4952:36:28"}],"functionName":{"name":"or","nativeSrc":"4912:2:28","nodeType":"YulIdentifier","src":"4912:2:28"},"nativeSrc":"4912:77:28","nodeType":"YulFunctionCall","src":"4912:77:28"},"nativeSrc":"4909:159:28","nodeType":"YulIf","src":"4909:159:28"},{"nativeSrc":"5077:57:28","nodeType":"YulVariableDeclaration","src":"5077:57:28","value":{"arguments":[{"name":"base","nativeSrc":"5119:4:28","nodeType":"YulIdentifier","src":"5119:4:28"},{"name":"exponent","nativeSrc":"5125:8:28","nodeType":"YulIdentifier","src":"5125:8:28"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"5100:18:28","nodeType":"YulIdentifier","src":"5100:18:28"},"nativeSrc":"5100:34:28","nodeType":"YulFunctionCall","src":"5100:34:28"},"variables":[{"name":"power_1","nativeSrc":"5081:7:28","nodeType":"YulTypedName","src":"5081:7:28","type":""},{"name":"base_1","nativeSrc":"5090:6:28","nodeType":"YulTypedName","src":"5090:6:28","type":""}]},{"body":{"nativeSrc":"5179:22:28","nodeType":"YulBlock","src":"5179:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5181:16:28","nodeType":"YulIdentifier","src":"5181:16:28"},"nativeSrc":"5181:18:28","nodeType":"YulFunctionCall","src":"5181:18:28"},"nativeSrc":"5181:18:28","nodeType":"YulExpressionStatement","src":"5181:18:28"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"5149:7:28","nodeType":"YulIdentifier","src":"5149:7:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5166:1:28","nodeType":"YulLiteral","src":"5166:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5162:3:28","nodeType":"YulIdentifier","src":"5162:3:28"},"nativeSrc":"5162:6:28","nodeType":"YulFunctionCall","src":"5162:6:28"},{"name":"base_1","nativeSrc":"5170:6:28","nodeType":"YulIdentifier","src":"5170:6:28"}],"functionName":{"name":"div","nativeSrc":"5158:3:28","nodeType":"YulIdentifier","src":"5158:3:28"},"nativeSrc":"5158:19:28","nodeType":"YulFunctionCall","src":"5158:19:28"}],"functionName":{"name":"gt","nativeSrc":"5146:2:28","nodeType":"YulIdentifier","src":"5146:2:28"},"nativeSrc":"5146:32:28","nodeType":"YulFunctionCall","src":"5146:32:28"},"nativeSrc":"5143:58:28","nodeType":"YulIf","src":"5143:58:28"},{"nativeSrc":"5210:29:28","nodeType":"YulAssignment","src":"5210:29:28","value":{"arguments":[{"name":"power_1","nativeSrc":"5223:7:28","nodeType":"YulIdentifier","src":"5223:7:28"},{"name":"base_1","nativeSrc":"5232:6:28","nodeType":"YulIdentifier","src":"5232:6:28"}],"functionName":{"name":"mul","nativeSrc":"5219:3:28","nodeType":"YulIdentifier","src":"5219:3:28"},"nativeSrc":"5219:20:28","nodeType":"YulFunctionCall","src":"5219:20:28"},"variableNames":[{"name":"power","nativeSrc":"5210:5:28","nodeType":"YulIdentifier","src":"5210:5:28"}]}]},"name":"checked_exp_unsigned","nativeSrc":"4439:806:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"4469:4:28","nodeType":"YulTypedName","src":"4469:4:28","type":""},{"name":"exponent","nativeSrc":"4475:8:28","nodeType":"YulTypedName","src":"4475:8:28","type":""}],"returnVariables":[{"name":"power","nativeSrc":"4488:5:28","nodeType":"YulTypedName","src":"4488:5:28","type":""}],"src":"4439:806:28"},{"body":{"nativeSrc":"5320:61:28","nodeType":"YulBlock","src":"5320:61:28","statements":[{"nativeSrc":"5330:45:28","nodeType":"YulAssignment","src":"5330:45:28","value":{"arguments":[{"name":"base","nativeSrc":"5360:4:28","nodeType":"YulIdentifier","src":"5360:4:28"},{"name":"exponent","nativeSrc":"5366:8:28","nodeType":"YulIdentifier","src":"5366:8:28"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"5339:20:28","nodeType":"YulIdentifier","src":"5339:20:28"},"nativeSrc":"5339:36:28","nodeType":"YulFunctionCall","src":"5339:36:28"},"variableNames":[{"name":"power","nativeSrc":"5330:5:28","nodeType":"YulIdentifier","src":"5330:5:28"}]}]},"name":"checked_exp_t_uint256_t_uint256","nativeSrc":"5250:131:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"5291:4:28","nodeType":"YulTypedName","src":"5291:4:28","type":""},{"name":"exponent","nativeSrc":"5297:8:28","nodeType":"YulTypedName","src":"5297:8:28","type":""}],"returnVariables":[{"name":"power","nativeSrc":"5310:5:28","nodeType":"YulTypedName","src":"5310:5:28","type":""}],"src":"5250:131:28"},{"body":{"nativeSrc":"5432:171:28","nodeType":"YulBlock","src":"5432:171:28","statements":[{"body":{"nativeSrc":"5463:111:28","nodeType":"YulBlock","src":"5463:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5484:1:28","nodeType":"YulLiteral","src":"5484:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5491:3:28","nodeType":"YulLiteral","src":"5491:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"5496:10:28","nodeType":"YulLiteral","src":"5496:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5487:3:28","nodeType":"YulIdentifier","src":"5487:3:28"},"nativeSrc":"5487:20:28","nodeType":"YulFunctionCall","src":"5487:20:28"}],"functionName":{"name":"mstore","nativeSrc":"5477:6:28","nodeType":"YulIdentifier","src":"5477:6:28"},"nativeSrc":"5477:31:28","nodeType":"YulFunctionCall","src":"5477:31:28"},"nativeSrc":"5477:31:28","nodeType":"YulExpressionStatement","src":"5477:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5528:1:28","nodeType":"YulLiteral","src":"5528:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"5531:4:28","nodeType":"YulLiteral","src":"5531:4:28","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"5521:6:28","nodeType":"YulIdentifier","src":"5521:6:28"},"nativeSrc":"5521:15:28","nodeType":"YulFunctionCall","src":"5521:15:28"},"nativeSrc":"5521:15:28","nodeType":"YulExpressionStatement","src":"5521:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5556:1:28","nodeType":"YulLiteral","src":"5556:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"5559:4:28","nodeType":"YulLiteral","src":"5559:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5549:6:28","nodeType":"YulIdentifier","src":"5549:6:28"},"nativeSrc":"5549:15:28","nodeType":"YulFunctionCall","src":"5549:15:28"},"nativeSrc":"5549:15:28","nodeType":"YulExpressionStatement","src":"5549:15:28"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"5452:1:28","nodeType":"YulIdentifier","src":"5452:1:28"}],"functionName":{"name":"iszero","nativeSrc":"5445:6:28","nodeType":"YulIdentifier","src":"5445:6:28"},"nativeSrc":"5445:9:28","nodeType":"YulFunctionCall","src":"5445:9:28"},"nativeSrc":"5442:132:28","nodeType":"YulIf","src":"5442:132:28"},{"nativeSrc":"5583:14:28","nodeType":"YulAssignment","src":"5583:14:28","value":{"arguments":[{"name":"x","nativeSrc":"5592:1:28","nodeType":"YulIdentifier","src":"5592:1:28"},{"name":"y","nativeSrc":"5595:1:28","nodeType":"YulIdentifier","src":"5595:1:28"}],"functionName":{"name":"div","nativeSrc":"5588:3:28","nodeType":"YulIdentifier","src":"5588:3:28"},"nativeSrc":"5588:9:28","nodeType":"YulFunctionCall","src":"5588:9:28"},"variableNames":[{"name":"r","nativeSrc":"5583:1:28","nodeType":"YulIdentifier","src":"5583:1:28"}]}]},"name":"checked_div_t_uint256","nativeSrc":"5386:217:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5417:1:28","nodeType":"YulTypedName","src":"5417:1:28","type":""},{"name":"y","nativeSrc":"5420:1:28","nodeType":"YulTypedName","src":"5420:1:28","type":""}],"returnVariables":[{"name":"r","nativeSrc":"5426:1:28","nodeType":"YulTypedName","src":"5426:1:28","type":""}],"src":"5386:217:28"},{"body":{"nativeSrc":"5761:243:28","nodeType":"YulBlock","src":"5761:243:28","statements":[{"nativeSrc":"5771:26:28","nodeType":"YulAssignment","src":"5771:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"5783:9:28","nodeType":"YulIdentifier","src":"5783:9:28"},{"kind":"number","nativeSrc":"5794:2:28","nodeType":"YulLiteral","src":"5794:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5779:3:28","nodeType":"YulIdentifier","src":"5779:3:28"},"nativeSrc":"5779:18:28","nodeType":"YulFunctionCall","src":"5779:18:28"},"variableNames":[{"name":"tail","nativeSrc":"5771:4:28","nodeType":"YulIdentifier","src":"5771:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5813:9:28","nodeType":"YulIdentifier","src":"5813:9:28"},{"arguments":[{"name":"value0","nativeSrc":"5828:6:28","nodeType":"YulIdentifier","src":"5828:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5844:3:28","nodeType":"YulLiteral","src":"5844:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"5849:1:28","nodeType":"YulLiteral","src":"5849:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5840:3:28","nodeType":"YulIdentifier","src":"5840:3:28"},"nativeSrc":"5840:11:28","nodeType":"YulFunctionCall","src":"5840:11:28"},{"kind":"number","nativeSrc":"5853:1:28","nodeType":"YulLiteral","src":"5853:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5836:3:28","nodeType":"YulIdentifier","src":"5836:3:28"},"nativeSrc":"5836:19:28","nodeType":"YulFunctionCall","src":"5836:19:28"}],"functionName":{"name":"and","nativeSrc":"5824:3:28","nodeType":"YulIdentifier","src":"5824:3:28"},"nativeSrc":"5824:32:28","nodeType":"YulFunctionCall","src":"5824:32:28"}],"functionName":{"name":"mstore","nativeSrc":"5806:6:28","nodeType":"YulIdentifier","src":"5806:6:28"},"nativeSrc":"5806:51:28","nodeType":"YulFunctionCall","src":"5806:51:28"},"nativeSrc":"5806:51:28","nodeType":"YulExpressionStatement","src":"5806:51:28"},{"nativeSrc":"5866:28:28","nodeType":"YulVariableDeclaration","src":"5866:28:28","value":{"kind":"number","nativeSrc":"5876:18:28","nodeType":"YulLiteral","src":"5876:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"5870:2:28","nodeType":"YulTypedName","src":"5870:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5914:9:28","nodeType":"YulIdentifier","src":"5914:9:28"},{"kind":"number","nativeSrc":"5925:2:28","nodeType":"YulLiteral","src":"5925:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5910:3:28","nodeType":"YulIdentifier","src":"5910:3:28"},"nativeSrc":"5910:18:28","nodeType":"YulFunctionCall","src":"5910:18:28"},{"arguments":[{"name":"value1","nativeSrc":"5934:6:28","nodeType":"YulIdentifier","src":"5934:6:28"},{"name":"_1","nativeSrc":"5942:2:28","nodeType":"YulIdentifier","src":"5942:2:28"}],"functionName":{"name":"and","nativeSrc":"5930:3:28","nodeType":"YulIdentifier","src":"5930:3:28"},"nativeSrc":"5930:15:28","nodeType":"YulFunctionCall","src":"5930:15:28"}],"functionName":{"name":"mstore","nativeSrc":"5903:6:28","nodeType":"YulIdentifier","src":"5903:6:28"},"nativeSrc":"5903:43:28","nodeType":"YulFunctionCall","src":"5903:43:28"},"nativeSrc":"5903:43:28","nodeType":"YulExpressionStatement","src":"5903:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5966:9:28","nodeType":"YulIdentifier","src":"5966:9:28"},{"kind":"number","nativeSrc":"5977:2:28","nodeType":"YulLiteral","src":"5977:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5962:3:28","nodeType":"YulIdentifier","src":"5962:3:28"},"nativeSrc":"5962:18:28","nodeType":"YulFunctionCall","src":"5962:18:28"},{"arguments":[{"name":"value2","nativeSrc":"5986:6:28","nodeType":"YulIdentifier","src":"5986:6:28"},{"name":"_1","nativeSrc":"5994:2:28","nodeType":"YulIdentifier","src":"5994:2:28"}],"functionName":{"name":"and","nativeSrc":"5982:3:28","nodeType":"YulIdentifier","src":"5982:3:28"},"nativeSrc":"5982:15:28","nodeType":"YulFunctionCall","src":"5982:15:28"}],"functionName":{"name":"mstore","nativeSrc":"5955:6:28","nodeType":"YulIdentifier","src":"5955:6:28"},"nativeSrc":"5955:43:28","nodeType":"YulFunctionCall","src":"5955:43:28"},"nativeSrc":"5955:43:28","nodeType":"YulExpressionStatement","src":"5955:43:28"}]},"name":"abi_encode_tuple_t_address_t_uint64_t_uint64__to_t_address_t_uint64_t_uint64__fromStack_reversed","nativeSrc":"5608:396:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5714:9:28","nodeType":"YulTypedName","src":"5714:9:28","type":""},{"name":"value2","nativeSrc":"5725:6:28","nodeType":"YulTypedName","src":"5725:6:28","type":""},{"name":"value1","nativeSrc":"5733:6:28","nodeType":"YulTypedName","src":"5733:6:28","type":""},{"name":"value0","nativeSrc":"5741:6:28","nodeType":"YulTypedName","src":"5741:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5752:4:28","nodeType":"YulTypedName","src":"5752:4:28","type":""}],"src":"5608:396:28"},{"body":{"nativeSrc":"6156:455:28","nodeType":"YulBlock","src":"6156:455:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6173:9:28","nodeType":"YulIdentifier","src":"6173:9:28"},{"kind":"number","nativeSrc":"6184:2:28","nodeType":"YulLiteral","src":"6184:2:28","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"6166:6:28","nodeType":"YulIdentifier","src":"6166:6:28"},"nativeSrc":"6166:21:28","nodeType":"YulFunctionCall","src":"6166:21:28"},"nativeSrc":"6166:21:28","nodeType":"YulExpressionStatement","src":"6166:21:28"},{"nativeSrc":"6196:27:28","nodeType":"YulVariableDeclaration","src":"6196:27:28","value":{"arguments":[{"name":"value0","nativeSrc":"6216:6:28","nodeType":"YulIdentifier","src":"6216:6:28"}],"functionName":{"name":"mload","nativeSrc":"6210:5:28","nodeType":"YulIdentifier","src":"6210:5:28"},"nativeSrc":"6210:13:28","nodeType":"YulFunctionCall","src":"6210:13:28"},"variables":[{"name":"length","nativeSrc":"6200:6:28","nodeType":"YulTypedName","src":"6200:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6243:9:28","nodeType":"YulIdentifier","src":"6243:9:28"},{"kind":"number","nativeSrc":"6254:2:28","nodeType":"YulLiteral","src":"6254:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6239:3:28","nodeType":"YulIdentifier","src":"6239:3:28"},"nativeSrc":"6239:18:28","nodeType":"YulFunctionCall","src":"6239:18:28"},{"name":"length","nativeSrc":"6259:6:28","nodeType":"YulIdentifier","src":"6259:6:28"}],"functionName":{"name":"mstore","nativeSrc":"6232:6:28","nodeType":"YulIdentifier","src":"6232:6:28"},"nativeSrc":"6232:34:28","nodeType":"YulFunctionCall","src":"6232:34:28"},"nativeSrc":"6232:34:28","nodeType":"YulExpressionStatement","src":"6232:34:28"},{"nativeSrc":"6275:10:28","nodeType":"YulVariableDeclaration","src":"6275:10:28","value":{"kind":"number","nativeSrc":"6284:1:28","nodeType":"YulLiteral","src":"6284:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6279:1:28","nodeType":"YulTypedName","src":"6279:1:28","type":""}]},{"body":{"nativeSrc":"6346:92:28","nodeType":"YulBlock","src":"6346:92:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6375:9:28","nodeType":"YulIdentifier","src":"6375:9:28"},{"name":"i","nativeSrc":"6386:1:28","nodeType":"YulIdentifier","src":"6386:1:28"}],"functionName":{"name":"add","nativeSrc":"6371:3:28","nodeType":"YulIdentifier","src":"6371:3:28"},"nativeSrc":"6371:17:28","nodeType":"YulFunctionCall","src":"6371:17:28"},{"kind":"number","nativeSrc":"6390:2:28","nodeType":"YulLiteral","src":"6390:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6367:3:28","nodeType":"YulIdentifier","src":"6367:3:28"},"nativeSrc":"6367:26:28","nodeType":"YulFunctionCall","src":"6367:26:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"6409:6:28","nodeType":"YulIdentifier","src":"6409:6:28"},{"name":"i","nativeSrc":"6417:1:28","nodeType":"YulIdentifier","src":"6417:1:28"}],"functionName":{"name":"add","nativeSrc":"6405:3:28","nodeType":"YulIdentifier","src":"6405:3:28"},"nativeSrc":"6405:14:28","nodeType":"YulFunctionCall","src":"6405:14:28"},{"kind":"number","nativeSrc":"6421:4:28","nodeType":"YulLiteral","src":"6421:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6401:3:28","nodeType":"YulIdentifier","src":"6401:3:28"},"nativeSrc":"6401:25:28","nodeType":"YulFunctionCall","src":"6401:25:28"}],"functionName":{"name":"mload","nativeSrc":"6395:5:28","nodeType":"YulIdentifier","src":"6395:5:28"},"nativeSrc":"6395:32:28","nodeType":"YulFunctionCall","src":"6395:32:28"}],"functionName":{"name":"mstore","nativeSrc":"6360:6:28","nodeType":"YulIdentifier","src":"6360:6:28"},"nativeSrc":"6360:68:28","nodeType":"YulFunctionCall","src":"6360:68:28"},"nativeSrc":"6360:68:28","nodeType":"YulExpressionStatement","src":"6360:68:28"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6305:1:28","nodeType":"YulIdentifier","src":"6305:1:28"},{"name":"length","nativeSrc":"6308:6:28","nodeType":"YulIdentifier","src":"6308:6:28"}],"functionName":{"name":"lt","nativeSrc":"6302:2:28","nodeType":"YulIdentifier","src":"6302:2:28"},"nativeSrc":"6302:13:28","nodeType":"YulFunctionCall","src":"6302:13:28"},"nativeSrc":"6294:144:28","nodeType":"YulForLoop","post":{"nativeSrc":"6316:21:28","nodeType":"YulBlock","src":"6316:21:28","statements":[{"nativeSrc":"6318:17:28","nodeType":"YulAssignment","src":"6318:17:28","value":{"arguments":[{"name":"i","nativeSrc":"6327:1:28","nodeType":"YulIdentifier","src":"6327:1:28"},{"kind":"number","nativeSrc":"6330:4:28","nodeType":"YulLiteral","src":"6330:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6323:3:28","nodeType":"YulIdentifier","src":"6323:3:28"},"nativeSrc":"6323:12:28","nodeType":"YulFunctionCall","src":"6323:12:28"},"variableNames":[{"name":"i","nativeSrc":"6318:1:28","nodeType":"YulIdentifier","src":"6318:1:28"}]}]},"pre":{"nativeSrc":"6298:3:28","nodeType":"YulBlock","src":"6298:3:28","statements":[]},"src":"6294:144:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6462:9:28","nodeType":"YulIdentifier","src":"6462:9:28"},{"name":"length","nativeSrc":"6473:6:28","nodeType":"YulIdentifier","src":"6473:6:28"}],"functionName":{"name":"add","nativeSrc":"6458:3:28","nodeType":"YulIdentifier","src":"6458:3:28"},"nativeSrc":"6458:22:28","nodeType":"YulFunctionCall","src":"6458:22:28"},{"kind":"number","nativeSrc":"6482:2:28","nodeType":"YulLiteral","src":"6482:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6454:3:28","nodeType":"YulIdentifier","src":"6454:3:28"},"nativeSrc":"6454:31:28","nodeType":"YulFunctionCall","src":"6454:31:28"},{"kind":"number","nativeSrc":"6487:1:28","nodeType":"YulLiteral","src":"6487:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6447:6:28","nodeType":"YulIdentifier","src":"6447:6:28"},"nativeSrc":"6447:42:28","nodeType":"YulFunctionCall","src":"6447:42:28"},"nativeSrc":"6447:42:28","nodeType":"YulExpressionStatement","src":"6447:42:28"},{"nativeSrc":"6498:62:28","nodeType":"YulAssignment","src":"6498:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6514:9:28","nodeType":"YulIdentifier","src":"6514:9:28"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"6533:6:28","nodeType":"YulIdentifier","src":"6533:6:28"},{"kind":"number","nativeSrc":"6541:2:28","nodeType":"YulLiteral","src":"6541:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"6529:3:28","nodeType":"YulIdentifier","src":"6529:3:28"},"nativeSrc":"6529:15:28","nodeType":"YulFunctionCall","src":"6529:15:28"},{"arguments":[{"kind":"number","nativeSrc":"6550:2:28","nodeType":"YulLiteral","src":"6550:2:28","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"6546:3:28","nodeType":"YulIdentifier","src":"6546:3:28"},"nativeSrc":"6546:7:28","nodeType":"YulFunctionCall","src":"6546:7:28"}],"functionName":{"name":"and","nativeSrc":"6525:3:28","nodeType":"YulIdentifier","src":"6525:3:28"},"nativeSrc":"6525:29:28","nodeType":"YulFunctionCall","src":"6525:29:28"}],"functionName":{"name":"add","nativeSrc":"6510:3:28","nodeType":"YulIdentifier","src":"6510:3:28"},"nativeSrc":"6510:45:28","nodeType":"YulFunctionCall","src":"6510:45:28"},{"kind":"number","nativeSrc":"6557:2:28","nodeType":"YulLiteral","src":"6557:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6506:3:28","nodeType":"YulIdentifier","src":"6506:3:28"},"nativeSrc":"6506:54:28","nodeType":"YulFunctionCall","src":"6506:54:28"},"variableNames":[{"name":"tail","nativeSrc":"6498:4:28","nodeType":"YulIdentifier","src":"6498:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6580:9:28","nodeType":"YulIdentifier","src":"6580:9:28"},{"kind":"number","nativeSrc":"6591:4:28","nodeType":"YulLiteral","src":"6591:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6576:3:28","nodeType":"YulIdentifier","src":"6576:3:28"},"nativeSrc":"6576:20:28","nodeType":"YulFunctionCall","src":"6576:20:28"},{"name":"value1","nativeSrc":"6598:6:28","nodeType":"YulIdentifier","src":"6598:6:28"}],"functionName":{"name":"mstore","nativeSrc":"6569:6:28","nodeType":"YulIdentifier","src":"6569:6:28"},"nativeSrc":"6569:36:28","nodeType":"YulFunctionCall","src":"6569:36:28"},"nativeSrc":"6569:36:28","nodeType":"YulExpressionStatement","src":"6569:36:28"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"6009:602:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6117:9:28","nodeType":"YulTypedName","src":"6117:9:28","type":""},{"name":"value1","nativeSrc":"6128:6:28","nodeType":"YulTypedName","src":"6128:6:28","type":""},{"name":"value0","nativeSrc":"6136:6:28","nodeType":"YulTypedName","src":"6136:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6147:4:28","nodeType":"YulTypedName","src":"6147:4:28","type":""}],"src":"6009:602:28"},{"body":{"nativeSrc":"6710:281:28","nodeType":"YulBlock","src":"6710:281:28","statements":[{"nativeSrc":"6720:26:28","nodeType":"YulVariableDeclaration","src":"6720:26:28","value":{"arguments":[{"name":"array","nativeSrc":"6740:5:28","nodeType":"YulIdentifier","src":"6740:5:28"}],"functionName":{"name":"mload","nativeSrc":"6734:5:28","nodeType":"YulIdentifier","src":"6734:5:28"},"nativeSrc":"6734:12:28","nodeType":"YulFunctionCall","src":"6734:12:28"},"variables":[{"name":"length","nativeSrc":"6724:6:28","nodeType":"YulTypedName","src":"6724:6:28","type":""}]},{"nativeSrc":"6755:33:28","nodeType":"YulVariableDeclaration","src":"6755:33:28","value":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"6775:5:28","nodeType":"YulIdentifier","src":"6775:5:28"},{"kind":"number","nativeSrc":"6782:4:28","nodeType":"YulLiteral","src":"6782:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6771:3:28","nodeType":"YulIdentifier","src":"6771:3:28"},"nativeSrc":"6771:16:28","nodeType":"YulFunctionCall","src":"6771:16:28"}],"functionName":{"name":"mload","nativeSrc":"6765:5:28","nodeType":"YulIdentifier","src":"6765:5:28"},"nativeSrc":"6765:23:28","nodeType":"YulFunctionCall","src":"6765:23:28"},"variables":[{"name":"_1","nativeSrc":"6759:2:28","nodeType":"YulTypedName","src":"6759:2:28","type":""}]},{"nativeSrc":"6797:41:28","nodeType":"YulVariableDeclaration","src":"6797:41:28","value":{"arguments":[{"kind":"number","nativeSrc":"6811:26:28","nodeType":"YulLiteral","src":"6811:26:28","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"6807:3:28","nodeType":"YulIdentifier","src":"6807:3:28"},"nativeSrc":"6807:31:28","nodeType":"YulFunctionCall","src":"6807:31:28"},"variables":[{"name":"_2","nativeSrc":"6801:2:28","nodeType":"YulTypedName","src":"6801:2:28","type":""}]},{"nativeSrc":"6847:20:28","nodeType":"YulAssignment","src":"6847:20:28","value":{"arguments":[{"name":"_1","nativeSrc":"6860:2:28","nodeType":"YulIdentifier","src":"6860:2:28"},{"name":"_2","nativeSrc":"6864:2:28","nodeType":"YulIdentifier","src":"6864:2:28"}],"functionName":{"name":"and","nativeSrc":"6856:3:28","nodeType":"YulIdentifier","src":"6856:3:28"},"nativeSrc":"6856:11:28","nodeType":"YulFunctionCall","src":"6856:11:28"},"variableNames":[{"name":"value","nativeSrc":"6847:5:28","nodeType":"YulIdentifier","src":"6847:5:28"}]},{"body":{"nativeSrc":"6902:83:28","nodeType":"YulBlock","src":"6902:83:28","statements":[{"nativeSrc":"6916:59:28","nodeType":"YulAssignment","src":"6916:59:28","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"6933:2:28","nodeType":"YulIdentifier","src":"6933:2:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6945:1:28","nodeType":"YulLiteral","src":"6945:1:28","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"6952:2:28","nodeType":"YulLiteral","src":"6952:2:28","type":"","value":"20"},{"name":"length","nativeSrc":"6956:6:28","nodeType":"YulIdentifier","src":"6956:6:28"}],"functionName":{"name":"sub","nativeSrc":"6948:3:28","nodeType":"YulIdentifier","src":"6948:3:28"},"nativeSrc":"6948:15:28","nodeType":"YulFunctionCall","src":"6948:15:28"}],"functionName":{"name":"shl","nativeSrc":"6941:3:28","nodeType":"YulIdentifier","src":"6941:3:28"},"nativeSrc":"6941:23:28","nodeType":"YulFunctionCall","src":"6941:23:28"},{"name":"_2","nativeSrc":"6966:2:28","nodeType":"YulIdentifier","src":"6966:2:28"}],"functionName":{"name":"shl","nativeSrc":"6937:3:28","nodeType":"YulIdentifier","src":"6937:3:28"},"nativeSrc":"6937:32:28","nodeType":"YulFunctionCall","src":"6937:32:28"}],"functionName":{"name":"and","nativeSrc":"6929:3:28","nodeType":"YulIdentifier","src":"6929:3:28"},"nativeSrc":"6929:41:28","nodeType":"YulFunctionCall","src":"6929:41:28"},{"name":"_2","nativeSrc":"6972:2:28","nodeType":"YulIdentifier","src":"6972:2:28"}],"functionName":{"name":"and","nativeSrc":"6925:3:28","nodeType":"YulIdentifier","src":"6925:3:28"},"nativeSrc":"6925:50:28","nodeType":"YulFunctionCall","src":"6925:50:28"},"variableNames":[{"name":"value","nativeSrc":"6916:5:28","nodeType":"YulIdentifier","src":"6916:5:28"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6882:6:28","nodeType":"YulIdentifier","src":"6882:6:28"},{"kind":"number","nativeSrc":"6890:2:28","nodeType":"YulLiteral","src":"6890:2:28","type":"","value":"20"}],"functionName":{"name":"lt","nativeSrc":"6879:2:28","nodeType":"YulIdentifier","src":"6879:2:28"},"nativeSrc":"6879:14:28","nodeType":"YulFunctionCall","src":"6879:14:28"},"nativeSrc":"6876:109:28","nodeType":"YulIf","src":"6876:109:28"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20","nativeSrc":"6616:375:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"6690:5:28","nodeType":"YulTypedName","src":"6690:5:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6700:5:28","nodeType":"YulTypedName","src":"6700:5:28","type":""}],"src":"6616:375:28"},{"body":{"nativeSrc":"7125:145:28","nodeType":"YulBlock","src":"7125:145:28","statements":[{"nativeSrc":"7135:26:28","nodeType":"YulAssignment","src":"7135:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"7147:9:28","nodeType":"YulIdentifier","src":"7147:9:28"},{"kind":"number","nativeSrc":"7158:2:28","nodeType":"YulLiteral","src":"7158:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7143:3:28","nodeType":"YulIdentifier","src":"7143:3:28"},"nativeSrc":"7143:18:28","nodeType":"YulFunctionCall","src":"7143:18:28"},"variableNames":[{"name":"tail","nativeSrc":"7135:4:28","nodeType":"YulIdentifier","src":"7135:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7177:9:28","nodeType":"YulIdentifier","src":"7177:9:28"},{"arguments":[{"name":"value0","nativeSrc":"7192:6:28","nodeType":"YulIdentifier","src":"7192:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7208:3:28","nodeType":"YulLiteral","src":"7208:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"7213:1:28","nodeType":"YulLiteral","src":"7213:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7204:3:28","nodeType":"YulIdentifier","src":"7204:3:28"},"nativeSrc":"7204:11:28","nodeType":"YulFunctionCall","src":"7204:11:28"},{"kind":"number","nativeSrc":"7217:1:28","nodeType":"YulLiteral","src":"7217:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7200:3:28","nodeType":"YulIdentifier","src":"7200:3:28"},"nativeSrc":"7200:19:28","nodeType":"YulFunctionCall","src":"7200:19:28"}],"functionName":{"name":"and","nativeSrc":"7188:3:28","nodeType":"YulIdentifier","src":"7188:3:28"},"nativeSrc":"7188:32:28","nodeType":"YulFunctionCall","src":"7188:32:28"}],"functionName":{"name":"mstore","nativeSrc":"7170:6:28","nodeType":"YulIdentifier","src":"7170:6:28"},"nativeSrc":"7170:51:28","nodeType":"YulFunctionCall","src":"7170:51:28"},"nativeSrc":"7170:51:28","nodeType":"YulExpressionStatement","src":"7170:51:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7241:9:28","nodeType":"YulIdentifier","src":"7241:9:28"},{"kind":"number","nativeSrc":"7252:2:28","nodeType":"YulLiteral","src":"7252:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7237:3:28","nodeType":"YulIdentifier","src":"7237:3:28"},"nativeSrc":"7237:18:28","nodeType":"YulFunctionCall","src":"7237:18:28"},{"name":"value1","nativeSrc":"7257:6:28","nodeType":"YulIdentifier","src":"7257:6:28"}],"functionName":{"name":"mstore","nativeSrc":"7230:6:28","nodeType":"YulIdentifier","src":"7230:6:28"},"nativeSrc":"7230:34:28","nodeType":"YulFunctionCall","src":"7230:34:28"},"nativeSrc":"7230:34:28","nodeType":"YulExpressionStatement","src":"7230:34:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"6996:274:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7086:9:28","nodeType":"YulTypedName","src":"7086:9:28","type":""},{"name":"value1","nativeSrc":"7097:6:28","nodeType":"YulTypedName","src":"7097:6:28","type":""},{"name":"value0","nativeSrc":"7105:6:28","nodeType":"YulTypedName","src":"7105:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7116:4:28","nodeType":"YulTypedName","src":"7116:4:28","type":""}],"src":"6996:274:28"},{"body":{"nativeSrc":"7353:199:28","nodeType":"YulBlock","src":"7353:199:28","statements":[{"body":{"nativeSrc":"7399:16:28","nodeType":"YulBlock","src":"7399:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7408:1:28","nodeType":"YulLiteral","src":"7408:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7411:1:28","nodeType":"YulLiteral","src":"7411:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7401:6:28","nodeType":"YulIdentifier","src":"7401:6:28"},"nativeSrc":"7401:12:28","nodeType":"YulFunctionCall","src":"7401:12:28"},"nativeSrc":"7401:12:28","nodeType":"YulExpressionStatement","src":"7401:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7374:7:28","nodeType":"YulIdentifier","src":"7374:7:28"},{"name":"headStart","nativeSrc":"7383:9:28","nodeType":"YulIdentifier","src":"7383:9:28"}],"functionName":{"name":"sub","nativeSrc":"7370:3:28","nodeType":"YulIdentifier","src":"7370:3:28"},"nativeSrc":"7370:23:28","nodeType":"YulFunctionCall","src":"7370:23:28"},{"kind":"number","nativeSrc":"7395:2:28","nodeType":"YulLiteral","src":"7395:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7366:3:28","nodeType":"YulIdentifier","src":"7366:3:28"},"nativeSrc":"7366:32:28","nodeType":"YulFunctionCall","src":"7366:32:28"},"nativeSrc":"7363:52:28","nodeType":"YulIf","src":"7363:52:28"},{"nativeSrc":"7424:29:28","nodeType":"YulVariableDeclaration","src":"7424:29:28","value":{"arguments":[{"name":"headStart","nativeSrc":"7443:9:28","nodeType":"YulIdentifier","src":"7443:9:28"}],"functionName":{"name":"mload","nativeSrc":"7437:5:28","nodeType":"YulIdentifier","src":"7437:5:28"},"nativeSrc":"7437:16:28","nodeType":"YulFunctionCall","src":"7437:16:28"},"variables":[{"name":"value","nativeSrc":"7428:5:28","nodeType":"YulTypedName","src":"7428:5:28","type":""}]},{"body":{"nativeSrc":"7506:16:28","nodeType":"YulBlock","src":"7506:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7515:1:28","nodeType":"YulLiteral","src":"7515:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7518:1:28","nodeType":"YulLiteral","src":"7518:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7508:6:28","nodeType":"YulIdentifier","src":"7508:6:28"},"nativeSrc":"7508:12:28","nodeType":"YulFunctionCall","src":"7508:12:28"},"nativeSrc":"7508:12:28","nodeType":"YulExpressionStatement","src":"7508:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7475:5:28","nodeType":"YulIdentifier","src":"7475:5:28"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7496:5:28","nodeType":"YulIdentifier","src":"7496:5:28"}],"functionName":{"name":"iszero","nativeSrc":"7489:6:28","nodeType":"YulIdentifier","src":"7489:6:28"},"nativeSrc":"7489:13:28","nodeType":"YulFunctionCall","src":"7489:13:28"}],"functionName":{"name":"iszero","nativeSrc":"7482:6:28","nodeType":"YulIdentifier","src":"7482:6:28"},"nativeSrc":"7482:21:28","nodeType":"YulFunctionCall","src":"7482:21:28"}],"functionName":{"name":"eq","nativeSrc":"7472:2:28","nodeType":"YulIdentifier","src":"7472:2:28"},"nativeSrc":"7472:32:28","nodeType":"YulFunctionCall","src":"7472:32:28"}],"functionName":{"name":"iszero","nativeSrc":"7465:6:28","nodeType":"YulIdentifier","src":"7465:6:28"},"nativeSrc":"7465:40:28","nodeType":"YulFunctionCall","src":"7465:40:28"},"nativeSrc":"7462:60:28","nodeType":"YulIf","src":"7462:60:28"},{"nativeSrc":"7531:15:28","nodeType":"YulAssignment","src":"7531:15:28","value":{"name":"value","nativeSrc":"7541:5:28","nodeType":"YulIdentifier","src":"7541:5:28"},"variableNames":[{"name":"value0","nativeSrc":"7531:6:28","nodeType":"YulIdentifier","src":"7531:6:28"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"7275:277:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7319:9:28","nodeType":"YulTypedName","src":"7319:9:28","type":""},{"name":"dataEnd","nativeSrc":"7330:7:28","nodeType":"YulTypedName","src":"7330:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7342:6:28","nodeType":"YulTypedName","src":"7342:6:28","type":""}],"src":"7275:277:28"},{"body":{"nativeSrc":"7687:201:28","nodeType":"YulBlock","src":"7687:201:28","statements":[{"body":{"nativeSrc":"7725:16:28","nodeType":"YulBlock","src":"7725:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7734:1:28","nodeType":"YulLiteral","src":"7734:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7737:1:28","nodeType":"YulLiteral","src":"7737:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7727:6:28","nodeType":"YulIdentifier","src":"7727:6:28"},"nativeSrc":"7727:12:28","nodeType":"YulFunctionCall","src":"7727:12:28"},"nativeSrc":"7727:12:28","nodeType":"YulExpressionStatement","src":"7727:12:28"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"7703:10:28","nodeType":"YulIdentifier","src":"7703:10:28"},{"name":"endIndex","nativeSrc":"7715:8:28","nodeType":"YulIdentifier","src":"7715:8:28"}],"functionName":{"name":"gt","nativeSrc":"7700:2:28","nodeType":"YulIdentifier","src":"7700:2:28"},"nativeSrc":"7700:24:28","nodeType":"YulFunctionCall","src":"7700:24:28"},"nativeSrc":"7697:44:28","nodeType":"YulIf","src":"7697:44:28"},{"body":{"nativeSrc":"7774:16:28","nodeType":"YulBlock","src":"7774:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7783:1:28","nodeType":"YulLiteral","src":"7783:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7786:1:28","nodeType":"YulLiteral","src":"7786:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7776:6:28","nodeType":"YulIdentifier","src":"7776:6:28"},"nativeSrc":"7776:12:28","nodeType":"YulFunctionCall","src":"7776:12:28"},"nativeSrc":"7776:12:28","nodeType":"YulExpressionStatement","src":"7776:12:28"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"7756:8:28","nodeType":"YulIdentifier","src":"7756:8:28"},{"name":"length","nativeSrc":"7766:6:28","nodeType":"YulIdentifier","src":"7766:6:28"}],"functionName":{"name":"gt","nativeSrc":"7753:2:28","nodeType":"YulIdentifier","src":"7753:2:28"},"nativeSrc":"7753:20:28","nodeType":"YulFunctionCall","src":"7753:20:28"},"nativeSrc":"7750:40:28","nodeType":"YulIf","src":"7750:40:28"},{"nativeSrc":"7799:36:28","nodeType":"YulAssignment","src":"7799:36:28","value":{"arguments":[{"name":"offset","nativeSrc":"7816:6:28","nodeType":"YulIdentifier","src":"7816:6:28"},{"name":"startIndex","nativeSrc":"7824:10:28","nodeType":"YulIdentifier","src":"7824:10:28"}],"functionName":{"name":"add","nativeSrc":"7812:3:28","nodeType":"YulIdentifier","src":"7812:3:28"},"nativeSrc":"7812:23:28","nodeType":"YulFunctionCall","src":"7812:23:28"},"variableNames":[{"name":"offsetOut","nativeSrc":"7799:9:28","nodeType":"YulIdentifier","src":"7799:9:28"}]},{"nativeSrc":"7844:38:28","nodeType":"YulAssignment","src":"7844:38:28","value":{"arguments":[{"name":"endIndex","nativeSrc":"7861:8:28","nodeType":"YulIdentifier","src":"7861:8:28"},{"name":"startIndex","nativeSrc":"7871:10:28","nodeType":"YulIdentifier","src":"7871:10:28"}],"functionName":{"name":"sub","nativeSrc":"7857:3:28","nodeType":"YulIdentifier","src":"7857:3:28"},"nativeSrc":"7857:25:28","nodeType":"YulFunctionCall","src":"7857:25:28"},"variableNames":[{"name":"lengthOut","nativeSrc":"7844:9:28","nodeType":"YulIdentifier","src":"7844:9:28"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"7557:331:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7621:6:28","nodeType":"YulTypedName","src":"7621:6:28","type":""},{"name":"length","nativeSrc":"7629:6:28","nodeType":"YulTypedName","src":"7629:6:28","type":""},{"name":"startIndex","nativeSrc":"7637:10:28","nodeType":"YulTypedName","src":"7637:10:28","type":""},{"name":"endIndex","nativeSrc":"7649:8:28","nodeType":"YulTypedName","src":"7649:8:28","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"7662:9:28","nodeType":"YulTypedName","src":"7662:9:28","type":""},{"name":"lengthOut","nativeSrc":"7673:9:28","nodeType":"YulTypedName","src":"7673:9:28","type":""}],"src":"7557:331:28"},{"body":{"nativeSrc":"7994:154:28","nodeType":"YulBlock","src":"7994:154:28","statements":[{"nativeSrc":"8004:28:28","nodeType":"YulAssignment","src":"8004:28:28","value":{"arguments":[{"name":"array","nativeSrc":"8026:5:28","nodeType":"YulIdentifier","src":"8026:5:28"}],"functionName":{"name":"calldataload","nativeSrc":"8013:12:28","nodeType":"YulIdentifier","src":"8013:12:28"},"nativeSrc":"8013:19:28","nodeType":"YulFunctionCall","src":"8013:19:28"},"variableNames":[{"name":"value","nativeSrc":"8004:5:28","nodeType":"YulIdentifier","src":"8004:5:28"}]},{"body":{"nativeSrc":"8064:78:28","nodeType":"YulBlock","src":"8064:78:28","statements":[{"nativeSrc":"8078:54:28","nodeType":"YulAssignment","src":"8078:54:28","value":{"arguments":[{"name":"value","nativeSrc":"8091:5:28","nodeType":"YulIdentifier","src":"8091:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8106:1:28","nodeType":"YulLiteral","src":"8106:1:28","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"8113:2:28","nodeType":"YulLiteral","src":"8113:2:28","type":"","value":"32"},{"name":"len","nativeSrc":"8117:3:28","nodeType":"YulIdentifier","src":"8117:3:28"}],"functionName":{"name":"sub","nativeSrc":"8109:3:28","nodeType":"YulIdentifier","src":"8109:3:28"},"nativeSrc":"8109:12:28","nodeType":"YulFunctionCall","src":"8109:12:28"}],"functionName":{"name":"shl","nativeSrc":"8102:3:28","nodeType":"YulIdentifier","src":"8102:3:28"},"nativeSrc":"8102:20:28","nodeType":"YulFunctionCall","src":"8102:20:28"},{"arguments":[{"kind":"number","nativeSrc":"8128:1:28","nodeType":"YulLiteral","src":"8128:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"8124:3:28","nodeType":"YulIdentifier","src":"8124:3:28"},"nativeSrc":"8124:6:28","nodeType":"YulFunctionCall","src":"8124:6:28"}],"functionName":{"name":"shl","nativeSrc":"8098:3:28","nodeType":"YulIdentifier","src":"8098:3:28"},"nativeSrc":"8098:33:28","nodeType":"YulFunctionCall","src":"8098:33:28"}],"functionName":{"name":"and","nativeSrc":"8087:3:28","nodeType":"YulIdentifier","src":"8087:3:28"},"nativeSrc":"8087:45:28","nodeType":"YulFunctionCall","src":"8087:45:28"},"variableNames":[{"name":"value","nativeSrc":"8078:5:28","nodeType":"YulIdentifier","src":"8078:5:28"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"8047:3:28","nodeType":"YulIdentifier","src":"8047:3:28"},{"kind":"number","nativeSrc":"8052:2:28","nodeType":"YulLiteral","src":"8052:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"8044:2:28","nodeType":"YulIdentifier","src":"8044:2:28"},"nativeSrc":"8044:11:28","nodeType":"YulFunctionCall","src":"8044:11:28"},"nativeSrc":"8041:101:28","nodeType":"YulIf","src":"8041:101:28"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32","nativeSrc":"7893:255:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"7969:5:28","nodeType":"YulTypedName","src":"7969:5:28","type":""},{"name":"len","nativeSrc":"7976:3:28","nodeType":"YulTypedName","src":"7976:3:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7984:5:28","nodeType":"YulTypedName","src":"7984:5:28","type":""}],"src":"7893:255:28"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IOFT_$1233__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_address(add(headStart, 96))\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$2218__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_4f36cc36cc2d8409d2a1ca675856db8c0ac40991b9e411e41e2b8bba2f8104fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Failed to send HYPE to HyperCore\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint64_t_uint64__to_t_address_t_uint64_t_uint64__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        let _1 := 0xffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let length := mload(value0)\n        mstore(add(headStart, 64), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(headStart, i), 96), mload(add(add(value0, i), 0x20)))\n        }\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n        mstore(add(headStart, 0x20), value1)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value\n    {\n        let length := mload(array)\n        let _1 := mload(add(array, 0x20))\n        let _2 := not(0xffffffffffffffffffffffff)\n        value := and(_1, _2)\n        if lt(length, 20)\n        {\n            value := and(and(_1, shl(shl(3, sub(20, length)), _2)), _2)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32(array, len) -> value\n    {\n        value := calldataload(array)\n        if lt(len, 32)\n        {\n            value := and(value, shl(shl(3, sub(32, len)), not(0)))\n        }\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1418":[{"length":32,"start":502},{"length":32,"start":1542}],"1420":[{"length":32,"start":554},{"length":32,"start":1728}],"1439":[{"length":32,"start":410},{"length":32,"start":823}],"1442":[{"length":32,"start":606},{"length":32,"start":904},{"length":32,"start":972}],"1445":[{"length":32,"start":764},{"length":32,"start":1589}],"1447":[{"length":32,"start":280},{"length":32,"start":1764}]},"linkReferences":{},"object":"6080604052600436106100c65760003560e01c80639a923b9a1161007f578063d0a1026011610059578063d0a10260146102a2578063d9acf0ec146102b5578063dd4c07c8146102d5578063fc0c546a146102ea57600080fd5b80639a923b9a146102185780639b5215f61461024c578063b7c312e61461028057600080fd5b80630813f32f146100d2578063303f1e811461010657806355cd1378146101485780635e280f11146101885780636e3bf0ad146101bc57806384123305146101e457600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506100e861045181565b60405167ffffffffffffffff90911681526020015b60405180910390f35b34801561011257600080fd5b5061013a7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100fd565b34801561015457600080fd5b5061017073333333333333333333333333333333333333333381565b6040516001600160a01b0390911681526020016100fd565b34801561019457600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b3480156101c857600080fd5b5061017073222222222222222222222222222222222222222281565b3480156101f057600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b34801561022457600080fd5b506100e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561025857600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b34801561028c57600080fd5b506102a061029b366004610811565b61031e565b005b6102a06102b0366004610884565b61032c565b3480156102c157600080fd5b506102a06102d0366004610811565b610438565b3480156102e157600080fd5b5061013a600a81565b3480156102f657600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b6103288282610442565b5050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461037c5760405163eee35e6f60e01b81523360048201526024015b60405180910390fd5b866001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146104015760405163021bfb8360e61b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015288166024820152604401610373565b60008061040e8787610596565b90925090503415610423576104238234610442565b61042d82826105ef565b505050505050505050565b61032882826105ef565b6040516000907322222222222222222222222222222222222222229083908381818185875af1925050503d8060008114610498576040519150601f19603f3d011682016040523d82523d6000602084013e61049d565b606091505b50509050806104ee5760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e64204859504520746f204879706572436f72656044820152606401610373565b733333333333333333333333333333333333333333630b0ac0ab84610451610517600a80610a1c565b6105219087610a28565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015267ffffffffffffffff9182166024840152166044820152606401600060405180830381600087803b15801561057957600080fd5b505af115801561058d573d6000803e3d6000fd5b50505050505050565b60008060006105a58585610788565b905060148151146105cd5780516040516309b3473160e01b8152610373918391600401610a4a565b6105d681610a9f565b60601c92506105e585856107d5565b9150509250929050565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561067e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a29190610adb565b50733333333333333333333333333333333333333333630b0ac0ab837f000000000000000000000000000000000000000000000000000000000000000061070a7f0000000000000000000000000000000000000000000000000000000000000000600a610a1c565b6107149086610a28565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015267ffffffffffffffff9182166024840152166044820152606401600060405180830381600087803b15801561076c57600080fd5b505af1158015610780573d6000803e3d6000fd5b505050505050565b606061079782604c8186610afd565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b92915050565b60006107e5602c600c8486610afd565b6107ee91610b27565b9392505050565b80356001600160a01b038116811461080c57600080fd5b919050565b6000806040838503121561082457600080fd5b61082d836107f5565b946020939093013593505050565b60008083601f84011261084d57600080fd5b50813567ffffffffffffffff81111561086557600080fd5b60208301915083602082850101111561087d57600080fd5b9250929050565b600080600080600080600060a0888a03121561089f57600080fd5b6108a8886107f5565b965060208801359550604088013567ffffffffffffffff808211156108cc57600080fd5b6108d88b838c0161083b565b90975095508591506108ec60608b016107f5565b945060808a013591508082111561090257600080fd5b5061090f8a828b0161083b565b989b979a50959850939692959293505050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561097357816000190482111561095957610959610922565b8085161561096657918102915b93841c939080029061093d565b509250929050565b60008261098a575060016107cf565b81610997575060006107cf565b81600181146109ad57600281146109b7576109d3565b60019150506107cf565b60ff8411156109c8576109c8610922565b50506001821b6107cf565b5060208310610133831016604e8410600b84101617156109f6575081810a6107cf565b610a008383610938565b8060001904821115610a1457610a14610922565b029392505050565b60006107ee838361097b565b600082610a4557634e487b7160e01b600052601260045260246000fd5b500490565b604081526000835180604084015260005b81811015610a785760208187018101516060868401015201610a5b565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b805160208201516bffffffffffffffffffffffff198082169291906014831015610ad35780818460140360031b1b83161693505b505050919050565b600060208284031215610aed57600080fd5b815180151581146107ee57600080fd5b60008085851115610b0d57600080fd5b83861115610b1a57600080fd5b5050820193919092039150565b803560208310156107cf57600019602084900360031b1b169291505056fea2646970667358221220c4f2710927a196119e967aafdb892ea710f6b3d7b1399206d6df3be388014a1764736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A923B9A GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD0A10260 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD0A10260 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xD9ACF0EC EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xDD4C07C8 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A923B9A EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x9B5215F6 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xB7C312E6 EQ PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x813F32F EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x303F1E81 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x55CD1378 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x5E280F11 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x6E3BF0AD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x84123305 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xCD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x451 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH20 0x3333333333333333333333333333333333333333 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH20 0x2222222222222222222222222222222222222222 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH1 0xA DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x328 DUP3 DUP3 PUSH2 0x442 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEEE35E6F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x401 JUMPI PUSH1 0x40 MLOAD PUSH4 0x21BFB83 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x373 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x40E DUP8 DUP8 PUSH2 0x596 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP CALLVALUE ISZERO PUSH2 0x423 JUMPI PUSH2 0x423 DUP3 CALLVALUE PUSH2 0x442 JUMP JUMPDEST PUSH2 0x42D DUP3 DUP3 PUSH2 0x5EF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x328 DUP3 DUP3 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH20 0x2222222222222222222222222222222222222222 SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x49D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64204859504520746F204879706572436F7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x373 JUMP JUMPDEST PUSH20 0x3333333333333333333333333333333333333333 PUSH4 0xB0AC0AB DUP5 PUSH2 0x451 PUSH2 0x517 PUSH1 0xA DUP1 PUSH2 0xA1C JUMP JUMPDEST PUSH2 0x521 SWAP1 DUP8 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x5A5 DUP6 DUP6 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ PUSH2 0x5CD JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x9B34731 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x373 SWAP2 DUP4 SWAP2 PUSH1 0x4 ADD PUSH2 0xA4A JUMP JUMPDEST PUSH2 0x5D6 DUP2 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP PUSH2 0x5E5 DUP6 DUP6 PUSH2 0x7D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x67E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A2 SWAP2 SWAP1 PUSH2 0xADB JUMP JUMPDEST POP PUSH20 0x3333333333333333333333333333333333333333 PUSH4 0xB0AC0AB DUP4 PUSH32 0x0 PUSH2 0x70A PUSH32 0x0 PUSH1 0xA PUSH2 0xA1C JUMP JUMPDEST PUSH2 0x714 SWAP1 DUP7 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x76C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x780 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x797 DUP3 PUSH1 0x4C DUP2 DUP7 PUSH2 0xAFD JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E5 PUSH1 0x2C PUSH1 0xC DUP5 DUP7 PUSH2 0xAFD JUMP JUMPDEST PUSH2 0x7EE SWAP2 PUSH2 0xB27 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x82D DUP4 PUSH2 0x7F5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A8 DUP9 PUSH2 0x7F5 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D8 DUP12 DUP4 DUP13 ADD PUSH2 0x83B JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x8EC PUSH1 0x60 DUP12 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90F DUP11 DUP3 DUP12 ADD PUSH2 0x83B JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x973 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x959 JUMPI PUSH2 0x959 PUSH2 0x922 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x966 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x93D JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x98A JUMPI POP PUSH1 0x1 PUSH2 0x7CF JUMP JUMPDEST DUP2 PUSH2 0x997 JUMPI POP PUSH1 0x0 PUSH2 0x7CF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x9AD JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x9B7 JUMPI PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x7CF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x9C8 JUMPI PUSH2 0x9C8 PUSH2 0x922 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x7CF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x9F6 JUMPI POP DUP2 DUP2 EXP PUSH2 0x7CF JUMP JUMPDEST PUSH2 0xA00 DUP4 DUP4 PUSH2 0x938 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xA14 JUMPI PUSH2 0xA14 PUSH2 0x922 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EE DUP4 DUP4 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA45 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA78 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xA5B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 PUSH1 0x14 DUP4 LT ISZERO PUSH2 0xAD3 JUMPI DUP1 DUP2 DUP5 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP4 POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0xB0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0xB1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x20 DUP4 LT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x0 NOT PUSH1 0x20 DUP5 SWAP1 SUB PUSH1 0x3 SHL SHL AND SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 CALLCODE PUSH18 0x927A196119E967AAFDB892EA710F6B3D7B1 CODECOPY SWAP3 MOD 0xD6 0xDF EXTCODESIZE 0xE3 DUP9 ADD 0x4A OR PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"168:512:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:49:12;;;;;;;;;;;;901:4;856:49;;;;;188:18:28;176:31;;;158:50;;146:2;131:18;856:49:12;;;;;;;;1088:32;;;;;;;;;;;;;;;;;;365:25:28;;;353:2;338:18;1088:32:12;219:177:28;640:93:12;;;;;;;;;;;;691:42;640:93;;;;;-1:-1:-1;;;;;565:32:28;;;547:51;;535:2;520:18;640:93:12;401:203:28;983:33:12;;;;;;;;;;;;;;;739:111;;;;;;;;;;;;807:42;739:111;;525:55;;;;;;;;;;;;;;;586:47;;;;;;;;;;;;;;;1022:25;;;;;;;;;;;;;;;545:133:26;;;;;;;;;;-1:-1:-1;545:133:26;;;;;:::i;:::-;;:::i;:::-;;2995:1615:12;;;;;;:::i;:::-;;:::i;410:129:26:-;;;;;;;;;;-1:-1:-1;410:129:26;;;;;:::i;:::-;;:::i;911:65:12:-;;;;;;;;;;;;970:6;911:65;;1053:29;;;;;;;;;;;;;;;545:133:26;629:42;653:9;664:6;629:23;:42::i;:::-;545:133;;:::o;2995:1615:12:-;3371:10;-1:-1:-1;;;;;3393:8:12;3371:31;;3367:124;;3425:55;;-1:-1:-1;;;3425:55:12;;3469:10;3425:55;;;547:51:28;520:18;;3425:55:12;;;;;;;;3367:124;3521:4;-1:-1:-1;;;;;3505:20:12;3513:3;-1:-1:-1;;;;;3505:20:12;;3501:116;;3548:58;;-1:-1:-1;;;3548:58:12;;-1:-1:-1;;;;;3595:3:12;3236:15:28;;3548:58:12;;;3218:34:28;3288:15;;3268:18;;;3261:43;3153:18;;3548:58:12;3006:304:28;3501:116:12;3944:17;3963;3984:59;4034:8;;3984:49;:59::i;:::-;3943:100;;-1:-1:-1;3943:100:12;-1:-1:-1;4235:9:12;:13;4231:89;;4264:45;4288:9;4299;4264:23;:45::i;:::-;4560:43;4582:9;4593;4560:21;:43::i;:::-;3206:1404;;2995:1615;;;;;;;:::o;410:129:26:-;492:40;514:9;525:6;492:21;:40::i;4962:436:12:-;5073:51;;5058:9;;807:42;;5112:6;;5058:9;5073:51;5058:9;5073:51;5112:6;807:42;5073:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5057:67;;;5142:4;5134:49;;;;-1:-1:-1;;;5134:49:12;;3727:2:28;5134:49:12;;;3709:21:28;;;3746:18;;;3739:30;3805:34;3785:18;;;3778:62;3857:18;;5134:49:12;3525:356:28;5134:49:12;691:42;5194:62;5270:9;901:4;5342:38;970:6;;5342:38;:::i;:::-;5333:47;;:6;:47;:::i;:::-;5194:197;;-1:-1:-1;;;;;;5194:197:12;;;;;;;-1:-1:-1;;;;;5824:32:28;;;5194:197:12;;;5806:51:28;5876:18;5930:15;;;5910:18;;;5903:43;5982:15;5962:18;;;5955:43;5779:18;;5194:197:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5047:351;4962:436;;:::o;1247:738:15:-;1350:17;1369;1398:20;1421:46;1451:15;;1421:29;:46::i;:::-;1398:69;;492:2;1606:7;:14;:53;1602:173;;1749:14;;1682:82;;-1:-1:-1;;;1682:82:15;;;;1740:7;;1682:82;;;:::i;1602:173::-;1895:16;1903:7;1895:16;:::i;:::-;1887:25;;1875:37;;1934:44;1962:15;;1934:27;:44::i;:::-;1922:56;;1388:597;1247:738;;;;;:::o;4616:340:12:-;4709:54;;-1:-1:-1;;;4709:54:12;;-1:-1:-1;;;;;4724:30:12;7188:32:28;;4709:54:12;;;7170:51:28;7237:18;;;7230:34;;;4709:5:12;:14;;;;7143:18:28;;4709:54:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;691:42:12;4773:62;4849:9;4872:23;4925:13;4931:7;4925:2;:13;:::i;:::-;4916:22;;:6;:22;:::i;:::-;4773:176;;-1:-1:-1;;;;;;4773:176:12;;;;;;;-1:-1:-1;;;;;5824:32:28;;;4773:176:12;;;5806:51:28;5876:18;5930:15;;;5910:18;;;5903:43;5982:15;5962:18;;;5955:43;5779:18;;4773:176:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4616:340;;:::o;2273:128:11:-;2337:12;2368:26;:4;335:2;2368:4;;:26;:::i;:::-;2361:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2361:33:11;;-1:-1:-1;;;;2273:128:11;;;;;:::o;1676:150::-;1738:7;1780:37;282:2;232;1780:4;;:37;:::i;:::-;1772:46;;;:::i;:::-;1764:55;1676:150;-1:-1:-1;;;1676:150:11:o;1054:173:28:-;1122:20;;-1:-1:-1;;;;;1171:31:28;;1161:42;;1151:70;;1217:1;1214;1207:12;1151:70;1054:173;;;:::o;1232:254::-;1300:6;1308;1361:2;1349:9;1340:7;1336:23;1332:32;1329:52;;;1377:1;1374;1367:12;1329:52;1400:29;1419:9;1400:29;:::i;:::-;1390:39;1476:2;1461:18;;;;1448:32;;-1:-1:-1;;;1232:254:28:o;1491:347::-;1542:8;1552:6;1606:3;1599:4;1591:6;1587:17;1583:27;1573:55;;1624:1;1621;1614:12;1573:55;-1:-1:-1;1647:20:28;;1690:18;1679:30;;1676:50;;;1722:1;1719;1712:12;1676:50;1759:4;1751:6;1747:17;1735:29;;1811:3;1804:4;1795:6;1787;1783:19;1779:30;1776:39;1773:59;;;1828:1;1825;1818:12;1773:59;1491:347;;;;;:::o;1843:935::-;1960:6;1968;1976;1984;1992;2000;2008;2061:3;2049:9;2040:7;2036:23;2032:33;2029:53;;;2078:1;2075;2068:12;2029:53;2101:29;2120:9;2101:29;:::i;:::-;2091:39;;2177:2;2166:9;2162:18;2149:32;2139:42;;2232:2;2221:9;2217:18;2204:32;2255:18;2296:2;2288:6;2285:14;2282:34;;;2312:1;2309;2302:12;2282:34;2351:58;2401:7;2392:6;2381:9;2377:22;2351:58;:::i;:::-;2428:8;;-1:-1:-1;2325:84:28;-1:-1:-1;2325:84:28;;-1:-1:-1;2482:38:28;2516:2;2501:18;;2482:38;:::i;:::-;2472:48;;2573:3;2562:9;2558:19;2545:33;2529:49;;2603:2;2593:8;2590:16;2587:36;;;2619:1;2616;2609:12;2587:36;;2658:60;2710:7;2699:8;2688:9;2684:24;2658:60;:::i;:::-;1843:935;;;;-1:-1:-1;1843:935:28;;-1:-1:-1;1843:935:28;;;;2632:86;;-1:-1:-1;;;1843:935:28:o;3886:127::-;3947:10;3942:3;3938:20;3935:1;3928:31;3978:4;3975:1;3968:15;4002:4;3999:1;3992:15;4018:416;4107:1;4144:5;4107:1;4158:270;4179:7;4169:8;4166:21;4158:270;;;4238:4;4234:1;4230:6;4226:17;4220:4;4217:27;4214:53;;;4247:18;;:::i;:::-;4297:7;4287:8;4283:22;4280:55;;;4317:16;;;;4280:55;4396:22;;;;4356:15;;;;4158:270;;;4162:3;4018:416;;;;;:::o;4439:806::-;4488:5;4518:8;4508:80;;-1:-1:-1;4559:1:28;4573:5;;4508:80;4607:4;4597:76;;-1:-1:-1;4644:1:28;4658:5;;4597:76;4689:4;4707:1;4702:59;;;;4775:1;4770:130;;;;4682:218;;4702:59;4732:1;4723:10;;4746:5;;;4770:130;4807:3;4797:8;4794:17;4791:43;;;4814:18;;:::i;:::-;-1:-1:-1;;4870:1:28;4856:16;;4885:5;;4682:218;;4984:2;4974:8;4971:16;4965:3;4959:4;4956:13;4952:36;4946:2;4936:8;4933:16;4928:2;4922:4;4919:12;4915:35;4912:77;4909:159;;;-1:-1:-1;5021:19:28;;;5053:5;;4909:159;5100:34;5125:8;5119:4;5100:34;:::i;:::-;5170:6;5166:1;5162:6;5158:19;5149:7;5146:32;5143:58;;;5181:18;;:::i;:::-;5219:20;;4439:806;-1:-1:-1;;;4439:806:28:o;5250:131::-;5310:5;5339:36;5366:8;5360:4;5339:36;:::i;5386:217::-;5426:1;5452;5442:132;;5496:10;5491:3;5487:20;5484:1;5477:31;5531:4;5528:1;5521:15;5559:4;5556:1;5549:15;5442:132;-1:-1:-1;5588:9:28;;5386:217::o;6009:602::-;6184:2;6173:9;6166:21;6147:4;6216:6;6210:13;6259:6;6254:2;6243:9;6239:18;6232:34;6284:1;6294:144;6308:6;6305:1;6302:13;6294:144;;;6421:4;6405:14;;;6401:25;;6395:32;6390:2;6371:17;;;6367:26;6360:68;6323:12;6294:144;;;6298:3;6487:1;6482:2;6473:6;6462:9;6458:22;6454:31;6447:42;6557:2;6550;6546:7;6541:2;6533:6;6529:15;6525:29;6514:9;6510:45;6506:54;6498:62;;;6598:6;6591:4;6580:9;6576:20;6569:36;6009:602;;;;;:::o;6616:375::-;6734:12;;6782:4;6771:16;;6765:23;-1:-1:-1;;6856:11:28;;;;6734:12;6765:23;6890:2;6879:14;;6876:109;;;6972:2;6966;6956:6;6952:2;6948:15;6945:1;6941:23;6937:32;6933:2;6929:41;6925:50;6916:59;;6876:109;;;;6616:375;;;:::o;7275:277::-;7342:6;7395:2;7383:9;7374:7;7370:23;7366:32;7363:52;;;7411:1;7408;7401:12;7363:52;7443:9;7437:16;7496:5;7489:13;7482:21;7475:5;7472:32;7462:60;;7518:1;7515;7508:12;7557:331;7662:9;7673;7715:8;7703:10;7700:24;7697:44;;;7737:1;7734;7727:12;7697:44;7766:6;7756:8;7753:20;7750:40;;;7786:1;7783;7776:12;7750:40;-1:-1:-1;;7812:23:28;;;7857:25;;;;;-1:-1:-1;7557:331:28:o;7893:255::-;8013:19;;8052:2;8044:11;;8041:101;;;-1:-1:-1;;8113:2:28;8109:12;;;8106:1;8102:20;8098:33;8087:45;7893:255;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"587800","executionCost":"infinite","totalCost":"infinite"},"external":{"HYPER_CORE_INDEX_ID()":"194","HYPER_CORE_INDEX_ID_DECIMAL_DIFF()":"261","HYPE_ASSET_BRIDGE_ADDRESS()":"305","L1WritePrecompileAddress()":"261","OFT_TOKEN_ASSET_BRIDGE_ADDRESS()":"infinite","OFT_TOKEN_CORE_INDEX_ID()":"infinite","endpoint()":"infinite","fundAddressOnHyperCore(address,uint256)":"infinite","lzCompose(address,bytes32,bytes,address,bytes)":"infinite","oft()":"infinite","sendAssetToHyperCore(address,uint256)":"infinite","token()":"infinite","weiDiff()":"infinite"}},"methodIdentifiers":{"HYPER_CORE_INDEX_ID()":"0813f32f","HYPER_CORE_INDEX_ID_DECIMAL_DIFF()":"dd4c07c8","HYPE_ASSET_BRIDGE_ADDRESS()":"6e3bf0ad","L1WritePrecompileAddress()":"55cd1378","OFT_TOKEN_ASSET_BRIDGE_ADDRESS()":"84123305","OFT_TOKEN_CORE_INDEX_ID()":"9a923b9a","endpoint()":"5e280f11","fundAddressOnHyperCore(address,uint256)":"b7c312e6","lzCompose(address,bytes32,bytes,address,bytes)":"d0a10260","oft()":"9b5215f6","sendAssetToHyperCore(address,uint256)":"d9acf0ec","token()":"fc0c546a","weiDiff()":"303f1e81"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lzEndpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oft\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_hlIndexId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_weiDiff\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notEndpointAddress\",\"type\":\"address\"}],\"name\":\"HyperLiquidComposer_InvalidCall_NotEndpoint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalOFTAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receivedOFTAddress\",\"type\":\"address\"}],\"name\":\"HyperLiquidComposer_InvalidCall_NotOFT\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HYPER_CORE_INDEX_ID\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HYPER_CORE_INDEX_ID_DECIMAL_DIFF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HYPE_ASSET_BRIDGE_ADDRESS\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"L1WritePrecompileAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OFT_TOKEN_ASSET_BRIDGE_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OFT_TOKEN_CORE_INDEX_ID\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiever\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fundAddressOnHyperCore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oft\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oft\",\"outputs\":[{\"internalType\":\"contract IOFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiever\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendAssetToHyperCore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiDiff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"lzCompose(address,bytes32,bytes,address,bytes)\":{\"details\":\"This function is called by the OFTCore contract when a message is sent\",\"params\":{\"_message\":\"The encoded message content, expected to be of type: (address receiver).\",\"_oft\":\"The address of the OFT contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"lzCompose(address,bytes32,bytes,address,bytes)\":{\"notice\":\"Composes a message to be sent to the HyperLiquidLZComposerThis function is the only new addition to the OFT standard\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyHyperCoreAdapter.sol\":\"MyHyperCoreAdapter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title ILayerZeroComposer\\n */\\ninterface ILayerZeroComposer {\\n    /**\\n     * @notice Composes a LayerZero message from an OApp.\\n     * @dev To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).\\n     * @param _from The address initiating the composition, typically the OApp where the lzReceive was called.\\n     * @param _guid The unique identifier for the corresponding LayerZero src/dst tx.\\n     * @param _message The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive.\\n     * @param _executor The address of the executor for the composed message.\\n     * @param _extraData Additional arbitrary data in bytes passed by the entity who executes the lzCompose.\\n     */\\n    function lzCompose(\\n        address _from,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { SafeERC20, IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppSender\\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\\n */\\nabstract contract OAppSender is OAppCore {\\n    using SafeERC20 for IERC20;\\n\\n    // Custom error messages\\n    error NotEnoughNative(uint256 msgValue);\\n    error LzTokenUnavailable();\\n\\n    // @dev The version of the OAppSender implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant SENDER_VERSION = 1;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\\n     * ie. this is a SEND only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (SENDER_VERSION, 0);\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\\n     * @return fee The calculated MessagingFee for the message.\\n     *      - nativeFee: The native fee for the message.\\n     *      - lzTokenFee: The LZ token fee for the message.\\n     */\\n    function _quote(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) internal view virtual returns (MessagingFee memory fee) {\\n        return\\n            endpoint.quote(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\\n                address(this)\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _fee The calculated LayerZero fee for the message.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\\n     * @return receipt The receipt for the sent message.\\n     *      - guid: The unique identifier for the sent message.\\n     *      - nonce: The nonce of the sent message.\\n     *      - fee: The LayerZero fee incurred for the message.\\n     */\\n    function _lzSend(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        MessagingFee memory _fee,\\n        address _refundAddress\\n    ) internal virtual returns (MessagingReceipt memory receipt) {\\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\\n        uint256 messageValue = _payNative(_fee.nativeFee);\\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\\n\\n        return\\n            // solhint-disable-next-line check-send-result\\n            endpoint.send{ value: messageValue }(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\\n                _refundAddress\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the native fee associated with the message.\\n     * @param _nativeFee The native fee to be paid.\\n     * @return nativeFee The amount of native currency paid.\\n     *\\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\\n     * this will need to be overridden because msg.value would contain multiple lzFees.\\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\\n     */\\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\\n        return _nativeFee;\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the LZ token fee associated with the message.\\n     * @param _lzTokenFee The LZ token fee to be paid.\\n     *\\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\\n     */\\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\\n        address lzToken = endpoint.lzToken();\\n        if (lzToken == address(0)) revert LzTokenUnavailable();\\n\\n        // Pay LZ token fee by sending tokens to the endpoint.\\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\\n    }\\n}\\n\",\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroComposer } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\\\";\\n\\n/**\\n * @title IOAppComposer\\n * @dev This interface defines the OApp Composer, allowing developers to inherit only the OApp package without the protocol.\\n */\\n// solhint-disable-next-line no-empty-blocks\\ninterface IOAppComposer is ILayerZeroComposer {}\\n\",\"keccak256\":\"0xe5014c411acb2b59dd74ae74a1bab02cf32d94a41a548a5ab553d64aeeb55dae\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { MessagingReceipt, MessagingFee } from \\\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\\\";\\n\\n/**\\n * @dev Struct representing token parameters for the OFT send() operation.\\n */\\nstruct SendParam {\\n    uint32 dstEid; // Destination endpoint ID.\\n    bytes32 to; // Recipient address.\\n    uint256 amountLD; // Amount to send in local decimals.\\n    uint256 minAmountLD; // Minimum amount to send in local decimals.\\n    bytes extraOptions; // Additional options supplied by the caller to be used in the LayerZero message.\\n    bytes composeMsg; // The composed message for the send() operation.\\n    bytes oftCmd; // The OFT command to be executed, unused in default OFT implementations.\\n}\\n\\n/**\\n * @dev Struct representing OFT limit information.\\n * @dev These amounts can change dynamically and are up the specific oft implementation.\\n */\\nstruct OFTLimit {\\n    uint256 minAmountLD; // Minimum amount in local decimals that can be sent to the recipient.\\n    uint256 maxAmountLD; // Maximum amount in local decimals that can be sent to the recipient.\\n}\\n\\n/**\\n * @dev Struct representing OFT receipt information.\\n */\\nstruct OFTReceipt {\\n    uint256 amountSentLD; // Amount of tokens ACTUALLY debited from the sender in local decimals.\\n    // @dev In non-default implementations, the amountReceivedLD COULD differ from this value.\\n    uint256 amountReceivedLD; // Amount of tokens to be received on the remote side.\\n}\\n\\n/**\\n * @dev Struct representing OFT fee details.\\n * @dev Future proof mechanism to provide a standardized way to communicate fees to things like a UI.\\n */\\nstruct OFTFeeDetail {\\n    int256 feeAmountLD; // Amount of the fee in local decimals.\\n    string description; // Description of the fee.\\n}\\n\\n/**\\n * @title IOFT\\n * @dev Interface for the OftChain (OFT) token.\\n * @dev Does not inherit ERC20 to accommodate usage by OFTAdapter as well.\\n * @dev This specific interface ID is '0x02e49c2c'.\\n */\\ninterface IOFT {\\n    // Custom error messages\\n    error InvalidLocalDecimals();\\n    error SlippageExceeded(uint256 amountLD, uint256 minAmountLD);\\n\\n    // Events\\n    event OFTSent(\\n        bytes32 indexed guid, // GUID of the OFT message.\\n        uint32 dstEid, // Destination Endpoint ID.\\n        address indexed fromAddress, // Address of the sender on the src chain.\\n        uint256 amountSentLD, // Amount of tokens sent in local decimals.\\n        uint256 amountReceivedLD // Amount of tokens received in local decimals.\\n    );\\n    event OFTReceived(\\n        bytes32 indexed guid, // GUID of the OFT message.\\n        uint32 srcEid, // Source Endpoint ID.\\n        address indexed toAddress, // Address of the recipient on the dst chain.\\n        uint256 amountReceivedLD // Amount of tokens received in local decimals.\\n    );\\n\\n    /**\\n     * @notice Retrieves interfaceID and the version of the OFT.\\n     * @return interfaceId The interface ID.\\n     * @return version The version.\\n     *\\n     * @dev interfaceId: This specific interface ID is '0x02e49c2c'.\\n     * @dev version: Indicates a cross-chain compatible msg encoding with other OFTs.\\n     * @dev If a new feature is added to the OFT cross-chain msg encoding, the version will be incremented.\\n     * ie. localOFT version(x,1) CAN send messages to remoteOFT version(x,1)\\n     */\\n    function oftVersion() external view returns (bytes4 interfaceId, uint64 version);\\n\\n    /**\\n     * @notice Retrieves the address of the token associated with the OFT.\\n     * @return token The address of the ERC20 token implementation.\\n     */\\n    function token() external view returns (address);\\n\\n    /**\\n     * @notice Indicates whether the OFT contract requires approval of the 'token()' to send.\\n     * @return requiresApproval Needs approval of the underlying token implementation.\\n     *\\n     * @dev Allows things like wallet implementers to determine integration requirements,\\n     * without understanding the underlying token implementation.\\n     */\\n    function approvalRequired() external view returns (bool);\\n\\n    /**\\n     * @notice Retrieves the shared decimals of the OFT.\\n     * @return sharedDecimals The shared decimals of the OFT.\\n     */\\n    function sharedDecimals() external view returns (uint8);\\n\\n    /**\\n     * @notice Provides the fee breakdown and settings data for an OFT. Unused in the default implementation.\\n     * @param _sendParam The parameters for the send operation.\\n     * @return limit The OFT limit information.\\n     * @return oftFeeDetails The details of OFT fees.\\n     * @return receipt The OFT receipt information.\\n     */\\n    function quoteOFT(\\n        SendParam calldata _sendParam\\n    ) external view returns (OFTLimit memory, OFTFeeDetail[] memory oftFeeDetails, OFTReceipt memory);\\n\\n    /**\\n     * @notice Provides a quote for the send() operation.\\n     * @param _sendParam The parameters for the send() operation.\\n     * @param _payInLzToken Flag indicating whether the caller is paying in the LZ token.\\n     * @return fee The calculated LayerZero messaging fee from the send() operation.\\n     *\\n     * @dev MessagingFee: LayerZero msg fee\\n     *  - nativeFee: The native fee.\\n     *  - lzTokenFee: The lzToken fee.\\n     */\\n    function quoteSend(SendParam calldata _sendParam, bool _payInLzToken) external view returns (MessagingFee memory);\\n\\n    /**\\n     * @notice Executes the send() operation.\\n     * @param _sendParam The parameters for the send operation.\\n     * @param _fee The fee information supplied by the caller.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess funds from fees etc. on the src.\\n     * @return receipt The LayerZero messaging receipt from the send() operation.\\n     * @return oftReceipt The OFT receipt information.\\n     *\\n     * @dev MessagingReceipt: LayerZero msg receipt\\n     *  - guid: The unique identifier for the sent message.\\n     *  - nonce: The nonce of the sent message.\\n     *  - fee: The LayerZero fee incurred for the message.\\n     */\\n    function send(\\n        SendParam calldata _sendParam,\\n        MessagingFee calldata _fee,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory, OFTReceipt memory);\\n}\\n\",\"keccak256\":\"0x7ba6bb62fba7ee83451cfb0e727ddeef0e96b4388bd4e9ff0fc6ce103e1101c8\",\"license\":\"MIT\"},\"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nlibrary OFTComposeMsgCodec {\\n    // Offset constants for decoding composed messages\\n    uint8 private constant NONCE_OFFSET = 8;\\n    uint8 private constant SRC_EID_OFFSET = 12;\\n    uint8 private constant AMOUNT_LD_OFFSET = 44;\\n    uint8 private constant COMPOSE_FROM_OFFSET = 76;\\n\\n    /**\\n     * @dev Encodes a OFT composed message.\\n     * @param _nonce The nonce value.\\n     * @param _srcEid The source endpoint ID.\\n     * @param _amountLD The amount in local decimals.\\n     * @param _composeMsg The composed message.\\n     * @return _msg The encoded Composed message.\\n     */\\n    function encode(\\n        uint64 _nonce,\\n        uint32 _srcEid,\\n        uint256 _amountLD,\\n        bytes memory _composeMsg // 0x[composeFrom][composeMsg]\\n    ) internal pure returns (bytes memory _msg) {\\n        _msg = abi.encodePacked(_nonce, _srcEid, _amountLD, _composeMsg);\\n    }\\n\\n    /**\\n     * @dev Retrieves the nonce for the composed message.\\n     * @param _msg The message.\\n     * @return The nonce value.\\n     */\\n    function nonce(bytes calldata _msg) internal pure returns (uint64) {\\n        return uint64(bytes8(_msg[:NONCE_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the source endpoint ID for the composed message.\\n     * @param _msg The message.\\n     * @return The source endpoint ID.\\n     */\\n    function srcEid(bytes calldata _msg) internal pure returns (uint32) {\\n        return uint32(bytes4(_msg[NONCE_OFFSET:SRC_EID_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the amount in local decimals from the composed message.\\n     * @param _msg The message.\\n     * @return The amount in local decimals.\\n     */\\n    function amountLD(bytes calldata _msg) internal pure returns (uint256) {\\n        return uint256(bytes32(_msg[SRC_EID_OFFSET:AMOUNT_LD_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the composeFrom value from the composed message.\\n     * @param _msg The message.\\n     * @return The composeFrom value.\\n     */\\n    function composeFrom(bytes calldata _msg) internal pure returns (bytes32) {\\n        return bytes32(_msg[AMOUNT_LD_OFFSET:COMPOSE_FROM_OFFSET]);\\n    }\\n\\n    /**\\n     * @dev Retrieves the composed message.\\n     * @param _msg The message.\\n     * @return The composed message.\\n     */\\n    function composeMsg(bytes calldata _msg) internal pure returns (bytes memory) {\\n        return _msg[COMPOSE_FROM_OFFSET:];\\n    }\\n\\n    /**\\n     * @dev Converts an address to bytes32.\\n     * @param _addr The address to convert.\\n     * @return The bytes32 representation of the address.\\n     */\\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\\n        return bytes32(uint256(uint160(_addr)));\\n    }\\n\\n    /**\\n     * @dev Converts bytes32 to an address.\\n     * @param _b The bytes32 value to convert.\\n     * @return The address representation of bytes32.\\n     */\\n    function bytes32ToAddress(bytes32 _b) internal pure returns (address) {\\n        return address(uint160(uint256(_b)));\\n    }\\n}\\n\",\"keccak256\":\"0xaae73d6eb8b9561c43f1802f3c416c00ccd35f172b711f9781ccdf1b25a40db5\",\"license\":\"MIT\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport { IOFT } from \\\"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol\\\";\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport { HyperLiquidComposerCodec } from \\\"./library/HyperLiquidComposerCodec.sol\\\";\\nimport { IHyperLiquidComposer } from \\\"./interfaces/IHyperLiquidComposer.sol\\\";\\nimport { IHyperliquidWritePrecompile } from \\\"./interfaces/IHyperliquidWritePrecompile.sol\\\";\\n\\ncontract HyperCoreAdapter is IHyperLiquidComposer {\\n    address public immutable OFT_TOKEN_ASSET_BRIDGE_ADDRESS;\\n    uint64 public immutable OFT_TOKEN_CORE_INDEX_ID;\\n\\n    address public constant L1WritePrecompileAddress = 0x3333333333333333333333333333333333333333;\\n    address payable public constant HYPE_ASSET_BRIDGE_ADDRESS = payable(0x2222222222222222222222222222222222222222);\\n    uint64 public constant HYPER_CORE_INDEX_ID = 1105;\\n    uint256 public constant HYPER_CORE_INDEX_ID_DECIMAL_DIFF = 18 - 8;\\n\\n    address public immutable endpoint;\\n    IOFT public immutable oft;\\n    IERC20 public immutable token;\\n    uint256 public immutable weiDiff;\\n    /// @notice Constructor for the HyperLiquidLZComposer contract\\n    ///\\n    /// @dev This constructor is called by the `HyperLiquidOFT` contract\\n    /// @dev Post deployment, this address needs to be approved (via approveCaller) by the `owner` of the `HyperLiquidOFT` contract to call the `transferToHyperLiquidL1` function\\n    ///\\n    /// @param _endpoint The LayerZero endpoint address\\n    /// @param _oft The OFT contract address associated with this composer\\n    constructor(address _endpoint, address _oft, uint64 _coreIndexId, uint256 _weiDiff) {\\n        // Validate that the OFT contract implements the `IHyperLiquidERC20Extended` interface\\n        // This is to ensure that the OFT contract has the `transferToHyperLiquidL1` function\\n        oft = IOFT(_oft);\\n        token = IERC20(oft.token());\\n\\n        endpoint = _endpoint;\\n\\n        /// @dev Hyperliquid L1 contract address is the prefix + the core index id\\n        /// @dev This is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1\\n        /// @dev https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addresses\\n        /// @dev It is formed by 0x2000...0000 + the core index id\\n        OFT_TOKEN_ASSET_BRIDGE_ADDRESS = HyperLiquidComposerCodec.into_assetBridgeAddress(_coreIndexId);\\n        OFT_TOKEN_CORE_INDEX_ID = _coreIndexId;\\n        weiDiff = _weiDiff;\\n    }\\n\\n    /// @notice Composes a message to be sent to the HyperLiquidLZComposer\\n    /// @notice This function is the only new addition to the OFT standard\\n    ///\\n    /// @dev This function is called by the OFTCore contract when a message is sent\\n    ///\\n    /// @param _oft The address of the OFT contract.\\n    /// @param _message The encoded message content, expected to be of type: (address receiver).\\n    function lzCompose(\\n        address _oft,\\n        bytes32 /*_guid*/,\\n        bytes calldata _message,\\n        address /*_executor*/,\\n        bytes calldata /*_extraData*/\\n    ) external payable virtual override {\\n        // Validate the composeCall based on the docs - https://docs.layerzero.network/v2/developers/evm/oft/oft-patterns-extensions#receiving-compose\\n        if (msg.sender != address(endpoint)) {\\n            revert HyperLiquidComposer_InvalidCall_NotEndpoint(msg.sender);\\n        }\\n\\n        if (address(oft) != _oft) {\\n            revert HyperLiquidComposer_InvalidCall_NotOFT(address(oft), _oft);\\n        }\\n\\n        // Validate the message and decode it -\\n        // The message is expected to be of type: (address receiver)\\n        // The bytes object should be encoded as an abi.encodePacked() of the receiver address\\n        // This is found as SendParam.composeMsg that the OFTCore contract populates on the send() call\\n        (address _receiver, uint256 _amountLD) = HyperLiquidComposerCodec.validateAndDecodeMessage(_message);\\n\\n        // If the message is being sent with a value, we need to fund the address on HyperCore\\n        // This is because the HyperCore contract is deployed with a zero balance\\n        if (msg.value > 0) {\\n            _fundAddressOnHyperCore(_receiver, msg.value);\\n        }\\n\\n        // Transfer the tokens to the HyperLiquid L1 contract\\n        // This creates the Transfer event that HyperLiquid L1 listens for\\n        // IERC20.Transfer(_receiver, 0x2222222222222222222222222222222222222222, _amountLD)\\n        _sendAssetToHyperCore(_receiver, _amountLD);\\n    }\\n\\n    function _sendAssetToHyperCore(address receiever, uint256 amount) internal virtual {\\n        token.transfer(OFT_TOKEN_ASSET_BRIDGE_ADDRESS, amount);\\n        IHyperliquidWritePrecompile(L1WritePrecompileAddress).sendSpot(\\n            receiever,\\n            OFT_TOKEN_CORE_INDEX_ID,\\n            uint64(amount / 10 ** weiDiff)\\n        );\\n    }\\n\\n    function _fundAddressOnHyperCore(address receiever, uint256 amount) internal virtual {\\n        (bool sent, ) = HYPE_ASSET_BRIDGE_ADDRESS.call{ value: amount }(\\\"\\\");\\n        require(sent, \\\"Failed to send HYPE to HyperCore\\\");\\n\\n        IHyperliquidWritePrecompile(L1WritePrecompileAddress).sendSpot(\\n            receiever,\\n            HYPER_CORE_INDEX_ID,\\n            uint64(amount / 10 ** HYPER_CORE_INDEX_ID_DECIMAL_DIFF)\\n        );\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x7428b911c93f0b26405050aa6835966b8753b34407a541e30721aff19eb92c72\",\"license\":\"UNLICENSED\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperLiquidComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IOAppComposer } from \\\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\\\";\\n\\ninterface IHyperLiquidComposer is IOAppComposer {\\n    error HyperLiquidComposer_InvalidCall_NotEndpoint(address _notEndpointAddress);\\n    error HyperLiquidComposer_InvalidCall_NotOFT(address _internalOFTAddress, address _receivedOFTAddress);\\n    error HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension(address _oft, address _token);\\n\\n    function OFT_TOKEN_ASSET_BRIDGE_ADDRESS() external view returns (address);\\n    function OFT_TOKEN_CORE_INDEX_ID() external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x05e81b73564bcb006142ae9bb1f0d56fcdb46f87b23cb54cee5cc7561fb4aff4\",\"license\":\"MIT\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IHyperliquidWritePrecompile {\\n    event IocOrder(address indexed user, uint32 asset, bool isBuy, uint64 limitPx, uint64 sz);\\n    event VaultTransfer(address indexed user, address indexed vault, bool isDeposit, uint64 usd);\\n    event TokenDelegate(address indexed user, address indexed validator, uint64 _wei, bool isUndelegate);\\n    event CDeposit(address indexed user, uint64 _wei);\\n    event CWithdrawal(address indexed user, uint64 _wei);\\n    event SpotSend(address indexed user, address indexed destination, uint64 token, uint64 _wei);\\n    event UsdClassTransfer(address indexed user, uint64 ntl, bool toPerp);\\n\\n    function sendIocOrder(uint32 asset, bool isBuy, uint64 limitPx, uint64 sz) external;\\n\\n    function sendVaultTransfer(address vault, bool isDeposit, uint64 usd) external;\\n\\n    function sendTokenDelegate(address validator, uint64 _wei, bool isUndelegate) external;\\n\\n    function sendCDeposit(uint64 _wei) external;\\n\\n    function sendCWithdrawal(uint64 _wei) external;\\n\\n    function sendSpot(address destination, uint64 token, uint64 _wei) external;\\n\\n    function sendUsdClassTransfer(uint64 ntl, bool toPerp) external;\\n}\\n\",\"keccak256\":\"0x8b59963667fc84a937495215a81d66fc69d044ed882df333f303cd1af36c781f\",\"license\":\"MIT\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { OFTComposeMsgCodec } from \\\"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\\\";\\n\\nlibrary HyperLiquidComposerCodec {\\n    /// @dev The length of the message that is valid for the HyperLiquidComposer\\n    /// @dev This is 20 bytes because addresses are 20 bytes\\n    /// @dev We are in encodePacked mode, if we are in encode mode, the length is 42 bytes\\n    uint256 public constant VALID_COMPOSE_MESSAGE_LENGTH_PACKED = 20;\\n\\n    /// @dev The base asset bridge address is the address of the HyperLiquid L1 contract\\n    /// @dev This is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1\\n    /// @dev https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addresses\\n    /// @dev It is formed by 0x2000...0000 + the core index id\\n    address public constant BASE_ASSET_BRIDGE_ADDRESS = 0x2000000000000000000000000000000000000000;\\n    uint256 public constant BASE_ASSET_BRIDGE_ADDRESS_UINT256 = uint256(uint160(BASE_ASSET_BRIDGE_ADDRESS));\\n\\n    error HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength(bytes message, uint256 length);\\n\\n    function validateAndDecodeMessage(\\n        bytes calldata _composeMessage\\n    ) internal pure returns (address _receiver, uint256 _amountLD) {\\n        bytes memory message = OFTComposeMsgCodec.composeMsg(_composeMessage);\\n\\n        // Addresses in EVM are 20 bytes\\n        // So if the message's length is not 20 bytes, we can pre-emptively revert\\n        if (message.length != VALID_COMPOSE_MESSAGE_LENGTH_PACKED) {\\n            revert HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength(message, message.length);\\n        }\\n\\n        // Since we are encodePacked, we can just decode the first 20 bytes as an address\\n        _receiver = address(bytes20(message));\\n        _amountLD = OFTComposeMsgCodec.amountLD(_composeMessage);\\n    }\\n\\n    function into_assetBridgeAddress(uint256 _coreIndexId) internal pure returns (address) {\\n        return address(uint160(BASE_ASSET_BRIDGE_ADDRESS_UINT256 + _coreIndexId));\\n    }\\n\\n    function into_tokenId(address _assetBridgeAddress) internal pure returns (uint256) {\\n        return uint256(uint160(_assetBridgeAddress)) - BASE_ASSET_BRIDGE_ADDRESS_UINT256;\\n    }\\n}\\n\\n/*\\n0x000000000000000000000000acc732e49f38002af5f29e9f042494e5352073500000000000000001000000000000000000000000a3824bffc05178b1ed611117e5b900adcb189b94000000000000000000009ca6000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000acc732e49f38002af5f29e9f042494e535207350acc732e49f38002af5f29e9f042494e535207350\\n\\n0x09b34731000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000060000000000000000000009ca6000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000acc732e49f38002af5f29e9f042494e535207350acc732e49f38002af5f29e9f042494e535207350\\n\\n\\n\\n\\n\\n*/\",\"keccak256\":\"0x20e64cf6c616e309034bd740dc13246e2dc0c7765e5dfe3fe9b28b42460e52d0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/MyHyperCoreAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.22;\\n\\nimport { HyperCoreAdapter } from \\\"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol\\\";\\n\\ncontract MyHyperCoreAdapter is HyperCoreAdapter {\\n    constructor(\\n        address _lzEndpoint,\\n        address _oft,\\n        uint64 _hlIndexId,\\n        uint256 _weiDiff\\n    ) HyperCoreAdapter(_lzEndpoint, _oft, _hlIndexId, _weiDiff) {}\\n\\n    function sendAssetToHyperCore(address receiever, uint256 amount) public {\\n        _sendAssetToHyperCore(receiever, amount);\\n    }\\n\\n    function fundAddressOnHyperCore(address receiever, uint256 amount) public {\\n        _fundAddressOnHyperCore(receiever, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x34fd31770eb6cb76d154d28dee4f4e00014e0f9893cd9093e5d1ab728ce8fae8\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"lzCompose(address,bytes32,bytes,address,bytes)":{"notice":"Composes a message to be sent to the HyperLiquidLZComposerThis function is the only new addition to the OFT standard"}},"version":1}}},"contracts/WrappedHyperCoreAdapter.sol":{"WrappedHyperCoreAdapter":{"abi":[{"inputs":[{"internalType":"address","name":"_lzEndpoint","type":"address"},{"internalType":"address","name":"_oft","type":"address"},{"internalType":"uint64","name":"_hlIndexId","type":"uint64"},{"internalType":"uint256","name":"_weiDiff","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength","type":"error"},{"inputs":[{"internalType":"address","name":"_notEndpointAddress","type":"address"}],"name":"HyperLiquidComposer_InvalidCall_NotEndpoint","type":"error"},{"inputs":[{"internalType":"address","name":"_internalOFTAddress","type":"address"},{"internalType":"address","name":"_receivedOFTAddress","type":"address"}],"name":"HyperLiquidComposer_InvalidCall_NotOFT","type":"error"},{"inputs":[{"internalType":"address","name":"_oft","type":"address"},{"internalType":"address","name":"_token","type":"address"}],"name":"HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension","type":"error"},{"inputs":[],"name":"HYPER_CORE_INDEX_ID","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HYPER_CORE_INDEX_ID_DECIMAL_DIFF","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HYPE_ASSET_BRIDGE_ADDRESS","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"L1WritePrecompileAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OFT_TOKEN_ASSET_BRIDGE_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OFT_TOKEN_CORE_INDEX_ID","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiever","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"fundAddressOnHyperCore","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"lzCompose","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"oft","outputs":[{"internalType":"contract IOFT","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiever","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"sendAssetToHyperCore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"weiDiff","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"lzCompose(address,bytes32,bytes,address,bytes)":{"details":"This function is called by the OFTCore contract when a message is sent","params":{"_message":"The encoded message content, expected to be of type: (address receiver)."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1493":{"entryPoint":null,"id":1493,"parameterSlots":4,"returnSlots":0},"@_3031":{"entryPoint":null,"id":3031,"parameterSlots":4,"returnSlots":0},"@into_assetBridgeAddress_1883":{"entryPoint":260,"id":1883,"parameterSlots":1,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":282,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":400,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint64t_uint256_fromMemory":{"entryPoint":310,"id":null,"parameterSlots":2,"returnSlots":4},"checked_add_t_uint256":{"entryPoint":434,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:1158:28","nodeType":"YulBlock","src":"0:1158:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"74:117:28","nodeType":"YulBlock","src":"74:117:28","statements":[{"nativeSrc":"84:22:28","nodeType":"YulAssignment","src":"84:22:28","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:28","nodeType":"YulIdentifier","src":"99:6:28"}],"functionName":{"name":"mload","nativeSrc":"93:5:28","nodeType":"YulIdentifier","src":"93:5:28"},"nativeSrc":"93:13:28","nodeType":"YulFunctionCall","src":"93:13:28"},"variableNames":[{"name":"value","nativeSrc":"84:5:28","nodeType":"YulIdentifier","src":"84:5:28"}]},{"body":{"nativeSrc":"169:16:28","nodeType":"YulBlock","src":"169:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:28","nodeType":"YulLiteral","src":"178:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:28","nodeType":"YulLiteral","src":"181:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:28","nodeType":"YulIdentifier","src":"171:6:28"},"nativeSrc":"171:12:28","nodeType":"YulFunctionCall","src":"171:12:28"},"nativeSrc":"171:12:28","nodeType":"YulExpressionStatement","src":"171:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:28","nodeType":"YulIdentifier","src":"128:5:28"},{"arguments":[{"name":"value","nativeSrc":"139:5:28","nodeType":"YulIdentifier","src":"139:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:28","nodeType":"YulLiteral","src":"154:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:28","nodeType":"YulLiteral","src":"159:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:28","nodeType":"YulIdentifier","src":"150:3:28"},"nativeSrc":"150:11:28","nodeType":"YulFunctionCall","src":"150:11:28"},{"kind":"number","nativeSrc":"163:1:28","nodeType":"YulLiteral","src":"163:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:28","nodeType":"YulIdentifier","src":"146:3:28"},"nativeSrc":"146:19:28","nodeType":"YulFunctionCall","src":"146:19:28"}],"functionName":{"name":"and","nativeSrc":"135:3:28","nodeType":"YulIdentifier","src":"135:3:28"},"nativeSrc":"135:31:28","nodeType":"YulFunctionCall","src":"135:31:28"}],"functionName":{"name":"eq","nativeSrc":"125:2:28","nodeType":"YulIdentifier","src":"125:2:28"},"nativeSrc":"125:42:28","nodeType":"YulFunctionCall","src":"125:42:28"}],"functionName":{"name":"iszero","nativeSrc":"118:6:28","nodeType":"YulIdentifier","src":"118:6:28"},"nativeSrc":"118:50:28","nodeType":"YulFunctionCall","src":"118:50:28"},"nativeSrc":"115:70:28","nodeType":"YulIf","src":"115:70:28"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:28","nodeType":"YulTypedName","src":"53:6:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:28","nodeType":"YulTypedName","src":"64:5:28","type":""}],"src":"14:177:28"},{"body":{"nativeSrc":"327:389:28","nodeType":"YulBlock","src":"327:389:28","statements":[{"body":{"nativeSrc":"374:16:28","nodeType":"YulBlock","src":"374:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"383:1:28","nodeType":"YulLiteral","src":"383:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"386:1:28","nodeType":"YulLiteral","src":"386:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"376:6:28","nodeType":"YulIdentifier","src":"376:6:28"},"nativeSrc":"376:12:28","nodeType":"YulFunctionCall","src":"376:12:28"},"nativeSrc":"376:12:28","nodeType":"YulExpressionStatement","src":"376:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"348:7:28","nodeType":"YulIdentifier","src":"348:7:28"},{"name":"headStart","nativeSrc":"357:9:28","nodeType":"YulIdentifier","src":"357:9:28"}],"functionName":{"name":"sub","nativeSrc":"344:3:28","nodeType":"YulIdentifier","src":"344:3:28"},"nativeSrc":"344:23:28","nodeType":"YulFunctionCall","src":"344:23:28"},{"kind":"number","nativeSrc":"369:3:28","nodeType":"YulLiteral","src":"369:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"340:3:28","nodeType":"YulIdentifier","src":"340:3:28"},"nativeSrc":"340:33:28","nodeType":"YulFunctionCall","src":"340:33:28"},"nativeSrc":"337:53:28","nodeType":"YulIf","src":"337:53:28"},{"nativeSrc":"399:50:28","nodeType":"YulAssignment","src":"399:50:28","value":{"arguments":[{"name":"headStart","nativeSrc":"439:9:28","nodeType":"YulIdentifier","src":"439:9:28"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"409:29:28","nodeType":"YulIdentifier","src":"409:29:28"},"nativeSrc":"409:40:28","nodeType":"YulFunctionCall","src":"409:40:28"},"variableNames":[{"name":"value0","nativeSrc":"399:6:28","nodeType":"YulIdentifier","src":"399:6:28"}]},{"nativeSrc":"458:59:28","nodeType":"YulAssignment","src":"458:59:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"502:9:28","nodeType":"YulIdentifier","src":"502:9:28"},{"kind":"number","nativeSrc":"513:2:28","nodeType":"YulLiteral","src":"513:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"498:3:28","nodeType":"YulIdentifier","src":"498:3:28"},"nativeSrc":"498:18:28","nodeType":"YulFunctionCall","src":"498:18:28"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"468:29:28","nodeType":"YulIdentifier","src":"468:29:28"},"nativeSrc":"468:49:28","nodeType":"YulFunctionCall","src":"468:49:28"},"variableNames":[{"name":"value1","nativeSrc":"458:6:28","nodeType":"YulIdentifier","src":"458:6:28"}]},{"nativeSrc":"526:38:28","nodeType":"YulVariableDeclaration","src":"526:38:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"549:9:28","nodeType":"YulIdentifier","src":"549:9:28"},{"kind":"number","nativeSrc":"560:2:28","nodeType":"YulLiteral","src":"560:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"545:3:28","nodeType":"YulIdentifier","src":"545:3:28"},"nativeSrc":"545:18:28","nodeType":"YulFunctionCall","src":"545:18:28"}],"functionName":{"name":"mload","nativeSrc":"539:5:28","nodeType":"YulIdentifier","src":"539:5:28"},"nativeSrc":"539:25:28","nodeType":"YulFunctionCall","src":"539:25:28"},"variables":[{"name":"value","nativeSrc":"530:5:28","nodeType":"YulTypedName","src":"530:5:28","type":""}]},{"body":{"nativeSrc":"626:16:28","nodeType":"YulBlock","src":"626:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"635:1:28","nodeType":"YulLiteral","src":"635:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"638:1:28","nodeType":"YulLiteral","src":"638:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"628:6:28","nodeType":"YulIdentifier","src":"628:6:28"},"nativeSrc":"628:12:28","nodeType":"YulFunctionCall","src":"628:12:28"},"nativeSrc":"628:12:28","nodeType":"YulExpressionStatement","src":"628:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"586:5:28","nodeType":"YulIdentifier","src":"586:5:28"},{"arguments":[{"name":"value","nativeSrc":"597:5:28","nodeType":"YulIdentifier","src":"597:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"612:2:28","nodeType":"YulLiteral","src":"612:2:28","type":"","value":"64"},{"kind":"number","nativeSrc":"616:1:28","nodeType":"YulLiteral","src":"616:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"608:3:28","nodeType":"YulIdentifier","src":"608:3:28"},"nativeSrc":"608:10:28","nodeType":"YulFunctionCall","src":"608:10:28"},{"kind":"number","nativeSrc":"620:1:28","nodeType":"YulLiteral","src":"620:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"604:3:28","nodeType":"YulIdentifier","src":"604:3:28"},"nativeSrc":"604:18:28","nodeType":"YulFunctionCall","src":"604:18:28"}],"functionName":{"name":"and","nativeSrc":"593:3:28","nodeType":"YulIdentifier","src":"593:3:28"},"nativeSrc":"593:30:28","nodeType":"YulFunctionCall","src":"593:30:28"}],"functionName":{"name":"eq","nativeSrc":"583:2:28","nodeType":"YulIdentifier","src":"583:2:28"},"nativeSrc":"583:41:28","nodeType":"YulFunctionCall","src":"583:41:28"}],"functionName":{"name":"iszero","nativeSrc":"576:6:28","nodeType":"YulIdentifier","src":"576:6:28"},"nativeSrc":"576:49:28","nodeType":"YulFunctionCall","src":"576:49:28"},"nativeSrc":"573:69:28","nodeType":"YulIf","src":"573:69:28"},{"nativeSrc":"651:15:28","nodeType":"YulAssignment","src":"651:15:28","value":{"name":"value","nativeSrc":"661:5:28","nodeType":"YulIdentifier","src":"661:5:28"},"variableNames":[{"name":"value2","nativeSrc":"651:6:28","nodeType":"YulIdentifier","src":"651:6:28"}]},{"nativeSrc":"675:35:28","nodeType":"YulAssignment","src":"675:35:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"695:9:28","nodeType":"YulIdentifier","src":"695:9:28"},{"kind":"number","nativeSrc":"706:2:28","nodeType":"YulLiteral","src":"706:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"691:3:28","nodeType":"YulIdentifier","src":"691:3:28"},"nativeSrc":"691:18:28","nodeType":"YulFunctionCall","src":"691:18:28"}],"functionName":{"name":"mload","nativeSrc":"685:5:28","nodeType":"YulIdentifier","src":"685:5:28"},"nativeSrc":"685:25:28","nodeType":"YulFunctionCall","src":"685:25:28"},"variableNames":[{"name":"value3","nativeSrc":"675:6:28","nodeType":"YulIdentifier","src":"675:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint64t_uint256_fromMemory","nativeSrc":"196:520:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"269:9:28","nodeType":"YulTypedName","src":"269:9:28","type":""},{"name":"dataEnd","nativeSrc":"280:7:28","nodeType":"YulTypedName","src":"280:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"292:6:28","nodeType":"YulTypedName","src":"292:6:28","type":""},{"name":"value1","nativeSrc":"300:6:28","nodeType":"YulTypedName","src":"300:6:28","type":""},{"name":"value2","nativeSrc":"308:6:28","nodeType":"YulTypedName","src":"308:6:28","type":""},{"name":"value3","nativeSrc":"316:6:28","nodeType":"YulTypedName","src":"316:6:28","type":""}],"src":"196:520:28"},{"body":{"nativeSrc":"802:127:28","nodeType":"YulBlock","src":"802:127:28","statements":[{"body":{"nativeSrc":"848:16:28","nodeType":"YulBlock","src":"848:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"857:1:28","nodeType":"YulLiteral","src":"857:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"860:1:28","nodeType":"YulLiteral","src":"860:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"850:6:28","nodeType":"YulIdentifier","src":"850:6:28"},"nativeSrc":"850:12:28","nodeType":"YulFunctionCall","src":"850:12:28"},"nativeSrc":"850:12:28","nodeType":"YulExpressionStatement","src":"850:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"823:7:28","nodeType":"YulIdentifier","src":"823:7:28"},{"name":"headStart","nativeSrc":"832:9:28","nodeType":"YulIdentifier","src":"832:9:28"}],"functionName":{"name":"sub","nativeSrc":"819:3:28","nodeType":"YulIdentifier","src":"819:3:28"},"nativeSrc":"819:23:28","nodeType":"YulFunctionCall","src":"819:23:28"},{"kind":"number","nativeSrc":"844:2:28","nodeType":"YulLiteral","src":"844:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"815:3:28","nodeType":"YulIdentifier","src":"815:3:28"},"nativeSrc":"815:32:28","nodeType":"YulFunctionCall","src":"815:32:28"},"nativeSrc":"812:52:28","nodeType":"YulIf","src":"812:52:28"},{"nativeSrc":"873:50:28","nodeType":"YulAssignment","src":"873:50:28","value":{"arguments":[{"name":"headStart","nativeSrc":"913:9:28","nodeType":"YulIdentifier","src":"913:9:28"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"883:29:28","nodeType":"YulIdentifier","src":"883:29:28"},"nativeSrc":"883:40:28","nodeType":"YulFunctionCall","src":"883:40:28"},"variableNames":[{"name":"value0","nativeSrc":"873:6:28","nodeType":"YulIdentifier","src":"873:6:28"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"721:208:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"768:9:28","nodeType":"YulTypedName","src":"768:9:28","type":""},{"name":"dataEnd","nativeSrc":"779:7:28","nodeType":"YulTypedName","src":"779:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"791:6:28","nodeType":"YulTypedName","src":"791:6:28","type":""}],"src":"721:208:28"},{"body":{"nativeSrc":"982:174:28","nodeType":"YulBlock","src":"982:174:28","statements":[{"nativeSrc":"992:16:28","nodeType":"YulAssignment","src":"992:16:28","value":{"arguments":[{"name":"x","nativeSrc":"1003:1:28","nodeType":"YulIdentifier","src":"1003:1:28"},{"name":"y","nativeSrc":"1006:1:28","nodeType":"YulIdentifier","src":"1006:1:28"}],"functionName":{"name":"add","nativeSrc":"999:3:28","nodeType":"YulIdentifier","src":"999:3:28"},"nativeSrc":"999:9:28","nodeType":"YulFunctionCall","src":"999:9:28"},"variableNames":[{"name":"sum","nativeSrc":"992:3:28","nodeType":"YulIdentifier","src":"992:3:28"}]},{"body":{"nativeSrc":"1039:111:28","nodeType":"YulBlock","src":"1039:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1060:1:28","nodeType":"YulLiteral","src":"1060:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1067:3:28","nodeType":"YulLiteral","src":"1067:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"1072:10:28","nodeType":"YulLiteral","src":"1072:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1063:3:28","nodeType":"YulIdentifier","src":"1063:3:28"},"nativeSrc":"1063:20:28","nodeType":"YulFunctionCall","src":"1063:20:28"}],"functionName":{"name":"mstore","nativeSrc":"1053:6:28","nodeType":"YulIdentifier","src":"1053:6:28"},"nativeSrc":"1053:31:28","nodeType":"YulFunctionCall","src":"1053:31:28"},"nativeSrc":"1053:31:28","nodeType":"YulExpressionStatement","src":"1053:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1104:1:28","nodeType":"YulLiteral","src":"1104:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"1107:4:28","nodeType":"YulLiteral","src":"1107:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"1097:6:28","nodeType":"YulIdentifier","src":"1097:6:28"},"nativeSrc":"1097:15:28","nodeType":"YulFunctionCall","src":"1097:15:28"},"nativeSrc":"1097:15:28","nodeType":"YulExpressionStatement","src":"1097:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1132:1:28","nodeType":"YulLiteral","src":"1132:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1135:4:28","nodeType":"YulLiteral","src":"1135:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1125:6:28","nodeType":"YulIdentifier","src":"1125:6:28"},"nativeSrc":"1125:15:28","nodeType":"YulFunctionCall","src":"1125:15:28"},"nativeSrc":"1125:15:28","nodeType":"YulExpressionStatement","src":"1125:15:28"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"1023:1:28","nodeType":"YulIdentifier","src":"1023:1:28"},{"name":"sum","nativeSrc":"1026:3:28","nodeType":"YulIdentifier","src":"1026:3:28"}],"functionName":{"name":"gt","nativeSrc":"1020:2:28","nodeType":"YulIdentifier","src":"1020:2:28"},"nativeSrc":"1020:10:28","nodeType":"YulFunctionCall","src":"1020:10:28"},"nativeSrc":"1017:133:28","nodeType":"YulIf","src":"1017:133:28"}]},"name":"checked_add_t_uint256","nativeSrc":"934:222:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"965:1:28","nodeType":"YulTypedName","src":"965:1:28","type":""},{"name":"y","nativeSrc":"968:1:28","nodeType":"YulTypedName","src":"968:1:28","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"974:3:28","nodeType":"YulTypedName","src":"974:3:28","type":""}],"src":"934:222:28"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint64t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n        value2 := value\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61014060405234801561001157600080fd5b5060405162000d2f38038062000d2f83398101604081905261003291610136565b83838383826001600160a01b031660e0816001600160a01b03168152505060e0516001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610090573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b49190610190565b6001600160a01b0390811661010052841660c0526100da6001600160401b038316610104565b6001600160a01b03166080526001600160401b0390911660a05261012052506101d3945050505050565b6000610114826001609d1b6101b2565b92915050565b80516001600160a01b038116811461013157600080fd5b919050565b6000806000806080858703121561014c57600080fd5b6101558561011a565b93506101636020860161011a565b60408601519093506001600160401b038116811461018057600080fd5b6060959095015193969295505050565b6000602082840312156101a257600080fd5b6101ab8261011a565b9392505050565b8082018082111561011457634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e0516101005161012051610ae9620002466000396000818161011801526106520152600081816102ef01526105a30152600061025e01526000818161019a015261032a01526000818161022a015261062e0152600081816101f601526105740152610ae96000f3fe6080604052600436106100c65760003560e01c80639a923b9a1161007f578063d0a1026011610059578063d0a1026014610295578063d9acf0ec146102a8578063dd4c07c8146102c8578063fc0c546a146102dd57600080fd5b80639a923b9a146102185780639b5215f61461024c578063b7c312e61461028057600080fd5b80630813f32f146100d2578063303f1e811461010657806355cd1378146101485780635e280f11146101885780636e3bf0ad146101bc57806384123305146101e457600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506100e861045181565b60405167ffffffffffffffff90911681526020015b60405180910390f35b34801561011257600080fd5b5061013a7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100fd565b34801561015457600080fd5b5061017073333333333333333333333333333333333333333381565b6040516001600160a01b0390911681526020016100fd565b34801561019457600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b3480156101c857600080fd5b5061017073222222222222222222222222222222222222222281565b3480156101f057600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b34801561022457600080fd5b506100e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561025857600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b61029361028e36600461077f565b610311565b005b6102936102a33660046107f2565b61031f565b3480156102b457600080fd5b506102936102c336600461077f565b6103a6565b3480156102d457600080fd5b5061013a600a81565b3480156102e957600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b61031b82826103b0565b5050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461036f5760405163eee35e6f60e01b81523360048201526024015b60405180910390fd5b60008061037c8787610504565b909250905034156103915761039182346103b0565b61039b828261055d565b505050505050505050565b61031b828261055d565b6040516000907322222222222222222222222222222222222222229083908381818185875af1925050503d8060008114610406576040519150601f19603f3d011682016040523d82523d6000602084013e61040b565b606091505b505090508061045c5760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e64204859504520746f204879706572436f72656044820152606401610366565b733333333333333333333333333333333333333333630b0ac0ab84610451610485600a8061098a565b61048f9087610996565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015267ffffffffffffffff9182166024840152166044820152606401600060405180830381600087803b1580156104e757600080fd5b505af11580156104fb573d6000803e3d6000fd5b50505050505050565b600080600061051385856106f6565b9050601481511461053b5780516040516309b3473160e01b81526103669183916004016109b8565b61054481610a0d565b60601c92506105538585610743565b9150509250929050565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106109190610a49565b50733333333333333333333333333333333333333333630b0ac0ab837f00000000000000000000000000000000000000000000000000000000000000006106787f0000000000000000000000000000000000000000000000000000000000000000600a61098a565b6106829086610996565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015267ffffffffffffffff9182166024840152166044820152606401600060405180830381600087803b1580156106da57600080fd5b505af11580156106ee573d6000803e3d6000fd5b505050505050565b606061070582604c8186610a6b565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b92915050565b6000610753602c600c8486610a6b565b61075c91610a95565b9392505050565b80356001600160a01b038116811461077a57600080fd5b919050565b6000806040838503121561079257600080fd5b61079b83610763565b946020939093013593505050565b60008083601f8401126107bb57600080fd5b50813567ffffffffffffffff8111156107d357600080fd5b6020830191508360208285010111156107eb57600080fd5b9250929050565b600080600080600080600060a0888a03121561080d57600080fd5b61081688610763565b965060208801359550604088013567ffffffffffffffff8082111561083a57600080fd5b6108468b838c016107a9565b909750955085915061085a60608b01610763565b945060808a013591508082111561087057600080fd5b5061087d8a828b016107a9565b989b979a50959850939692959293505050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156108e15781600019048211156108c7576108c7610890565b808516156108d457918102915b93841c93908002906108ab565b509250929050565b6000826108f85750600161073d565b816109055750600061073d565b816001811461091b576002811461092557610941565b600191505061073d565b60ff84111561093657610936610890565b50506001821b61073d565b5060208310610133831016604e8410600b8410161715610964575081810a61073d565b61096e83836108a6565b806000190482111561098257610982610890565b029392505050565b600061075c83836108e9565b6000826109b357634e487b7160e01b600052601260045260246000fd5b500490565b604081526000835180604084015260005b818110156109e657602081870181015160608684010152016109c9565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b805160208201516bffffffffffffffffffffffff198082169291906014831015610a415780818460140360031b1b83161693505b505050919050565b600060208284031215610a5b57600080fd5b8151801515811461075c57600080fd5b60008085851115610a7b57600080fd5b83861115610a8857600080fd5b5050820193919092039150565b8035602083101561073d57600019602084900360031b1b169291505056fea264697066735822122096e575855173f3aff01684e119e497ee12c59c8fa020778b512faf8933c71a8e64736f6c63430008160033","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD2F CODESIZE SUB DUP1 PUSH3 0xD2F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x32 SWAP2 PUSH2 0x136 JUMP JUMPDEST DUP4 DUP4 DUP4 DUP4 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xE0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0xE0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 MSTORE DUP5 AND PUSH1 0xC0 MSTORE PUSH2 0xDA PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH2 0x104 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND PUSH1 0xA0 MSTORE PUSH2 0x120 MSTORE POP PUSH2 0x1D3 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114 DUP3 PUSH1 0x1 PUSH1 0x9D SHL PUSH2 0x1B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x155 DUP6 PUSH2 0x11A JUMP JUMPDEST SWAP4 POP PUSH2 0x163 PUSH1 0x20 DUP7 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AB DUP3 PUSH2 0x11A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x114 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0xAE9 PUSH3 0x246 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x118 ADD MSTORE PUSH2 0x652 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2EF ADD MSTORE PUSH2 0x5A3 ADD MSTORE PUSH1 0x0 PUSH2 0x25E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x19A ADD MSTORE PUSH2 0x32A ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x22A ADD MSTORE PUSH2 0x62E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1F6 ADD MSTORE PUSH2 0x574 ADD MSTORE PUSH2 0xAE9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A923B9A GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD0A10260 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD0A10260 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xD9ACF0EC EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xDD4C07C8 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A923B9A EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x9B5215F6 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xB7C312E6 EQ PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x813F32F EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x303F1E81 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x55CD1378 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x5E280F11 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x6E3BF0AD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x84123305 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xCD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x451 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH20 0x3333333333333333333333333333333333333333 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH20 0x2222222222222222222222222222222222222222 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH1 0xA DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x31B DUP3 DUP3 PUSH2 0x3B0 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x36F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEEE35E6F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x37C DUP8 DUP8 PUSH2 0x504 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP CALLVALUE ISZERO PUSH2 0x391 JUMPI PUSH2 0x391 DUP3 CALLVALUE PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x39B DUP3 DUP3 PUSH2 0x55D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x31B DUP3 DUP3 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH20 0x2222222222222222222222222222222222222222 SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x40B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64204859504520746F204879706572436F7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x366 JUMP JUMPDEST PUSH20 0x3333333333333333333333333333333333333333 PUSH4 0xB0AC0AB DUP5 PUSH2 0x451 PUSH2 0x485 PUSH1 0xA DUP1 PUSH2 0x98A JUMP JUMPDEST PUSH2 0x48F SWAP1 DUP8 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x513 DUP6 DUP6 PUSH2 0x6F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ PUSH2 0x53B JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x9B34731 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x366 SWAP2 DUP4 SWAP2 PUSH1 0x4 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x544 DUP2 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP PUSH2 0x553 DUP6 DUP6 PUSH2 0x743 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST POP PUSH20 0x3333333333333333333333333333333333333333 PUSH4 0xB0AC0AB DUP4 PUSH32 0x0 PUSH2 0x678 PUSH32 0x0 PUSH1 0xA PUSH2 0x98A JUMP JUMPDEST PUSH2 0x682 SWAP1 DUP7 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x705 DUP3 PUSH1 0x4C DUP2 DUP7 PUSH2 0xA6B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x753 PUSH1 0x2C PUSH1 0xC DUP5 DUP7 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x75C SWAP2 PUSH2 0xA95 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x77A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79B DUP4 PUSH2 0x763 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x7BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP9 PUSH2 0x763 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x83A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x846 DUP12 DUP4 DUP13 ADD PUSH2 0x7A9 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x85A PUSH1 0x60 DUP12 ADD PUSH2 0x763 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87D DUP11 DUP3 DUP12 ADD PUSH2 0x7A9 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x8E1 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x8C7 JUMPI PUSH2 0x8C7 PUSH2 0x890 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x8D4 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x8AB JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x8F8 JUMPI POP PUSH1 0x1 PUSH2 0x73D JUMP JUMPDEST DUP2 PUSH2 0x905 JUMPI POP PUSH1 0x0 PUSH2 0x73D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x91B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x925 JUMPI PUSH2 0x941 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x73D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x936 JUMPI PUSH2 0x936 PUSH2 0x890 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x73D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x964 JUMPI POP DUP2 DUP2 EXP PUSH2 0x73D JUMP JUMPDEST PUSH2 0x96E DUP4 DUP4 PUSH2 0x8A6 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x982 JUMPI PUSH2 0x982 PUSH2 0x890 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75C DUP4 DUP4 PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9B3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x9C9 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 PUSH1 0x14 DUP4 LT ISZERO PUSH2 0xA41 JUMPI DUP1 DUP2 DUP5 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP4 POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0xA88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x20 DUP4 LT ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 NOT PUSH1 0x20 DUP5 SWAP1 SUB PUSH1 0x3 SHL SHL AND SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xE5 PUSH22 0x855173F3AFF01684E119E497EE12C59C8FA020778B51 0x2F 0xAF DUP10 CALLER 0xC7 BYTE DUP15 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"429:2362:27:-:0;;;488:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;627:11;640:4;646:10;658:8;1886:4:12;-1:-1:-1;;;;;1875:16:12;;;-1:-1:-1;;;;;1875:16:12;;;;;1916:3;;-1:-1:-1;;;;;1916:9:12;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1901:27:12;;;;;1939:20;;;;2444:62;-1:-1:-1;;;;;2444:62:12;;:48;:62::i;:::-;-1:-1:-1;;;;;2411:95:12;;;-1:-1:-1;;;;;2516:38:12;;;;;2564:18;;-1:-1:-1;429:2362:27;;-1:-1:-1;;;;;429:2362:27;1991:177:15;2069:7;2111:48;2147:12;-1:-1:-1;;;2111:48:15;:::i;:::-;2088:73;1991:177;-1:-1:-1;;1991:177:15:o;14::28:-;93:13;;-1:-1:-1;;;;;135:31:28;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:520::-;292:6;300;308;316;369:3;357:9;348:7;344:23;340:33;337:53;;;386:1;383;376:12;337:53;409:40;439:9;409:40;:::i;:::-;399:50;;468:49;513:2;502:9;498:18;468:49;:::i;:::-;560:2;545:18;;539:25;458:59;;-1:-1:-1;;;;;;593:30:28;;583:41;;573:69;;638:1;635;628:12;573:69;706:2;691:18;;;;685:25;196:520;;;;-1:-1:-1;;;196:520:28:o;721:208::-;791:6;844:2;832:9;823:7;819:23;815:32;812:52;;;860:1;857;850:12;812:52;883:40;913:9;883:40;:::i;:::-;873:50;721:208;-1:-1:-1;;;721:208:28:o;934:222::-;999:9;;;1020:10;;;1017:133;;;1072:10;1067:3;1063:20;1060:1;1053:31;1107:4;1104:1;1097:15;1135:4;1132:1;1125:15;934:222;429:2362:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@HYPER_CORE_INDEX_ID_1432":{"entryPoint":null,"id":1432,"parameterSlots":0,"returnSlots":0},"@HYPER_CORE_INDEX_ID_DECIMAL_DIFF_1437":{"entryPoint":null,"id":1437,"parameterSlots":0,"returnSlots":0},"@HYPE_ASSET_BRIDGE_ADDRESS_1429":{"entryPoint":null,"id":1429,"parameterSlots":0,"returnSlots":0},"@L1WritePrecompileAddress_1423":{"entryPoint":null,"id":1423,"parameterSlots":0,"returnSlots":0},"@OFT_TOKEN_ASSET_BRIDGE_ADDRESS_1418":{"entryPoint":null,"id":1418,"parameterSlots":0,"returnSlots":0},"@OFT_TOKEN_CORE_INDEX_ID_1420":{"entryPoint":null,"id":1420,"parameterSlots":0,"returnSlots":0},"@_1638":{"entryPoint":null,"id":1638,"parameterSlots":0,"returnSlots":0},"@_fundAddressOnHyperCore_1634":{"entryPoint":944,"id":1634,"parameterSlots":2,"returnSlots":0},"@_sendAssetToHyperCore_1596":{"entryPoint":1373,"id":1596,"parameterSlots":2,"returnSlots":0},"@amountLD_1331":{"entryPoint":1859,"id":1331,"parameterSlots":2,"returnSlots":1},"@composeMsg_1361":{"entryPoint":1782,"id":1361,"parameterSlots":2,"returnSlots":1},"@endpoint_1439":{"entryPoint":null,"id":1439,"parameterSlots":0,"returnSlots":0},"@fundAddressOnHyperCore_3113":{"entryPoint":785,"id":3113,"parameterSlots":2,"returnSlots":0},"@lzCompose_3087":{"entryPoint":799,"id":3087,"parameterSlots":7,"returnSlots":0},"@oft_1442":{"entryPoint":null,"id":1442,"parameterSlots":0,"returnSlots":0},"@sendAssetToHyperCore_3100":{"entryPoint":934,"id":3100,"parameterSlots":2,"returnSlots":0},"@token_1445":{"entryPoint":null,"id":1445,"parameterSlots":0,"returnSlots":0},"@validateAndDecodeMessage_1865":{"entryPoint":1284,"id":1865,"parameterSlots":2,"returnSlots":2},"@weiDiff_1447":{"entryPoint":null,"id":1447,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":1891,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":1961,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr":{"entryPoint":2034,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1919,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint64_t_uint64__to_t_address_t_uint64_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":2488,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$2218__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IOFT_$1233__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f36cc36cc2d8409d2a1ca675856db8c0ac40991b9e411e41e2b8bba2f8104fb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":2667,"id":null,"parameterSlots":4,"returnSlots":2},"checked_div_t_uint256":{"entryPoint":2454,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2214,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":2442,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":2281,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32":{"entryPoint":2709,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20":{"entryPoint":2573,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2192,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7841:28","nodeType":"YulBlock","src":"0:7841:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"113:101:28","nodeType":"YulBlock","src":"113:101:28","statements":[{"nativeSrc":"123:26:28","nodeType":"YulAssignment","src":"123:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"135:9:28","nodeType":"YulIdentifier","src":"135:9:28"},{"kind":"number","nativeSrc":"146:2:28","nodeType":"YulLiteral","src":"146:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"131:3:28","nodeType":"YulIdentifier","src":"131:3:28"},"nativeSrc":"131:18:28","nodeType":"YulFunctionCall","src":"131:18:28"},"variableNames":[{"name":"tail","nativeSrc":"123:4:28","nodeType":"YulIdentifier","src":"123:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"165:9:28","nodeType":"YulIdentifier","src":"165:9:28"},{"arguments":[{"name":"value0","nativeSrc":"180:6:28","nodeType":"YulIdentifier","src":"180:6:28"},{"kind":"number","nativeSrc":"188:18:28","nodeType":"YulLiteral","src":"188:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"176:3:28","nodeType":"YulIdentifier","src":"176:3:28"},"nativeSrc":"176:31:28","nodeType":"YulFunctionCall","src":"176:31:28"}],"functionName":{"name":"mstore","nativeSrc":"158:6:28","nodeType":"YulIdentifier","src":"158:6:28"},"nativeSrc":"158:50:28","nodeType":"YulFunctionCall","src":"158:50:28"},"nativeSrc":"158:50:28","nodeType":"YulExpressionStatement","src":"158:50:28"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"14:200:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"82:9:28","nodeType":"YulTypedName","src":"82:9:28","type":""},{"name":"value0","nativeSrc":"93:6:28","nodeType":"YulTypedName","src":"93:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"104:4:28","nodeType":"YulTypedName","src":"104:4:28","type":""}],"src":"14:200:28"},{"body":{"nativeSrc":"320:76:28","nodeType":"YulBlock","src":"320:76:28","statements":[{"nativeSrc":"330:26:28","nodeType":"YulAssignment","src":"330:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"342:9:28","nodeType":"YulIdentifier","src":"342:9:28"},{"kind":"number","nativeSrc":"353:2:28","nodeType":"YulLiteral","src":"353:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"338:3:28","nodeType":"YulIdentifier","src":"338:3:28"},"nativeSrc":"338:18:28","nodeType":"YulFunctionCall","src":"338:18:28"},"variableNames":[{"name":"tail","nativeSrc":"330:4:28","nodeType":"YulIdentifier","src":"330:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"372:9:28","nodeType":"YulIdentifier","src":"372:9:28"},{"name":"value0","nativeSrc":"383:6:28","nodeType":"YulIdentifier","src":"383:6:28"}],"functionName":{"name":"mstore","nativeSrc":"365:6:28","nodeType":"YulIdentifier","src":"365:6:28"},"nativeSrc":"365:25:28","nodeType":"YulFunctionCall","src":"365:25:28"},"nativeSrc":"365:25:28","nodeType":"YulExpressionStatement","src":"365:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"219:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"289:9:28","nodeType":"YulTypedName","src":"289:9:28","type":""},{"name":"value0","nativeSrc":"300:6:28","nodeType":"YulTypedName","src":"300:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"311:4:28","nodeType":"YulTypedName","src":"311:4:28","type":""}],"src":"219:177:28"},{"body":{"nativeSrc":"502:102:28","nodeType":"YulBlock","src":"502:102:28","statements":[{"nativeSrc":"512:26:28","nodeType":"YulAssignment","src":"512:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"524:9:28","nodeType":"YulIdentifier","src":"524:9:28"},{"kind":"number","nativeSrc":"535:2:28","nodeType":"YulLiteral","src":"535:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"520:3:28","nodeType":"YulIdentifier","src":"520:3:28"},"nativeSrc":"520:18:28","nodeType":"YulFunctionCall","src":"520:18:28"},"variableNames":[{"name":"tail","nativeSrc":"512:4:28","nodeType":"YulIdentifier","src":"512:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"554:9:28","nodeType":"YulIdentifier","src":"554:9:28"},{"arguments":[{"name":"value0","nativeSrc":"569:6:28","nodeType":"YulIdentifier","src":"569:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"585:3:28","nodeType":"YulLiteral","src":"585:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"590:1:28","nodeType":"YulLiteral","src":"590:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"581:3:28","nodeType":"YulIdentifier","src":"581:3:28"},"nativeSrc":"581:11:28","nodeType":"YulFunctionCall","src":"581:11:28"},{"kind":"number","nativeSrc":"594:1:28","nodeType":"YulLiteral","src":"594:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"577:3:28","nodeType":"YulIdentifier","src":"577:3:28"},"nativeSrc":"577:19:28","nodeType":"YulFunctionCall","src":"577:19:28"}],"functionName":{"name":"and","nativeSrc":"565:3:28","nodeType":"YulIdentifier","src":"565:3:28"},"nativeSrc":"565:32:28","nodeType":"YulFunctionCall","src":"565:32:28"}],"functionName":{"name":"mstore","nativeSrc":"547:6:28","nodeType":"YulIdentifier","src":"547:6:28"},"nativeSrc":"547:51:28","nodeType":"YulFunctionCall","src":"547:51:28"},"nativeSrc":"547:51:28","nodeType":"YulExpressionStatement","src":"547:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"401:203:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"471:9:28","nodeType":"YulTypedName","src":"471:9:28","type":""},{"name":"value0","nativeSrc":"482:6:28","nodeType":"YulTypedName","src":"482:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"493:4:28","nodeType":"YulTypedName","src":"493:4:28","type":""}],"src":"401:203:28"},{"body":{"nativeSrc":"726:102:28","nodeType":"YulBlock","src":"726:102:28","statements":[{"nativeSrc":"736:26:28","nodeType":"YulAssignment","src":"736:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"748:9:28","nodeType":"YulIdentifier","src":"748:9:28"},{"kind":"number","nativeSrc":"759:2:28","nodeType":"YulLiteral","src":"759:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"744:3:28","nodeType":"YulIdentifier","src":"744:3:28"},"nativeSrc":"744:18:28","nodeType":"YulFunctionCall","src":"744:18:28"},"variableNames":[{"name":"tail","nativeSrc":"736:4:28","nodeType":"YulIdentifier","src":"736:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"778:9:28","nodeType":"YulIdentifier","src":"778:9:28"},{"arguments":[{"name":"value0","nativeSrc":"793:6:28","nodeType":"YulIdentifier","src":"793:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"809:3:28","nodeType":"YulLiteral","src":"809:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"814:1:28","nodeType":"YulLiteral","src":"814:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"805:3:28","nodeType":"YulIdentifier","src":"805:3:28"},"nativeSrc":"805:11:28","nodeType":"YulFunctionCall","src":"805:11:28"},{"kind":"number","nativeSrc":"818:1:28","nodeType":"YulLiteral","src":"818:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"801:3:28","nodeType":"YulIdentifier","src":"801:3:28"},"nativeSrc":"801:19:28","nodeType":"YulFunctionCall","src":"801:19:28"}],"functionName":{"name":"and","nativeSrc":"789:3:28","nodeType":"YulIdentifier","src":"789:3:28"},"nativeSrc":"789:32:28","nodeType":"YulFunctionCall","src":"789:32:28"}],"functionName":{"name":"mstore","nativeSrc":"771:6:28","nodeType":"YulIdentifier","src":"771:6:28"},"nativeSrc":"771:51:28","nodeType":"YulFunctionCall","src":"771:51:28"},"nativeSrc":"771:51:28","nodeType":"YulExpressionStatement","src":"771:51:28"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nativeSrc":"609:219:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"695:9:28","nodeType":"YulTypedName","src":"695:9:28","type":""},{"name":"value0","nativeSrc":"706:6:28","nodeType":"YulTypedName","src":"706:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"717:4:28","nodeType":"YulTypedName","src":"717:4:28","type":""}],"src":"609:219:28"},{"body":{"nativeSrc":"947:102:28","nodeType":"YulBlock","src":"947:102:28","statements":[{"nativeSrc":"957:26:28","nodeType":"YulAssignment","src":"957:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"969:9:28","nodeType":"YulIdentifier","src":"969:9:28"},{"kind":"number","nativeSrc":"980:2:28","nodeType":"YulLiteral","src":"980:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"965:3:28","nodeType":"YulIdentifier","src":"965:3:28"},"nativeSrc":"965:18:28","nodeType":"YulFunctionCall","src":"965:18:28"},"variableNames":[{"name":"tail","nativeSrc":"957:4:28","nodeType":"YulIdentifier","src":"957:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"999:9:28","nodeType":"YulIdentifier","src":"999:9:28"},{"arguments":[{"name":"value0","nativeSrc":"1014:6:28","nodeType":"YulIdentifier","src":"1014:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1030:3:28","nodeType":"YulLiteral","src":"1030:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"1035:1:28","nodeType":"YulLiteral","src":"1035:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1026:3:28","nodeType":"YulIdentifier","src":"1026:3:28"},"nativeSrc":"1026:11:28","nodeType":"YulFunctionCall","src":"1026:11:28"},{"kind":"number","nativeSrc":"1039:1:28","nodeType":"YulLiteral","src":"1039:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1022:3:28","nodeType":"YulIdentifier","src":"1022:3:28"},"nativeSrc":"1022:19:28","nodeType":"YulFunctionCall","src":"1022:19:28"}],"functionName":{"name":"and","nativeSrc":"1010:3:28","nodeType":"YulIdentifier","src":"1010:3:28"},"nativeSrc":"1010:32:28","nodeType":"YulFunctionCall","src":"1010:32:28"}],"functionName":{"name":"mstore","nativeSrc":"992:6:28","nodeType":"YulIdentifier","src":"992:6:28"},"nativeSrc":"992:51:28","nodeType":"YulFunctionCall","src":"992:51:28"},"nativeSrc":"992:51:28","nodeType":"YulExpressionStatement","src":"992:51:28"}]},"name":"abi_encode_tuple_t_contract$_IOFT_$1233__to_t_address__fromStack_reversed","nativeSrc":"833:216:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"916:9:28","nodeType":"YulTypedName","src":"916:9:28","type":""},{"name":"value0","nativeSrc":"927:6:28","nodeType":"YulTypedName","src":"927:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"938:4:28","nodeType":"YulTypedName","src":"938:4:28","type":""}],"src":"833:216:28"},{"body":{"nativeSrc":"1103:124:28","nodeType":"YulBlock","src":"1103:124:28","statements":[{"nativeSrc":"1113:29:28","nodeType":"YulAssignment","src":"1113:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"1135:6:28","nodeType":"YulIdentifier","src":"1135:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"1122:12:28","nodeType":"YulIdentifier","src":"1122:12:28"},"nativeSrc":"1122:20:28","nodeType":"YulFunctionCall","src":"1122:20:28"},"variableNames":[{"name":"value","nativeSrc":"1113:5:28","nodeType":"YulIdentifier","src":"1113:5:28"}]},{"body":{"nativeSrc":"1205:16:28","nodeType":"YulBlock","src":"1205:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1214:1:28","nodeType":"YulLiteral","src":"1214:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1217:1:28","nodeType":"YulLiteral","src":"1217:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1207:6:28","nodeType":"YulIdentifier","src":"1207:6:28"},"nativeSrc":"1207:12:28","nodeType":"YulFunctionCall","src":"1207:12:28"},"nativeSrc":"1207:12:28","nodeType":"YulExpressionStatement","src":"1207:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1164:5:28","nodeType":"YulIdentifier","src":"1164:5:28"},{"arguments":[{"name":"value","nativeSrc":"1175:5:28","nodeType":"YulIdentifier","src":"1175:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1190:3:28","nodeType":"YulLiteral","src":"1190:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"1195:1:28","nodeType":"YulLiteral","src":"1195:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1186:3:28","nodeType":"YulIdentifier","src":"1186:3:28"},"nativeSrc":"1186:11:28","nodeType":"YulFunctionCall","src":"1186:11:28"},{"kind":"number","nativeSrc":"1199:1:28","nodeType":"YulLiteral","src":"1199:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1182:3:28","nodeType":"YulIdentifier","src":"1182:3:28"},"nativeSrc":"1182:19:28","nodeType":"YulFunctionCall","src":"1182:19:28"}],"functionName":{"name":"and","nativeSrc":"1171:3:28","nodeType":"YulIdentifier","src":"1171:3:28"},"nativeSrc":"1171:31:28","nodeType":"YulFunctionCall","src":"1171:31:28"}],"functionName":{"name":"eq","nativeSrc":"1161:2:28","nodeType":"YulIdentifier","src":"1161:2:28"},"nativeSrc":"1161:42:28","nodeType":"YulFunctionCall","src":"1161:42:28"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:28","nodeType":"YulIdentifier","src":"1154:6:28"},"nativeSrc":"1154:50:28","nodeType":"YulFunctionCall","src":"1154:50:28"},"nativeSrc":"1151:70:28","nodeType":"YulIf","src":"1151:70:28"}]},"name":"abi_decode_address","nativeSrc":"1054:173:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1082:6:28","nodeType":"YulTypedName","src":"1082:6:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1093:5:28","nodeType":"YulTypedName","src":"1093:5:28","type":""}],"src":"1054:173:28"},{"body":{"nativeSrc":"1319:167:28","nodeType":"YulBlock","src":"1319:167:28","statements":[{"body":{"nativeSrc":"1365:16:28","nodeType":"YulBlock","src":"1365:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1374:1:28","nodeType":"YulLiteral","src":"1374:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1377:1:28","nodeType":"YulLiteral","src":"1377:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1367:6:28","nodeType":"YulIdentifier","src":"1367:6:28"},"nativeSrc":"1367:12:28","nodeType":"YulFunctionCall","src":"1367:12:28"},"nativeSrc":"1367:12:28","nodeType":"YulExpressionStatement","src":"1367:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1340:7:28","nodeType":"YulIdentifier","src":"1340:7:28"},{"name":"headStart","nativeSrc":"1349:9:28","nodeType":"YulIdentifier","src":"1349:9:28"}],"functionName":{"name":"sub","nativeSrc":"1336:3:28","nodeType":"YulIdentifier","src":"1336:3:28"},"nativeSrc":"1336:23:28","nodeType":"YulFunctionCall","src":"1336:23:28"},{"kind":"number","nativeSrc":"1361:2:28","nodeType":"YulLiteral","src":"1361:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1332:3:28","nodeType":"YulIdentifier","src":"1332:3:28"},"nativeSrc":"1332:32:28","nodeType":"YulFunctionCall","src":"1332:32:28"},"nativeSrc":"1329:52:28","nodeType":"YulIf","src":"1329:52:28"},{"nativeSrc":"1390:39:28","nodeType":"YulAssignment","src":"1390:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1419:9:28","nodeType":"YulIdentifier","src":"1419:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1400:18:28","nodeType":"YulIdentifier","src":"1400:18:28"},"nativeSrc":"1400:29:28","nodeType":"YulFunctionCall","src":"1400:29:28"},"variableNames":[{"name":"value0","nativeSrc":"1390:6:28","nodeType":"YulIdentifier","src":"1390:6:28"}]},{"nativeSrc":"1438:42:28","nodeType":"YulAssignment","src":"1438:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1465:9:28","nodeType":"YulIdentifier","src":"1465:9:28"},{"kind":"number","nativeSrc":"1476:2:28","nodeType":"YulLiteral","src":"1476:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1461:3:28","nodeType":"YulIdentifier","src":"1461:3:28"},"nativeSrc":"1461:18:28","nodeType":"YulFunctionCall","src":"1461:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"1448:12:28","nodeType":"YulIdentifier","src":"1448:12:28"},"nativeSrc":"1448:32:28","nodeType":"YulFunctionCall","src":"1448:32:28"},"variableNames":[{"name":"value1","nativeSrc":"1438:6:28","nodeType":"YulIdentifier","src":"1438:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1232:254:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1277:9:28","nodeType":"YulTypedName","src":"1277:9:28","type":""},{"name":"dataEnd","nativeSrc":"1288:7:28","nodeType":"YulTypedName","src":"1288:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1300:6:28","nodeType":"YulTypedName","src":"1300:6:28","type":""},{"name":"value1","nativeSrc":"1308:6:28","nodeType":"YulTypedName","src":"1308:6:28","type":""}],"src":"1232:254:28"},{"body":{"nativeSrc":"1563:275:28","nodeType":"YulBlock","src":"1563:275:28","statements":[{"body":{"nativeSrc":"1612:16:28","nodeType":"YulBlock","src":"1612:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1621:1:28","nodeType":"YulLiteral","src":"1621:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1624:1:28","nodeType":"YulLiteral","src":"1624:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1614:6:28","nodeType":"YulIdentifier","src":"1614:6:28"},"nativeSrc":"1614:12:28","nodeType":"YulFunctionCall","src":"1614:12:28"},"nativeSrc":"1614:12:28","nodeType":"YulExpressionStatement","src":"1614:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1591:6:28","nodeType":"YulIdentifier","src":"1591:6:28"},{"kind":"number","nativeSrc":"1599:4:28","nodeType":"YulLiteral","src":"1599:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1587:3:28","nodeType":"YulIdentifier","src":"1587:3:28"},"nativeSrc":"1587:17:28","nodeType":"YulFunctionCall","src":"1587:17:28"},{"name":"end","nativeSrc":"1606:3:28","nodeType":"YulIdentifier","src":"1606:3:28"}],"functionName":{"name":"slt","nativeSrc":"1583:3:28","nodeType":"YulIdentifier","src":"1583:3:28"},"nativeSrc":"1583:27:28","nodeType":"YulFunctionCall","src":"1583:27:28"}],"functionName":{"name":"iszero","nativeSrc":"1576:6:28","nodeType":"YulIdentifier","src":"1576:6:28"},"nativeSrc":"1576:35:28","nodeType":"YulFunctionCall","src":"1576:35:28"},"nativeSrc":"1573:55:28","nodeType":"YulIf","src":"1573:55:28"},{"nativeSrc":"1637:30:28","nodeType":"YulAssignment","src":"1637:30:28","value":{"arguments":[{"name":"offset","nativeSrc":"1660:6:28","nodeType":"YulIdentifier","src":"1660:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"1647:12:28","nodeType":"YulIdentifier","src":"1647:12:28"},"nativeSrc":"1647:20:28","nodeType":"YulFunctionCall","src":"1647:20:28"},"variableNames":[{"name":"length","nativeSrc":"1637:6:28","nodeType":"YulIdentifier","src":"1637:6:28"}]},{"body":{"nativeSrc":"1710:16:28","nodeType":"YulBlock","src":"1710:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1719:1:28","nodeType":"YulLiteral","src":"1719:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1722:1:28","nodeType":"YulLiteral","src":"1722:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1712:6:28","nodeType":"YulIdentifier","src":"1712:6:28"},"nativeSrc":"1712:12:28","nodeType":"YulFunctionCall","src":"1712:12:28"},"nativeSrc":"1712:12:28","nodeType":"YulExpressionStatement","src":"1712:12:28"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1682:6:28","nodeType":"YulIdentifier","src":"1682:6:28"},{"kind":"number","nativeSrc":"1690:18:28","nodeType":"YulLiteral","src":"1690:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1679:2:28","nodeType":"YulIdentifier","src":"1679:2:28"},"nativeSrc":"1679:30:28","nodeType":"YulFunctionCall","src":"1679:30:28"},"nativeSrc":"1676:50:28","nodeType":"YulIf","src":"1676:50:28"},{"nativeSrc":"1735:29:28","nodeType":"YulAssignment","src":"1735:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"1751:6:28","nodeType":"YulIdentifier","src":"1751:6:28"},{"kind":"number","nativeSrc":"1759:4:28","nodeType":"YulLiteral","src":"1759:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1747:3:28","nodeType":"YulIdentifier","src":"1747:3:28"},"nativeSrc":"1747:17:28","nodeType":"YulFunctionCall","src":"1747:17:28"},"variableNames":[{"name":"arrayPos","nativeSrc":"1735:8:28","nodeType":"YulIdentifier","src":"1735:8:28"}]},{"body":{"nativeSrc":"1816:16:28","nodeType":"YulBlock","src":"1816:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1825:1:28","nodeType":"YulLiteral","src":"1825:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1828:1:28","nodeType":"YulLiteral","src":"1828:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1818:6:28","nodeType":"YulIdentifier","src":"1818:6:28"},"nativeSrc":"1818:12:28","nodeType":"YulFunctionCall","src":"1818:12:28"},"nativeSrc":"1818:12:28","nodeType":"YulExpressionStatement","src":"1818:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1787:6:28","nodeType":"YulIdentifier","src":"1787:6:28"},{"name":"length","nativeSrc":"1795:6:28","nodeType":"YulIdentifier","src":"1795:6:28"}],"functionName":{"name":"add","nativeSrc":"1783:3:28","nodeType":"YulIdentifier","src":"1783:3:28"},"nativeSrc":"1783:19:28","nodeType":"YulFunctionCall","src":"1783:19:28"},{"kind":"number","nativeSrc":"1804:4:28","nodeType":"YulLiteral","src":"1804:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1779:3:28","nodeType":"YulIdentifier","src":"1779:3:28"},"nativeSrc":"1779:30:28","nodeType":"YulFunctionCall","src":"1779:30:28"},{"name":"end","nativeSrc":"1811:3:28","nodeType":"YulIdentifier","src":"1811:3:28"}],"functionName":{"name":"gt","nativeSrc":"1776:2:28","nodeType":"YulIdentifier","src":"1776:2:28"},"nativeSrc":"1776:39:28","nodeType":"YulFunctionCall","src":"1776:39:28"},"nativeSrc":"1773:59:28","nodeType":"YulIf","src":"1773:59:28"}]},"name":"abi_decode_bytes_calldata","nativeSrc":"1491:347:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1526:6:28","nodeType":"YulTypedName","src":"1526:6:28","type":""},{"name":"end","nativeSrc":"1534:3:28","nodeType":"YulTypedName","src":"1534:3:28","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"1542:8:28","nodeType":"YulTypedName","src":"1542:8:28","type":""},{"name":"length","nativeSrc":"1552:6:28","nodeType":"YulTypedName","src":"1552:6:28","type":""}],"src":"1491:347:28"},{"body":{"nativeSrc":"2019:759:28","nodeType":"YulBlock","src":"2019:759:28","statements":[{"body":{"nativeSrc":"2066:16:28","nodeType":"YulBlock","src":"2066:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2075:1:28","nodeType":"YulLiteral","src":"2075:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2078:1:28","nodeType":"YulLiteral","src":"2078:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2068:6:28","nodeType":"YulIdentifier","src":"2068:6:28"},"nativeSrc":"2068:12:28","nodeType":"YulFunctionCall","src":"2068:12:28"},"nativeSrc":"2068:12:28","nodeType":"YulExpressionStatement","src":"2068:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2040:7:28","nodeType":"YulIdentifier","src":"2040:7:28"},{"name":"headStart","nativeSrc":"2049:9:28","nodeType":"YulIdentifier","src":"2049:9:28"}],"functionName":{"name":"sub","nativeSrc":"2036:3:28","nodeType":"YulIdentifier","src":"2036:3:28"},"nativeSrc":"2036:23:28","nodeType":"YulFunctionCall","src":"2036:23:28"},{"kind":"number","nativeSrc":"2061:3:28","nodeType":"YulLiteral","src":"2061:3:28","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"2032:3:28","nodeType":"YulIdentifier","src":"2032:3:28"},"nativeSrc":"2032:33:28","nodeType":"YulFunctionCall","src":"2032:33:28"},"nativeSrc":"2029:53:28","nodeType":"YulIf","src":"2029:53:28"},{"nativeSrc":"2091:39:28","nodeType":"YulAssignment","src":"2091:39:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2120:9:28","nodeType":"YulIdentifier","src":"2120:9:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2101:18:28","nodeType":"YulIdentifier","src":"2101:18:28"},"nativeSrc":"2101:29:28","nodeType":"YulFunctionCall","src":"2101:29:28"},"variableNames":[{"name":"value0","nativeSrc":"2091:6:28","nodeType":"YulIdentifier","src":"2091:6:28"}]},{"nativeSrc":"2139:42:28","nodeType":"YulAssignment","src":"2139:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2166:9:28","nodeType":"YulIdentifier","src":"2166:9:28"},{"kind":"number","nativeSrc":"2177:2:28","nodeType":"YulLiteral","src":"2177:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2162:3:28","nodeType":"YulIdentifier","src":"2162:3:28"},"nativeSrc":"2162:18:28","nodeType":"YulFunctionCall","src":"2162:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"2149:12:28","nodeType":"YulIdentifier","src":"2149:12:28"},"nativeSrc":"2149:32:28","nodeType":"YulFunctionCall","src":"2149:32:28"},"variableNames":[{"name":"value1","nativeSrc":"2139:6:28","nodeType":"YulIdentifier","src":"2139:6:28"}]},{"nativeSrc":"2190:46:28","nodeType":"YulVariableDeclaration","src":"2190:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2221:9:28","nodeType":"YulIdentifier","src":"2221:9:28"},{"kind":"number","nativeSrc":"2232:2:28","nodeType":"YulLiteral","src":"2232:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2217:3:28","nodeType":"YulIdentifier","src":"2217:3:28"},"nativeSrc":"2217:18:28","nodeType":"YulFunctionCall","src":"2217:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"2204:12:28","nodeType":"YulIdentifier","src":"2204:12:28"},"nativeSrc":"2204:32:28","nodeType":"YulFunctionCall","src":"2204:32:28"},"variables":[{"name":"offset","nativeSrc":"2194:6:28","nodeType":"YulTypedName","src":"2194:6:28","type":""}]},{"nativeSrc":"2245:28:28","nodeType":"YulVariableDeclaration","src":"2245:28:28","value":{"kind":"number","nativeSrc":"2255:18:28","nodeType":"YulLiteral","src":"2255:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"2249:2:28","nodeType":"YulTypedName","src":"2249:2:28","type":""}]},{"body":{"nativeSrc":"2300:16:28","nodeType":"YulBlock","src":"2300:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2309:1:28","nodeType":"YulLiteral","src":"2309:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2312:1:28","nodeType":"YulLiteral","src":"2312:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2302:6:28","nodeType":"YulIdentifier","src":"2302:6:28"},"nativeSrc":"2302:12:28","nodeType":"YulFunctionCall","src":"2302:12:28"},"nativeSrc":"2302:12:28","nodeType":"YulExpressionStatement","src":"2302:12:28"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2288:6:28","nodeType":"YulIdentifier","src":"2288:6:28"},{"name":"_1","nativeSrc":"2296:2:28","nodeType":"YulIdentifier","src":"2296:2:28"}],"functionName":{"name":"gt","nativeSrc":"2285:2:28","nodeType":"YulIdentifier","src":"2285:2:28"},"nativeSrc":"2285:14:28","nodeType":"YulFunctionCall","src":"2285:14:28"},"nativeSrc":"2282:34:28","nodeType":"YulIf","src":"2282:34:28"},{"nativeSrc":"2325:84:28","nodeType":"YulVariableDeclaration","src":"2325:84:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2381:9:28","nodeType":"YulIdentifier","src":"2381:9:28"},{"name":"offset","nativeSrc":"2392:6:28","nodeType":"YulIdentifier","src":"2392:6:28"}],"functionName":{"name":"add","nativeSrc":"2377:3:28","nodeType":"YulIdentifier","src":"2377:3:28"},"nativeSrc":"2377:22:28","nodeType":"YulFunctionCall","src":"2377:22:28"},{"name":"dataEnd","nativeSrc":"2401:7:28","nodeType":"YulIdentifier","src":"2401:7:28"}],"functionName":{"name":"abi_decode_bytes_calldata","nativeSrc":"2351:25:28","nodeType":"YulIdentifier","src":"2351:25:28"},"nativeSrc":"2351:58:28","nodeType":"YulFunctionCall","src":"2351:58:28"},"variables":[{"name":"value2_1","nativeSrc":"2329:8:28","nodeType":"YulTypedName","src":"2329:8:28","type":""},{"name":"value3_1","nativeSrc":"2339:8:28","nodeType":"YulTypedName","src":"2339:8:28","type":""}]},{"nativeSrc":"2418:18:28","nodeType":"YulAssignment","src":"2418:18:28","value":{"name":"value2_1","nativeSrc":"2428:8:28","nodeType":"YulIdentifier","src":"2428:8:28"},"variableNames":[{"name":"value2","nativeSrc":"2418:6:28","nodeType":"YulIdentifier","src":"2418:6:28"}]},{"nativeSrc":"2445:18:28","nodeType":"YulAssignment","src":"2445:18:28","value":{"name":"value3_1","nativeSrc":"2455:8:28","nodeType":"YulIdentifier","src":"2455:8:28"},"variableNames":[{"name":"value3","nativeSrc":"2445:6:28","nodeType":"YulIdentifier","src":"2445:6:28"}]},{"nativeSrc":"2472:48:28","nodeType":"YulAssignment","src":"2472:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2505:9:28","nodeType":"YulIdentifier","src":"2505:9:28"},{"kind":"number","nativeSrc":"2516:2:28","nodeType":"YulLiteral","src":"2516:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2501:3:28","nodeType":"YulIdentifier","src":"2501:3:28"},"nativeSrc":"2501:18:28","nodeType":"YulFunctionCall","src":"2501:18:28"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2482:18:28","nodeType":"YulIdentifier","src":"2482:18:28"},"nativeSrc":"2482:38:28","nodeType":"YulFunctionCall","src":"2482:38:28"},"variableNames":[{"name":"value4","nativeSrc":"2472:6:28","nodeType":"YulIdentifier","src":"2472:6:28"}]},{"nativeSrc":"2529:49:28","nodeType":"YulVariableDeclaration","src":"2529:49:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2562:9:28","nodeType":"YulIdentifier","src":"2562:9:28"},{"kind":"number","nativeSrc":"2573:3:28","nodeType":"YulLiteral","src":"2573:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2558:3:28","nodeType":"YulIdentifier","src":"2558:3:28"},"nativeSrc":"2558:19:28","nodeType":"YulFunctionCall","src":"2558:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"2545:12:28","nodeType":"YulIdentifier","src":"2545:12:28"},"nativeSrc":"2545:33:28","nodeType":"YulFunctionCall","src":"2545:33:28"},"variables":[{"name":"offset_1","nativeSrc":"2533:8:28","nodeType":"YulTypedName","src":"2533:8:28","type":""}]},{"body":{"nativeSrc":"2607:16:28","nodeType":"YulBlock","src":"2607:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2616:1:28","nodeType":"YulLiteral","src":"2616:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2619:1:28","nodeType":"YulLiteral","src":"2619:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2609:6:28","nodeType":"YulIdentifier","src":"2609:6:28"},"nativeSrc":"2609:12:28","nodeType":"YulFunctionCall","src":"2609:12:28"},"nativeSrc":"2609:12:28","nodeType":"YulExpressionStatement","src":"2609:12:28"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"2593:8:28","nodeType":"YulIdentifier","src":"2593:8:28"},{"name":"_1","nativeSrc":"2603:2:28","nodeType":"YulIdentifier","src":"2603:2:28"}],"functionName":{"name":"gt","nativeSrc":"2590:2:28","nodeType":"YulIdentifier","src":"2590:2:28"},"nativeSrc":"2590:16:28","nodeType":"YulFunctionCall","src":"2590:16:28"},"nativeSrc":"2587:36:28","nodeType":"YulIf","src":"2587:36:28"},{"nativeSrc":"2632:86:28","nodeType":"YulVariableDeclaration","src":"2632:86:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2688:9:28","nodeType":"YulIdentifier","src":"2688:9:28"},{"name":"offset_1","nativeSrc":"2699:8:28","nodeType":"YulIdentifier","src":"2699:8:28"}],"functionName":{"name":"add","nativeSrc":"2684:3:28","nodeType":"YulIdentifier","src":"2684:3:28"},"nativeSrc":"2684:24:28","nodeType":"YulFunctionCall","src":"2684:24:28"},{"name":"dataEnd","nativeSrc":"2710:7:28","nodeType":"YulIdentifier","src":"2710:7:28"}],"functionName":{"name":"abi_decode_bytes_calldata","nativeSrc":"2658:25:28","nodeType":"YulIdentifier","src":"2658:25:28"},"nativeSrc":"2658:60:28","nodeType":"YulFunctionCall","src":"2658:60:28"},"variables":[{"name":"value5_1","nativeSrc":"2636:8:28","nodeType":"YulTypedName","src":"2636:8:28","type":""},{"name":"value6_1","nativeSrc":"2646:8:28","nodeType":"YulTypedName","src":"2646:8:28","type":""}]},{"nativeSrc":"2727:18:28","nodeType":"YulAssignment","src":"2727:18:28","value":{"name":"value5_1","nativeSrc":"2737:8:28","nodeType":"YulIdentifier","src":"2737:8:28"},"variableNames":[{"name":"value5","nativeSrc":"2727:6:28","nodeType":"YulIdentifier","src":"2727:6:28"}]},{"nativeSrc":"2754:18:28","nodeType":"YulAssignment","src":"2754:18:28","value":{"name":"value6_1","nativeSrc":"2764:8:28","nodeType":"YulIdentifier","src":"2764:8:28"},"variableNames":[{"name":"value6","nativeSrc":"2754:6:28","nodeType":"YulIdentifier","src":"2754:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr","nativeSrc":"1843:935:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1937:9:28","nodeType":"YulTypedName","src":"1937:9:28","type":""},{"name":"dataEnd","nativeSrc":"1948:7:28","nodeType":"YulTypedName","src":"1948:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1960:6:28","nodeType":"YulTypedName","src":"1960:6:28","type":""},{"name":"value1","nativeSrc":"1968:6:28","nodeType":"YulTypedName","src":"1968:6:28","type":""},{"name":"value2","nativeSrc":"1976:6:28","nodeType":"YulTypedName","src":"1976:6:28","type":""},{"name":"value3","nativeSrc":"1984:6:28","nodeType":"YulTypedName","src":"1984:6:28","type":""},{"name":"value4","nativeSrc":"1992:6:28","nodeType":"YulTypedName","src":"1992:6:28","type":""},{"name":"value5","nativeSrc":"2000:6:28","nodeType":"YulTypedName","src":"2000:6:28","type":""},{"name":"value6","nativeSrc":"2008:6:28","nodeType":"YulTypedName","src":"2008:6:28","type":""}],"src":"1843:935:28"},{"body":{"nativeSrc":"2899:102:28","nodeType":"YulBlock","src":"2899:102:28","statements":[{"nativeSrc":"2909:26:28","nodeType":"YulAssignment","src":"2909:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2921:9:28","nodeType":"YulIdentifier","src":"2921:9:28"},{"kind":"number","nativeSrc":"2932:2:28","nodeType":"YulLiteral","src":"2932:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2917:3:28","nodeType":"YulIdentifier","src":"2917:3:28"},"nativeSrc":"2917:18:28","nodeType":"YulFunctionCall","src":"2917:18:28"},"variableNames":[{"name":"tail","nativeSrc":"2909:4:28","nodeType":"YulIdentifier","src":"2909:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2951:9:28","nodeType":"YulIdentifier","src":"2951:9:28"},{"arguments":[{"name":"value0","nativeSrc":"2966:6:28","nodeType":"YulIdentifier","src":"2966:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2982:3:28","nodeType":"YulLiteral","src":"2982:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"2987:1:28","nodeType":"YulLiteral","src":"2987:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2978:3:28","nodeType":"YulIdentifier","src":"2978:3:28"},"nativeSrc":"2978:11:28","nodeType":"YulFunctionCall","src":"2978:11:28"},{"kind":"number","nativeSrc":"2991:1:28","nodeType":"YulLiteral","src":"2991:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2974:3:28","nodeType":"YulIdentifier","src":"2974:3:28"},"nativeSrc":"2974:19:28","nodeType":"YulFunctionCall","src":"2974:19:28"}],"functionName":{"name":"and","nativeSrc":"2962:3:28","nodeType":"YulIdentifier","src":"2962:3:28"},"nativeSrc":"2962:32:28","nodeType":"YulFunctionCall","src":"2962:32:28"}],"functionName":{"name":"mstore","nativeSrc":"2944:6:28","nodeType":"YulIdentifier","src":"2944:6:28"},"nativeSrc":"2944:51:28","nodeType":"YulFunctionCall","src":"2944:51:28"},"nativeSrc":"2944:51:28","nodeType":"YulExpressionStatement","src":"2944:51:28"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$2218__to_t_address__fromStack_reversed","nativeSrc":"2783:218:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2868:9:28","nodeType":"YulTypedName","src":"2868:9:28","type":""},{"name":"value0","nativeSrc":"2879:6:28","nodeType":"YulTypedName","src":"2879:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2890:4:28","nodeType":"YulTypedName","src":"2890:4:28","type":""}],"src":"2783:218:28"},{"body":{"nativeSrc":"3197:14:28","nodeType":"YulBlock","src":"3197:14:28","statements":[{"nativeSrc":"3199:10:28","nodeType":"YulAssignment","src":"3199:10:28","value":{"name":"pos","nativeSrc":"3206:3:28","nodeType":"YulIdentifier","src":"3206:3:28"},"variableNames":[{"name":"end","nativeSrc":"3199:3:28","nodeType":"YulIdentifier","src":"3199:3:28"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"3006:205:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3181:3:28","nodeType":"YulTypedName","src":"3181:3:28","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3189:3:28","nodeType":"YulTypedName","src":"3189:3:28","type":""}],"src":"3006:205:28"},{"body":{"nativeSrc":"3390:182:28","nodeType":"YulBlock","src":"3390:182:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3407:9:28","nodeType":"YulIdentifier","src":"3407:9:28"},{"kind":"number","nativeSrc":"3418:2:28","nodeType":"YulLiteral","src":"3418:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3400:6:28","nodeType":"YulIdentifier","src":"3400:6:28"},"nativeSrc":"3400:21:28","nodeType":"YulFunctionCall","src":"3400:21:28"},"nativeSrc":"3400:21:28","nodeType":"YulExpressionStatement","src":"3400:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3441:9:28","nodeType":"YulIdentifier","src":"3441:9:28"},{"kind":"number","nativeSrc":"3452:2:28","nodeType":"YulLiteral","src":"3452:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3437:3:28","nodeType":"YulIdentifier","src":"3437:3:28"},"nativeSrc":"3437:18:28","nodeType":"YulFunctionCall","src":"3437:18:28"},{"kind":"number","nativeSrc":"3457:2:28","nodeType":"YulLiteral","src":"3457:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3430:6:28","nodeType":"YulIdentifier","src":"3430:6:28"},"nativeSrc":"3430:30:28","nodeType":"YulFunctionCall","src":"3430:30:28"},"nativeSrc":"3430:30:28","nodeType":"YulExpressionStatement","src":"3430:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3480:9:28","nodeType":"YulIdentifier","src":"3480:9:28"},{"kind":"number","nativeSrc":"3491:2:28","nodeType":"YulLiteral","src":"3491:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3476:3:28","nodeType":"YulIdentifier","src":"3476:3:28"},"nativeSrc":"3476:18:28","nodeType":"YulFunctionCall","src":"3476:18:28"},{"hexValue":"4661696c656420746f2073656e64204859504520746f204879706572436f7265","kind":"string","nativeSrc":"3496:34:28","nodeType":"YulLiteral","src":"3496:34:28","type":"","value":"Failed to send HYPE to HyperCore"}],"functionName":{"name":"mstore","nativeSrc":"3469:6:28","nodeType":"YulIdentifier","src":"3469:6:28"},"nativeSrc":"3469:62:28","nodeType":"YulFunctionCall","src":"3469:62:28"},"nativeSrc":"3469:62:28","nodeType":"YulExpressionStatement","src":"3469:62:28"},{"nativeSrc":"3540:26:28","nodeType":"YulAssignment","src":"3540:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3552:9:28","nodeType":"YulIdentifier","src":"3552:9:28"},{"kind":"number","nativeSrc":"3563:2:28","nodeType":"YulLiteral","src":"3563:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3548:3:28","nodeType":"YulIdentifier","src":"3548:3:28"},"nativeSrc":"3548:18:28","nodeType":"YulFunctionCall","src":"3548:18:28"},"variableNames":[{"name":"tail","nativeSrc":"3540:4:28","nodeType":"YulIdentifier","src":"3540:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f36cc36cc2d8409d2a1ca675856db8c0ac40991b9e411e41e2b8bba2f8104fb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3216:356:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3367:9:28","nodeType":"YulTypedName","src":"3367:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3381:4:28","nodeType":"YulTypedName","src":"3381:4:28","type":""}],"src":"3216:356:28"},{"body":{"nativeSrc":"3609:95:28","nodeType":"YulBlock","src":"3609:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3626:1:28","nodeType":"YulLiteral","src":"3626:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3633:3:28","nodeType":"YulLiteral","src":"3633:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"3638:10:28","nodeType":"YulLiteral","src":"3638:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3629:3:28","nodeType":"YulIdentifier","src":"3629:3:28"},"nativeSrc":"3629:20:28","nodeType":"YulFunctionCall","src":"3629:20:28"}],"functionName":{"name":"mstore","nativeSrc":"3619:6:28","nodeType":"YulIdentifier","src":"3619:6:28"},"nativeSrc":"3619:31:28","nodeType":"YulFunctionCall","src":"3619:31:28"},"nativeSrc":"3619:31:28","nodeType":"YulExpressionStatement","src":"3619:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3666:1:28","nodeType":"YulLiteral","src":"3666:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"3669:4:28","nodeType":"YulLiteral","src":"3669:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3659:6:28","nodeType":"YulIdentifier","src":"3659:6:28"},"nativeSrc":"3659:15:28","nodeType":"YulFunctionCall","src":"3659:15:28"},"nativeSrc":"3659:15:28","nodeType":"YulExpressionStatement","src":"3659:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3690:1:28","nodeType":"YulLiteral","src":"3690:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"3693:4:28","nodeType":"YulLiteral","src":"3693:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3683:6:28","nodeType":"YulIdentifier","src":"3683:6:28"},"nativeSrc":"3683:15:28","nodeType":"YulFunctionCall","src":"3683:15:28"},"nativeSrc":"3683:15:28","nodeType":"YulExpressionStatement","src":"3683:15:28"}]},"name":"panic_error_0x11","nativeSrc":"3577:127:28","nodeType":"YulFunctionDefinition","src":"3577:127:28"},{"body":{"nativeSrc":"3773:352:28","nodeType":"YulBlock","src":"3773:352:28","statements":[{"nativeSrc":"3783:16:28","nodeType":"YulVariableDeclaration","src":"3783:16:28","value":{"kind":"number","nativeSrc":"3798:1:28","nodeType":"YulLiteral","src":"3798:1:28","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"3787:7:28","nodeType":"YulTypedName","src":"3787:7:28","type":""}]},{"nativeSrc":"3808:10:28","nodeType":"YulAssignment","src":"3808:10:28","value":{"kind":"number","nativeSrc":"3817:1:28","nodeType":"YulLiteral","src":"3817:1:28","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"3808:5:28","nodeType":"YulIdentifier","src":"3808:5:28"}]},{"nativeSrc":"3827:13:28","nodeType":"YulAssignment","src":"3827:13:28","value":{"name":"_base","nativeSrc":"3835:5:28","nodeType":"YulIdentifier","src":"3835:5:28"},"variableNames":[{"name":"base","nativeSrc":"3827:4:28","nodeType":"YulIdentifier","src":"3827:4:28"}]},{"body":{"nativeSrc":"3891:228:28","nodeType":"YulBlock","src":"3891:228:28","statements":[{"body":{"nativeSrc":"3936:22:28","nodeType":"YulBlock","src":"3936:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3938:16:28","nodeType":"YulIdentifier","src":"3938:16:28"},"nativeSrc":"3938:18:28","nodeType":"YulFunctionCall","src":"3938:18:28"},"nativeSrc":"3938:18:28","nodeType":"YulExpressionStatement","src":"3938:18:28"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"3911:4:28","nodeType":"YulIdentifier","src":"3911:4:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3925:1:28","nodeType":"YulLiteral","src":"3925:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3921:3:28","nodeType":"YulIdentifier","src":"3921:3:28"},"nativeSrc":"3921:6:28","nodeType":"YulFunctionCall","src":"3921:6:28"},{"name":"base","nativeSrc":"3929:4:28","nodeType":"YulIdentifier","src":"3929:4:28"}],"functionName":{"name":"div","nativeSrc":"3917:3:28","nodeType":"YulIdentifier","src":"3917:3:28"},"nativeSrc":"3917:17:28","nodeType":"YulFunctionCall","src":"3917:17:28"}],"functionName":{"name":"gt","nativeSrc":"3908:2:28","nodeType":"YulIdentifier","src":"3908:2:28"},"nativeSrc":"3908:27:28","nodeType":"YulFunctionCall","src":"3908:27:28"},"nativeSrc":"3905:53:28","nodeType":"YulIf","src":"3905:53:28"},{"body":{"nativeSrc":"3997:29:28","nodeType":"YulBlock","src":"3997:29:28","statements":[{"nativeSrc":"3999:25:28","nodeType":"YulAssignment","src":"3999:25:28","value":{"arguments":[{"name":"power","nativeSrc":"4012:5:28","nodeType":"YulIdentifier","src":"4012:5:28"},{"name":"base","nativeSrc":"4019:4:28","nodeType":"YulIdentifier","src":"4019:4:28"}],"functionName":{"name":"mul","nativeSrc":"4008:3:28","nodeType":"YulIdentifier","src":"4008:3:28"},"nativeSrc":"4008:16:28","nodeType":"YulFunctionCall","src":"4008:16:28"},"variableNames":[{"name":"power","nativeSrc":"3999:5:28","nodeType":"YulIdentifier","src":"3999:5:28"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"3978:8:28","nodeType":"YulIdentifier","src":"3978:8:28"},{"name":"power_1","nativeSrc":"3988:7:28","nodeType":"YulIdentifier","src":"3988:7:28"}],"functionName":{"name":"and","nativeSrc":"3974:3:28","nodeType":"YulIdentifier","src":"3974:3:28"},"nativeSrc":"3974:22:28","nodeType":"YulFunctionCall","src":"3974:22:28"},"nativeSrc":"3971:55:28","nodeType":"YulIf","src":"3971:55:28"},{"nativeSrc":"4039:23:28","nodeType":"YulAssignment","src":"4039:23:28","value":{"arguments":[{"name":"base","nativeSrc":"4051:4:28","nodeType":"YulIdentifier","src":"4051:4:28"},{"name":"base","nativeSrc":"4057:4:28","nodeType":"YulIdentifier","src":"4057:4:28"}],"functionName":{"name":"mul","nativeSrc":"4047:3:28","nodeType":"YulIdentifier","src":"4047:3:28"},"nativeSrc":"4047:15:28","nodeType":"YulFunctionCall","src":"4047:15:28"},"variableNames":[{"name":"base","nativeSrc":"4039:4:28","nodeType":"YulIdentifier","src":"4039:4:28"}]},{"nativeSrc":"4075:34:28","nodeType":"YulAssignment","src":"4075:34:28","value":{"arguments":[{"name":"power_1","nativeSrc":"4091:7:28","nodeType":"YulIdentifier","src":"4091:7:28"},{"name":"exponent","nativeSrc":"4100:8:28","nodeType":"YulIdentifier","src":"4100:8:28"}],"functionName":{"name":"shr","nativeSrc":"4087:3:28","nodeType":"YulIdentifier","src":"4087:3:28"},"nativeSrc":"4087:22:28","nodeType":"YulFunctionCall","src":"4087:22:28"},"variableNames":[{"name":"exponent","nativeSrc":"4075:8:28","nodeType":"YulIdentifier","src":"4075:8:28"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"3860:8:28","nodeType":"YulIdentifier","src":"3860:8:28"},{"name":"power_1","nativeSrc":"3870:7:28","nodeType":"YulIdentifier","src":"3870:7:28"}],"functionName":{"name":"gt","nativeSrc":"3857:2:28","nodeType":"YulIdentifier","src":"3857:2:28"},"nativeSrc":"3857:21:28","nodeType":"YulFunctionCall","src":"3857:21:28"},"nativeSrc":"3849:270:28","nodeType":"YulForLoop","post":{"nativeSrc":"3879:3:28","nodeType":"YulBlock","src":"3879:3:28","statements":[]},"pre":{"nativeSrc":"3853:3:28","nodeType":"YulBlock","src":"3853:3:28","statements":[]},"src":"3849:270:28"}]},"name":"checked_exp_helper","nativeSrc":"3709:416:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"3737:5:28","nodeType":"YulTypedName","src":"3737:5:28","type":""},{"name":"exponent","nativeSrc":"3744:8:28","nodeType":"YulTypedName","src":"3744:8:28","type":""}],"returnVariables":[{"name":"power","nativeSrc":"3757:5:28","nodeType":"YulTypedName","src":"3757:5:28","type":""},{"name":"base","nativeSrc":"3764:4:28","nodeType":"YulTypedName","src":"3764:4:28","type":""}],"src":"3709:416:28"},{"body":{"nativeSrc":"4189:747:28","nodeType":"YulBlock","src":"4189:747:28","statements":[{"body":{"nativeSrc":"4227:52:28","nodeType":"YulBlock","src":"4227:52:28","statements":[{"nativeSrc":"4241:10:28","nodeType":"YulAssignment","src":"4241:10:28","value":{"kind":"number","nativeSrc":"4250:1:28","nodeType":"YulLiteral","src":"4250:1:28","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"4241:5:28","nodeType":"YulIdentifier","src":"4241:5:28"}]},{"nativeSrc":"4264:5:28","nodeType":"YulLeave","src":"4264:5:28"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4209:8:28","nodeType":"YulIdentifier","src":"4209:8:28"}],"functionName":{"name":"iszero","nativeSrc":"4202:6:28","nodeType":"YulIdentifier","src":"4202:6:28"},"nativeSrc":"4202:16:28","nodeType":"YulFunctionCall","src":"4202:16:28"},"nativeSrc":"4199:80:28","nodeType":"YulIf","src":"4199:80:28"},{"body":{"nativeSrc":"4312:52:28","nodeType":"YulBlock","src":"4312:52:28","statements":[{"nativeSrc":"4326:10:28","nodeType":"YulAssignment","src":"4326:10:28","value":{"kind":"number","nativeSrc":"4335:1:28","nodeType":"YulLiteral","src":"4335:1:28","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"4326:5:28","nodeType":"YulIdentifier","src":"4326:5:28"}]},{"nativeSrc":"4349:5:28","nodeType":"YulLeave","src":"4349:5:28"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"4298:4:28","nodeType":"YulIdentifier","src":"4298:4:28"}],"functionName":{"name":"iszero","nativeSrc":"4291:6:28","nodeType":"YulIdentifier","src":"4291:6:28"},"nativeSrc":"4291:12:28","nodeType":"YulFunctionCall","src":"4291:12:28"},"nativeSrc":"4288:76:28","nodeType":"YulIf","src":"4288:76:28"},{"cases":[{"body":{"nativeSrc":"4400:52:28","nodeType":"YulBlock","src":"4400:52:28","statements":[{"nativeSrc":"4414:10:28","nodeType":"YulAssignment","src":"4414:10:28","value":{"kind":"number","nativeSrc":"4423:1:28","nodeType":"YulLiteral","src":"4423:1:28","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"4414:5:28","nodeType":"YulIdentifier","src":"4414:5:28"}]},{"nativeSrc":"4437:5:28","nodeType":"YulLeave","src":"4437:5:28"}]},"nativeSrc":"4393:59:28","nodeType":"YulCase","src":"4393:59:28","value":{"kind":"number","nativeSrc":"4398:1:28","nodeType":"YulLiteral","src":"4398:1:28","type":"","value":"1"}},{"body":{"nativeSrc":"4468:123:28","nodeType":"YulBlock","src":"4468:123:28","statements":[{"body":{"nativeSrc":"4503:22:28","nodeType":"YulBlock","src":"4503:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4505:16:28","nodeType":"YulIdentifier","src":"4505:16:28"},"nativeSrc":"4505:18:28","nodeType":"YulFunctionCall","src":"4505:18:28"},"nativeSrc":"4505:18:28","nodeType":"YulExpressionStatement","src":"4505:18:28"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4488:8:28","nodeType":"YulIdentifier","src":"4488:8:28"},{"kind":"number","nativeSrc":"4498:3:28","nodeType":"YulLiteral","src":"4498:3:28","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"4485:2:28","nodeType":"YulIdentifier","src":"4485:2:28"},"nativeSrc":"4485:17:28","nodeType":"YulFunctionCall","src":"4485:17:28"},"nativeSrc":"4482:43:28","nodeType":"YulIf","src":"4482:43:28"},{"nativeSrc":"4538:25:28","nodeType":"YulAssignment","src":"4538:25:28","value":{"arguments":[{"name":"exponent","nativeSrc":"4551:8:28","nodeType":"YulIdentifier","src":"4551:8:28"},{"kind":"number","nativeSrc":"4561:1:28","nodeType":"YulLiteral","src":"4561:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4547:3:28","nodeType":"YulIdentifier","src":"4547:3:28"},"nativeSrc":"4547:16:28","nodeType":"YulFunctionCall","src":"4547:16:28"},"variableNames":[{"name":"power","nativeSrc":"4538:5:28","nodeType":"YulIdentifier","src":"4538:5:28"}]},{"nativeSrc":"4576:5:28","nodeType":"YulLeave","src":"4576:5:28"}]},"nativeSrc":"4461:130:28","nodeType":"YulCase","src":"4461:130:28","value":{"kind":"number","nativeSrc":"4466:1:28","nodeType":"YulLiteral","src":"4466:1:28","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"4380:4:28","nodeType":"YulIdentifier","src":"4380:4:28"},"nativeSrc":"4373:218:28","nodeType":"YulSwitch","src":"4373:218:28"},{"body":{"nativeSrc":"4689:70:28","nodeType":"YulBlock","src":"4689:70:28","statements":[{"nativeSrc":"4703:28:28","nodeType":"YulAssignment","src":"4703:28:28","value":{"arguments":[{"name":"base","nativeSrc":"4716:4:28","nodeType":"YulIdentifier","src":"4716:4:28"},{"name":"exponent","nativeSrc":"4722:8:28","nodeType":"YulIdentifier","src":"4722:8:28"}],"functionName":{"name":"exp","nativeSrc":"4712:3:28","nodeType":"YulIdentifier","src":"4712:3:28"},"nativeSrc":"4712:19:28","nodeType":"YulFunctionCall","src":"4712:19:28"},"variableNames":[{"name":"power","nativeSrc":"4703:5:28","nodeType":"YulIdentifier","src":"4703:5:28"}]},{"nativeSrc":"4744:5:28","nodeType":"YulLeave","src":"4744:5:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"4613:4:28","nodeType":"YulIdentifier","src":"4613:4:28"},{"kind":"number","nativeSrc":"4619:2:28","nodeType":"YulLiteral","src":"4619:2:28","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"4610:2:28","nodeType":"YulIdentifier","src":"4610:2:28"},"nativeSrc":"4610:12:28","nodeType":"YulFunctionCall","src":"4610:12:28"},{"arguments":[{"name":"exponent","nativeSrc":"4627:8:28","nodeType":"YulIdentifier","src":"4627:8:28"},{"kind":"number","nativeSrc":"4637:2:28","nodeType":"YulLiteral","src":"4637:2:28","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"4624:2:28","nodeType":"YulIdentifier","src":"4624:2:28"},"nativeSrc":"4624:16:28","nodeType":"YulFunctionCall","src":"4624:16:28"}],"functionName":{"name":"and","nativeSrc":"4606:3:28","nodeType":"YulIdentifier","src":"4606:3:28"},"nativeSrc":"4606:35:28","nodeType":"YulFunctionCall","src":"4606:35:28"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"4650:4:28","nodeType":"YulIdentifier","src":"4650:4:28"},{"kind":"number","nativeSrc":"4656:3:28","nodeType":"YulLiteral","src":"4656:3:28","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"4647:2:28","nodeType":"YulIdentifier","src":"4647:2:28"},"nativeSrc":"4647:13:28","nodeType":"YulFunctionCall","src":"4647:13:28"},{"arguments":[{"name":"exponent","nativeSrc":"4665:8:28","nodeType":"YulIdentifier","src":"4665:8:28"},{"kind":"number","nativeSrc":"4675:2:28","nodeType":"YulLiteral","src":"4675:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4662:2:28","nodeType":"YulIdentifier","src":"4662:2:28"},"nativeSrc":"4662:16:28","nodeType":"YulFunctionCall","src":"4662:16:28"}],"functionName":{"name":"and","nativeSrc":"4643:3:28","nodeType":"YulIdentifier","src":"4643:3:28"},"nativeSrc":"4643:36:28","nodeType":"YulFunctionCall","src":"4643:36:28"}],"functionName":{"name":"or","nativeSrc":"4603:2:28","nodeType":"YulIdentifier","src":"4603:2:28"},"nativeSrc":"4603:77:28","nodeType":"YulFunctionCall","src":"4603:77:28"},"nativeSrc":"4600:159:28","nodeType":"YulIf","src":"4600:159:28"},{"nativeSrc":"4768:57:28","nodeType":"YulVariableDeclaration","src":"4768:57:28","value":{"arguments":[{"name":"base","nativeSrc":"4810:4:28","nodeType":"YulIdentifier","src":"4810:4:28"},{"name":"exponent","nativeSrc":"4816:8:28","nodeType":"YulIdentifier","src":"4816:8:28"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"4791:18:28","nodeType":"YulIdentifier","src":"4791:18:28"},"nativeSrc":"4791:34:28","nodeType":"YulFunctionCall","src":"4791:34:28"},"variables":[{"name":"power_1","nativeSrc":"4772:7:28","nodeType":"YulTypedName","src":"4772:7:28","type":""},{"name":"base_1","nativeSrc":"4781:6:28","nodeType":"YulTypedName","src":"4781:6:28","type":""}]},{"body":{"nativeSrc":"4870:22:28","nodeType":"YulBlock","src":"4870:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4872:16:28","nodeType":"YulIdentifier","src":"4872:16:28"},"nativeSrc":"4872:18:28","nodeType":"YulFunctionCall","src":"4872:18:28"},"nativeSrc":"4872:18:28","nodeType":"YulExpressionStatement","src":"4872:18:28"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"4840:7:28","nodeType":"YulIdentifier","src":"4840:7:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4857:1:28","nodeType":"YulLiteral","src":"4857:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4853:3:28","nodeType":"YulIdentifier","src":"4853:3:28"},"nativeSrc":"4853:6:28","nodeType":"YulFunctionCall","src":"4853:6:28"},{"name":"base_1","nativeSrc":"4861:6:28","nodeType":"YulIdentifier","src":"4861:6:28"}],"functionName":{"name":"div","nativeSrc":"4849:3:28","nodeType":"YulIdentifier","src":"4849:3:28"},"nativeSrc":"4849:19:28","nodeType":"YulFunctionCall","src":"4849:19:28"}],"functionName":{"name":"gt","nativeSrc":"4837:2:28","nodeType":"YulIdentifier","src":"4837:2:28"},"nativeSrc":"4837:32:28","nodeType":"YulFunctionCall","src":"4837:32:28"},"nativeSrc":"4834:58:28","nodeType":"YulIf","src":"4834:58:28"},{"nativeSrc":"4901:29:28","nodeType":"YulAssignment","src":"4901:29:28","value":{"arguments":[{"name":"power_1","nativeSrc":"4914:7:28","nodeType":"YulIdentifier","src":"4914:7:28"},{"name":"base_1","nativeSrc":"4923:6:28","nodeType":"YulIdentifier","src":"4923:6:28"}],"functionName":{"name":"mul","nativeSrc":"4910:3:28","nodeType":"YulIdentifier","src":"4910:3:28"},"nativeSrc":"4910:20:28","nodeType":"YulFunctionCall","src":"4910:20:28"},"variableNames":[{"name":"power","nativeSrc":"4901:5:28","nodeType":"YulIdentifier","src":"4901:5:28"}]}]},"name":"checked_exp_unsigned","nativeSrc":"4130:806:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"4160:4:28","nodeType":"YulTypedName","src":"4160:4:28","type":""},{"name":"exponent","nativeSrc":"4166:8:28","nodeType":"YulTypedName","src":"4166:8:28","type":""}],"returnVariables":[{"name":"power","nativeSrc":"4179:5:28","nodeType":"YulTypedName","src":"4179:5:28","type":""}],"src":"4130:806:28"},{"body":{"nativeSrc":"5011:61:28","nodeType":"YulBlock","src":"5011:61:28","statements":[{"nativeSrc":"5021:45:28","nodeType":"YulAssignment","src":"5021:45:28","value":{"arguments":[{"name":"base","nativeSrc":"5051:4:28","nodeType":"YulIdentifier","src":"5051:4:28"},{"name":"exponent","nativeSrc":"5057:8:28","nodeType":"YulIdentifier","src":"5057:8:28"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"5030:20:28","nodeType":"YulIdentifier","src":"5030:20:28"},"nativeSrc":"5030:36:28","nodeType":"YulFunctionCall","src":"5030:36:28"},"variableNames":[{"name":"power","nativeSrc":"5021:5:28","nodeType":"YulIdentifier","src":"5021:5:28"}]}]},"name":"checked_exp_t_uint256_t_uint256","nativeSrc":"4941:131:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"4982:4:28","nodeType":"YulTypedName","src":"4982:4:28","type":""},{"name":"exponent","nativeSrc":"4988:8:28","nodeType":"YulTypedName","src":"4988:8:28","type":""}],"returnVariables":[{"name":"power","nativeSrc":"5001:5:28","nodeType":"YulTypedName","src":"5001:5:28","type":""}],"src":"4941:131:28"},{"body":{"nativeSrc":"5123:171:28","nodeType":"YulBlock","src":"5123:171:28","statements":[{"body":{"nativeSrc":"5154:111:28","nodeType":"YulBlock","src":"5154:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5175:1:28","nodeType":"YulLiteral","src":"5175:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5182:3:28","nodeType":"YulLiteral","src":"5182:3:28","type":"","value":"224"},{"kind":"number","nativeSrc":"5187:10:28","nodeType":"YulLiteral","src":"5187:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5178:3:28","nodeType":"YulIdentifier","src":"5178:3:28"},"nativeSrc":"5178:20:28","nodeType":"YulFunctionCall","src":"5178:20:28"}],"functionName":{"name":"mstore","nativeSrc":"5168:6:28","nodeType":"YulIdentifier","src":"5168:6:28"},"nativeSrc":"5168:31:28","nodeType":"YulFunctionCall","src":"5168:31:28"},"nativeSrc":"5168:31:28","nodeType":"YulExpressionStatement","src":"5168:31:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5219:1:28","nodeType":"YulLiteral","src":"5219:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"5222:4:28","nodeType":"YulLiteral","src":"5222:4:28","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"5212:6:28","nodeType":"YulIdentifier","src":"5212:6:28"},"nativeSrc":"5212:15:28","nodeType":"YulFunctionCall","src":"5212:15:28"},"nativeSrc":"5212:15:28","nodeType":"YulExpressionStatement","src":"5212:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5247:1:28","nodeType":"YulLiteral","src":"5247:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"5250:4:28","nodeType":"YulLiteral","src":"5250:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5240:6:28","nodeType":"YulIdentifier","src":"5240:6:28"},"nativeSrc":"5240:15:28","nodeType":"YulFunctionCall","src":"5240:15:28"},"nativeSrc":"5240:15:28","nodeType":"YulExpressionStatement","src":"5240:15:28"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"5143:1:28","nodeType":"YulIdentifier","src":"5143:1:28"}],"functionName":{"name":"iszero","nativeSrc":"5136:6:28","nodeType":"YulIdentifier","src":"5136:6:28"},"nativeSrc":"5136:9:28","nodeType":"YulFunctionCall","src":"5136:9:28"},"nativeSrc":"5133:132:28","nodeType":"YulIf","src":"5133:132:28"},{"nativeSrc":"5274:14:28","nodeType":"YulAssignment","src":"5274:14:28","value":{"arguments":[{"name":"x","nativeSrc":"5283:1:28","nodeType":"YulIdentifier","src":"5283:1:28"},{"name":"y","nativeSrc":"5286:1:28","nodeType":"YulIdentifier","src":"5286:1:28"}],"functionName":{"name":"div","nativeSrc":"5279:3:28","nodeType":"YulIdentifier","src":"5279:3:28"},"nativeSrc":"5279:9:28","nodeType":"YulFunctionCall","src":"5279:9:28"},"variableNames":[{"name":"r","nativeSrc":"5274:1:28","nodeType":"YulIdentifier","src":"5274:1:28"}]}]},"name":"checked_div_t_uint256","nativeSrc":"5077:217:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5108:1:28","nodeType":"YulTypedName","src":"5108:1:28","type":""},{"name":"y","nativeSrc":"5111:1:28","nodeType":"YulTypedName","src":"5111:1:28","type":""}],"returnVariables":[{"name":"r","nativeSrc":"5117:1:28","nodeType":"YulTypedName","src":"5117:1:28","type":""}],"src":"5077:217:28"},{"body":{"nativeSrc":"5452:243:28","nodeType":"YulBlock","src":"5452:243:28","statements":[{"nativeSrc":"5462:26:28","nodeType":"YulAssignment","src":"5462:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"5474:9:28","nodeType":"YulIdentifier","src":"5474:9:28"},{"kind":"number","nativeSrc":"5485:2:28","nodeType":"YulLiteral","src":"5485:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5470:3:28","nodeType":"YulIdentifier","src":"5470:3:28"},"nativeSrc":"5470:18:28","nodeType":"YulFunctionCall","src":"5470:18:28"},"variableNames":[{"name":"tail","nativeSrc":"5462:4:28","nodeType":"YulIdentifier","src":"5462:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5504:9:28","nodeType":"YulIdentifier","src":"5504:9:28"},{"arguments":[{"name":"value0","nativeSrc":"5519:6:28","nodeType":"YulIdentifier","src":"5519:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5535:3:28","nodeType":"YulLiteral","src":"5535:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"5540:1:28","nodeType":"YulLiteral","src":"5540:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5531:3:28","nodeType":"YulIdentifier","src":"5531:3:28"},"nativeSrc":"5531:11:28","nodeType":"YulFunctionCall","src":"5531:11:28"},{"kind":"number","nativeSrc":"5544:1:28","nodeType":"YulLiteral","src":"5544:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5527:3:28","nodeType":"YulIdentifier","src":"5527:3:28"},"nativeSrc":"5527:19:28","nodeType":"YulFunctionCall","src":"5527:19:28"}],"functionName":{"name":"and","nativeSrc":"5515:3:28","nodeType":"YulIdentifier","src":"5515:3:28"},"nativeSrc":"5515:32:28","nodeType":"YulFunctionCall","src":"5515:32:28"}],"functionName":{"name":"mstore","nativeSrc":"5497:6:28","nodeType":"YulIdentifier","src":"5497:6:28"},"nativeSrc":"5497:51:28","nodeType":"YulFunctionCall","src":"5497:51:28"},"nativeSrc":"5497:51:28","nodeType":"YulExpressionStatement","src":"5497:51:28"},{"nativeSrc":"5557:28:28","nodeType":"YulVariableDeclaration","src":"5557:28:28","value":{"kind":"number","nativeSrc":"5567:18:28","nodeType":"YulLiteral","src":"5567:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"5561:2:28","nodeType":"YulTypedName","src":"5561:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5605:9:28","nodeType":"YulIdentifier","src":"5605:9:28"},{"kind":"number","nativeSrc":"5616:2:28","nodeType":"YulLiteral","src":"5616:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5601:3:28","nodeType":"YulIdentifier","src":"5601:3:28"},"nativeSrc":"5601:18:28","nodeType":"YulFunctionCall","src":"5601:18:28"},{"arguments":[{"name":"value1","nativeSrc":"5625:6:28","nodeType":"YulIdentifier","src":"5625:6:28"},{"name":"_1","nativeSrc":"5633:2:28","nodeType":"YulIdentifier","src":"5633:2:28"}],"functionName":{"name":"and","nativeSrc":"5621:3:28","nodeType":"YulIdentifier","src":"5621:3:28"},"nativeSrc":"5621:15:28","nodeType":"YulFunctionCall","src":"5621:15:28"}],"functionName":{"name":"mstore","nativeSrc":"5594:6:28","nodeType":"YulIdentifier","src":"5594:6:28"},"nativeSrc":"5594:43:28","nodeType":"YulFunctionCall","src":"5594:43:28"},"nativeSrc":"5594:43:28","nodeType":"YulExpressionStatement","src":"5594:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5657:9:28","nodeType":"YulIdentifier","src":"5657:9:28"},{"kind":"number","nativeSrc":"5668:2:28","nodeType":"YulLiteral","src":"5668:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5653:3:28","nodeType":"YulIdentifier","src":"5653:3:28"},"nativeSrc":"5653:18:28","nodeType":"YulFunctionCall","src":"5653:18:28"},{"arguments":[{"name":"value2","nativeSrc":"5677:6:28","nodeType":"YulIdentifier","src":"5677:6:28"},{"name":"_1","nativeSrc":"5685:2:28","nodeType":"YulIdentifier","src":"5685:2:28"}],"functionName":{"name":"and","nativeSrc":"5673:3:28","nodeType":"YulIdentifier","src":"5673:3:28"},"nativeSrc":"5673:15:28","nodeType":"YulFunctionCall","src":"5673:15:28"}],"functionName":{"name":"mstore","nativeSrc":"5646:6:28","nodeType":"YulIdentifier","src":"5646:6:28"},"nativeSrc":"5646:43:28","nodeType":"YulFunctionCall","src":"5646:43:28"},"nativeSrc":"5646:43:28","nodeType":"YulExpressionStatement","src":"5646:43:28"}]},"name":"abi_encode_tuple_t_address_t_uint64_t_uint64__to_t_address_t_uint64_t_uint64__fromStack_reversed","nativeSrc":"5299:396:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5405:9:28","nodeType":"YulTypedName","src":"5405:9:28","type":""},{"name":"value2","nativeSrc":"5416:6:28","nodeType":"YulTypedName","src":"5416:6:28","type":""},{"name":"value1","nativeSrc":"5424:6:28","nodeType":"YulTypedName","src":"5424:6:28","type":""},{"name":"value0","nativeSrc":"5432:6:28","nodeType":"YulTypedName","src":"5432:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5443:4:28","nodeType":"YulTypedName","src":"5443:4:28","type":""}],"src":"5299:396:28"},{"body":{"nativeSrc":"5847:455:28","nodeType":"YulBlock","src":"5847:455:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5864:9:28","nodeType":"YulIdentifier","src":"5864:9:28"},{"kind":"number","nativeSrc":"5875:2:28","nodeType":"YulLiteral","src":"5875:2:28","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"5857:6:28","nodeType":"YulIdentifier","src":"5857:6:28"},"nativeSrc":"5857:21:28","nodeType":"YulFunctionCall","src":"5857:21:28"},"nativeSrc":"5857:21:28","nodeType":"YulExpressionStatement","src":"5857:21:28"},{"nativeSrc":"5887:27:28","nodeType":"YulVariableDeclaration","src":"5887:27:28","value":{"arguments":[{"name":"value0","nativeSrc":"5907:6:28","nodeType":"YulIdentifier","src":"5907:6:28"}],"functionName":{"name":"mload","nativeSrc":"5901:5:28","nodeType":"YulIdentifier","src":"5901:5:28"},"nativeSrc":"5901:13:28","nodeType":"YulFunctionCall","src":"5901:13:28"},"variables":[{"name":"length","nativeSrc":"5891:6:28","nodeType":"YulTypedName","src":"5891:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5934:9:28","nodeType":"YulIdentifier","src":"5934:9:28"},{"kind":"number","nativeSrc":"5945:2:28","nodeType":"YulLiteral","src":"5945:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5930:3:28","nodeType":"YulIdentifier","src":"5930:3:28"},"nativeSrc":"5930:18:28","nodeType":"YulFunctionCall","src":"5930:18:28"},{"name":"length","nativeSrc":"5950:6:28","nodeType":"YulIdentifier","src":"5950:6:28"}],"functionName":{"name":"mstore","nativeSrc":"5923:6:28","nodeType":"YulIdentifier","src":"5923:6:28"},"nativeSrc":"5923:34:28","nodeType":"YulFunctionCall","src":"5923:34:28"},"nativeSrc":"5923:34:28","nodeType":"YulExpressionStatement","src":"5923:34:28"},{"nativeSrc":"5966:10:28","nodeType":"YulVariableDeclaration","src":"5966:10:28","value":{"kind":"number","nativeSrc":"5975:1:28","nodeType":"YulLiteral","src":"5975:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5970:1:28","nodeType":"YulTypedName","src":"5970:1:28","type":""}]},{"body":{"nativeSrc":"6037:92:28","nodeType":"YulBlock","src":"6037:92:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6066:9:28","nodeType":"YulIdentifier","src":"6066:9:28"},{"name":"i","nativeSrc":"6077:1:28","nodeType":"YulIdentifier","src":"6077:1:28"}],"functionName":{"name":"add","nativeSrc":"6062:3:28","nodeType":"YulIdentifier","src":"6062:3:28"},"nativeSrc":"6062:17:28","nodeType":"YulFunctionCall","src":"6062:17:28"},{"kind":"number","nativeSrc":"6081:2:28","nodeType":"YulLiteral","src":"6081:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6058:3:28","nodeType":"YulIdentifier","src":"6058:3:28"},"nativeSrc":"6058:26:28","nodeType":"YulFunctionCall","src":"6058:26:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"6100:6:28","nodeType":"YulIdentifier","src":"6100:6:28"},{"name":"i","nativeSrc":"6108:1:28","nodeType":"YulIdentifier","src":"6108:1:28"}],"functionName":{"name":"add","nativeSrc":"6096:3:28","nodeType":"YulIdentifier","src":"6096:3:28"},"nativeSrc":"6096:14:28","nodeType":"YulFunctionCall","src":"6096:14:28"},{"kind":"number","nativeSrc":"6112:4:28","nodeType":"YulLiteral","src":"6112:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6092:3:28","nodeType":"YulIdentifier","src":"6092:3:28"},"nativeSrc":"6092:25:28","nodeType":"YulFunctionCall","src":"6092:25:28"}],"functionName":{"name":"mload","nativeSrc":"6086:5:28","nodeType":"YulIdentifier","src":"6086:5:28"},"nativeSrc":"6086:32:28","nodeType":"YulFunctionCall","src":"6086:32:28"}],"functionName":{"name":"mstore","nativeSrc":"6051:6:28","nodeType":"YulIdentifier","src":"6051:6:28"},"nativeSrc":"6051:68:28","nodeType":"YulFunctionCall","src":"6051:68:28"},"nativeSrc":"6051:68:28","nodeType":"YulExpressionStatement","src":"6051:68:28"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5996:1:28","nodeType":"YulIdentifier","src":"5996:1:28"},{"name":"length","nativeSrc":"5999:6:28","nodeType":"YulIdentifier","src":"5999:6:28"}],"functionName":{"name":"lt","nativeSrc":"5993:2:28","nodeType":"YulIdentifier","src":"5993:2:28"},"nativeSrc":"5993:13:28","nodeType":"YulFunctionCall","src":"5993:13:28"},"nativeSrc":"5985:144:28","nodeType":"YulForLoop","post":{"nativeSrc":"6007:21:28","nodeType":"YulBlock","src":"6007:21:28","statements":[{"nativeSrc":"6009:17:28","nodeType":"YulAssignment","src":"6009:17:28","value":{"arguments":[{"name":"i","nativeSrc":"6018:1:28","nodeType":"YulIdentifier","src":"6018:1:28"},{"kind":"number","nativeSrc":"6021:4:28","nodeType":"YulLiteral","src":"6021:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6014:3:28","nodeType":"YulIdentifier","src":"6014:3:28"},"nativeSrc":"6014:12:28","nodeType":"YulFunctionCall","src":"6014:12:28"},"variableNames":[{"name":"i","nativeSrc":"6009:1:28","nodeType":"YulIdentifier","src":"6009:1:28"}]}]},"pre":{"nativeSrc":"5989:3:28","nodeType":"YulBlock","src":"5989:3:28","statements":[]},"src":"5985:144:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6153:9:28","nodeType":"YulIdentifier","src":"6153:9:28"},{"name":"length","nativeSrc":"6164:6:28","nodeType":"YulIdentifier","src":"6164:6:28"}],"functionName":{"name":"add","nativeSrc":"6149:3:28","nodeType":"YulIdentifier","src":"6149:3:28"},"nativeSrc":"6149:22:28","nodeType":"YulFunctionCall","src":"6149:22:28"},{"kind":"number","nativeSrc":"6173:2:28","nodeType":"YulLiteral","src":"6173:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6145:3:28","nodeType":"YulIdentifier","src":"6145:3:28"},"nativeSrc":"6145:31:28","nodeType":"YulFunctionCall","src":"6145:31:28"},{"kind":"number","nativeSrc":"6178:1:28","nodeType":"YulLiteral","src":"6178:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6138:6:28","nodeType":"YulIdentifier","src":"6138:6:28"},"nativeSrc":"6138:42:28","nodeType":"YulFunctionCall","src":"6138:42:28"},"nativeSrc":"6138:42:28","nodeType":"YulExpressionStatement","src":"6138:42:28"},{"nativeSrc":"6189:62:28","nodeType":"YulAssignment","src":"6189:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6205:9:28","nodeType":"YulIdentifier","src":"6205:9:28"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"6224:6:28","nodeType":"YulIdentifier","src":"6224:6:28"},{"kind":"number","nativeSrc":"6232:2:28","nodeType":"YulLiteral","src":"6232:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"6220:3:28","nodeType":"YulIdentifier","src":"6220:3:28"},"nativeSrc":"6220:15:28","nodeType":"YulFunctionCall","src":"6220:15:28"},{"arguments":[{"kind":"number","nativeSrc":"6241:2:28","nodeType":"YulLiteral","src":"6241:2:28","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"6237:3:28","nodeType":"YulIdentifier","src":"6237:3:28"},"nativeSrc":"6237:7:28","nodeType":"YulFunctionCall","src":"6237:7:28"}],"functionName":{"name":"and","nativeSrc":"6216:3:28","nodeType":"YulIdentifier","src":"6216:3:28"},"nativeSrc":"6216:29:28","nodeType":"YulFunctionCall","src":"6216:29:28"}],"functionName":{"name":"add","nativeSrc":"6201:3:28","nodeType":"YulIdentifier","src":"6201:3:28"},"nativeSrc":"6201:45:28","nodeType":"YulFunctionCall","src":"6201:45:28"},{"kind":"number","nativeSrc":"6248:2:28","nodeType":"YulLiteral","src":"6248:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6197:3:28","nodeType":"YulIdentifier","src":"6197:3:28"},"nativeSrc":"6197:54:28","nodeType":"YulFunctionCall","src":"6197:54:28"},"variableNames":[{"name":"tail","nativeSrc":"6189:4:28","nodeType":"YulIdentifier","src":"6189:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6271:9:28","nodeType":"YulIdentifier","src":"6271:9:28"},{"kind":"number","nativeSrc":"6282:4:28","nodeType":"YulLiteral","src":"6282:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6267:3:28","nodeType":"YulIdentifier","src":"6267:3:28"},"nativeSrc":"6267:20:28","nodeType":"YulFunctionCall","src":"6267:20:28"},{"name":"value1","nativeSrc":"6289:6:28","nodeType":"YulIdentifier","src":"6289:6:28"}],"functionName":{"name":"mstore","nativeSrc":"6260:6:28","nodeType":"YulIdentifier","src":"6260:6:28"},"nativeSrc":"6260:36:28","nodeType":"YulFunctionCall","src":"6260:36:28"},"nativeSrc":"6260:36:28","nodeType":"YulExpressionStatement","src":"6260:36:28"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"5700:602:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5808:9:28","nodeType":"YulTypedName","src":"5808:9:28","type":""},{"name":"value1","nativeSrc":"5819:6:28","nodeType":"YulTypedName","src":"5819:6:28","type":""},{"name":"value0","nativeSrc":"5827:6:28","nodeType":"YulTypedName","src":"5827:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5838:4:28","nodeType":"YulTypedName","src":"5838:4:28","type":""}],"src":"5700:602:28"},{"body":{"nativeSrc":"6401:281:28","nodeType":"YulBlock","src":"6401:281:28","statements":[{"nativeSrc":"6411:26:28","nodeType":"YulVariableDeclaration","src":"6411:26:28","value":{"arguments":[{"name":"array","nativeSrc":"6431:5:28","nodeType":"YulIdentifier","src":"6431:5:28"}],"functionName":{"name":"mload","nativeSrc":"6425:5:28","nodeType":"YulIdentifier","src":"6425:5:28"},"nativeSrc":"6425:12:28","nodeType":"YulFunctionCall","src":"6425:12:28"},"variables":[{"name":"length","nativeSrc":"6415:6:28","nodeType":"YulTypedName","src":"6415:6:28","type":""}]},{"nativeSrc":"6446:33:28","nodeType":"YulVariableDeclaration","src":"6446:33:28","value":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"6466:5:28","nodeType":"YulIdentifier","src":"6466:5:28"},{"kind":"number","nativeSrc":"6473:4:28","nodeType":"YulLiteral","src":"6473:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6462:3:28","nodeType":"YulIdentifier","src":"6462:3:28"},"nativeSrc":"6462:16:28","nodeType":"YulFunctionCall","src":"6462:16:28"}],"functionName":{"name":"mload","nativeSrc":"6456:5:28","nodeType":"YulIdentifier","src":"6456:5:28"},"nativeSrc":"6456:23:28","nodeType":"YulFunctionCall","src":"6456:23:28"},"variables":[{"name":"_1","nativeSrc":"6450:2:28","nodeType":"YulTypedName","src":"6450:2:28","type":""}]},{"nativeSrc":"6488:41:28","nodeType":"YulVariableDeclaration","src":"6488:41:28","value":{"arguments":[{"kind":"number","nativeSrc":"6502:26:28","nodeType":"YulLiteral","src":"6502:26:28","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"6498:3:28","nodeType":"YulIdentifier","src":"6498:3:28"},"nativeSrc":"6498:31:28","nodeType":"YulFunctionCall","src":"6498:31:28"},"variables":[{"name":"_2","nativeSrc":"6492:2:28","nodeType":"YulTypedName","src":"6492:2:28","type":""}]},{"nativeSrc":"6538:20:28","nodeType":"YulAssignment","src":"6538:20:28","value":{"arguments":[{"name":"_1","nativeSrc":"6551:2:28","nodeType":"YulIdentifier","src":"6551:2:28"},{"name":"_2","nativeSrc":"6555:2:28","nodeType":"YulIdentifier","src":"6555:2:28"}],"functionName":{"name":"and","nativeSrc":"6547:3:28","nodeType":"YulIdentifier","src":"6547:3:28"},"nativeSrc":"6547:11:28","nodeType":"YulFunctionCall","src":"6547:11:28"},"variableNames":[{"name":"value","nativeSrc":"6538:5:28","nodeType":"YulIdentifier","src":"6538:5:28"}]},{"body":{"nativeSrc":"6593:83:28","nodeType":"YulBlock","src":"6593:83:28","statements":[{"nativeSrc":"6607:59:28","nodeType":"YulAssignment","src":"6607:59:28","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"6624:2:28","nodeType":"YulIdentifier","src":"6624:2:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6636:1:28","nodeType":"YulLiteral","src":"6636:1:28","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"6643:2:28","nodeType":"YulLiteral","src":"6643:2:28","type":"","value":"20"},{"name":"length","nativeSrc":"6647:6:28","nodeType":"YulIdentifier","src":"6647:6:28"}],"functionName":{"name":"sub","nativeSrc":"6639:3:28","nodeType":"YulIdentifier","src":"6639:3:28"},"nativeSrc":"6639:15:28","nodeType":"YulFunctionCall","src":"6639:15:28"}],"functionName":{"name":"shl","nativeSrc":"6632:3:28","nodeType":"YulIdentifier","src":"6632:3:28"},"nativeSrc":"6632:23:28","nodeType":"YulFunctionCall","src":"6632:23:28"},{"name":"_2","nativeSrc":"6657:2:28","nodeType":"YulIdentifier","src":"6657:2:28"}],"functionName":{"name":"shl","nativeSrc":"6628:3:28","nodeType":"YulIdentifier","src":"6628:3:28"},"nativeSrc":"6628:32:28","nodeType":"YulFunctionCall","src":"6628:32:28"}],"functionName":{"name":"and","nativeSrc":"6620:3:28","nodeType":"YulIdentifier","src":"6620:3:28"},"nativeSrc":"6620:41:28","nodeType":"YulFunctionCall","src":"6620:41:28"},{"name":"_2","nativeSrc":"6663:2:28","nodeType":"YulIdentifier","src":"6663:2:28"}],"functionName":{"name":"and","nativeSrc":"6616:3:28","nodeType":"YulIdentifier","src":"6616:3:28"},"nativeSrc":"6616:50:28","nodeType":"YulFunctionCall","src":"6616:50:28"},"variableNames":[{"name":"value","nativeSrc":"6607:5:28","nodeType":"YulIdentifier","src":"6607:5:28"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6573:6:28","nodeType":"YulIdentifier","src":"6573:6:28"},{"kind":"number","nativeSrc":"6581:2:28","nodeType":"YulLiteral","src":"6581:2:28","type":"","value":"20"}],"functionName":{"name":"lt","nativeSrc":"6570:2:28","nodeType":"YulIdentifier","src":"6570:2:28"},"nativeSrc":"6570:14:28","nodeType":"YulFunctionCall","src":"6570:14:28"},"nativeSrc":"6567:109:28","nodeType":"YulIf","src":"6567:109:28"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20","nativeSrc":"6307:375:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"6381:5:28","nodeType":"YulTypedName","src":"6381:5:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6391:5:28","nodeType":"YulTypedName","src":"6391:5:28","type":""}],"src":"6307:375:28"},{"body":{"nativeSrc":"6816:145:28","nodeType":"YulBlock","src":"6816:145:28","statements":[{"nativeSrc":"6826:26:28","nodeType":"YulAssignment","src":"6826:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6838:9:28","nodeType":"YulIdentifier","src":"6838:9:28"},{"kind":"number","nativeSrc":"6849:2:28","nodeType":"YulLiteral","src":"6849:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6834:3:28","nodeType":"YulIdentifier","src":"6834:3:28"},"nativeSrc":"6834:18:28","nodeType":"YulFunctionCall","src":"6834:18:28"},"variableNames":[{"name":"tail","nativeSrc":"6826:4:28","nodeType":"YulIdentifier","src":"6826:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6868:9:28","nodeType":"YulIdentifier","src":"6868:9:28"},{"arguments":[{"name":"value0","nativeSrc":"6883:6:28","nodeType":"YulIdentifier","src":"6883:6:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6899:3:28","nodeType":"YulLiteral","src":"6899:3:28","type":"","value":"160"},{"kind":"number","nativeSrc":"6904:1:28","nodeType":"YulLiteral","src":"6904:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6895:3:28","nodeType":"YulIdentifier","src":"6895:3:28"},"nativeSrc":"6895:11:28","nodeType":"YulFunctionCall","src":"6895:11:28"},{"kind":"number","nativeSrc":"6908:1:28","nodeType":"YulLiteral","src":"6908:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6891:3:28","nodeType":"YulIdentifier","src":"6891:3:28"},"nativeSrc":"6891:19:28","nodeType":"YulFunctionCall","src":"6891:19:28"}],"functionName":{"name":"and","nativeSrc":"6879:3:28","nodeType":"YulIdentifier","src":"6879:3:28"},"nativeSrc":"6879:32:28","nodeType":"YulFunctionCall","src":"6879:32:28"}],"functionName":{"name":"mstore","nativeSrc":"6861:6:28","nodeType":"YulIdentifier","src":"6861:6:28"},"nativeSrc":"6861:51:28","nodeType":"YulFunctionCall","src":"6861:51:28"},"nativeSrc":"6861:51:28","nodeType":"YulExpressionStatement","src":"6861:51:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6932:9:28","nodeType":"YulIdentifier","src":"6932:9:28"},{"kind":"number","nativeSrc":"6943:2:28","nodeType":"YulLiteral","src":"6943:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6928:3:28","nodeType":"YulIdentifier","src":"6928:3:28"},"nativeSrc":"6928:18:28","nodeType":"YulFunctionCall","src":"6928:18:28"},{"name":"value1","nativeSrc":"6948:6:28","nodeType":"YulIdentifier","src":"6948:6:28"}],"functionName":{"name":"mstore","nativeSrc":"6921:6:28","nodeType":"YulIdentifier","src":"6921:6:28"},"nativeSrc":"6921:34:28","nodeType":"YulFunctionCall","src":"6921:34:28"},"nativeSrc":"6921:34:28","nodeType":"YulExpressionStatement","src":"6921:34:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"6687:274:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6777:9:28","nodeType":"YulTypedName","src":"6777:9:28","type":""},{"name":"value1","nativeSrc":"6788:6:28","nodeType":"YulTypedName","src":"6788:6:28","type":""},{"name":"value0","nativeSrc":"6796:6:28","nodeType":"YulTypedName","src":"6796:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6807:4:28","nodeType":"YulTypedName","src":"6807:4:28","type":""}],"src":"6687:274:28"},{"body":{"nativeSrc":"7044:199:28","nodeType":"YulBlock","src":"7044:199:28","statements":[{"body":{"nativeSrc":"7090:16:28","nodeType":"YulBlock","src":"7090:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7099:1:28","nodeType":"YulLiteral","src":"7099:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7102:1:28","nodeType":"YulLiteral","src":"7102:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7092:6:28","nodeType":"YulIdentifier","src":"7092:6:28"},"nativeSrc":"7092:12:28","nodeType":"YulFunctionCall","src":"7092:12:28"},"nativeSrc":"7092:12:28","nodeType":"YulExpressionStatement","src":"7092:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7065:7:28","nodeType":"YulIdentifier","src":"7065:7:28"},{"name":"headStart","nativeSrc":"7074:9:28","nodeType":"YulIdentifier","src":"7074:9:28"}],"functionName":{"name":"sub","nativeSrc":"7061:3:28","nodeType":"YulIdentifier","src":"7061:3:28"},"nativeSrc":"7061:23:28","nodeType":"YulFunctionCall","src":"7061:23:28"},{"kind":"number","nativeSrc":"7086:2:28","nodeType":"YulLiteral","src":"7086:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7057:3:28","nodeType":"YulIdentifier","src":"7057:3:28"},"nativeSrc":"7057:32:28","nodeType":"YulFunctionCall","src":"7057:32:28"},"nativeSrc":"7054:52:28","nodeType":"YulIf","src":"7054:52:28"},{"nativeSrc":"7115:29:28","nodeType":"YulVariableDeclaration","src":"7115:29:28","value":{"arguments":[{"name":"headStart","nativeSrc":"7134:9:28","nodeType":"YulIdentifier","src":"7134:9:28"}],"functionName":{"name":"mload","nativeSrc":"7128:5:28","nodeType":"YulIdentifier","src":"7128:5:28"},"nativeSrc":"7128:16:28","nodeType":"YulFunctionCall","src":"7128:16:28"},"variables":[{"name":"value","nativeSrc":"7119:5:28","nodeType":"YulTypedName","src":"7119:5:28","type":""}]},{"body":{"nativeSrc":"7197:16:28","nodeType":"YulBlock","src":"7197:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7206:1:28","nodeType":"YulLiteral","src":"7206:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7209:1:28","nodeType":"YulLiteral","src":"7209:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7199:6:28","nodeType":"YulIdentifier","src":"7199:6:28"},"nativeSrc":"7199:12:28","nodeType":"YulFunctionCall","src":"7199:12:28"},"nativeSrc":"7199:12:28","nodeType":"YulExpressionStatement","src":"7199:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7166:5:28","nodeType":"YulIdentifier","src":"7166:5:28"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7187:5:28","nodeType":"YulIdentifier","src":"7187:5:28"}],"functionName":{"name":"iszero","nativeSrc":"7180:6:28","nodeType":"YulIdentifier","src":"7180:6:28"},"nativeSrc":"7180:13:28","nodeType":"YulFunctionCall","src":"7180:13:28"}],"functionName":{"name":"iszero","nativeSrc":"7173:6:28","nodeType":"YulIdentifier","src":"7173:6:28"},"nativeSrc":"7173:21:28","nodeType":"YulFunctionCall","src":"7173:21:28"}],"functionName":{"name":"eq","nativeSrc":"7163:2:28","nodeType":"YulIdentifier","src":"7163:2:28"},"nativeSrc":"7163:32:28","nodeType":"YulFunctionCall","src":"7163:32:28"}],"functionName":{"name":"iszero","nativeSrc":"7156:6:28","nodeType":"YulIdentifier","src":"7156:6:28"},"nativeSrc":"7156:40:28","nodeType":"YulFunctionCall","src":"7156:40:28"},"nativeSrc":"7153:60:28","nodeType":"YulIf","src":"7153:60:28"},{"nativeSrc":"7222:15:28","nodeType":"YulAssignment","src":"7222:15:28","value":{"name":"value","nativeSrc":"7232:5:28","nodeType":"YulIdentifier","src":"7232:5:28"},"variableNames":[{"name":"value0","nativeSrc":"7222:6:28","nodeType":"YulIdentifier","src":"7222:6:28"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"6966:277:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7010:9:28","nodeType":"YulTypedName","src":"7010:9:28","type":""},{"name":"dataEnd","nativeSrc":"7021:7:28","nodeType":"YulTypedName","src":"7021:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7033:6:28","nodeType":"YulTypedName","src":"7033:6:28","type":""}],"src":"6966:277:28"},{"body":{"nativeSrc":"7378:201:28","nodeType":"YulBlock","src":"7378:201:28","statements":[{"body":{"nativeSrc":"7416:16:28","nodeType":"YulBlock","src":"7416:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7425:1:28","nodeType":"YulLiteral","src":"7425:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7428:1:28","nodeType":"YulLiteral","src":"7428:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7418:6:28","nodeType":"YulIdentifier","src":"7418:6:28"},"nativeSrc":"7418:12:28","nodeType":"YulFunctionCall","src":"7418:12:28"},"nativeSrc":"7418:12:28","nodeType":"YulExpressionStatement","src":"7418:12:28"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"7394:10:28","nodeType":"YulIdentifier","src":"7394:10:28"},{"name":"endIndex","nativeSrc":"7406:8:28","nodeType":"YulIdentifier","src":"7406:8:28"}],"functionName":{"name":"gt","nativeSrc":"7391:2:28","nodeType":"YulIdentifier","src":"7391:2:28"},"nativeSrc":"7391:24:28","nodeType":"YulFunctionCall","src":"7391:24:28"},"nativeSrc":"7388:44:28","nodeType":"YulIf","src":"7388:44:28"},{"body":{"nativeSrc":"7465:16:28","nodeType":"YulBlock","src":"7465:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7474:1:28","nodeType":"YulLiteral","src":"7474:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7477:1:28","nodeType":"YulLiteral","src":"7477:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7467:6:28","nodeType":"YulIdentifier","src":"7467:6:28"},"nativeSrc":"7467:12:28","nodeType":"YulFunctionCall","src":"7467:12:28"},"nativeSrc":"7467:12:28","nodeType":"YulExpressionStatement","src":"7467:12:28"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"7447:8:28","nodeType":"YulIdentifier","src":"7447:8:28"},{"name":"length","nativeSrc":"7457:6:28","nodeType":"YulIdentifier","src":"7457:6:28"}],"functionName":{"name":"gt","nativeSrc":"7444:2:28","nodeType":"YulIdentifier","src":"7444:2:28"},"nativeSrc":"7444:20:28","nodeType":"YulFunctionCall","src":"7444:20:28"},"nativeSrc":"7441:40:28","nodeType":"YulIf","src":"7441:40:28"},{"nativeSrc":"7490:36:28","nodeType":"YulAssignment","src":"7490:36:28","value":{"arguments":[{"name":"offset","nativeSrc":"7507:6:28","nodeType":"YulIdentifier","src":"7507:6:28"},{"name":"startIndex","nativeSrc":"7515:10:28","nodeType":"YulIdentifier","src":"7515:10:28"}],"functionName":{"name":"add","nativeSrc":"7503:3:28","nodeType":"YulIdentifier","src":"7503:3:28"},"nativeSrc":"7503:23:28","nodeType":"YulFunctionCall","src":"7503:23:28"},"variableNames":[{"name":"offsetOut","nativeSrc":"7490:9:28","nodeType":"YulIdentifier","src":"7490:9:28"}]},{"nativeSrc":"7535:38:28","nodeType":"YulAssignment","src":"7535:38:28","value":{"arguments":[{"name":"endIndex","nativeSrc":"7552:8:28","nodeType":"YulIdentifier","src":"7552:8:28"},{"name":"startIndex","nativeSrc":"7562:10:28","nodeType":"YulIdentifier","src":"7562:10:28"}],"functionName":{"name":"sub","nativeSrc":"7548:3:28","nodeType":"YulIdentifier","src":"7548:3:28"},"nativeSrc":"7548:25:28","nodeType":"YulFunctionCall","src":"7548:25:28"},"variableNames":[{"name":"lengthOut","nativeSrc":"7535:9:28","nodeType":"YulIdentifier","src":"7535:9:28"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"7248:331:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7312:6:28","nodeType":"YulTypedName","src":"7312:6:28","type":""},{"name":"length","nativeSrc":"7320:6:28","nodeType":"YulTypedName","src":"7320:6:28","type":""},{"name":"startIndex","nativeSrc":"7328:10:28","nodeType":"YulTypedName","src":"7328:10:28","type":""},{"name":"endIndex","nativeSrc":"7340:8:28","nodeType":"YulTypedName","src":"7340:8:28","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"7353:9:28","nodeType":"YulTypedName","src":"7353:9:28","type":""},{"name":"lengthOut","nativeSrc":"7364:9:28","nodeType":"YulTypedName","src":"7364:9:28","type":""}],"src":"7248:331:28"},{"body":{"nativeSrc":"7685:154:28","nodeType":"YulBlock","src":"7685:154:28","statements":[{"nativeSrc":"7695:28:28","nodeType":"YulAssignment","src":"7695:28:28","value":{"arguments":[{"name":"array","nativeSrc":"7717:5:28","nodeType":"YulIdentifier","src":"7717:5:28"}],"functionName":{"name":"calldataload","nativeSrc":"7704:12:28","nodeType":"YulIdentifier","src":"7704:12:28"},"nativeSrc":"7704:19:28","nodeType":"YulFunctionCall","src":"7704:19:28"},"variableNames":[{"name":"value","nativeSrc":"7695:5:28","nodeType":"YulIdentifier","src":"7695:5:28"}]},{"body":{"nativeSrc":"7755:78:28","nodeType":"YulBlock","src":"7755:78:28","statements":[{"nativeSrc":"7769:54:28","nodeType":"YulAssignment","src":"7769:54:28","value":{"arguments":[{"name":"value","nativeSrc":"7782:5:28","nodeType":"YulIdentifier","src":"7782:5:28"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7797:1:28","nodeType":"YulLiteral","src":"7797:1:28","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"7804:2:28","nodeType":"YulLiteral","src":"7804:2:28","type":"","value":"32"},{"name":"len","nativeSrc":"7808:3:28","nodeType":"YulIdentifier","src":"7808:3:28"}],"functionName":{"name":"sub","nativeSrc":"7800:3:28","nodeType":"YulIdentifier","src":"7800:3:28"},"nativeSrc":"7800:12:28","nodeType":"YulFunctionCall","src":"7800:12:28"}],"functionName":{"name":"shl","nativeSrc":"7793:3:28","nodeType":"YulIdentifier","src":"7793:3:28"},"nativeSrc":"7793:20:28","nodeType":"YulFunctionCall","src":"7793:20:28"},{"arguments":[{"kind":"number","nativeSrc":"7819:1:28","nodeType":"YulLiteral","src":"7819:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"7815:3:28","nodeType":"YulIdentifier","src":"7815:3:28"},"nativeSrc":"7815:6:28","nodeType":"YulFunctionCall","src":"7815:6:28"}],"functionName":{"name":"shl","nativeSrc":"7789:3:28","nodeType":"YulIdentifier","src":"7789:3:28"},"nativeSrc":"7789:33:28","nodeType":"YulFunctionCall","src":"7789:33:28"}],"functionName":{"name":"and","nativeSrc":"7778:3:28","nodeType":"YulIdentifier","src":"7778:3:28"},"nativeSrc":"7778:45:28","nodeType":"YulFunctionCall","src":"7778:45:28"},"variableNames":[{"name":"value","nativeSrc":"7769:5:28","nodeType":"YulIdentifier","src":"7769:5:28"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"7738:3:28","nodeType":"YulIdentifier","src":"7738:3:28"},{"kind":"number","nativeSrc":"7743:2:28","nodeType":"YulLiteral","src":"7743:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7735:2:28","nodeType":"YulIdentifier","src":"7735:2:28"},"nativeSrc":"7735:11:28","nodeType":"YulFunctionCall","src":"7735:11:28"},"nativeSrc":"7732:101:28","nodeType":"YulIf","src":"7732:101:28"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32","nativeSrc":"7584:255:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"7660:5:28","nodeType":"YulTypedName","src":"7660:5:28","type":""},{"name":"len","nativeSrc":"7667:3:28","nodeType":"YulTypedName","src":"7667:3:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7675:5:28","nodeType":"YulTypedName","src":"7675:5:28","type":""}],"src":"7584:255:28"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IOFT_$1233__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_address(add(headStart, 96))\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$2218__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_4f36cc36cc2d8409d2a1ca675856db8c0ac40991b9e411e41e2b8bba2f8104fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Failed to send HYPE to HyperCore\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint64_t_uint64__to_t_address_t_uint64_t_uint64__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        let _1 := 0xffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let length := mload(value0)\n        mstore(add(headStart, 64), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(headStart, i), 96), mload(add(add(value0, i), 0x20)))\n        }\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n        mstore(add(headStart, 0x20), value1)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value\n    {\n        let length := mload(array)\n        let _1 := mload(add(array, 0x20))\n        let _2 := not(0xffffffffffffffffffffffff)\n        value := and(_1, _2)\n        if lt(length, 20)\n        {\n            value := and(and(_1, shl(shl(3, sub(20, length)), _2)), _2)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32(array, len) -> value\n    {\n        value := calldataload(array)\n        if lt(len, 32)\n        {\n            value := and(value, shl(shl(3, sub(32, len)), not(0)))\n        }\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1418":[{"length":32,"start":502},{"length":32,"start":1396}],"1420":[{"length":32,"start":554},{"length":32,"start":1582}],"1439":[{"length":32,"start":410},{"length":32,"start":810}],"1442":[{"length":32,"start":606}],"1445":[{"length":32,"start":751},{"length":32,"start":1443}],"1447":[{"length":32,"start":280},{"length":32,"start":1618}]},"linkReferences":{},"object":"6080604052600436106100c65760003560e01c80639a923b9a1161007f578063d0a1026011610059578063d0a1026014610295578063d9acf0ec146102a8578063dd4c07c8146102c8578063fc0c546a146102dd57600080fd5b80639a923b9a146102185780639b5215f61461024c578063b7c312e61461028057600080fd5b80630813f32f146100d2578063303f1e811461010657806355cd1378146101485780635e280f11146101885780636e3bf0ad146101bc57806384123305146101e457600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506100e861045181565b60405167ffffffffffffffff90911681526020015b60405180910390f35b34801561011257600080fd5b5061013a7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100fd565b34801561015457600080fd5b5061017073333333333333333333333333333333333333333381565b6040516001600160a01b0390911681526020016100fd565b34801561019457600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b3480156101c857600080fd5b5061017073222222222222222222222222222222222222222281565b3480156101f057600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b34801561022457600080fd5b506100e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561025857600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b61029361028e36600461077f565b610311565b005b6102936102a33660046107f2565b61031f565b3480156102b457600080fd5b506102936102c336600461077f565b6103a6565b3480156102d457600080fd5b5061013a600a81565b3480156102e957600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b61031b82826103b0565b5050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461036f5760405163eee35e6f60e01b81523360048201526024015b60405180910390fd5b60008061037c8787610504565b909250905034156103915761039182346103b0565b61039b828261055d565b505050505050505050565b61031b828261055d565b6040516000907322222222222222222222222222222222222222229083908381818185875af1925050503d8060008114610406576040519150601f19603f3d011682016040523d82523d6000602084013e61040b565b606091505b505090508061045c5760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e64204859504520746f204879706572436f72656044820152606401610366565b733333333333333333333333333333333333333333630b0ac0ab84610451610485600a8061098a565b61048f9087610996565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015267ffffffffffffffff9182166024840152166044820152606401600060405180830381600087803b1580156104e757600080fd5b505af11580156104fb573d6000803e3d6000fd5b50505050505050565b600080600061051385856106f6565b9050601481511461053b5780516040516309b3473160e01b81526103669183916004016109b8565b61054481610a0d565b60601c92506105538585610743565b9150509250929050565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106109190610a49565b50733333333333333333333333333333333333333333630b0ac0ab837f00000000000000000000000000000000000000000000000000000000000000006106787f0000000000000000000000000000000000000000000000000000000000000000600a61098a565b6106829086610996565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015267ffffffffffffffff9182166024840152166044820152606401600060405180830381600087803b1580156106da57600080fd5b505af11580156106ee573d6000803e3d6000fd5b505050505050565b606061070582604c8186610a6b565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b92915050565b6000610753602c600c8486610a6b565b61075c91610a95565b9392505050565b80356001600160a01b038116811461077a57600080fd5b919050565b6000806040838503121561079257600080fd5b61079b83610763565b946020939093013593505050565b60008083601f8401126107bb57600080fd5b50813567ffffffffffffffff8111156107d357600080fd5b6020830191508360208285010111156107eb57600080fd5b9250929050565b600080600080600080600060a0888a03121561080d57600080fd5b61081688610763565b965060208801359550604088013567ffffffffffffffff8082111561083a57600080fd5b6108468b838c016107a9565b909750955085915061085a60608b01610763565b945060808a013591508082111561087057600080fd5b5061087d8a828b016107a9565b989b979a50959850939692959293505050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156108e15781600019048211156108c7576108c7610890565b808516156108d457918102915b93841c93908002906108ab565b509250929050565b6000826108f85750600161073d565b816109055750600061073d565b816001811461091b576002811461092557610941565b600191505061073d565b60ff84111561093657610936610890565b50506001821b61073d565b5060208310610133831016604e8410600b8410161715610964575081810a61073d565b61096e83836108a6565b806000190482111561098257610982610890565b029392505050565b600061075c83836108e9565b6000826109b357634e487b7160e01b600052601260045260246000fd5b500490565b604081526000835180604084015260005b818110156109e657602081870181015160608684010152016109c9565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b805160208201516bffffffffffffffffffffffff198082169291906014831015610a415780818460140360031b1b83161693505b505050919050565b600060208284031215610a5b57600080fd5b8151801515811461075c57600080fd5b60008085851115610a7b57600080fd5b83861115610a8857600080fd5b5050820193919092039150565b8035602083101561073d57600019602084900360031b1b169291505056fea264697066735822122096e575855173f3aff01684e119e497ee12c59c8fa020778b512faf8933c71a8e64736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A923B9A GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD0A10260 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD0A10260 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xD9ACF0EC EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xDD4C07C8 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A923B9A EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x9B5215F6 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xB7C312E6 EQ PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x813F32F EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x303F1E81 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x55CD1378 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x5E280F11 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x6E3BF0AD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x84123305 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xCD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x451 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH20 0x3333333333333333333333333333333333333333 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH20 0x2222222222222222222222222222222222222222 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH1 0xA DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x31B DUP3 DUP3 PUSH2 0x3B0 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x36F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEEE35E6F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x37C DUP8 DUP8 PUSH2 0x504 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP CALLVALUE ISZERO PUSH2 0x391 JUMPI PUSH2 0x391 DUP3 CALLVALUE PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x39B DUP3 DUP3 PUSH2 0x55D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x31B DUP3 DUP3 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH20 0x2222222222222222222222222222222222222222 SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x40B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64204859504520746F204879706572436F7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x366 JUMP JUMPDEST PUSH20 0x3333333333333333333333333333333333333333 PUSH4 0xB0AC0AB DUP5 PUSH2 0x451 PUSH2 0x485 PUSH1 0xA DUP1 PUSH2 0x98A JUMP JUMPDEST PUSH2 0x48F SWAP1 DUP8 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x513 DUP6 DUP6 PUSH2 0x6F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ PUSH2 0x53B JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x9B34731 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x366 SWAP2 DUP4 SWAP2 PUSH1 0x4 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x544 DUP2 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP PUSH2 0x553 DUP6 DUP6 PUSH2 0x743 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST POP PUSH20 0x3333333333333333333333333333333333333333 PUSH4 0xB0AC0AB DUP4 PUSH32 0x0 PUSH2 0x678 PUSH32 0x0 PUSH1 0xA PUSH2 0x98A JUMP JUMPDEST PUSH2 0x682 SWAP1 DUP7 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x705 DUP3 PUSH1 0x4C DUP2 DUP7 PUSH2 0xA6B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x753 PUSH1 0x2C PUSH1 0xC DUP5 DUP7 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x75C SWAP2 PUSH2 0xA95 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x77A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79B DUP4 PUSH2 0x763 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x7BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP9 PUSH2 0x763 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x83A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x846 DUP12 DUP4 DUP13 ADD PUSH2 0x7A9 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x85A PUSH1 0x60 DUP12 ADD PUSH2 0x763 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87D DUP11 DUP3 DUP12 ADD PUSH2 0x7A9 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x8E1 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x8C7 JUMPI PUSH2 0x8C7 PUSH2 0x890 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x8D4 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x8AB JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x8F8 JUMPI POP PUSH1 0x1 PUSH2 0x73D JUMP JUMPDEST DUP2 PUSH2 0x905 JUMPI POP PUSH1 0x0 PUSH2 0x73D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x91B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x925 JUMPI PUSH2 0x941 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x73D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x936 JUMPI PUSH2 0x936 PUSH2 0x890 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x73D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x964 JUMPI POP DUP2 DUP2 EXP PUSH2 0x73D JUMP JUMPDEST PUSH2 0x96E DUP4 DUP4 PUSH2 0x8A6 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x982 JUMPI PUSH2 0x982 PUSH2 0x890 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75C DUP4 DUP4 PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9B3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x9C9 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 PUSH1 0x14 DUP4 LT ISZERO PUSH2 0xA41 JUMPI DUP1 DUP2 DUP5 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP4 POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0xA88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x20 DUP4 LT ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 NOT PUSH1 0x20 DUP5 SWAP1 SUB PUSH1 0x3 SHL SHL AND SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xE5 PUSH22 0x855173F3AFF01684E119E497EE12C59C8FA020778B51 0x2F 0xAF DUP10 CALLER 0xC7 BYTE DUP15 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"429:2362:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:49:12;;;;;;;;;;;;901:4;856:49;;;;;188:18:28;176:31;;;158:50;;146:2;131:18;856:49:12;;;;;;;;1088:32;;;;;;;;;;;;;;;;;;365:25:28;;;353:2;338:18;1088:32:12;219:177:28;640:93:12;;;;;;;;;;;;691:42;640:93;;;;;-1:-1:-1;;;;;565:32:28;;;547:51;;535:2;520:18;640:93:12;401:203:28;983:33:12;;;;;;;;;;;;;;;739:111;;;;;;;;;;;;807:42;739:111;;525:55;;;;;;;;;;;;;;;586:47;;;;;;;;;;;;;;;1022:25;;;;;;;;;;;;;;;2648:141:27;;;;;;:::i;:::-;;:::i;:::-;;1023:1485;;;;;;:::i;:::-;;:::i;2513:129::-;;;;;;;;;;-1:-1:-1;2513:129:27;;;;;:::i;:::-;;:::i;911:65:12:-;;;;;;;;;;;;970:6;911:65;;1053:29;;;;;;;;;;;;;;;2648:141:27;2740:42;2764:9;2775:6;2740:23;:42::i;:::-;2648:141;;:::o;1023:1485::-;1395:10;-1:-1:-1;;;;;1417:8:27;1395:31;;1391:124;;1449:55;;-1:-1:-1;;;1449:55:27;;1493:10;1449:55;;;547:51:28;520:18;;1449:55:27;;;;;;;;1391:124;1842:17;1861;1882:59;1932:8;;1882:49;:59::i;:::-;1841:100;;-1:-1:-1;1841:100:27;-1:-1:-1;2133:9:27;:13;2129:89;;2162:45;2186:9;2197;2162:23;:45::i;:::-;2458:43;2480:9;2491;2458:21;:43::i;:::-;1230:1278;;1023:1485;;;;;;;:::o;2513:129::-;2595:40;2617:9;2628:6;2595:21;:40::i;4962:436:12:-;5073:51;;5058:9;;807:42;;5112:6;;5058:9;5073:51;5058:9;5073:51;5112:6;807:42;5073:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5057:67;;;5142:4;5134:49;;;;-1:-1:-1;;;5134:49:12;;3418:2:28;5134:49:12;;;3400:21:28;;;3437:18;;;3430:30;3496:34;3476:18;;;3469:62;3548:18;;5134:49:12;3216:356:28;5134:49:12;691:42;5194:62;5270:9;901:4;5342:38;970:6;;5342:38;:::i;:::-;5333:47;;:6;:47;:::i;:::-;5194:197;;-1:-1:-1;;;;;;5194:197:12;;;;;;;-1:-1:-1;;;;;5515:32:28;;;5194:197:12;;;5497:51:28;5567:18;5621:15;;;5601:18;;;5594:43;5673:15;5653:18;;;5646:43;5470:18;;5194:197:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5047:351;4962:436;;:::o;1247:738:15:-;1350:17;1369;1398:20;1421:46;1451:15;;1421:29;:46::i;:::-;1398:69;;492:2;1606:7;:14;:53;1602:173;;1749:14;;1682:82;;-1:-1:-1;;;1682:82:15;;;;1740:7;;1682:82;;;:::i;1602:173::-;1895:16;1903:7;1895:16;:::i;:::-;1887:25;;1875:37;;1934:44;1962:15;;1934:27;:44::i;:::-;1922:56;;1388:597;1247:738;;;;;:::o;4616:340:12:-;4709:54;;-1:-1:-1;;;4709:54:12;;-1:-1:-1;;;;;4724:30:12;6879:32:28;;4709:54:12;;;6861:51:28;6928:18;;;6921:34;;;4709:5:12;:14;;;;6834:18:28;;4709:54:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;691:42:12;4773:62;4849:9;4872:23;4925:13;4931:7;4925:2;:13;:::i;:::-;4916:22;;:6;:22;:::i;:::-;4773:176;;-1:-1:-1;;;;;;4773:176:12;;;;;;;-1:-1:-1;;;;;5515:32:28;;;4773:176:12;;;5497:51:28;5567:18;5621:15;;;5601:18;;;5594:43;5673:15;5653:18;;;5646:43;5470:18;;4773:176:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4616:340;;:::o;2273:128:11:-;2337:12;2368:26;:4;335:2;2368:4;;:26;:::i;:::-;2361:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2361:33:11;;-1:-1:-1;;;;2273:128:11;;;;;:::o;1676:150::-;1738:7;1780:37;282:2;232;1780:4;;:37;:::i;:::-;1772:46;;;:::i;:::-;1764:55;1676:150;-1:-1:-1;;;1676:150:11:o;1054:173:28:-;1122:20;;-1:-1:-1;;;;;1171:31:28;;1161:42;;1151:70;;1217:1;1214;1207:12;1151:70;1054:173;;;:::o;1232:254::-;1300:6;1308;1361:2;1349:9;1340:7;1336:23;1332:32;1329:52;;;1377:1;1374;1367:12;1329:52;1400:29;1419:9;1400:29;:::i;:::-;1390:39;1476:2;1461:18;;;;1448:32;;-1:-1:-1;;;1232:254:28:o;1491:347::-;1542:8;1552:6;1606:3;1599:4;1591:6;1587:17;1583:27;1573:55;;1624:1;1621;1614:12;1573:55;-1:-1:-1;1647:20:28;;1690:18;1679:30;;1676:50;;;1722:1;1719;1712:12;1676:50;1759:4;1751:6;1747:17;1735:29;;1811:3;1804:4;1795:6;1787;1783:19;1779:30;1776:39;1773:59;;;1828:1;1825;1818:12;1773:59;1491:347;;;;;:::o;1843:935::-;1960:6;1968;1976;1984;1992;2000;2008;2061:3;2049:9;2040:7;2036:23;2032:33;2029:53;;;2078:1;2075;2068:12;2029:53;2101:29;2120:9;2101:29;:::i;:::-;2091:39;;2177:2;2166:9;2162:18;2149:32;2139:42;;2232:2;2221:9;2217:18;2204:32;2255:18;2296:2;2288:6;2285:14;2282:34;;;2312:1;2309;2302:12;2282:34;2351:58;2401:7;2392:6;2381:9;2377:22;2351:58;:::i;:::-;2428:8;;-1:-1:-1;2325:84:28;-1:-1:-1;2325:84:28;;-1:-1:-1;2482:38:28;2516:2;2501:18;;2482:38;:::i;:::-;2472:48;;2573:3;2562:9;2558:19;2545:33;2529:49;;2603:2;2593:8;2590:16;2587:36;;;2619:1;2616;2609:12;2587:36;;2658:60;2710:7;2699:8;2688:9;2684:24;2658:60;:::i;:::-;1843:935;;;;-1:-1:-1;1843:935:28;;-1:-1:-1;1843:935:28;;;;2632:86;;-1:-1:-1;;;1843:935:28:o;3577:127::-;3638:10;3633:3;3629:20;3626:1;3619:31;3669:4;3666:1;3659:15;3693:4;3690:1;3683:15;3709:416;3798:1;3835:5;3798:1;3849:270;3870:7;3860:8;3857:21;3849:270;;;3929:4;3925:1;3921:6;3917:17;3911:4;3908:27;3905:53;;;3938:18;;:::i;:::-;3988:7;3978:8;3974:22;3971:55;;;4008:16;;;;3971:55;4087:22;;;;4047:15;;;;3849:270;;;3853:3;3709:416;;;;;:::o;4130:806::-;4179:5;4209:8;4199:80;;-1:-1:-1;4250:1:28;4264:5;;4199:80;4298:4;4288:76;;-1:-1:-1;4335:1:28;4349:5;;4288:76;4380:4;4398:1;4393:59;;;;4466:1;4461:130;;;;4373:218;;4393:59;4423:1;4414:10;;4437:5;;;4461:130;4498:3;4488:8;4485:17;4482:43;;;4505:18;;:::i;:::-;-1:-1:-1;;4561:1:28;4547:16;;4576:5;;4373:218;;4675:2;4665:8;4662:16;4656:3;4650:4;4647:13;4643:36;4637:2;4627:8;4624:16;4619:2;4613:4;4610:12;4606:35;4603:77;4600:159;;;-1:-1:-1;4712:19:28;;;4744:5;;4600:159;4791:34;4816:8;4810:4;4791:34;:::i;:::-;4861:6;4857:1;4853:6;4849:19;4840:7;4837:32;4834:58;;;4872:18;;:::i;:::-;4910:20;;4130:806;-1:-1:-1;;;4130:806:28:o;4941:131::-;5001:5;5030:36;5057:8;5051:4;5030:36;:::i;5077:217::-;5117:1;5143;5133:132;;5187:10;5182:3;5178:20;5175:1;5168:31;5222:4;5219:1;5212:15;5250:4;5247:1;5240:15;5133:132;-1:-1:-1;5279:9:28;;5077:217::o;5700:602::-;5875:2;5864:9;5857:21;5838:4;5907:6;5901:13;5950:6;5945:2;5934:9;5930:18;5923:34;5975:1;5985:144;5999:6;5996:1;5993:13;5985:144;;;6112:4;6096:14;;;6092:25;;6086:32;6081:2;6062:17;;;6058:26;6051:68;6014:12;5985:144;;;5989:3;6178:1;6173:2;6164:6;6153:9;6149:22;6145:31;6138:42;6248:2;6241;6237:7;6232:2;6224:6;6220:15;6216:29;6205:9;6201:45;6197:54;6189:62;;;6289:6;6282:4;6271:9;6267:20;6260:36;5700:602;;;;;:::o;6307:375::-;6425:12;;6473:4;6462:16;;6456:23;-1:-1:-1;;6547:11:28;;;;6425:12;6456:23;6581:2;6570:14;;6567:109;;;6663:2;6657;6647:6;6643:2;6639:15;6636:1;6632:23;6628:32;6624:2;6620:41;6616:50;6607:59;;6567:109;;;;6307:375;;;:::o;6966:277::-;7033:6;7086:2;7074:9;7065:7;7061:23;7057:32;7054:52;;;7102:1;7099;7092:12;7054:52;7134:9;7128:16;7187:5;7180:13;7173:21;7166:5;7163:32;7153:60;;7209:1;7206;7199:12;7248:331;7353:9;7364;7406:8;7394:10;7391:24;7388:44;;;7428:1;7425;7418:12;7388:44;7457:6;7447:8;7444:20;7441:40;;;7477:1;7474;7467:12;7441:40;-1:-1:-1;;7503:23:28;;;7548:25;;;;;-1:-1:-1;7248:331:28:o;7584:255::-;7704:19;;7743:2;7735:11;;7732:101;;;-1:-1:-1;;7804:2:28;7800:12;;;7797:1;7793:20;7789:33;7778:45;7584:255;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"558600","executionCost":"infinite","totalCost":"infinite"},"external":{"HYPER_CORE_INDEX_ID()":"194","HYPER_CORE_INDEX_ID_DECIMAL_DIFF()":"261","HYPE_ASSET_BRIDGE_ADDRESS()":"305","L1WritePrecompileAddress()":"261","OFT_TOKEN_ASSET_BRIDGE_ADDRESS()":"infinite","OFT_TOKEN_CORE_INDEX_ID()":"infinite","endpoint()":"infinite","fundAddressOnHyperCore(address,uint256)":"infinite","lzCompose(address,bytes32,bytes,address,bytes)":"infinite","oft()":"infinite","sendAssetToHyperCore(address,uint256)":"infinite","token()":"infinite","weiDiff()":"infinite"}},"methodIdentifiers":{"HYPER_CORE_INDEX_ID()":"0813f32f","HYPER_CORE_INDEX_ID_DECIMAL_DIFF()":"dd4c07c8","HYPE_ASSET_BRIDGE_ADDRESS()":"6e3bf0ad","L1WritePrecompileAddress()":"55cd1378","OFT_TOKEN_ASSET_BRIDGE_ADDRESS()":"84123305","OFT_TOKEN_CORE_INDEX_ID()":"9a923b9a","endpoint()":"5e280f11","fundAddressOnHyperCore(address,uint256)":"b7c312e6","lzCompose(address,bytes32,bytes,address,bytes)":"d0a10260","oft()":"9b5215f6","sendAssetToHyperCore(address,uint256)":"d9acf0ec","token()":"fc0c546a","weiDiff()":"303f1e81"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lzEndpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oft\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_hlIndexId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_weiDiff\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notEndpointAddress\",\"type\":\"address\"}],\"name\":\"HyperLiquidComposer_InvalidCall_NotEndpoint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalOFTAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receivedOFTAddress\",\"type\":\"address\"}],\"name\":\"HyperLiquidComposer_InvalidCall_NotOFT\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HYPER_CORE_INDEX_ID\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HYPER_CORE_INDEX_ID_DECIMAL_DIFF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HYPE_ASSET_BRIDGE_ADDRESS\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"L1WritePrecompileAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OFT_TOKEN_ASSET_BRIDGE_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OFT_TOKEN_CORE_INDEX_ID\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiever\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fundAddressOnHyperCore\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oft\",\"outputs\":[{\"internalType\":\"contract IOFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiever\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendAssetToHyperCore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiDiff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"lzCompose(address,bytes32,bytes,address,bytes)\":{\"details\":\"This function is called by the OFTCore contract when a message is sent\",\"params\":{\"_message\":\"The encoded message content, expected to be of type: (address receiver).\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"lzCompose(address,bytes32,bytes,address,bytes)\":{\"notice\":\"Composes a message to be sent to the HyperLiquidLZComposerThis function is the only new addition to the OFT standard\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WrappedHyperCoreAdapter.sol\":\"WrappedHyperCoreAdapter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title ILayerZeroComposer\\n */\\ninterface ILayerZeroComposer {\\n    /**\\n     * @notice Composes a LayerZero message from an OApp.\\n     * @dev To ensure non-reentrancy, implementers of this interface MUST assert msg.sender is the corresponding EndpointV2 contract (i.e., onlyEndpointV2).\\n     * @param _from The address initiating the composition, typically the OApp where the lzReceive was called.\\n     * @param _guid The unique identifier for the corresponding LayerZero src/dst tx.\\n     * @param _message The composed message payload in bytes. NOT necessarily the same payload passed via lzReceive.\\n     * @param _executor The address of the executor for the composed message.\\n     * @param _extraData Additional arbitrary data in bytes passed by the entity who executes the lzCompose.\\n     */\\n    function lzCompose(\\n        address _from,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { SafeERC20, IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppSender\\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\\n */\\nabstract contract OAppSender is OAppCore {\\n    using SafeERC20 for IERC20;\\n\\n    // Custom error messages\\n    error NotEnoughNative(uint256 msgValue);\\n    error LzTokenUnavailable();\\n\\n    // @dev The version of the OAppSender implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant SENDER_VERSION = 1;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\\n     * ie. this is a SEND only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (SENDER_VERSION, 0);\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\\n     * @return fee The calculated MessagingFee for the message.\\n     *      - nativeFee: The native fee for the message.\\n     *      - lzTokenFee: The LZ token fee for the message.\\n     */\\n    function _quote(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) internal view virtual returns (MessagingFee memory fee) {\\n        return\\n            endpoint.quote(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\\n                address(this)\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _fee The calculated LayerZero fee for the message.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\\n     * @return receipt The receipt for the sent message.\\n     *      - guid: The unique identifier for the sent message.\\n     *      - nonce: The nonce of the sent message.\\n     *      - fee: The LayerZero fee incurred for the message.\\n     */\\n    function _lzSend(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        MessagingFee memory _fee,\\n        address _refundAddress\\n    ) internal virtual returns (MessagingReceipt memory receipt) {\\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\\n        uint256 messageValue = _payNative(_fee.nativeFee);\\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\\n\\n        return\\n            // solhint-disable-next-line check-send-result\\n            endpoint.send{ value: messageValue }(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\\n                _refundAddress\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the native fee associated with the message.\\n     * @param _nativeFee The native fee to be paid.\\n     * @return nativeFee The amount of native currency paid.\\n     *\\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\\n     * this will need to be overridden because msg.value would contain multiple lzFees.\\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\\n     */\\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\\n        return _nativeFee;\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the LZ token fee associated with the message.\\n     * @param _lzTokenFee The LZ token fee to be paid.\\n     *\\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\\n     */\\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\\n        address lzToken = endpoint.lzToken();\\n        if (lzToken == address(0)) revert LzTokenUnavailable();\\n\\n        // Pay LZ token fee by sending tokens to the endpoint.\\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\\n    }\\n}\\n\",\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroComposer } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\\\";\\n\\n/**\\n * @title IOAppComposer\\n * @dev This interface defines the OApp Composer, allowing developers to inherit only the OApp package without the protocol.\\n */\\n// solhint-disable-next-line no-empty-blocks\\ninterface IOAppComposer is ILayerZeroComposer {}\\n\",\"keccak256\":\"0xe5014c411acb2b59dd74ae74a1bab02cf32d94a41a548a5ab553d64aeeb55dae\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { MessagingReceipt, MessagingFee } from \\\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\\\";\\n\\n/**\\n * @dev Struct representing token parameters for the OFT send() operation.\\n */\\nstruct SendParam {\\n    uint32 dstEid; // Destination endpoint ID.\\n    bytes32 to; // Recipient address.\\n    uint256 amountLD; // Amount to send in local decimals.\\n    uint256 minAmountLD; // Minimum amount to send in local decimals.\\n    bytes extraOptions; // Additional options supplied by the caller to be used in the LayerZero message.\\n    bytes composeMsg; // The composed message for the send() operation.\\n    bytes oftCmd; // The OFT command to be executed, unused in default OFT implementations.\\n}\\n\\n/**\\n * @dev Struct representing OFT limit information.\\n * @dev These amounts can change dynamically and are up the specific oft implementation.\\n */\\nstruct OFTLimit {\\n    uint256 minAmountLD; // Minimum amount in local decimals that can be sent to the recipient.\\n    uint256 maxAmountLD; // Maximum amount in local decimals that can be sent to the recipient.\\n}\\n\\n/**\\n * @dev Struct representing OFT receipt information.\\n */\\nstruct OFTReceipt {\\n    uint256 amountSentLD; // Amount of tokens ACTUALLY debited from the sender in local decimals.\\n    // @dev In non-default implementations, the amountReceivedLD COULD differ from this value.\\n    uint256 amountReceivedLD; // Amount of tokens to be received on the remote side.\\n}\\n\\n/**\\n * @dev Struct representing OFT fee details.\\n * @dev Future proof mechanism to provide a standardized way to communicate fees to things like a UI.\\n */\\nstruct OFTFeeDetail {\\n    int256 feeAmountLD; // Amount of the fee in local decimals.\\n    string description; // Description of the fee.\\n}\\n\\n/**\\n * @title IOFT\\n * @dev Interface for the OftChain (OFT) token.\\n * @dev Does not inherit ERC20 to accommodate usage by OFTAdapter as well.\\n * @dev This specific interface ID is '0x02e49c2c'.\\n */\\ninterface IOFT {\\n    // Custom error messages\\n    error InvalidLocalDecimals();\\n    error SlippageExceeded(uint256 amountLD, uint256 minAmountLD);\\n\\n    // Events\\n    event OFTSent(\\n        bytes32 indexed guid, // GUID of the OFT message.\\n        uint32 dstEid, // Destination Endpoint ID.\\n        address indexed fromAddress, // Address of the sender on the src chain.\\n        uint256 amountSentLD, // Amount of tokens sent in local decimals.\\n        uint256 amountReceivedLD // Amount of tokens received in local decimals.\\n    );\\n    event OFTReceived(\\n        bytes32 indexed guid, // GUID of the OFT message.\\n        uint32 srcEid, // Source Endpoint ID.\\n        address indexed toAddress, // Address of the recipient on the dst chain.\\n        uint256 amountReceivedLD // Amount of tokens received in local decimals.\\n    );\\n\\n    /**\\n     * @notice Retrieves interfaceID and the version of the OFT.\\n     * @return interfaceId The interface ID.\\n     * @return version The version.\\n     *\\n     * @dev interfaceId: This specific interface ID is '0x02e49c2c'.\\n     * @dev version: Indicates a cross-chain compatible msg encoding with other OFTs.\\n     * @dev If a new feature is added to the OFT cross-chain msg encoding, the version will be incremented.\\n     * ie. localOFT version(x,1) CAN send messages to remoteOFT version(x,1)\\n     */\\n    function oftVersion() external view returns (bytes4 interfaceId, uint64 version);\\n\\n    /**\\n     * @notice Retrieves the address of the token associated with the OFT.\\n     * @return token The address of the ERC20 token implementation.\\n     */\\n    function token() external view returns (address);\\n\\n    /**\\n     * @notice Indicates whether the OFT contract requires approval of the 'token()' to send.\\n     * @return requiresApproval Needs approval of the underlying token implementation.\\n     *\\n     * @dev Allows things like wallet implementers to determine integration requirements,\\n     * without understanding the underlying token implementation.\\n     */\\n    function approvalRequired() external view returns (bool);\\n\\n    /**\\n     * @notice Retrieves the shared decimals of the OFT.\\n     * @return sharedDecimals The shared decimals of the OFT.\\n     */\\n    function sharedDecimals() external view returns (uint8);\\n\\n    /**\\n     * @notice Provides the fee breakdown and settings data for an OFT. Unused in the default implementation.\\n     * @param _sendParam The parameters for the send operation.\\n     * @return limit The OFT limit information.\\n     * @return oftFeeDetails The details of OFT fees.\\n     * @return receipt The OFT receipt information.\\n     */\\n    function quoteOFT(\\n        SendParam calldata _sendParam\\n    ) external view returns (OFTLimit memory, OFTFeeDetail[] memory oftFeeDetails, OFTReceipt memory);\\n\\n    /**\\n     * @notice Provides a quote for the send() operation.\\n     * @param _sendParam The parameters for the send() operation.\\n     * @param _payInLzToken Flag indicating whether the caller is paying in the LZ token.\\n     * @return fee The calculated LayerZero messaging fee from the send() operation.\\n     *\\n     * @dev MessagingFee: LayerZero msg fee\\n     *  - nativeFee: The native fee.\\n     *  - lzTokenFee: The lzToken fee.\\n     */\\n    function quoteSend(SendParam calldata _sendParam, bool _payInLzToken) external view returns (MessagingFee memory);\\n\\n    /**\\n     * @notice Executes the send() operation.\\n     * @param _sendParam The parameters for the send operation.\\n     * @param _fee The fee information supplied by the caller.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess funds from fees etc. on the src.\\n     * @return receipt The LayerZero messaging receipt from the send() operation.\\n     * @return oftReceipt The OFT receipt information.\\n     *\\n     * @dev MessagingReceipt: LayerZero msg receipt\\n     *  - guid: The unique identifier for the sent message.\\n     *  - nonce: The nonce of the sent message.\\n     *  - fee: The LayerZero fee incurred for the message.\\n     */\\n    function send(\\n        SendParam calldata _sendParam,\\n        MessagingFee calldata _fee,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory, OFTReceipt memory);\\n}\\n\",\"keccak256\":\"0x7ba6bb62fba7ee83451cfb0e727ddeef0e96b4388bd4e9ff0fc6ce103e1101c8\",\"license\":\"MIT\"},\"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nlibrary OFTComposeMsgCodec {\\n    // Offset constants for decoding composed messages\\n    uint8 private constant NONCE_OFFSET = 8;\\n    uint8 private constant SRC_EID_OFFSET = 12;\\n    uint8 private constant AMOUNT_LD_OFFSET = 44;\\n    uint8 private constant COMPOSE_FROM_OFFSET = 76;\\n\\n    /**\\n     * @dev Encodes a OFT composed message.\\n     * @param _nonce The nonce value.\\n     * @param _srcEid The source endpoint ID.\\n     * @param _amountLD The amount in local decimals.\\n     * @param _composeMsg The composed message.\\n     * @return _msg The encoded Composed message.\\n     */\\n    function encode(\\n        uint64 _nonce,\\n        uint32 _srcEid,\\n        uint256 _amountLD,\\n        bytes memory _composeMsg // 0x[composeFrom][composeMsg]\\n    ) internal pure returns (bytes memory _msg) {\\n        _msg = abi.encodePacked(_nonce, _srcEid, _amountLD, _composeMsg);\\n    }\\n\\n    /**\\n     * @dev Retrieves the nonce for the composed message.\\n     * @param _msg The message.\\n     * @return The nonce value.\\n     */\\n    function nonce(bytes calldata _msg) internal pure returns (uint64) {\\n        return uint64(bytes8(_msg[:NONCE_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the source endpoint ID for the composed message.\\n     * @param _msg The message.\\n     * @return The source endpoint ID.\\n     */\\n    function srcEid(bytes calldata _msg) internal pure returns (uint32) {\\n        return uint32(bytes4(_msg[NONCE_OFFSET:SRC_EID_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the amount in local decimals from the composed message.\\n     * @param _msg The message.\\n     * @return The amount in local decimals.\\n     */\\n    function amountLD(bytes calldata _msg) internal pure returns (uint256) {\\n        return uint256(bytes32(_msg[SRC_EID_OFFSET:AMOUNT_LD_OFFSET]));\\n    }\\n\\n    /**\\n     * @dev Retrieves the composeFrom value from the composed message.\\n     * @param _msg The message.\\n     * @return The composeFrom value.\\n     */\\n    function composeFrom(bytes calldata _msg) internal pure returns (bytes32) {\\n        return bytes32(_msg[AMOUNT_LD_OFFSET:COMPOSE_FROM_OFFSET]);\\n    }\\n\\n    /**\\n     * @dev Retrieves the composed message.\\n     * @param _msg The message.\\n     * @return The composed message.\\n     */\\n    function composeMsg(bytes calldata _msg) internal pure returns (bytes memory) {\\n        return _msg[COMPOSE_FROM_OFFSET:];\\n    }\\n\\n    /**\\n     * @dev Converts an address to bytes32.\\n     * @param _addr The address to convert.\\n     * @return The bytes32 representation of the address.\\n     */\\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\\n        return bytes32(uint256(uint160(_addr)));\\n    }\\n\\n    /**\\n     * @dev Converts bytes32 to an address.\\n     * @param _b The bytes32 value to convert.\\n     * @return The address representation of bytes32.\\n     */\\n    function bytes32ToAddress(bytes32 _b) internal pure returns (address) {\\n        return address(uint160(uint256(_b)));\\n    }\\n}\\n\",\"keccak256\":\"0xaae73d6eb8b9561c43f1802f3c416c00ccd35f172b711f9781ccdf1b25a40db5\",\"license\":\"MIT\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport { IOFT } from \\\"@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol\\\";\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport { HyperLiquidComposerCodec } from \\\"./library/HyperLiquidComposerCodec.sol\\\";\\nimport { IHyperLiquidComposer } from \\\"./interfaces/IHyperLiquidComposer.sol\\\";\\nimport { IHyperliquidWritePrecompile } from \\\"./interfaces/IHyperliquidWritePrecompile.sol\\\";\\n\\ncontract HyperCoreAdapter is IHyperLiquidComposer {\\n    address public immutable OFT_TOKEN_ASSET_BRIDGE_ADDRESS;\\n    uint64 public immutable OFT_TOKEN_CORE_INDEX_ID;\\n\\n    address public constant L1WritePrecompileAddress = 0x3333333333333333333333333333333333333333;\\n    address payable public constant HYPE_ASSET_BRIDGE_ADDRESS = payable(0x2222222222222222222222222222222222222222);\\n    uint64 public constant HYPER_CORE_INDEX_ID = 1105;\\n    uint256 public constant HYPER_CORE_INDEX_ID_DECIMAL_DIFF = 18 - 8;\\n\\n    address public immutable endpoint;\\n    IOFT public immutable oft;\\n    IERC20 public immutable token;\\n    uint256 public immutable weiDiff;\\n    /// @notice Constructor for the HyperLiquidLZComposer contract\\n    ///\\n    /// @dev This constructor is called by the `HyperLiquidOFT` contract\\n    /// @dev Post deployment, this address needs to be approved (via approveCaller) by the `owner` of the `HyperLiquidOFT` contract to call the `transferToHyperLiquidL1` function\\n    ///\\n    /// @param _endpoint The LayerZero endpoint address\\n    /// @param _oft The OFT contract address associated with this composer\\n    constructor(address _endpoint, address _oft, uint64 _coreIndexId, uint256 _weiDiff) {\\n        // Validate that the OFT contract implements the `IHyperLiquidERC20Extended` interface\\n        // This is to ensure that the OFT contract has the `transferToHyperLiquidL1` function\\n        oft = IOFT(_oft);\\n        token = IERC20(oft.token());\\n\\n        endpoint = _endpoint;\\n\\n        /// @dev Hyperliquid L1 contract address is the prefix + the core index id\\n        /// @dev This is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1\\n        /// @dev https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addresses\\n        /// @dev It is formed by 0x2000...0000 + the core index id\\n        OFT_TOKEN_ASSET_BRIDGE_ADDRESS = HyperLiquidComposerCodec.into_assetBridgeAddress(_coreIndexId);\\n        OFT_TOKEN_CORE_INDEX_ID = _coreIndexId;\\n        weiDiff = _weiDiff;\\n    }\\n\\n    /// @notice Composes a message to be sent to the HyperLiquidLZComposer\\n    /// @notice This function is the only new addition to the OFT standard\\n    ///\\n    /// @dev This function is called by the OFTCore contract when a message is sent\\n    ///\\n    /// @param _oft The address of the OFT contract.\\n    /// @param _message The encoded message content, expected to be of type: (address receiver).\\n    function lzCompose(\\n        address _oft,\\n        bytes32 /*_guid*/,\\n        bytes calldata _message,\\n        address /*_executor*/,\\n        bytes calldata /*_extraData*/\\n    ) external payable virtual override {\\n        // Validate the composeCall based on the docs - https://docs.layerzero.network/v2/developers/evm/oft/oft-patterns-extensions#receiving-compose\\n        if (msg.sender != address(endpoint)) {\\n            revert HyperLiquidComposer_InvalidCall_NotEndpoint(msg.sender);\\n        }\\n\\n        if (address(oft) != _oft) {\\n            revert HyperLiquidComposer_InvalidCall_NotOFT(address(oft), _oft);\\n        }\\n\\n        // Validate the message and decode it -\\n        // The message is expected to be of type: (address receiver)\\n        // The bytes object should be encoded as an abi.encodePacked() of the receiver address\\n        // This is found as SendParam.composeMsg that the OFTCore contract populates on the send() call\\n        (address _receiver, uint256 _amountLD) = HyperLiquidComposerCodec.validateAndDecodeMessage(_message);\\n\\n        // If the message is being sent with a value, we need to fund the address on HyperCore\\n        // This is because the HyperCore contract is deployed with a zero balance\\n        if (msg.value > 0) {\\n            _fundAddressOnHyperCore(_receiver, msg.value);\\n        }\\n\\n        // Transfer the tokens to the HyperLiquid L1 contract\\n        // This creates the Transfer event that HyperLiquid L1 listens for\\n        // IERC20.Transfer(_receiver, 0x2222222222222222222222222222222222222222, _amountLD)\\n        _sendAssetToHyperCore(_receiver, _amountLD);\\n    }\\n\\n    function _sendAssetToHyperCore(address receiever, uint256 amount) internal virtual {\\n        token.transfer(OFT_TOKEN_ASSET_BRIDGE_ADDRESS, amount);\\n        IHyperliquidWritePrecompile(L1WritePrecompileAddress).sendSpot(\\n            receiever,\\n            OFT_TOKEN_CORE_INDEX_ID,\\n            uint64(amount / 10 ** weiDiff)\\n        );\\n    }\\n\\n    function _fundAddressOnHyperCore(address receiever, uint256 amount) internal virtual {\\n        (bool sent, ) = HYPE_ASSET_BRIDGE_ADDRESS.call{ value: amount }(\\\"\\\");\\n        require(sent, \\\"Failed to send HYPE to HyperCore\\\");\\n\\n        IHyperliquidWritePrecompile(L1WritePrecompileAddress).sendSpot(\\n            receiever,\\n            HYPER_CORE_INDEX_ID,\\n            uint64(amount / 10 ** HYPER_CORE_INDEX_ID_DECIMAL_DIFF)\\n        );\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x7428b911c93f0b26405050aa6835966b8753b34407a541e30721aff19eb92c72\",\"license\":\"UNLICENSED\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperLiquidComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IOAppComposer } from \\\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\\\";\\n\\ninterface IHyperLiquidComposer is IOAppComposer {\\n    error HyperLiquidComposer_InvalidCall_NotEndpoint(address _notEndpointAddress);\\n    error HyperLiquidComposer_InvalidCall_NotOFT(address _internalOFTAddress, address _receivedOFTAddress);\\n    error HyperLiquidComposer_InvalidCall_TokenDoesNotSupportExtension(address _oft, address _token);\\n\\n    function OFT_TOKEN_ASSET_BRIDGE_ADDRESS() external view returns (address);\\n    function OFT_TOKEN_CORE_INDEX_ID() external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x05e81b73564bcb006142ae9bb1f0d56fcdb46f87b23cb54cee5cc7561fb4aff4\",\"license\":\"MIT\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IHyperliquidWritePrecompile {\\n    event IocOrder(address indexed user, uint32 asset, bool isBuy, uint64 limitPx, uint64 sz);\\n    event VaultTransfer(address indexed user, address indexed vault, bool isDeposit, uint64 usd);\\n    event TokenDelegate(address indexed user, address indexed validator, uint64 _wei, bool isUndelegate);\\n    event CDeposit(address indexed user, uint64 _wei);\\n    event CWithdrawal(address indexed user, uint64 _wei);\\n    event SpotSend(address indexed user, address indexed destination, uint64 token, uint64 _wei);\\n    event UsdClassTransfer(address indexed user, uint64 ntl, bool toPerp);\\n\\n    function sendIocOrder(uint32 asset, bool isBuy, uint64 limitPx, uint64 sz) external;\\n\\n    function sendVaultTransfer(address vault, bool isDeposit, uint64 usd) external;\\n\\n    function sendTokenDelegate(address validator, uint64 _wei, bool isUndelegate) external;\\n\\n    function sendCDeposit(uint64 _wei) external;\\n\\n    function sendCWithdrawal(uint64 _wei) external;\\n\\n    function sendSpot(address destination, uint64 token, uint64 _wei) external;\\n\\n    function sendUsdClassTransfer(uint64 ntl, bool toPerp) external;\\n}\\n\",\"keccak256\":\"0x8b59963667fc84a937495215a81d66fc69d044ed882df333f303cd1af36c781f\",\"license\":\"MIT\"},\"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { OFTComposeMsgCodec } from \\\"@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\\\";\\n\\nlibrary HyperLiquidComposerCodec {\\n    /// @dev The length of the message that is valid for the HyperLiquidComposer\\n    /// @dev This is 20 bytes because addresses are 20 bytes\\n    /// @dev We are in encodePacked mode, if we are in encode mode, the length is 42 bytes\\n    uint256 public constant VALID_COMPOSE_MESSAGE_LENGTH_PACKED = 20;\\n\\n    /// @dev The base asset bridge address is the address of the HyperLiquid L1 contract\\n    /// @dev This is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1\\n    /// @dev https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addresses\\n    /// @dev It is formed by 0x2000...0000 + the core index id\\n    address public constant BASE_ASSET_BRIDGE_ADDRESS = 0x2000000000000000000000000000000000000000;\\n    uint256 public constant BASE_ASSET_BRIDGE_ADDRESS_UINT256 = uint256(uint160(BASE_ASSET_BRIDGE_ADDRESS));\\n\\n    error HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength(bytes message, uint256 length);\\n\\n    function validateAndDecodeMessage(\\n        bytes calldata _composeMessage\\n    ) internal pure returns (address _receiver, uint256 _amountLD) {\\n        bytes memory message = OFTComposeMsgCodec.composeMsg(_composeMessage);\\n\\n        // Addresses in EVM are 20 bytes\\n        // So if the message's length is not 20 bytes, we can pre-emptively revert\\n        if (message.length != VALID_COMPOSE_MESSAGE_LENGTH_PACKED) {\\n            revert HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength(message, message.length);\\n        }\\n\\n        // Since we are encodePacked, we can just decode the first 20 bytes as an address\\n        _receiver = address(bytes20(message));\\n        _amountLD = OFTComposeMsgCodec.amountLD(_composeMessage);\\n    }\\n\\n    function into_assetBridgeAddress(uint256 _coreIndexId) internal pure returns (address) {\\n        return address(uint160(BASE_ASSET_BRIDGE_ADDRESS_UINT256 + _coreIndexId));\\n    }\\n\\n    function into_tokenId(address _assetBridgeAddress) internal pure returns (uint256) {\\n        return uint256(uint160(_assetBridgeAddress)) - BASE_ASSET_BRIDGE_ADDRESS_UINT256;\\n    }\\n}\\n\\n/*\\n0x000000000000000000000000acc732e49f38002af5f29e9f042494e5352073500000000000000001000000000000000000000000a3824bffc05178b1ed611117e5b900adcb189b94000000000000000000009ca6000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000acc732e49f38002af5f29e9f042494e535207350acc732e49f38002af5f29e9f042494e535207350\\n\\n0x09b34731000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000060000000000000000000009ca6000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000acc732e49f38002af5f29e9f042494e535207350acc732e49f38002af5f29e9f042494e535207350\\n\\n\\n\\n\\n\\n*/\",\"keccak256\":\"0x20e64cf6c616e309034bd740dc13246e2dc0c7765e5dfe3fe9b28b42460e52d0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/WrappedHyperCoreAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.22;\\n\\nimport { HyperCoreAdapter } from \\\"@layerzerolabs/oft-hyperliquid-evm/contracts/HyperCoreAdapter.sol\\\";\\nimport { HyperLiquidComposerCodec } from \\\"@layerzerolabs/oft-hyperliquid-evm/contracts/library/HyperLiquidComposerCodec.sol\\\";\\nimport { IHyperliquidWritePrecompile } from \\\"@layerzerolabs/oft-hyperliquid-evm/contracts/interfaces/IHyperliquidWritePrecompile.sol\\\";\\n\\ncontract WrappedHyperCoreAdapter is HyperCoreAdapter {\\n    constructor(\\n        address _lzEndpoint,\\n        address _oft,\\n        uint64 _hlIndexId,\\n        uint256 _weiDiff\\n    ) HyperCoreAdapter(_lzEndpoint, _oft, _hlIndexId, _weiDiff) {}\\n\\n    /// @notice Composes a message to be sent to the HyperLiquidLZComposer\\n    /// @notice This function is the only new addition to the OFT standard\\n    ///\\n    /// @dev This function is called by the OFTCore contract when a message is sent\\n    ///\\n    /// @param _message The encoded message content, expected to be of type: (address receiver).\\n    function lzCompose(\\n        address /*_oft*/,\\n        bytes32 /*_guid*/,\\n        bytes calldata _message,\\n        address /*_executor*/,\\n        bytes calldata /*_extraData*/\\n    ) external payable override {\\n        // Validate the composeCall based on the docs - https://docs.layerzero.network/v2/developers/evm/oft/oft-patterns-extensions#receiving-compose\\n        if (msg.sender != address(endpoint)) {\\n            revert HyperLiquidComposer_InvalidCall_NotEndpoint(msg.sender);\\n        }\\n\\n        // Validate the message and decode it -\\n        // The message is expected to be of type: (address receiver)\\n        // The bytes object should be encoded as an abi.encodePacked() of the receiver address\\n        // This is found as SendParam.composeMsg that the OFTCore contract populates on the send() call\\n        (address _receiver, uint256 _amountLD) = HyperLiquidComposerCodec.validateAndDecodeMessage(_message);\\n\\n        // If the message is being sent with a value, we need to fund the address on HyperCore\\n        // This is because the HyperCore contract is deployed with a zero balance\\n        if (msg.value > 0) {\\n            _fundAddressOnHyperCore(_receiver, msg.value);\\n        }\\n\\n        // Transfer the tokens to the HyperLiquid L1 contract\\n        // This creates the Transfer event that HyperLiquid L1 listens for\\n        // IERC20.Transfer(_receiver, 0x2222222222222222222222222222222222222222, _amountLD)\\n        _sendAssetToHyperCore(_receiver, _amountLD);\\n    }\\n    function sendAssetToHyperCore(address receiever, uint256 amount) public {\\n        _sendAssetToHyperCore(receiever, amount);\\n    }\\n\\n    function fundAddressOnHyperCore(address receiever, uint256 amount) public payable {\\n        _fundAddressOnHyperCore(receiever, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x9ebe69c9477635cf4f3cb215fe70a02e78e532dd15b136f8d46f6e8c7822a9bc\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"lzCompose(address,bytes32,bytes,address,bytes)":{"notice":"Composes a message to be sent to the HyperLiquidLZComposerThis function is the only new addition to the OFT standard"}},"version":1}}}}}}