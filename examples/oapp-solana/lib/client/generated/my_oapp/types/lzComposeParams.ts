/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi'
import {
    Serializer,
    bytes,
    publicKey as publicKeySerializer,
    struct,
    u16,
    u32,
} from '@metaplex-foundation/umi/serializers'

export type LzComposeParams = {
    from: PublicKey
    to: PublicKey
    guid: Uint8Array
    index: number
    message: Uint8Array
    extraData: Uint8Array
}

export type LzComposeParamsArgs = LzComposeParams

export function getLzComposeParamsSerializer(): Serializer<LzComposeParamsArgs, LzComposeParams> {
    return struct<LzComposeParams>(
        [
            ['from', publicKeySerializer()],
            ['to', publicKeySerializer()],
            ['guid', bytes({ size: 32 })],
            ['index', u16()],
            ['message', bytes({ size: u32() })],
            ['extraData', bytes({ size: u32() })],
        ],
        { description: 'LzComposeParams' }
    ) as Serializer<LzComposeParamsArgs, LzComposeParams>
}
