//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum ExecutorError {
    /// 6000 - 
    #[error("")]
    InvalidSize = 0x1770,
    /// 6001 - 
    #[error("")]
    Paused = 0x1771,
    /// 6002 - 
    #[error("")]
    UnsupportedOptionType = 0x1772,
    /// 6003 - 
    #[error("")]
    ZeroLzComposeGasProvided = 0x1773,
    /// 6004 - 
    #[error("")]
    ZeroLzReceiveGasProvided = 0x1774,
    /// 6005 - 
    #[error("")]
    NativeAmountExceedsCap = 0x1775,
    /// 6006 - 
    #[error("")]
    NotAdmin = 0x1776,
    /// 6007 - 
    #[error("")]
    NotExecutor = 0x1777,
    /// 6008 - 
    #[error("")]
    MsgLibNotAllowed = 0x1778,
    /// 6009 - 
    #[error("")]
    TooManyAdmins = 0x1779,
    /// 6010 - 
    #[error("")]
    TooManyExecutors = 0x177A,
    /// 6011 - 
    #[error("")]
    TooManyOptionTypes = 0x177B,
    /// 6012 - 
    #[error("")]
    InvalidNativeDropRequestsLength = 0x177C,
    /// 6013 - 
    #[error("")]
    InvalidNativeDropReceiver = 0x177D,
    /// 6014 - 
    #[error("")]
    InsufficientBalance = 0x177E,
    /// 6015 - 
    #[error("")]
    EidNotSupported = 0x177F,
    /// 6016 - 
    #[error("")]
    ExecutorIsAdmin = 0x1780,
    /// 6017 - 
    #[error("")]
    InvalidOwner = 0x1781,
}

impl solana_program::program_error::PrintProgramError for ExecutorError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}

impl<T> solana_program::decode_error::DecodeError<T> for ExecutorError {
    fn type_of() -> &'static str {
        "ExecutorError"
    }
}

