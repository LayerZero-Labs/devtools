{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "name_", "type": "string", "internalType": "string" },
        { "name": "symbol_", "type": "string", "internalType": "string" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getApproved",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isApprovedForAll",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerOf",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "_data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenURI",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalSupply",
      "inputs": [],
      "outputs": [
        { "name": "result", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ConsecutiveTransfer",
      "inputs": [
        {
          "name": "fromTokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "toTokenId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ApprovalCallerNotOwnerNorApproved",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ApprovalQueryForNonexistentToken",
      "inputs": []
    },
    { "type": "error", "name": "BalanceQueryForZeroAddress", "inputs": [] },
    {
      "type": "error",
      "name": "MintERC2309QuantityExceedsLimit",
      "inputs": []
    },
    { "type": "error", "name": "MintToZeroAddress", "inputs": [] },
    { "type": "error", "name": "MintZeroQuantity", "inputs": [] },
    { "type": "error", "name": "NotCompatibleWithSpotMints", "inputs": [] },
    { "type": "error", "name": "OwnerQueryForNonexistentToken", "inputs": [] },
    {
      "type": "error",
      "name": "OwnershipNotInitializedForExtraData",
      "inputs": []
    },
    { "type": "error", "name": "SequentialMintExceedsLimit", "inputs": [] },
    { "type": "error", "name": "SequentialUpToTooSmall", "inputs": [] },
    { "type": "error", "name": "SpotMintTokenIdTooSmall", "inputs": [] },
    { "type": "error", "name": "TokenAlreadyExists", "inputs": [] },
    {
      "type": "error",
      "name": "TransferCallerNotOwnerNorApproved",
      "inputs": []
    },
    { "type": "error", "name": "TransferFromIncorrectOwner", "inputs": [] },
    {
      "type": "error",
      "name": "TransferToNonERC721ReceiverImplementer",
      "inputs": []
    },
    { "type": "error", "name": "TransferToZeroAddress", "inputs": [] },
    { "type": "error", "name": "URIQueryForNonexistentToken", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200107d3803806200107d833981016040819052620000349162000126565b600262000042838262000221565b50600362000051828262000221565b50506000805550620002ed565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b8160405283815260209250866020858801011115620000ec57600080fd5b600091505b83821015620001105785820183015181830184015290820190620000f1565b6000602085830101528094505050505092915050565b600080604083850312156200013a57600080fd5b82516001600160401b03808211156200015257600080fd5b620001608683870162000074565b935060208501519150808211156200017757600080fd5b50620001868582860162000074565b9150509250929050565b600181811c90821680620001a557607f821691505b602082108103620001c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021c576000816000526020600020601f850160051c81016020861015620001f75750805b601f850160051c820191505b81811015620002185782815560010162000203565b5050505b505050565b81516001600160401b038111156200023d576200023d6200005e565b62000255816200024e845462000190565b84620001cc565b602080601f8311600181146200028d5760008415620002745750858301515b600019600386901b1c1916600185901b17855562000218565b600085815260208120601f198616915b82811015620002be578886015182559484019460019091019084016200029d565b5085821015620002dd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d8080620002fd6000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb46514610224578063b88d4fde14610244578063c87b56dd14610257578063e985e9c51461027757600080fd5b80636352211e146101cf57806370a08231146101ef57806395d89b411461020f57600080fd5b8063095ea7b3116100bb578063095ea7b31461017157806318160ddd1461018657806323b872dd146101a957806342842e0e146101bc57600080fd5b806301ffc9a7146100e257806306fdde0314610117578063081812fc14610139575b600080fd5b3480156100ee57600080fd5b506101026100fd3660046109d0565b6102c0565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b5061012c610312565b60405161010e9190610a3d565b34801561014557600080fd5b50610159610154366004610a50565b6103a4565b6040516001600160a01b03909116815260200161010e565b61018461017f366004610a80565b6103df565b005b34801561019257600080fd5b50600154600054035b60405190815260200161010e565b6101846101b7366004610aaa565b6103ef565b6101846101ca366004610aaa565b610554565b3480156101db57600080fd5b506101596101ea366004610a50565b610574565b3480156101fb57600080fd5b5061019b61020a366004610ae6565b61057f565b34801561021b57600080fd5b5061012c6105c5565b34801561023057600080fd5b5061018461023f366004610b01565b6105d4565b610184610252366004610b53565b610640565b34801561026357600080fd5b5061012c610272366004610a50565b610681565b34801561028357600080fd5b50610102610292366004610c2f565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b0319831614806102f157506380ac58cd60e01b6001600160e01b03198316145b8061030c5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461032190610c62565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90610c62565b801561039a5780601f1061036f5761010080835404028352916020019161039a565b820191906000526020600020905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b60006103af82610709565b6103c3576103c36333d1c03960e21b61074e565b506000908152600660205260409020546001600160a01b031690565b6103eb82826001610758565b5050565b60006103fa826107fb565b6001600160a01b0394851694909150811684146104205761042062a1148160e81b61074e565b60008281526006602052604090208054338082146001600160a01b03881690911417610464576104508633610292565b61046457610464632ce44b5f60e11b61074e565b801561046f57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610501576001840160008181526004602052604081205490036104ff5760005481146104ff5760008181526004602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48060000361054b5761054b633a954ecd60e21b61074e565b50505050505050565b61056f83838360405180602001604052806000815250610640565b505050565b600061030c826107fb565b60006001600160a01b03821661059f5761059f6323d3ad8160e21b61074e565b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b60606003805461032190610c62565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61064b8484846103ef565b6001600160a01b0383163b1561067b5761066784848484610891565b61067b5761067b6368d2bf6b60e11b61074e565b50505050565b606061068c82610709565b6106a0576106a0630a14c4b560e41b61074e565b60006106b760408051602081019091526000815290565b905080516000036106d75760405180602001604052806000815250610702565b806106e184610973565b6040516020016106f2929190610c9c565b6040516020818303038152906040525b9392505050565b600080548210156107495760005b506000828152600460205260408120549081900361073f5761073883610ccb565b9250610717565b600160e01b161590505b919050565b8060005260046000fd5b600061076383610574565b905081801561077b5750336001600160a01b03821614155b1561079e5761078a8133610292565b61079e5761079e6367d9dca160e11b61074e565b60008381526006602052604080822080546001600160a01b0319166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b6000818152600460205260409020548060000361086e57600054821061082b5761082b636f96cda160e11b61074e565b5b5060001901600081815260046020526040902054801561082c57600160e01b811660000361085957919050565b610869636f96cda160e11b61074e565b61082c565b600160e01b811660000361088157919050565b610749636f96cda160e11b61074e565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906108c6903390899088908890600401610cf0565b6020604051808303816000875af1925050508015610901575060408051601f3d908101601f191682019092526108fe91810190610d2d565b60015b610956573d80801561092f576040519150601f19603f3d011682016040523d82523d6000602084013e610934565b606091505b50805160000361094e5761094e6368d2bf6b60e11b61074e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a90048061098d5750819003601f19909101908152919050565b6001600160e01b0319811681146109cd57600080fd5b50565b6000602082840312156109e257600080fd5b8135610702816109b7565b60005b83811015610a085781810151838201526020016109f0565b50506000910152565b60008151808452610a298160208601602086016109ed565b601f01601f19169290920160200192915050565b6020815260006107026020830184610a11565b600060208284031215610a6257600080fd5b5035919050565b80356001600160a01b038116811461074957600080fd5b60008060408385031215610a9357600080fd5b610a9c83610a69565b946020939093013593505050565b600080600060608486031215610abf57600080fd5b610ac884610a69565b9250610ad660208501610a69565b9150604084013590509250925092565b600060208284031215610af857600080fd5b61070282610a69565b60008060408385031215610b1457600080fd5b610b1d83610a69565b915060208301358015158114610b3257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610b6957600080fd5b610b7285610a69565b9350610b8060208601610a69565b925060408501359150606085013567ffffffffffffffff80821115610ba457600080fd5b818701915087601f830112610bb857600080fd5b813581811115610bca57610bca610b3d565b604051601f8201601f19908116603f01168101908382118183101715610bf257610bf2610b3d565b816040528281528a6020848701011115610c0b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610c4257600080fd5b610c4b83610a69565b9150610c5960208401610a69565b90509250929050565b600181811c90821680610c7657607f821691505b602082108103610c9657634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610cae8184602088016109ed565b835190830190610cc28183602088016109ed565b01949350505050565b600081610ce857634e487b7160e01b600052601160045260246000fd5b506000190190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610d2390830184610a11565b9695505050505050565b600060208284031215610d3f57600080fd5b8151610702816109b756fea26469706673582212206a0cee7ba2bfc3467e27986f51dd535ecee30d3a14923d3881f3fec8d3e038be64736f6c63430008160033",
    "sourceMap": "1053:48812:132:-:0;;;5261:246;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5327:5;:13;5335:5;5327;:13;:::i;:::-;-1:-1:-1;5350:7:132;:17;5360:7;5350;:17;:::i;:::-;-1:-1:-1;;6022:7:132;5377:31;;-1:-1:-1;1053:48812:132;;14:127:146;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:146;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:146;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:562::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1198:16;;-1:-1:-1;;;;;1263:14:146;;;1260:34;;;1290:1;1287;1280:12;1260:34;1313:61;1366:7;1357:6;1346:9;1342:22;1313:61;:::i;:::-;1303:71;;1420:2;1409:9;1405:18;1399:25;1383:41;;1449:2;1439:8;1436:16;1433:36;;;1465:1;1462;1455:12;1433:36;;1488:63;1543:7;1532:8;1521:9;1517:24;1488:63;:::i;:::-;1478:73;;;995:562;;;;;:::o;1562:380::-;1641:1;1637:12;;;;1684;;;1705:61;;1759:4;1751:6;1747:17;1737:27;;1705:61;1812:2;1804:6;1801:14;1781:18;1778:38;1775:161;;1858:10;1853:3;1849:20;1846:1;1839:31;1893:4;1890:1;1883:15;1921:4;1918:1;1911:15;1775:161;;1562:380;;;:::o;2073:543::-;2175:2;2170:3;2167:11;2164:446;;;2211:1;2235:5;2232:1;2225:16;2279:4;2276:1;2266:18;2349:2;2337:10;2333:19;2330:1;2326:27;2320:4;2316:38;2385:4;2373:10;2370:20;2367:47;;;-1:-1:-1;2408:4:146;2367:47;2463:2;2458:3;2454:12;2451:1;2447:20;2441:4;2437:31;2427:41;;2518:82;2536:2;2529:5;2526:13;2518:82;;;2581:17;;;2562:1;2551:13;2518:82;;;2522:3;;;2164:446;2073:543;;;:::o;2792:1345::-;2912:10;;-1:-1:-1;;;;;2934:30:146;;2931:56;;;2967:18;;:::i;:::-;2996:97;3086:6;3046:38;3078:4;3072:11;3046:38;:::i;:::-;3040:4;2996:97;:::i;:::-;3148:4;;3205:2;3194:14;;3222:1;3217:663;;;;3924:1;3941:6;3938:89;;;-1:-1:-1;3993:19:146;;;3987:26;3938:89;-1:-1:-1;;2749:1:146;2745:11;;;2741:24;2737:29;2727:40;2773:1;2769:11;;;2724:57;4040:81;;3187:944;;3217:663;2020:1;2013:14;;;2057:4;2044:18;;-1:-1:-1;;3253:20:146;;;3371:236;3385:7;3382:1;3379:14;3371:236;;;3474:19;;;3468:26;3453:42;;3566:27;;;;3534:1;3522:14;;;;3401:19;;3371:236;;;3375:3;3635:6;3626:7;3623:19;3620:201;;;3696:19;;;3690:26;-1:-1:-1;;3779:1:146;3775:14;;;3791:3;3771:24;3767:37;3763:42;3748:58;3733:74;;3620:201;-1:-1:-1;;;;;3867:1:146;3851:14;;;3847:22;3834:36;;-1:-1:-1;2792:1345:146:o;:::-;1053:48812:132;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb46514610224578063b88d4fde14610244578063c87b56dd14610257578063e985e9c51461027757600080fd5b80636352211e146101cf57806370a08231146101ef57806395d89b411461020f57600080fd5b8063095ea7b3116100bb578063095ea7b31461017157806318160ddd1461018657806323b872dd146101a957806342842e0e146101bc57600080fd5b806301ffc9a7146100e257806306fdde0314610117578063081812fc14610139575b600080fd5b3480156100ee57600080fd5b506101026100fd3660046109d0565b6102c0565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b5061012c610312565b60405161010e9190610a3d565b34801561014557600080fd5b50610159610154366004610a50565b6103a4565b6040516001600160a01b03909116815260200161010e565b61018461017f366004610a80565b6103df565b005b34801561019257600080fd5b50600154600054035b60405190815260200161010e565b6101846101b7366004610aaa565b6103ef565b6101846101ca366004610aaa565b610554565b3480156101db57600080fd5b506101596101ea366004610a50565b610574565b3480156101fb57600080fd5b5061019b61020a366004610ae6565b61057f565b34801561021b57600080fd5b5061012c6105c5565b34801561023057600080fd5b5061018461023f366004610b01565b6105d4565b610184610252366004610b53565b610640565b34801561026357600080fd5b5061012c610272366004610a50565b610681565b34801561028357600080fd5b50610102610292366004610c2f565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b0319831614806102f157506380ac58cd60e01b6001600160e01b03198316145b8061030c5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461032190610c62565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90610c62565b801561039a5780601f1061036f5761010080835404028352916020019161039a565b820191906000526020600020905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b60006103af82610709565b6103c3576103c36333d1c03960e21b61074e565b506000908152600660205260409020546001600160a01b031690565b6103eb82826001610758565b5050565b60006103fa826107fb565b6001600160a01b0394851694909150811684146104205761042062a1148160e81b61074e565b60008281526006602052604090208054338082146001600160a01b03881690911417610464576104508633610292565b61046457610464632ce44b5f60e11b61074e565b801561046f57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610501576001840160008181526004602052604081205490036104ff5760005481146104ff5760008181526004602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48060000361054b5761054b633a954ecd60e21b61074e565b50505050505050565b61056f83838360405180602001604052806000815250610640565b505050565b600061030c826107fb565b60006001600160a01b03821661059f5761059f6323d3ad8160e21b61074e565b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b60606003805461032190610c62565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61064b8484846103ef565b6001600160a01b0383163b1561067b5761066784848484610891565b61067b5761067b6368d2bf6b60e11b61074e565b50505050565b606061068c82610709565b6106a0576106a0630a14c4b560e41b61074e565b60006106b760408051602081019091526000815290565b905080516000036106d75760405180602001604052806000815250610702565b806106e184610973565b6040516020016106f2929190610c9c565b6040516020818303038152906040525b9392505050565b600080548210156107495760005b506000828152600460205260408120549081900361073f5761073883610ccb565b9250610717565b600160e01b161590505b919050565b8060005260046000fd5b600061076383610574565b905081801561077b5750336001600160a01b03821614155b1561079e5761078a8133610292565b61079e5761079e6367d9dca160e11b61074e565b60008381526006602052604080822080546001600160a01b0319166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b6000818152600460205260409020548060000361086e57600054821061082b5761082b636f96cda160e11b61074e565b5b5060001901600081815260046020526040902054801561082c57600160e01b811660000361085957919050565b610869636f96cda160e11b61074e565b61082c565b600160e01b811660000361088157919050565b610749636f96cda160e11b61074e565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906108c6903390899088908890600401610cf0565b6020604051808303816000875af1925050508015610901575060408051601f3d908101601f191682019092526108fe91810190610d2d565b60015b610956573d80801561092f576040519150601f19603f3d011682016040523d82523d6000602084013e610934565b606091505b50805160000361094e5761094e6368d2bf6b60e11b61074e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a90048061098d5750819003601f19909101908152919050565b6001600160e01b0319811681146109cd57600080fd5b50565b6000602082840312156109e257600080fd5b8135610702816109b7565b60005b83811015610a085781810151838201526020016109f0565b50506000910152565b60008151808452610a298160208601602086016109ed565b601f01601f19169290920160200192915050565b6020815260006107026020830184610a11565b600060208284031215610a6257600080fd5b5035919050565b80356001600160a01b038116811461074957600080fd5b60008060408385031215610a9357600080fd5b610a9c83610a69565b946020939093013593505050565b600080600060608486031215610abf57600080fd5b610ac884610a69565b9250610ad660208501610a69565b9150604084013590509250925092565b600060208284031215610af857600080fd5b61070282610a69565b60008060408385031215610b1457600080fd5b610b1d83610a69565b915060208301358015158114610b3257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610b6957600080fd5b610b7285610a69565b9350610b8060208601610a69565b925060408501359150606085013567ffffffffffffffff80821115610ba457600080fd5b818701915087601f830112610bb857600080fd5b813581811115610bca57610bca610b3d565b604051601f8201601f19908116603f01168101908382118183101715610bf257610bf2610b3d565b816040528281528a6020848701011115610c0b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610c4257600080fd5b610c4b83610a69565b9150610c5960208401610a69565b90509250929050565b600181811c90821680610c7657607f821691505b602082108103610c9657634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610cae8184602088016109ed565b835190830190610cc28183602088016109ed565b01949350505050565b600081610ce857634e487b7160e01b600052601160045260246000fd5b506000190190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610d2390830184610a11565b9695505050505050565b600060208284031215610d3f57600080fd5b8151610702816109b756fea26469706673582212206a0cee7ba2bfc3467e27986f51dd535ecee30d3a14923d3881f3fec8d3e038be64736f6c63430008160033",
    "sourceMap": "1053:48812:132:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10689:630;;;;;;;;;;-1:-1:-1;10689:630:132;;;;;:::i;:::-;;:::i;:::-;;;565:14:146;;558:22;540:41;;528:2;513:18;10689:630:132;;;;;;;;11573:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;18636:223::-;;;;;;;;;;-1:-1:-1;18636:223:132;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:146;;;1679:51;;1667:2;1652:18;18636:223:132;1533:203:146;18364:122:132;;;;;;:::i;:::-;;:::i;:::-;;6890:564;;;;;;;;;;-1:-1:-1;7328:12:132;;6951:14;7312:13;:28;6890:564;;;2324:25:146;;;2312:2;2297:18;6890:564:132;2178:177:146;22796:3447:132;;;;;;:::i;:::-;;:::i;26334:187::-;;;;;;:::i;:::-;;:::i;12934:150::-;;;;;;;;;;-1:-1:-1;12934:150:132;;;;;:::i;:::-;;:::i;8570:239::-;;;;;;;;;;-1:-1:-1;8570:239:132;;;;;:::i;:::-;;:::i;11742:102::-;;;;;;;;;;;;;:::i;19186:231::-;;;;;;;;;;-1:-1:-1;19186:231:132;;;;;:::i;:::-;;:::i;27102:405::-;;;;;;:::i;:::-;;:::i;11945:322::-;;;;;;;;;;-1:-1:-1;11945:322:132;;;;;:::i;:::-;;:::i;19567:162::-;;;;;;;;;;-1:-1:-1;19567:162:132;;;;;:::i;:::-;-1:-1:-1;;;;;19687:25:132;;;19664:4;19687:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;19567:162;10689:630;10774:4;-1:-1:-1;;;;;;;;;11092:25:132;;;;:101;;-1:-1:-1;;;;;;;;;;11168:25:132;;;11092:101;:177;;;-1:-1:-1;;;;;;;;;;11244:25:132;;;11092:177;11073:196;10689:630;-1:-1:-1;;10689:630:132:o;11573:98::-;11627:13;11659:5;11652:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11573:98;:::o;18636:223::-;18712:7;18736:16;18744:7;18736;:16::i;:::-;18731:73;;18754:50;-1:-1:-1;;;18754:7:132;:50::i;:::-;-1:-1:-1;18822:24:132;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;18822:30:132;;18636:223::o;18364:122::-;18452:27;18461:2;18465:7;18474:4;18452:8;:27::i;:::-;18364:122;;:::o;22796:3447::-;22933:27;22963;22982:7;22963:18;:27::i;:::-;-1:-1:-1;;;;;23115:22:132;;;;22933:57;;-1:-1:-1;23173:45:132;;;;23169:95;;23220:44;-1:-1:-1;;;23220:7:132;:44::i;:::-;23276:27;21929:24;;;:15;:24;;;;;22153:26;;47819:10;21566:30;;;-1:-1:-1;;;;;21263:28:132;;21544:20;;;21541:56;23459:188;;23551:43;23568:4;47819:10;19567:162;:::i;23551:43::-;23546:101;;23596:51;-1:-1:-1;;;23596:7:132;:51::i;:::-;23790:15;23787:157;;;23928:1;23907:19;23900:30;23787:157;-1:-1:-1;;;;;24316:24:132;;;;;;;:18;:24;;;;;;24314:26;;-1:-1:-1;;24314:26:132;;;24384:22;;;;;;;;;24382:24;;-1:-1:-1;24382:24:132;;;17492:11;17467:23;17463:41;17450:63;-1:-1:-1;;;17450:63:132;24670:26;;;;:17;:26;;;;;:172;;;;-1:-1:-1;;;24959:47:132;;:52;;24955:617;;25063:1;25053:11;;25031:19;25184:30;;;:17;:30;;;;;;:35;;25180:378;;25320:13;;25305:11;:28;25301:239;;25465:30;;;;:17;:30;;;;;:52;;;25301:239;25013:559;24955:617;-1:-1:-1;;;;;25700:20:132;;26071:7;25700:20;26003:4;25946:25;25681:16;;25814:292;26129:8;26141:1;26129:13;26125:58;;26144:39;-1:-1:-1;;;26144:7:132;:39::i;:::-;22923:3320;;;;22796:3447;;;:::o;26334:187::-;26475:39;26492:4;26498:2;26502:7;26475:39;;;;;;;;;;;;:16;:39::i;:::-;26334:187;;;:::o;12934:150::-;13006:7;13048:27;13067:7;13048:18;:27::i;8570:239::-;8642:7;-1:-1:-1;;;;;8665:19:132;;8661:69;;8686:44;-1:-1:-1;;;8686:7:132;:44::i;:::-;-1:-1:-1;;;;;;8747:25:132;;;;;:18;:25;;;;;;1518:13;8747:55;;8570:239::o;11742:102::-;11798:13;11830:7;11823:14;;;;;:::i;19186:231::-;47819:10;19280:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;19280:49:132;;;;;;;;;;;;:60;;-1:-1:-1;;19280:60:132;;;;;;;;;;19355:55;;540:41:146;;;19280:49:132;;47819:10;19355:55;;513:18:146;19355:55:132;;;;;;;19186:231;;:::o;27102:405::-;27271:31;27284:4;27290:2;27294:7;27271:12;:31::i;:::-;-1:-1:-1;;;;;27316:14:132;;;:19;27312:189;;27354:56;27385:4;27391:2;27395:7;27404:5;27354:30;:56::i;:::-;27349:152;;27430:56;-1:-1:-1;;;27430:7:132;:56::i;:::-;27102:405;;;;:::o;11945:322::-;12018:13;12048:16;12056:7;12048;:16::i;:::-;12043:68;;12066:45;-1:-1:-1;;;12066:7:132;:45::i;:::-;12122:21;12146:10;12588:9;;;;;;;;;-1:-1:-1;12588:9:132;;;12512:92;12146:10;12122:34;;12179:7;12173:21;12198:1;12173:26;:87;;;;;;;;;;;;;;;;;12226:7;12235:18;12245:7;12235:9;:18::i;:::-;12209:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12173:87;12166:94;11945:322;-1:-1:-1;;;11945:322:132:o;19978:465::-;20043:11;20231:13;;20221:7;:23;20217:210;;;20264:14;20296:60;-1:-1:-1;20313:26:132;;;;:17;:26;;;;;;;20303:42;;;20296:60;;20347:9;;;:::i;:::-;;;20296:60;;;-1:-1:-1;;;20383:24:132;:29;;-1:-1:-1;20217:210:132;19978:465;;;:::o;49703:160::-;49802:13;49796:4;49789:27;49842:4;49836;49829:18;41333:460;41457:13;41473:16;41481:7;41473;:16::i;:::-;41457:32;;41504:13;:45;;;;-1:-1:-1;47819:10:132;-1:-1:-1;;;;;41521:28:132;;;;41504:45;41500:198;;;41568:44;41585:5;47819:10;19567:162;:::i;41568:44::-;41563:135;;41632:51;-1:-1:-1;;;41632:7:132;:51::i;:::-;41708:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;41708:35:132;-1:-1:-1;;;;;41708:35:132;;;;;;;;;41758:28;;41708:24;;41758:28;;;;;;;41447:346;41333:460;;;:::o;14380:2173::-;14528:26;;;;:17;:26;;;;;;14847:6;14857:1;14847:11;14843:1270;;14893:13;;14882:7;:24;14878:77;;14908:47;-1:-1:-1;;;14908:7:132;:47::i;:::-;15502:597;-1:-1:-1;;;15596:9:132;15578:28;;;;:17;:28;;;;;;15650:25;;15502:597;15650:25;-1:-1:-1;;;15701:6:132;:24;15729:1;15701:29;15697:48;;14380:2173;;;:::o;15697:48::-;16033:47;-1:-1:-1;;;16033:7:132;:47::i;:::-;15502:597;;14843:1270;-1:-1:-1;;;16435:6:132;:24;16463:1;16435:29;16431:48;;14380:2173;;;:::o;16431:48::-;16499:47;-1:-1:-1;;;16499:7:132;:47::i;29533:673::-;29711:88;;-1:-1:-1;;;29711:88:132;;29691:4;;-1:-1:-1;;;;;29711:45:132;;;;;:88;;47819:10;;29778:4;;29784:7;;29793:5;;29711:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29711:88:132;;;;;;;;-1:-1:-1;;29711:88:132;;;;;;;;;;;;:::i;:::-;;;29707:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29989:6;:13;30006:1;29989:18;29985:113;;30027:56;-1:-1:-1;;;30027:7:132;:56::i;:::-;30168:6;30162:13;30153:6;30149:2;30145:15;30138:38;29707:493;-1:-1:-1;;;;;;29867:64:132;-1:-1:-1;;;29867:64:132;;-1:-1:-1;29533:673:132;;;;;;:::o;47933:1708::-;47998:17;48426:4;48419;48413:11;48409:22;48516:1;48510:4;48503:15;48589:4;48586:1;48582:12;48575:19;;;48669:1;48664:3;48657:14;48770:3;49004:5;48986:419;49051:1;49046:3;49042:11;49035:18;;49219:2;49213:4;49209:13;49205:2;49201:22;49196:3;49188:36;49311:2;49301:13;;49366:25;48986:419;49366:25;-1:-1:-1;49433:13:132;;;-1:-1:-1;;49546:14:132;;;49606:19;;;49546:14;47933:1708;-1:-1:-1;47933:1708:132:o;14:131:146:-;-1:-1:-1;;;;;;88:32:146;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:146;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:146;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:146:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:146;;1348:180;-1:-1:-1;1348:180:146:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:146;;1848:42;;1838:70;;1904:1;1901;1894:12;1919:254;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:146:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:186::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:146;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5161:496::-;5340:3;5378:6;5372:13;5394:66;5453:6;5448:3;5441:4;5433:6;5429:17;5394:66;:::i;:::-;5523:13;;5482:16;;;;5545:70;5523:13;5482:16;5592:4;5580:17;;5545:70;:::i;:::-;5631:20;;5161:496;-1:-1:-1;;;;5161:496:146:o;5662:233::-;5701:3;5729:5;5719:136;;5777:10;5772:3;5768:20;5765:1;5758:31;5812:4;5809:1;5802:15;5840:4;5837:1;5830:15;5719:136;-1:-1:-1;;;5871:18:146;;5662:233::o;5900:489::-;-1:-1:-1;;;;;6169:15:146;;;6151:34;;6221:15;;6216:2;6201:18;;6194:43;6268:2;6253:18;;6246:34;;;6316:3;6311:2;6296:18;;6289:31;;;6094:4;;6337:46;;6363:19;;6355:6;6337:46;:::i;:::-;6329:54;5900:489;-1:-1:-1;;;;;;5900:489:146:o;6394:249::-;6463:6;6516:2;6504:9;6495:7;6491:23;6487:32;6484:52;;;6532:1;6529;6522:12;6484:52;6564:9;6558:16;6583:30;6607:5;6583:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. The `_sequentialUpTo()` function can be overriden to enable spot mints (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=node_modules/@layerzerolabs/toolbox-foundry/src/ds-test/src/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=node_modules/@layerzerolabs/toolbox-foundry/src/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"node_modules/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"node_modules/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.22+commit.4fc1097e" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "string", "name": "name_", "type": "string" },
            { "internalType": "string", "name": "symbol_", "type": "string" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        { "inputs": [], "type": "error", "name": "BalanceQueryForZeroAddress" },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        { "inputs": [], "type": "error", "name": "MintToZeroAddress" },
        { "inputs": [], "type": "error", "name": "MintZeroQuantity" },
        { "inputs": [], "type": "error", "name": "NotCompatibleWithSpotMints" },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        { "inputs": [], "type": "error", "name": "SequentialMintExceedsLimit" },
        { "inputs": [], "type": "error", "name": "SequentialUpToTooSmall" },
        { "inputs": [], "type": "error", "name": "SpotMintTokenIdTooSmall" },
        { "inputs": [], "type": "error", "name": "TokenAlreadyExists" },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        { "inputs": [], "type": "error", "name": "TransferFromIncorrectOwner" },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        { "inputs": [], "type": "error", "name": "TransferToZeroAddress" },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "bytes", "name": "_data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            { "internalType": "uint256", "name": "result", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "name()": { "details": "Returns the token collection name." },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
          },
          "symbol()": { "details": "Returns the token collection symbol." },
          "tokenURI(uint256)": {
            "details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@layerzerolabs/=node_modules/@layerzerolabs/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=node_modules/@layerzerolabs/toolbox-foundry/src/ds-test/src/",
        "erc721a/=node_modules/erc721a/",
        "forge-std/=node_modules/@layerzerolabs/toolbox-foundry/src/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "node_modules/erc721a/contracts/ERC721A.sol": "ERC721A"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "node_modules/erc721a/contracts/ERC721A.sol": {
        "keccak256": "0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55",
        "urls": [
          "bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1",
          "dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr"
        ],
        "license": "MIT"
      },
      "node_modules/erc721a/contracts/IERC721A.sol": {
        "keccak256": "0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294",
        "urls": [
          "bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02",
          "dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 132
}
