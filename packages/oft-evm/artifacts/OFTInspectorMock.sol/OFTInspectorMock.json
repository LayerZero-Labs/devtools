{
  "abi": [
    {
      "type": "function",
      "name": "inspect",
      "inputs": [
        { "name": "_message", "type": "bytes", "internalType": "bytes" },
        { "name": "_options", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "error",
      "name": "InspectionFailed",
      "inputs": [
        { "name": "message", "type": "bytes", "internalType": "bytes" },
        { "name": "options", "type": "bytes", "internalType": "bytes" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610202806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063043a78eb14610030575b600080fd5b61004361003e3660046100e5565b610057565b604051901515815260200160405180910390f35b6000848484846040517f7b43b439000000000000000000000000000000000000000000000000000000008152600401610093949392919061019a565b60405180910390fd5b60008083601f8401126100ae57600080fd5b50813567ffffffffffffffff8111156100c657600080fd5b6020830191508360208285010111156100de57600080fd5b9250929050565b600080600080604085870312156100fb57600080fd5b843567ffffffffffffffff8082111561011357600080fd5b61011f8883890161009c565b9096509450602087013591508082111561013857600080fd5b506101458782880161009c565b95989497509550505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006101ae604083018688610151565b82810360208401526101c1818587610151565b97965050505050505056fea264697066735822122013e0f689e67b03593653c2ffbab9f22529ce970d0b8c5f6ca2d6dcf1efeba0a564736f6c63430008140033",
    "sourceMap": "180:211:138:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063043a78eb14610030575b600080fd5b61004361003e3660046100e5565b610057565b604051901515815260200160405180910390f35b6000848484846040517f7b43b439000000000000000000000000000000000000000000000000000000008152600401610093949392919061019a565b60405180910390fd5b60008083601f8401126100ae57600080fd5b50813567ffffffffffffffff8111156100c657600080fd5b6020830191508360208285010111156100de57600080fd5b9250929050565b600080600080604085870312156100fb57600080fd5b843567ffffffffffffffff8082111561011357600080fd5b61011f8883890161009c565b9096509450602087013591508082111561013857600080fd5b506101458782880161009c565b95989497509550505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006101ae604083018688610151565b82810360208401526101c1818587610151565b97965050505050505056fea264697066735822122013e0f689e67b03593653c2ffbab9f22529ce970d0b8c5f6ca2d6dcf1efeba0a564736f6c63430008140033",
    "sourceMap": "180:211:138:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:156;;;;;;:::i;:::-;;:::i;:::-;;;1253:14:142;;1246:22;1228:41;;1216:2;1201:18;233:156:138;;;;;;;;323:4;363:8;;373;;346:36;;;;;;;;;;;;;;:::i;:::-;;;;;;;;14:347:142;65:8;75:6;129:3;122:4;114:6;110:17;106:27;96:55;;147:1;144;137:12;96:55;-1:-1:-1;170:20:142;;213:18;202:30;;199:50;;;245:1;242;235:12;199:50;282:4;274:6;270:17;258:29;;334:3;327:4;318:6;310;306:19;302:30;299:39;296:59;;;351:1;348;341:12;296:59;14:347;;;;;:::o;366:717::-;456:6;464;472;480;533:2;521:9;512:7;508:23;504:32;501:52;;;549:1;546;539:12;501:52;589:9;576:23;618:18;659:2;651:6;648:14;645:34;;;675:1;672;665:12;645:34;714:58;764:7;755:6;744:9;740:22;714:58;:::i;:::-;791:8;;-1:-1:-1;688:84:142;-1:-1:-1;879:2:142;864:18;;851:32;;-1:-1:-1;895:16:142;;;892:36;;;924:1;921;914:12;892:36;;963:60;1015:7;1004:8;993:9;989:24;963:60;:::i;:::-;366:717;;;;-1:-1:-1;1042:8:142;-1:-1:-1;;;;366:717:142:o;1280:325::-;1368:6;1363:3;1356:19;1420:6;1413:5;1406:4;1401:3;1397:14;1384:43;;1472:1;1465:4;1456:6;1451:3;1447:16;1443:27;1436:38;1338:3;1594:4;1524:66;1519:2;1511:6;1507:15;1503:88;1498:3;1494:98;1490:109;1483:116;;1280:325;;;;:::o;1610:431::-;1823:2;1812:9;1805:21;1786:4;1849:61;1906:2;1895:9;1891:18;1883:6;1875;1849:61;:::i;:::-;1958:9;1950:6;1946:22;1941:2;1930:9;1926:18;1919:50;1986:49;2028:6;2020;2012;1986:49;:::i;:::-;1978:57;1610:431;-1:-1:-1;;;;;;;1610:431:142:o",
    "linkReferences": {}
  },
  "methodIdentifiers": { "inspect(bytes,bytes)": "043a78eb" },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"InspectionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_options\",\"type\":\"bytes\"}],\"name\":\"inspect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"inspect(bytes,bytes)\":{\"details\":\"Optionally done as a revert, OR use the boolean provided to handle the failure.\",\"params\":{\"_message\":\"The message payload to be inspected.\",\"_options\":\"Additional options or parameters for inspection.\"},\"returns\":{\"_0\":\"A boolean indicating whether the inspection passed (true) or failed (false).\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"inspect(bytes,bytes)\":{\"notice\":\"Allows the inspector to examine LayerZero message contents and optionally throw a revert if invalid.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/OFTInspectorMock.sol\":\"OFTInspectorMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@layerzerolabs/lz-evm-messagelib-v2/=node_modules/@layerzerolabs/lz-evm-messagelib-v2/\",\":@layerzerolabs/lz-evm-oapp-v2/=node_modules/@layerzerolabs/lz-evm-oapp-v2/\",\":@layerzerolabs/lz-evm-protocol-v2/=node_modules/@layerzerolabs/lz-evm-protocol-v2/\",\":@layerzerolabs/lz-evm-v1-0.7/=node_modules/@layerzerolabs/lz-evm-v1-0.7/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":ds-test/=node_modules/@layerzerolabs/toolbox-foundry/src/ds-test/src/\",\":forge-std/=node_modules/@layerzerolabs/toolbox-foundry/src/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"node_modules/@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppMsgInspector.sol\":{\"keccak256\":\"0x339654e699043c400cad92de209aa23855ce10211c31cf4114042cc5224d3b7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5222afde59bf086f67b39e0288ad36343f4f5ed683d250533f256a5db956f37e\",\"dweb:/ipfs/QmbEG9EMYsK3Y6Cz7QbNtkW4kHGzMuhp2y2seSoL8v1A5b\"]},\"test/mocks/OFTInspectorMock.sol\":{\"keccak256\":\"0x5c03d2ccc86f441a56c2d826b1f01aae4031142e8ec0a8eeb76bf5f30c925f46\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://380d6c8708dae9a6783c6edffa5d6bfcb0c8fa87fd17893257cd3e1806ae6b4f\",\"dweb:/ipfs/QmPJRTivnhc93cD6VgTUB2oG2btgvQoJetNJSXsT5XVnm7\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.20+commit.a1b79de6" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "bytes", "name": "message", "type": "bytes" },
            { "internalType": "bytes", "name": "options", "type": "bytes" }
          ],
          "type": "error",
          "name": "InspectionFailed"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_message", "type": "bytes" },
            { "internalType": "bytes", "name": "_options", "type": "bytes" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "inspect",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "inspect(bytes,bytes)": {
            "details": "Optionally done as a revert, OR use the boolean provided to handle the failure.",
            "params": {
              "_message": "The message payload to be inspected.",
              "_options": "Additional options or parameters for inspection."
            },
            "returns": {
              "_0": "A boolean indicating whether the inspection passed (true) or failed (false)."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "inspect(bytes,bytes)": {
            "notice": "Allows the inspector to examine LayerZero message contents and optionally throw a revert if invalid."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@layerzerolabs/lz-evm-messagelib-v2/=node_modules/@layerzerolabs/lz-evm-messagelib-v2/",
        "@layerzerolabs/lz-evm-oapp-v2/=node_modules/@layerzerolabs/lz-evm-oapp-v2/",
        "@layerzerolabs/lz-evm-protocol-v2/=node_modules/@layerzerolabs/lz-evm-protocol-v2/",
        "@layerzerolabs/lz-evm-v1-0.7/=node_modules/@layerzerolabs/lz-evm-v1-0.7/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "ds-test/=node_modules/@layerzerolabs/toolbox-foundry/src/ds-test/src/",
        "forge-std/=node_modules/@layerzerolabs/toolbox-foundry/src/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": { "enabled": true, "runs": 20000 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "test/mocks/OFTInspectorMock.sol": "OFTInspectorMock"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "node_modules/@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppMsgInspector.sol": {
        "keccak256": "0x339654e699043c400cad92de209aa23855ce10211c31cf4114042cc5224d3b7c",
        "urls": [
          "bzz-raw://5222afde59bf086f67b39e0288ad36343f4f5ed683d250533f256a5db956f37e",
          "dweb:/ipfs/QmbEG9EMYsK3Y6Cz7QbNtkW4kHGzMuhp2y2seSoL8v1A5b"
        ],
        "license": "MIT"
      },
      "test/mocks/OFTInspectorMock.sol": {
        "keccak256": "0x5c03d2ccc86f441a56c2d826b1f01aae4031142e8ec0a8eeb76bf5f30c925f46",
        "urls": [
          "bzz-raw://380d6c8708dae9a6783c6edffa5d6bfcb0c8fa87fd17893257cd3e1806ae6b4f",
          "dweb:/ipfs/QmPJRTivnhc93cD6VgTUB2oG2btgvQoJetNJSXsT5XVnm7"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "id": 138
}
