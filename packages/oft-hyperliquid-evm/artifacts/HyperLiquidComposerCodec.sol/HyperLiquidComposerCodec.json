{
  "abi": [
    {
      "type": "function",
      "name": "BASE_ASSET_BRIDGE_ADDRESS",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "BASE_ASSET_BRIDGE_ADDRESS_UINT256",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "VALID_COMPOSE_MESSAGE_LENGTH_ENCODE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "VALID_COMPOSE_MESSAGE_LENGTH_PACKED",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "error",
      "name": "HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength",
      "inputs": [
        { "name": "message", "type": "bytes", "internalType": "bytes" },
        { "name": "length", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "HyperLiquidComposer_Exceed_TransferLimit",
      "inputs": [
        {
          "name": "allowedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "amountSent", "type": "uint256", "internalType": "uint256" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x610103610035600b8282823980515f1a60731461002957634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106050575f3560e01c806303e41b77146054578063807d6c3f1460815780639278d99a146088578063d58daedf14608f575b5f80fd5b606e73200000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b606e601481565b606e602081565b60a973200000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001607856fea2646970667358221220977886d35a74ffb824818f8665aa3a2e230be88f77fa113bb6dacc226e73b9bf64736f6c63430008160033",
    "sourceMap": "245:4787:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;245:4787:4;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x73000000000000000000000000000000000000000030146080604052600436106050575f3560e01c806303e41b77146054578063807d6c3f1460815780639278d99a146088578063d58daedf14608f575b5f80fd5b606e73200000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b606e601481565b606e602081565b60a973200000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001607856fea2646970667358221220977886d35a74ffb824818f8665aa3a2e230be88f77fa113bb6dacc226e73b9bf64736f6c63430008160033",
    "sourceMap": "245:4787:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1130:103;;1082:42;1130:103;;;;;168:25:80;;;156:2;141:18;1130:103:4;;;;;;;;517:64;;579:2;517:64;;587;;649:2;587:64;;1030:94;;1082:42;1030:94;;;;;388:42:80;376:55;;;358:74;;346:2;331:18;1030:94:4;204:234:80",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BASE_ASSET_BRIDGE_ADDRESS()": "d58daedf",
    "BASE_ASSET_BRIDGE_ADDRESS_UINT256()": "03e41b77",
    "VALID_COMPOSE_MESSAGE_LENGTH_ENCODE()": "9278d99a",
    "VALID_COMPOSE_MESSAGE_LENGTH_PACKED()": "807d6c3f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"allowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountSent\",\"type\":\"uint256\"}],\"name\":\"HyperLiquidComposer_Exceed_TransferLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BASE_ASSET_BRIDGE_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_ASSET_BRIDGE_ADDRESS_UINT256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALID_COMPOSE_MESSAGE_LENGTH_ENCODE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALID_COMPOSE_MESSAGE_LENGTH_PACKED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"BASE_ASSET_BRIDGE_ADDRESS\":{\"details\":\"The base asset bridge address is the address of the HyperLiquid L1 contractThis is the address that the OFT contract will transfer the tokens to when we want to send tokens to HyperLiquid L1https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/hyperevm/hypercore-less-than-greater-than-hyperevm-transfers#system-addresses\"},\"VALID_COMPOSE_MESSAGE_LENGTH_PACKED\":{\"details\":\"The length of the message that is valid for the HyperLiquidComposerThis is 20 bytes because addresses are 20 bytesWe are in encodePacked mode, if we are in encode mode, the length is 32 bytes\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/library/HyperLiquidComposerCodec.sol\":\"HyperLiquidComposerCodec\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=node_modules/@layerzerolabs/toolbox-foundry/lib/ds-test/\",\":forge-std/=node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/\",\":solidity-bytes-utils/contracts/=node_modules/@layerzerolabs/toolbox-foundry/lib/solidity-bytes-utils/\"]},\"sources\":{\"contracts/interfaces/IHyperLiquidComposer.sol\":{\"keccak256\":\"0x3862603fed984301e5fe7b5f4eb9b2eae9abc1dda29d81f9ec1be6ecfd613b87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eaf12311a209131d180035de45b08104f3b517000a1f59e4b169359ce14e672f\",\"dweb:/ipfs/QmNuiP8cQS4ZgLo1f7R8EX4tiGE6JSHxqqgzzGYrEssycE\"]},\"contracts/library/HyperLiquidComposerCodec.sol\":{\"keccak256\":\"0xb9a058e692311087555978ceda77cd37e25224897075fa6d4b6f6e435d9b1c1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be2aa172454a4a60fbd41a07b2bba8d66208d2952451cb805a799d3dcb833b10\",\"dweb:/ipfs/QmVMqi7hT6MB26beXRDxyQEAYVTAQTHpQKCnErX4VYSH4Y\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\":{\"keccak256\":\"0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f254bc60ac26687b5320a43a556e30777b0745abf7cd64d5f4720d9b1d1f7fdf\",\"dweb:/ipfs/QmRSJEZVgxaC3L2DdE6s8P5qkYfM3V5JMeseeFJJqGR4xz\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\":{\"keccak256\":\"0xe5014c411acb2b59dd74ae74a1bab02cf32d94a41a548a5ab553d64aeeb55dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dfb7bc121002fc7e7931c34eb17af0ae0f0127dcc3199511c83a58a917160d\",\"dweb:/ipfs/QmPdq1wcRRBdUP169LHCLoLuPRunN9eR71TQN42FjGpowx\"]},\"node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\":{\"keccak256\":\"0xaae73d6eb8b9561c43f1802f3c416c00ccd35f172b711f9781ccdf1b25a40db5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7beda2d895ae9e15269dd261a492ce0a29b498e5bebf088ed6f2ae6a5185719e\",\"dweb:/ipfs/QmScog2tW1YVyEPLVcUVqGGc85ub46sA28nUKNzFEZcFdK\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.22+commit.4fc1097e" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "bytes", "name": "message", "type": "bytes" },
            { "internalType": "uint256", "name": "length", "type": "uint256" }
          ],
          "type": "error",
          "name": "HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "allowedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountSent",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "HyperLiquidComposer_Exceed_TransferLimit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BASE_ASSET_BRIDGE_ADDRESS",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BASE_ASSET_BRIDGE_ADDRESS_UINT256",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VALID_COMPOSE_MESSAGE_LENGTH_ENCODE",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VALID_COMPOSE_MESSAGE_LENGTH_PACKED",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        }
      ],
      "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@layerzerolabs/=node_modules/@layerzerolabs/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=node_modules/@layerzerolabs/toolbox-foundry/lib/ds-test/",
        "forge-std/=node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/",
        "solidity-bytes-utils/contracts/=node_modules/@layerzerolabs/toolbox-foundry/lib/solidity-bytes-utils/"
      ],
      "optimizer": { "enabled": true, "runs": 20000 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "contracts/library/HyperLiquidComposerCodec.sol": "HyperLiquidComposerCodec"
      },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IHyperLiquidComposer.sol": {
        "keccak256": "0x3862603fed984301e5fe7b5f4eb9b2eae9abc1dda29d81f9ec1be6ecfd613b87",
        "urls": [
          "bzz-raw://eaf12311a209131d180035de45b08104f3b517000a1f59e4b169359ce14e672f",
          "dweb:/ipfs/QmNuiP8cQS4ZgLo1f7R8EX4tiGE6JSHxqqgzzGYrEssycE"
        ],
        "license": "MIT"
      },
      "contracts/library/HyperLiquidComposerCodec.sol": {
        "keccak256": "0xb9a058e692311087555978ceda77cd37e25224897075fa6d4b6f6e435d9b1c1a",
        "urls": [
          "bzz-raw://be2aa172454a4a60fbd41a07b2bba8d66208d2952451cb805a799d3dcb833b10",
          "dweb:/ipfs/QmVMqi7hT6MB26beXRDxyQEAYVTAQTHpQKCnErX4VYSH4Y"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol": {
        "keccak256": "0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49",
        "urls": [
          "bzz-raw://f254bc60ac26687b5320a43a556e30777b0745abf7cd64d5f4720d9b1d1f7fdf",
          "dweb:/ipfs/QmRSJEZVgxaC3L2DdE6s8P5qkYfM3V5JMeseeFJJqGR4xz"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol": {
        "keccak256": "0xe5014c411acb2b59dd74ae74a1bab02cf32d94a41a548a5ab553d64aeeb55dae",
        "urls": [
          "bzz-raw://29dfb7bc121002fc7e7931c34eb17af0ae0f0127dcc3199511c83a58a917160d",
          "dweb:/ipfs/QmPdq1wcRRBdUP169LHCLoLuPRunN9eR71TQN42FjGpowx"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol": {
        "keccak256": "0xaae73d6eb8b9561c43f1802f3c416c00ccd35f172b711f9781ccdf1b25a40db5",
        "urls": [
          "bzz-raw://7beda2d895ae9e15269dd261a492ce0a29b498e5bebf088ed6f2ae6a5185719e",
          "dweb:/ipfs/QmScog2tW1YVyEPLVcUVqGGc85ub46sA28nUKNzFEZcFdK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 4
}
