{
  "abi": [
    {
      "type": "function",
      "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "HLP_PRECOMPILE_WRITE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "VALID_COMPOSE_MESSAGE_LENGTH_ENCODE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "VALID_COMPOSE_MESSAGE_LENGTH_PACKED",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "balanceOfHyperCore",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" },
        { "name": "_tokenId", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "endpoint",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getHypeAsset",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IHyperAsset",
          "components": [
            {
              "name": "assetBridgeAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "coreIndexId",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "decimalDiff",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOFTAsset",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IHyperAsset",
          "components": [
            {
              "name": "assetBridgeAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "coreIndexId",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "decimalDiff",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hypeAsset",
      "inputs": [],
      "outputs": [
        {
          "name": "assetBridgeAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "coreIndexId", "type": "uint64", "internalType": "uint64" },
        { "name": "decimalDiff", "type": "uint64", "internalType": "uint64" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "oft",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IOFT" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "oftAsset",
      "inputs": [],
      "outputs": [
        {
          "name": "assetBridgeAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "coreIndexId", "type": "uint64", "internalType": "uint64" },
        { "name": "decimalDiff", "type": "uint64", "internalType": "uint64" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "quoteHyperCoreAmount",
      "inputs": [
        { "name": "_amount", "type": "uint256", "internalType": "uint256" },
        { "name": "_isOFT", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IHyperAssetAmount",
          "components": [
            { "name": "evm", "type": "uint256", "internalType": "uint256" },
            { "name": "dust", "type": "uint256", "internalType": "uint256" },
            { "name": "core", "type": "uint64", "internalType": "uint64" }
          ]
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "refundERC20",
      "inputs": [
        {
          "name": "_refundAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "refundNativeTokens",
      "inputs": [
        {
          "name": "_refundAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "token",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IERC20" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "validate_addresses_or_refund",
      "inputs": [
        { "name": "_maybeReceiver", "type": "bytes", "internalType": "bytes" },
        {
          "name": "_senderBytes32",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        { "name": "_amountLD", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "validate_payload",
      "inputs": [
        { "name": "_composeMessage", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "bytes32", "internalType": "bytes32" },
        { "name": "", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "event",
      "name": "ErrorERC20_Refund",
      "inputs": [
        {
          "name": "refundTo",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "refundAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ErrorHYPE_Refund",
      "inputs": [
        {
          "name": "refundTo",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "refundAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ErrorMessage",
      "inputs": [
        {
          "name": "reason",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OverflowDetected",
      "inputs": [
        {
          "name": "amountCore",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        },
        {
          "name": "maxTransferableAmount",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ErrorMsg",
      "inputs": [
        { "name": "errorMessage", "type": "bytes", "internalType": "bytes" }
      ]
    },
    {
      "type": "error",
      "name": "HyperLiquidComposerCore_SpotBalanceRead_Failed",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint64", "internalType": "uint64" }
      ]
    },
    {
      "type": "error",
      "name": "HyperLiquidComposer_FailedToRefund_HYPE",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ErrorMsg",
      "inputs": [
        { "name": "errorMessage", "type": "bytes", "internalType": "bytes" }
      ]
    },
    {
      "type": "error",
      "name": "HyperLiquidComposer_InvalidCall_NotComposer",
      "inputs": [
        {
          "name": "notComposerAddress",
          "type": "address",
          "internalType": "address"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561000f575f80fd5b5060805160a05160c0516120dc6100415f395f81816109f70152610d4501525f61083501525f61063101526120dc5ff3fe6080604052600436106100fd575f3560e01c80639278d99a11610094578063dd85007511610063578063dd85007514610325578063ebaeefd61461034f578063f6e6b2401461036b578063f9716faf14610397578063fc0c546a146103d3576100fd565b80639278d99a1461027d5780639b5215f6146102a7578063aae12e46146102d1578063ba872679146102fb576100fd565b8063765008a1116100d0578063765008a1146101cf578063807d6c3f146101fb57806381e8dcb4146102255780638483bc0014610261576100fd565b80631b224831146101015780632d0e315c1461013f5780635241b496146101695780635e280f11146101a5575b5f80fd5b34801561010c575f80fd5b50610127600480360381019061012291906111f7565b6103fd565b604051610136939291906112fc565b60405180910390f35b34801561014a575f80fd5b5061015361043b565b60405161016091906113d9565b60405180910390f35b348015610174575f80fd5b5061018f600480360381019061018a919061156e565b61050a565b60405161019c91906115e9565b60405180910390f35b3480156101b0575f80fd5b506101b961062f565b6040516101c691906115e9565b60405180910390f35b3480156101da575f80fd5b506101e3610653565b6040516101f293929190611611565b60405180910390f35b348015610206575f80fd5b5061020f6106ae565b60405161021c9190611646565b60405180910390f35b348015610230575f80fd5b5061024b600480360381019061024691906116b3565b6106b3565b60405161025891906116f1565b60405180910390f35b61027b6004803603810190610276919061170a565b6106c6565b005b348015610288575f80fd5b5061029161082e565b60405161029e9190611646565b60405180910390f35b3480156102b2575f80fd5b506102bb610833565b6040516102c89190611790565b60405180910390f35b3480156102dc575f80fd5b506102e5610857565b6040516102f291906113d9565b60405180910390f35b348015610306575f80fd5b5061030f610927565b60405161031c91906115e9565b60405180910390f35b348015610330575f80fd5b5061033961092d565b60405161034691906115e9565b60405180910390f35b610369600480360381019061036491906117a9565b610945565b005b348015610376575f80fd5b5061037f610a96565b60405161038e93929190611611565b60405180910390f35b3480156103a2575f80fd5b506103bd60048036038101906103b8919061181c565b610af2565b6040516103ca91906118a9565b60405180910390f35b3480156103de575f80fd5b506103e7610d43565b6040516103f491906118e2565b60405180910390f35b5f8060605f61040c8686610d67565b90505f6104198787610d97565b90505f6104268888610dc5565b90508282829550955095505050509250925092565b610443611115565b5f6040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905090565b5f8061051584610e27565b90505f61052186610e5e565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610623575f6309b3473160e01b8788516040516024016105739291906118fb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506105e7838683610eb29092919063ffffffff16565b6040517f4f95203300000000000000000000000000000000000000000000000000000000815260040161061a9190611929565b60405180910390fd5b80925050509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b601481565b5f6106be8383610f0d565b905092915050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073657336040517f5950c85e00000000000000000000000000000000000000000000000000000000815260040161072d91906115e9565b60405180910390fd5b5f34111561082b575f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610778578161077a565b325b90505f8173ffffffffffffffffffffffffffffffffffffffff16346040516107a190611976565b5f6040518083038185875af1925050503d805f81146107db576040519150601f19603f3d011682016040523d82523d5f602084013e6107e0565b606091505b50509050806108285781346040517fc8ee485e00000000000000000000000000000000000000000000000000000000815260040161081f92919061198a565b60405180910390fd5b50505b50565b602081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61085f611115565b60026040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905090565b61080181565b73333333333333333333333333333333333333333381565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109b557336040517f5950c85e0000000000000000000000000000000000000000000000000000000081526004016109ac91906115e9565b60405180910390fd5b5f811180156109f057505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15610a92577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610a5092919061198a565b6020604051808303815f875af1158015610a6c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a9091906119c5565b505b5050565b6002805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b610afa61115d565b610b02611115565b5f8315610c17575f6040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150610c105f80015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f800160149054906101000a900467ffffffffffffffff16610f0d565b9050610d24565b60026040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150610d2160025f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f0160149054906101000a900467ffffffffffffffff16610f0d565b90505b610d398183876110049092919063ffffffff16565b9250505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f8282600c60ff1690602c60ff1692610d82939291906119f8565b90610d8d9190611a48565b5f1c905092915050565b5f8282602c60ff1690604c60ff1692610db2939291906119f8565b90610dbd9190611a48565b905092915050565b60608282604c60ff16908092610ddd939291906119f8565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050905092915050565b5f80825f1c905073ffffffffffffffffffffffffffffffffffffffff80168111610e545780915050610e59565b5f9150505b919050565b5f808251905060148103610e815782610e7690611af4565b60601c915050610ead565b60208103610ea8575f83610e9490611b6e565b9050610e9f81610e27565b92505050610ead565b5f9150505b919050565b606060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200185815250604051602001610ef59190611c69565b60405160208183030381529060405290509392505050565b5f80606061080173ffffffffffffffffffffffffffffffffffffffff168585604051602001610f3d929190611c89565b604051602081830303815290604052604051610f599190611ce0565b5f60405180830381855afa9150503d805f8114610f91576040519150601f19603f3d011682016040523d82523d5f602084013e610f96565b606091505b50809250819350505081610fe35784846040517fa91ed721000000000000000000000000000000000000000000000000000000008152600401610fda929190611c89565b60405180910390fd5b80806020019051810190610ff79190611d6f565b5f01519250505092915050565b61100c61115d565b5f8260400151600a61101e9190611ef6565b90505f8082878161103257611031611f40565b5b06915081870390505f83886110479190611f6d565b90508667ffffffffffffffff168167ffffffffffffffff1611156110e3577ff17459c2e89c2b011fa739accb3b853858d0a689d31382b9aa4f56a1ca00f9d38188604051611096929190611f9d565b60405180910390a15f8488836110ac9190611fc4565b67ffffffffffffffff166110c09190611fff565b905087915080836110d19190612040565b925080846110df9190612073565b9350505b60405180606001604052808381526020018481526020018267ffffffffffffffff168152509450505050509392505050565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff1681525090565b60405180606001604052805f81526020015f81526020015f67ffffffffffffffff1681525090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126111b7576111b6611196565b5b8235905067ffffffffffffffff8111156111d4576111d361119a565b5b6020830191508360018202830111156111f0576111ef61119e565b5b9250929050565b5f806020838503121561120d5761120c61118e565b5b5f83013567ffffffffffffffff81111561122a57611229611192565b5b611236858286016111a2565b92509250509250929050565b5f819050919050565b61125481611242565b82525050565b5f819050919050565b61126c8161125a565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156112a957808201518184015260208101905061128e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6112ce82611272565b6112d8818561127c565b93506112e881856020860161128c565b6112f1816112b4565b840191505092915050565b5f60608201905061130f5f83018661124b565b61131c6020830185611263565b818103604083015261132e81846112c4565b9050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61136182611338565b9050919050565b61137181611357565b82525050565b5f67ffffffffffffffff82169050919050565b61139381611377565b82525050565b606082015f8201516113ad5f850182611368565b5060208201516113c0602085018261138a565b5060408201516113d3604085018261138a565b50505050565b5f6060820190506113ec5f830184611399565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61142c826112b4565b810181811067ffffffffffffffff8211171561144b5761144a6113f6565b5b80604052505050565b5f61145d611185565b90506114698282611423565b919050565b5f67ffffffffffffffff821115611488576114876113f6565b5b611491826112b4565b9050602081019050919050565b828183375f83830152505050565b5f6114be6114b98461146e565b611454565b9050828152602081018484840111156114da576114d96113f2565b5b6114e584828561149e565b509392505050565b5f82601f83011261150157611500611196565b5b81356115118482602086016114ac565b91505092915050565b6115238161125a565b811461152d575f80fd5b50565b5f8135905061153e8161151a565b92915050565b61154d81611242565b8114611557575f80fd5b50565b5f8135905061156881611544565b92915050565b5f805f606084860312156115855761158461118e565b5b5f84013567ffffffffffffffff8111156115a2576115a1611192565b5b6115ae868287016114ed565b93505060206115bf86828701611530565b92505060406115d08682870161155a565b9150509250925092565b6115e381611357565b82525050565b5f6020820190506115fc5f8301846115da565b92915050565b61160b81611377565b82525050565b5f6060820190506116245f8301866115da565b6116316020830185611602565b61163e6040830184611602565b949350505050565b5f6020820190506116595f83018461124b565b92915050565b61166881611357565b8114611672575f80fd5b50565b5f813590506116838161165f565b92915050565b61169281611377565b811461169c575f80fd5b50565b5f813590506116ad81611689565b92915050565b5f80604083850312156116c9576116c861118e565b5b5f6116d685828601611675565b92505060206116e78582860161169f565b9150509250929050565b5f6020820190506117045f830184611602565b92915050565b5f6020828403121561171f5761171e61118e565b5b5f61172c84828501611675565b91505092915050565b5f819050919050565b5f61175861175361174e84611338565b611735565b611338565b9050919050565b5f6117698261173e565b9050919050565b5f61177a8261175f565b9050919050565b61178a81611770565b82525050565b5f6020820190506117a35f830184611781565b92915050565b5f80604083850312156117bf576117be61118e565b5b5f6117cc85828601611675565b92505060206117dd8582860161155a565b9150509250929050565b5f8115159050919050565b6117fb816117e7565b8114611805575f80fd5b50565b5f81359050611816816117f2565b92915050565b5f80604083850312156118325761183161118e565b5b5f61183f8582860161155a565b925050602061185085828601611808565b9150509250929050565b61186381611242565b82525050565b606082015f82015161187d5f85018261185a565b506020820151611890602085018261185a565b5060408201516118a3604085018261138a565b50505050565b5f6060820190506118bc5f830184611869565b92915050565b5f6118cc8261175f565b9050919050565b6118dc816118c2565b82525050565b5f6020820190506118f55f8301846118d3565b92915050565b5f6040820190508181035f83015261191381856112c4565b9050611922602083018461124b565b9392505050565b5f6020820190508181035f83015261194181846112c4565b905092915050565b5f81905092915050565b50565b5f6119615f83611949565b915061196c82611953565b5f82019050919050565b5f61198082611956565b9150819050919050565b5f60408201905061199d5f8301856115da565b6119aa602083018461124b565b9392505050565b5f815190506119bf816117f2565b92915050565b5f602082840312156119da576119d961118e565b5b5f6119e7848285016119b1565b91505092915050565b5f80fd5b5f80fd5b5f8085851115611a0b57611a0a6119f0565b5b83861115611a1c57611a1b6119f4565b5b6001850283019150848603905094509492505050565b5f82905092915050565b5f82821b905092915050565b5f611a538383611a32565b82611a5e813561125a565b92506020821015611a9e57611a997fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802611a3c565b831692505b505092915050565b5f819050602082019050919050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b5f611aeb8251611ab5565b80915050919050565b5f611afe82611272565b82611b0884611aa6565b9050611b1381611ae0565b92506014821015611b5357611b4e7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083601403600802611a3c565b831692505b5050919050565b5f611b65825161125a565b80915050919050565b5f611b7882611272565b82611b8284611aa6565b9050611b8d81611b5a565b92506020821015611bcd57611bc87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802611a3c565b831692505b5050919050565b5f82825260208201905092915050565b5f611bee82611272565b611bf88185611bd4565b9350611c0881856020860161128c565b611c11816112b4565b840191505092915050565b5f606083015f830151611c315f860182611368565b506020830151611c44602086018261185a565b5060408301518482036040860152611c5c8282611be4565b9150508091505092915050565b5f6020820190508181035f830152611c818184611c1c565b905092915050565b5f604082019050611c9c5f8301856115da565b611ca96020830184611602565b9392505050565b5f611cba82611272565b611cc48185611949565b9350611cd481856020860161128c565b80840191505092915050565b5f611ceb8284611cb0565b915081905092915050565b5f80fd5b5f81519050611d0881611689565b92915050565b5f60608284031215611d2357611d22611cf6565b5b611d2d6060611454565b90505f611d3c84828501611cfa565b5f830152506020611d4f84828501611cfa565b6020830152506040611d6384828501611cfa565b60408301525092915050565b5f60608284031215611d8457611d8361118e565b5b5f611d9184828501611d0e565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115611e1c57808604811115611df857611df7611d9a565b5b6001851615611e075780820291505b8081029050611e1585611dc7565b9450611ddc565b94509492505050565b5f82611e345760019050611eef565b81611e41575f9050611eef565b8160018114611e575760028114611e6157611e90565b6001915050611eef565b60ff841115611e7357611e72611d9a565b5b8360020a915084821115611e8a57611e89611d9a565b5b50611eef565b5060208310610133831016604e8410600b8410161715611ec55782820a905083811115611ec057611ebf611d9a565b5b611eef565b611ed28484846001611dd3565b92509050818404811115611ee957611ee8611d9a565b5b81810290505b9392505050565b5f611f0082611242565b9150611f0b83611377565b9250611f387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611e25565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f7782611242565b9150611f8283611242565b925082611f9257611f91611f40565b5b828204905092915050565b5f604082019050611fb05f830185611602565b611fbd6020830184611602565b9392505050565b5f611fce82611377565b9150611fd983611377565b9250828203905067ffffffffffffffff811115611ff957611ff8611d9a565b5b92915050565b5f61200982611242565b915061201483611242565b925082820261202281611242565b9150828204841483151761203957612038611d9a565b5b5092915050565b5f61204a82611242565b915061205583611242565b925082820390508181111561206d5761206c611d9a565b5b92915050565b5f61207d82611242565b915061208883611242565b92508282019050808211156120a05761209f611d9a565b5b9291505056fea2646970667358221220cbe875045cc8d6be474c1815820bbab8ce789b5d814409286c98c75b9730f4f464736f6c63430008160033",
    "sourceMap": "803:9283:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100fd575f3560e01c80639278d99a11610094578063dd85007511610063578063dd85007514610325578063ebaeefd61461034f578063f6e6b2401461036b578063f9716faf14610397578063fc0c546a146103d3576100fd565b80639278d99a1461027d5780639b5215f6146102a7578063aae12e46146102d1578063ba872679146102fb576100fd565b8063765008a1116100d0578063765008a1146101cf578063807d6c3f146101fb57806381e8dcb4146102255780638483bc0014610261576100fd565b80631b224831146101015780632d0e315c1461013f5780635241b496146101695780635e280f11146101a5575b5f80fd5b34801561010c575f80fd5b50610127600480360381019061012291906111f7565b6103fd565b604051610136939291906112fc565b60405180910390f35b34801561014a575f80fd5b5061015361043b565b60405161016091906113d9565b60405180910390f35b348015610174575f80fd5b5061018f600480360381019061018a919061156e565b61050a565b60405161019c91906115e9565b60405180910390f35b3480156101b0575f80fd5b506101b961062f565b6040516101c691906115e9565b60405180910390f35b3480156101da575f80fd5b506101e3610653565b6040516101f293929190611611565b60405180910390f35b348015610206575f80fd5b5061020f6106ae565b60405161021c9190611646565b60405180910390f35b348015610230575f80fd5b5061024b600480360381019061024691906116b3565b6106b3565b60405161025891906116f1565b60405180910390f35b61027b6004803603810190610276919061170a565b6106c6565b005b348015610288575f80fd5b5061029161082e565b60405161029e9190611646565b60405180910390f35b3480156102b2575f80fd5b506102bb610833565b6040516102c89190611790565b60405180910390f35b3480156102dc575f80fd5b506102e5610857565b6040516102f291906113d9565b60405180910390f35b348015610306575f80fd5b5061030f610927565b60405161031c91906115e9565b60405180910390f35b348015610330575f80fd5b5061033961092d565b60405161034691906115e9565b60405180910390f35b610369600480360381019061036491906117a9565b610945565b005b348015610376575f80fd5b5061037f610a96565b60405161038e93929190611611565b60405180910390f35b3480156103a2575f80fd5b506103bd60048036038101906103b8919061181c565b610af2565b6040516103ca91906118a9565b60405180910390f35b3480156103de575f80fd5b506103e7610d43565b6040516103f491906118e2565b60405180910390f35b5f8060605f61040c8686610d67565b90505f6104198787610d97565b90505f6104268888610dc5565b90508282829550955095505050509250925092565b610443611115565b5f6040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905090565b5f8061051584610e27565b90505f61052186610e5e565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610623575f6309b3473160e01b8788516040516024016105739291906118fb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506105e7838683610eb29092919063ffffffff16565b6040517f4f95203300000000000000000000000000000000000000000000000000000000815260040161061a9190611929565b60405180910390fd5b80925050509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b601481565b5f6106be8383610f0d565b905092915050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073657336040517f5950c85e00000000000000000000000000000000000000000000000000000000815260040161072d91906115e9565b60405180910390fd5b5f34111561082b575f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610778578161077a565b325b90505f8173ffffffffffffffffffffffffffffffffffffffff16346040516107a190611976565b5f6040518083038185875af1925050503d805f81146107db576040519150601f19603f3d011682016040523d82523d5f602084013e6107e0565b606091505b50509050806108285781346040517fc8ee485e00000000000000000000000000000000000000000000000000000000815260040161081f92919061198a565b60405180910390fd5b50505b50565b602081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61085f611115565b60026040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905090565b61080181565b73333333333333333333333333333333333333333381565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109b557336040517f5950c85e0000000000000000000000000000000000000000000000000000000081526004016109ac91906115e9565b60405180910390fd5b5f811180156109f057505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15610a92577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610a5092919061198a565b6020604051808303815f875af1158015610a6c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a9091906119c5565b505b5050565b6002805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b610afa61115d565b610b02611115565b5f8315610c17575f6040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150610c105f80015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f800160149054906101000a900467ffffffffffffffff16610f0d565b9050610d24565b60026040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150610d2160025f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f0160149054906101000a900467ffffffffffffffff16610f0d565b90505b610d398183876110049092919063ffffffff16565b9250505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f8282600c60ff1690602c60ff1692610d82939291906119f8565b90610d8d9190611a48565b5f1c905092915050565b5f8282602c60ff1690604c60ff1692610db2939291906119f8565b90610dbd9190611a48565b905092915050565b60608282604c60ff16908092610ddd939291906119f8565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050905092915050565b5f80825f1c905073ffffffffffffffffffffffffffffffffffffffff80168111610e545780915050610e59565b5f9150505b919050565b5f808251905060148103610e815782610e7690611af4565b60601c915050610ead565b60208103610ea8575f83610e9490611b6e565b9050610e9f81610e27565b92505050610ead565b5f9150505b919050565b606060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200185815250604051602001610ef59190611c69565b60405160208183030381529060405290509392505050565b5f80606061080173ffffffffffffffffffffffffffffffffffffffff168585604051602001610f3d929190611c89565b604051602081830303815290604052604051610f599190611ce0565b5f60405180830381855afa9150503d805f8114610f91576040519150601f19603f3d011682016040523d82523d5f602084013e610f96565b606091505b50809250819350505081610fe35784846040517fa91ed721000000000000000000000000000000000000000000000000000000008152600401610fda929190611c89565b60405180910390fd5b80806020019051810190610ff79190611d6f565b5f01519250505092915050565b61100c61115d565b5f8260400151600a61101e9190611ef6565b90505f8082878161103257611031611f40565b5b06915081870390505f83886110479190611f6d565b90508667ffffffffffffffff168167ffffffffffffffff1611156110e3577ff17459c2e89c2b011fa739accb3b853858d0a689d31382b9aa4f56a1ca00f9d38188604051611096929190611f9d565b60405180910390a15f8488836110ac9190611fc4565b67ffffffffffffffff166110c09190611fff565b905087915080836110d19190612040565b925080846110df9190612073565b9350505b60405180606001604052808381526020018481526020018267ffffffffffffffff168152509450505050509392505050565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff1681525090565b60405180606001604052805f81526020015f81526020015f67ffffffffffffffff1681525090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126111b7576111b6611196565b5b8235905067ffffffffffffffff8111156111d4576111d361119a565b5b6020830191508360018202830111156111f0576111ef61119e565b5b9250929050565b5f806020838503121561120d5761120c61118e565b5b5f83013567ffffffffffffffff81111561122a57611229611192565b5b611236858286016111a2565b92509250509250929050565b5f819050919050565b61125481611242565b82525050565b5f819050919050565b61126c8161125a565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156112a957808201518184015260208101905061128e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6112ce82611272565b6112d8818561127c565b93506112e881856020860161128c565b6112f1816112b4565b840191505092915050565b5f60608201905061130f5f83018661124b565b61131c6020830185611263565b818103604083015261132e81846112c4565b9050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61136182611338565b9050919050565b61137181611357565b82525050565b5f67ffffffffffffffff82169050919050565b61139381611377565b82525050565b606082015f8201516113ad5f850182611368565b5060208201516113c0602085018261138a565b5060408201516113d3604085018261138a565b50505050565b5f6060820190506113ec5f830184611399565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61142c826112b4565b810181811067ffffffffffffffff8211171561144b5761144a6113f6565b5b80604052505050565b5f61145d611185565b90506114698282611423565b919050565b5f67ffffffffffffffff821115611488576114876113f6565b5b611491826112b4565b9050602081019050919050565b828183375f83830152505050565b5f6114be6114b98461146e565b611454565b9050828152602081018484840111156114da576114d96113f2565b5b6114e584828561149e565b509392505050565b5f82601f83011261150157611500611196565b5b81356115118482602086016114ac565b91505092915050565b6115238161125a565b811461152d575f80fd5b50565b5f8135905061153e8161151a565b92915050565b61154d81611242565b8114611557575f80fd5b50565b5f8135905061156881611544565b92915050565b5f805f606084860312156115855761158461118e565b5b5f84013567ffffffffffffffff8111156115a2576115a1611192565b5b6115ae868287016114ed565b93505060206115bf86828701611530565b92505060406115d08682870161155a565b9150509250925092565b6115e381611357565b82525050565b5f6020820190506115fc5f8301846115da565b92915050565b61160b81611377565b82525050565b5f6060820190506116245f8301866115da565b6116316020830185611602565b61163e6040830184611602565b949350505050565b5f6020820190506116595f83018461124b565b92915050565b61166881611357565b8114611672575f80fd5b50565b5f813590506116838161165f565b92915050565b61169281611377565b811461169c575f80fd5b50565b5f813590506116ad81611689565b92915050565b5f80604083850312156116c9576116c861118e565b5b5f6116d685828601611675565b92505060206116e78582860161169f565b9150509250929050565b5f6020820190506117045f830184611602565b92915050565b5f6020828403121561171f5761171e61118e565b5b5f61172c84828501611675565b91505092915050565b5f819050919050565b5f61175861175361174e84611338565b611735565b611338565b9050919050565b5f6117698261173e565b9050919050565b5f61177a8261175f565b9050919050565b61178a81611770565b82525050565b5f6020820190506117a35f830184611781565b92915050565b5f80604083850312156117bf576117be61118e565b5b5f6117cc85828601611675565b92505060206117dd8582860161155a565b9150509250929050565b5f8115159050919050565b6117fb816117e7565b8114611805575f80fd5b50565b5f81359050611816816117f2565b92915050565b5f80604083850312156118325761183161118e565b5b5f61183f8582860161155a565b925050602061185085828601611808565b9150509250929050565b61186381611242565b82525050565b606082015f82015161187d5f85018261185a565b506020820151611890602085018261185a565b5060408201516118a3604085018261138a565b50505050565b5f6060820190506118bc5f830184611869565b92915050565b5f6118cc8261175f565b9050919050565b6118dc816118c2565b82525050565b5f6020820190506118f55f8301846118d3565b92915050565b5f6040820190508181035f83015261191381856112c4565b9050611922602083018461124b565b9392505050565b5f6020820190508181035f83015261194181846112c4565b905092915050565b5f81905092915050565b50565b5f6119615f83611949565b915061196c82611953565b5f82019050919050565b5f61198082611956565b9150819050919050565b5f60408201905061199d5f8301856115da565b6119aa602083018461124b565b9392505050565b5f815190506119bf816117f2565b92915050565b5f602082840312156119da576119d961118e565b5b5f6119e7848285016119b1565b91505092915050565b5f80fd5b5f80fd5b5f8085851115611a0b57611a0a6119f0565b5b83861115611a1c57611a1b6119f4565b5b6001850283019150848603905094509492505050565b5f82905092915050565b5f82821b905092915050565b5f611a538383611a32565b82611a5e813561125a565b92506020821015611a9e57611a997fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802611a3c565b831692505b505092915050565b5f819050602082019050919050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b5f611aeb8251611ab5565b80915050919050565b5f611afe82611272565b82611b0884611aa6565b9050611b1381611ae0565b92506014821015611b5357611b4e7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083601403600802611a3c565b831692505b5050919050565b5f611b65825161125a565b80915050919050565b5f611b7882611272565b82611b8284611aa6565b9050611b8d81611b5a565b92506020821015611bcd57611bc87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802611a3c565b831692505b5050919050565b5f82825260208201905092915050565b5f611bee82611272565b611bf88185611bd4565b9350611c0881856020860161128c565b611c11816112b4565b840191505092915050565b5f606083015f830151611c315f860182611368565b506020830151611c44602086018261185a565b5060408301518482036040860152611c5c8282611be4565b9150508091505092915050565b5f6020820190508181035f830152611c818184611c1c565b905092915050565b5f604082019050611c9c5f8301856115da565b611ca96020830184611602565b9392505050565b5f611cba82611272565b611cc48185611949565b9350611cd481856020860161128c565b80840191505092915050565b5f611ceb8284611cb0565b915081905092915050565b5f80fd5b5f81519050611d0881611689565b92915050565b5f60608284031215611d2357611d22611cf6565b5b611d2d6060611454565b90505f611d3c84828501611cfa565b5f830152506020611d4f84828501611cfa565b6020830152506040611d6384828501611cfa565b60408301525092915050565b5f60608284031215611d8457611d8361118e565b5b5f611d9184828501611d0e565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115611e1c57808604811115611df857611df7611d9a565b5b6001851615611e075780820291505b8081029050611e1585611dc7565b9450611ddc565b94509492505050565b5f82611e345760019050611eef565b81611e41575f9050611eef565b8160018114611e575760028114611e6157611e90565b6001915050611eef565b60ff841115611e7357611e72611d9a565b5b8360020a915084821115611e8a57611e89611d9a565b5b50611eef565b5060208310610133831016604e8410600b8410161715611ec55782820a905083811115611ec057611ebf611d9a565b5b611eef565b611ed28484846001611dd3565b92509050818404811115611ee957611ee8611d9a565b5b81810290505b9392505050565b5f611f0082611242565b9150611f0b83611377565b9250611f387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611e25565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f7782611242565b9150611f8283611242565b925082611f9257611f91611f40565b5b828204905092915050565b5f604082019050611fb05f830185611602565b611fbd6020830184611602565b9392505050565b5f611fce82611377565b9150611fd983611377565b9250828203905067ffffffffffffffff811115611ff957611ff8611d9a565b5b92915050565b5f61200982611242565b915061201483611242565b925082820261202281611242565b9150828204841483151761203957612038611d9a565b5b5092915050565b5f61204a82611242565b915061205583611242565b925082820390508181111561206d5761206c611d9a565b5b92915050565b5f61207d82611242565b915061208883611242565b92508282019050808211156120a05761209f611d9a565b5b9291505056fea2646970667358221220cbe875045cc8d6be474c1815820bbab8ce789b5d814409286c98c75b9730f4f464736f6c63430008160033",
    "sourceMap": "803:9283:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:732;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;9880:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2790:1090;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1877:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1984:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1458:64;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5143:151;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9200:674;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1603:64;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1917:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9984:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1769:101;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1674:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8142:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2017:28;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;4295:587;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1948:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2052:732;2133:7;2142;2151:12;2364:16;2383:44;2411:15;;2383:27;:44::i;:::-;2364:63;;2437:26;2466:47;2497:15;;2466:30;:47::i;:::-;2437:76;;2639:26;2668:46;2698:15;;2668:29;:46::i;:::-;2639:75;;2733:8;2743:18;2763:13;2725:52;;;;;;;;;2052:732;;;;;:::o;9880:98::-;9926:18;;:::i;:::-;9963:8;9956:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9880:98;:::o;2790:1090::-;2953:7;3151:14;3168:40;:14;:38;:40::i;:::-;3151:57;;3218:16;3237:40;:14;:38;:40::i;:::-;3218:59;;3477:1;3457:22;;:8;:22;;;3453:395;;3495:19;3557:93;;;3668:14;3700;:21;3517:218;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3495:240;;3792:44;3818:6;3826:9;3792:6;:25;;:44;;;;;:::i;:::-;3756:81;;;;;;;;;;;:::i;:::-;;;;;;;;3453:395;3865:8;3858:15;;;;2790:1090;;;;;:::o;1877:33::-;;;:::o;1984:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1458:64::-;1520:2;1458:64;:::o;5143:151::-;5226:6;5251:36;5271:5;5278:8;5251:19;:36::i;:::-;5244:43;;5143:151;;;;:::o;9200:674::-;1073:4;1051:27;;:10;:27;;;1047:147;;1172:10;1101:82;;;;;;;;;;;:::i;:::-;;;;;;;;1047:147;9308:1:::1;9296:9;:13;9292:576;;;9541:21;9591:1:::0;9565:28:::1;;:14;:28;;;:57;;9608:14;9565:57;;;9596:9;9565:57;9541:81;;9638:12;9656:13;:18;;9683:9;9656:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9637:61;;;9717:7;9712:146;;9818:13;9833:9;9751:92;;;;;;;;;;;;:::i;:::-;;;;;;;;9712:146;9311:557;;9292:576;9200:674:::0;:::o;1603:64::-;1665:2;1603:64;:::o;1917:25::-;;;:::o;9984:100::-;10031:18;;:::i;:::-;10068:9;10061:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9984:100;:::o;1769:101::-;1828:42;1769:101;:::o;1674:89::-;1721:42;1674:89;:::o;8142:221::-;1073:4;1051:27;;:10;:27;;;1047:147;;1172:10;1101:82;;;;;;;;;;;:::i;:::-;;;;;;;;1047:147;8258:1:::1;8248:7;:11;:43;;;;;8289:1;8263:28;;:14;:28;;;;8248:43;8244:113;;;8307:5;:14;;;8322;8338:7;8307:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8244:113;8142:221:::0;;:::o;2017:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4295:587::-;4371:24;;:::i;:::-;4407;;:::i;:::-;4441:28;4484:6;4480:319;;;4514:8;4506:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4560:70;4580:8;:27;;;;;;;;;;;;4609:8;:20;;;;;;;;;;;;4560:19;:70::i;:::-;4536:94;;4480:319;;;4669:9;4661:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4716:72;4736:9;:28;;;;;;;;;;;;4766:9;:21;;;;;;;;;;;;4716:19;:72::i;:::-;4692:96;;4480:319;4816:59;4846:21;4869:5;4816:7;:29;;:59;;;;;:::i;:::-;4809:66;;;;4295:587;;;;:::o;1948:29::-;;;:::o;1676:150:36:-;1738:7;1780:4;;232:2;1780:37;;;282:2;1780:37;;;;;;;;;:::i;:::-;1772:46;;;;;:::i;:::-;1764:55;;1757:62;;1676:150;;;;:::o;1989:149::-;2054:7;2088:4;;282:2;2088:42;;;335:2;2088:42;;;;;;;;;:::i;:::-;2080:51;;;;;:::i;:::-;2073:58;;1989:149;;;;:::o;2273:128::-;2337:12;2368:4;;335:2;2368:26;;;;;;;;;;;:::i;:::-;2361:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2273:128;;;;:::o;4063:302:7:-;4145:7;4164:23;4198:16;4190:25;;4164:51;;4248:17;4229:36;;:15;:36;4225:107;;4304:15;4281:40;;;;;4225:107;4356:1;4341:17;;;4063:302;;;;:::o;4671:492::-;4756:7;4775:14;4792;:21;4775:38;;705:2;4827:6;:45;4823:307;;4911:14;4903:23;;;:::i;:::-;4895:32;;4888:39;;;;;4823:307;850:2;4948:6;:45;4944:186;;5009:23;5043:14;5035:23;;;:::i;:::-;5009:49;;5079:40;5103:15;5079:23;:40::i;:::-;5072:47;;;;;;4944:186;5154:1;5139:17;;;4671:492;;;;:::o;6074:333::-;6219:12;6290:96;;;;;;;;6322:7;6290:96;;;;;;6345:9;6290:96;;;;6370:13;6290:96;;;6262:138;;;;;;;;:::i;:::-;;;;;;;;;;;;;6243:157;;6074:333;;;;;:::o;5555:480:1:-;5639:6;5657:12;5679:19;1828:42;5728:43;;5783:5;5790:8;5772:27;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5728:72;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5708:92;;;;;;;;5815:7;5810:136;;5919:5;5926:8;5845:90;;;;;;;;;;;;:::i;:::-;;;;;;;;5810:136;5973:6;5962:60;;;;;;;;;;;;:::i;:::-;:66;;;5955:73;;;;5555:480;;;;:::o;2792:958:7:-;2946:24;;:::i;:::-;2982:13;3004:6;:18;;;2998:2;:24;;;;:::i;:::-;2982:40;;3032:12;3054:17;3123:5;3113:7;:15;;;;;:::i;:::-;;;3106:22;;3164:4;3154:7;:14;3142:26;;3263:17;3300:5;3290:7;:15;;;;:::i;:::-;3263:43;;3334:22;3321:35;;:10;:35;;;3317:342;;;3377:52;3394:10;3406:22;3377:52;;;;;;;:::i;:::-;;;;;;;;3444:19;3506:5;3480:22;3467:10;:35;;;;:::i;:::-;3466:45;;;;;;:::i;:::-;3444:67;;3538:22;3525:35;;3598:11;3586:9;:23;;;;:::i;:::-;3574:35;;3637:11;3630:4;:18;;;;:::i;:::-;3623:25;;3358:301;3317:342;3676:67;;;;;;;;3701:9;3676:67;;;;3718:4;3676:67;;;;3730:10;3676:67;;;;;3669:74;;;;;;2792:958;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:84:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;716:552;773:8;783:6;833:3;826:4;818:6;814:17;810:27;800:122;;841:79;;:::i;:::-;800:122;954:6;941:20;931:30;;984:18;976:6;973:30;970:117;;;1006:79;;:::i;:::-;970:117;1120:4;1112:6;1108:17;1096:29;;1174:3;1166:4;1158:6;1154:17;1144:8;1140:32;1137:41;1134:128;;;1181:79;;:::i;:::-;1134:128;716:552;;;;;:::o;1274:527::-;1344:6;1352;1401:2;1389:9;1380:7;1376:23;1372:32;1369:119;;;1407:79;;:::i;:::-;1369:119;1555:1;1544:9;1540:17;1527:31;1585:18;1577:6;1574:30;1571:117;;;1607:79;;:::i;:::-;1571:117;1720:64;1776:7;1767:6;1756:9;1752:22;1720:64;:::i;:::-;1702:82;;;;1498:296;1274:527;;;;;:::o;1807:77::-;1844:7;1873:5;1862:16;;1807:77;;;:::o;1890:118::-;1977:24;1995:5;1977:24;:::i;:::-;1972:3;1965:37;1890:118;;:::o;2014:77::-;2051:7;2080:5;2069:16;;2014:77;;;:::o;2097:118::-;2184:24;2202:5;2184:24;:::i;:::-;2179:3;2172:37;2097:118;;:::o;2221:98::-;2272:6;2306:5;2300:12;2290:22;;2221:98;;;:::o;2325:168::-;2408:11;2442:6;2437:3;2430:19;2482:4;2477:3;2473:14;2458:29;;2325:168;;;;:::o;2499:246::-;2580:1;2590:113;2604:6;2601:1;2598:13;2590:113;;;2689:1;2684:3;2680:11;2674:18;2670:1;2665:3;2661:11;2654:39;2626:2;2623:1;2619:10;2614:15;;2590:113;;;2737:1;2728:6;2723:3;2719:16;2712:27;2561:184;2499:246;;;:::o;2751:102::-;2792:6;2843:2;2839:7;2834:2;2827:5;2823:14;2819:28;2809:38;;2751:102;;;:::o;2859:373::-;2945:3;2973:38;3005:5;2973:38;:::i;:::-;3027:70;3090:6;3085:3;3027:70;:::i;:::-;3020:77;;3106:65;3164:6;3159:3;3152:4;3145:5;3141:16;3106:65;:::i;:::-;3196:29;3218:6;3196:29;:::i;:::-;3191:3;3187:39;3180:46;;2949:283;2859:373;;;;:::o;3238:529::-;3405:4;3443:2;3432:9;3428:18;3420:26;;3456:71;3524:1;3513:9;3509:17;3500:6;3456:71;:::i;:::-;3537:72;3605:2;3594:9;3590:18;3581:6;3537:72;:::i;:::-;3656:9;3650:4;3646:20;3641:2;3630:9;3626:18;3619:48;3684:76;3755:4;3746:6;3684:76;:::i;:::-;3676:84;;3238:529;;;;;;:::o;3773:126::-;3810:7;3850:42;3843:5;3839:54;3828:65;;3773:126;;;:::o;3905:96::-;3942:7;3971:24;3989:5;3971:24;:::i;:::-;3960:35;;3905:96;;;:::o;4007:108::-;4084:24;4102:5;4084:24;:::i;:::-;4079:3;4072:37;4007:108;;:::o;4121:101::-;4157:7;4197:18;4190:5;4186:30;4175:41;;4121:101;;;:::o;4228:105::-;4303:23;4320:5;4303:23;:::i;:::-;4298:3;4291:36;4228:105;;:::o;4387:711::-;4540:4;4535:3;4531:14;4641:4;4634:5;4630:16;4624:23;4660:63;4717:4;4712:3;4708:14;4694:12;4660:63;:::i;:::-;4555:178;4822:4;4815:5;4811:16;4805:23;4841:61;4896:4;4891:3;4887:14;4873:12;4841:61;:::i;:::-;4743:169;5001:4;4994:5;4990:16;4984:23;5020:61;5075:4;5070:3;5066:14;5052:12;5020:61;:::i;:::-;4922:169;4509:589;4387:711;;:::o;5104:334::-;5253:4;5291:2;5280:9;5276:18;5268:26;;5304:127;5428:1;5417:9;5413:17;5404:6;5304:127;:::i;:::-;5104:334;;;;:::o;5444:117::-;5553:1;5550;5543:12;5567:180;5615:77;5612:1;5605:88;5712:4;5709:1;5702:15;5736:4;5733:1;5726:15;5753:281;5836:27;5858:4;5836:27;:::i;:::-;5828:6;5824:40;5966:6;5954:10;5951:22;5930:18;5918:10;5915:34;5912:62;5909:88;;;5977:18;;:::i;:::-;5909:88;6017:10;6013:2;6006:22;5796:238;5753:281;;:::o;6040:129::-;6074:6;6101:20;;:::i;:::-;6091:30;;6130:33;6158:4;6150:6;6130:33;:::i;:::-;6040:129;;;:::o;6175:307::-;6236:4;6326:18;6318:6;6315:30;6312:56;;;6348:18;;:::i;:::-;6312:56;6386:29;6408:6;6386:29;:::i;:::-;6378:37;;6470:4;6464;6460:15;6452:23;;6175:307;;;:::o;6488:146::-;6585:6;6580:3;6575;6562:30;6626:1;6617:6;6612:3;6608:16;6601:27;6488:146;;;:::o;6640:423::-;6717:5;6742:65;6758:48;6799:6;6758:48;:::i;:::-;6742:65;:::i;:::-;6733:74;;6830:6;6823:5;6816:21;6868:4;6861:5;6857:16;6906:3;6897:6;6892:3;6888:16;6885:25;6882:112;;;6913:79;;:::i;:::-;6882:112;7003:54;7050:6;7045:3;7040;7003:54;:::i;:::-;6723:340;6640:423;;;;;:::o;7082:338::-;7137:5;7186:3;7179:4;7171:6;7167:17;7163:27;7153:122;;7194:79;;:::i;:::-;7153:122;7311:6;7298:20;7336:78;7410:3;7402:6;7395:4;7387:6;7383:17;7336:78;:::i;:::-;7327:87;;7143:277;7082:338;;;;:::o;7426:122::-;7499:24;7517:5;7499:24;:::i;:::-;7492:5;7489:35;7479:63;;7538:1;7535;7528:12;7479:63;7426:122;:::o;7554:139::-;7600:5;7638:6;7625:20;7616:29;;7654:33;7681:5;7654:33;:::i;:::-;7554:139;;;;:::o;7699:122::-;7772:24;7790:5;7772:24;:::i;:::-;7765:5;7762:35;7752:63;;7811:1;7808;7801:12;7752:63;7699:122;:::o;7827:139::-;7873:5;7911:6;7898:20;7889:29;;7927:33;7954:5;7927:33;:::i;:::-;7827:139;;;;:::o;7972:797::-;8058:6;8066;8074;8123:2;8111:9;8102:7;8098:23;8094:32;8091:119;;;8129:79;;:::i;:::-;8091:119;8277:1;8266:9;8262:17;8249:31;8307:18;8299:6;8296:30;8293:117;;;8329:79;;:::i;:::-;8293:117;8434:62;8488:7;8479:6;8468:9;8464:22;8434:62;:::i;:::-;8424:72;;8220:286;8545:2;8571:53;8616:7;8607:6;8596:9;8592:22;8571:53;:::i;:::-;8561:63;;8516:118;8673:2;8699:53;8744:7;8735:6;8724:9;8720:22;8699:53;:::i;:::-;8689:63;;8644:118;7972:797;;;;;:::o;8775:118::-;8862:24;8880:5;8862:24;:::i;:::-;8857:3;8850:37;8775:118;;:::o;8899:222::-;8992:4;9030:2;9019:9;9015:18;9007:26;;9043:71;9111:1;9100:9;9096:17;9087:6;9043:71;:::i;:::-;8899:222;;;;:::o;9127:115::-;9212:23;9229:5;9212:23;:::i;:::-;9207:3;9200:36;9127:115;;:::o;9248:434::-;9393:4;9431:2;9420:9;9416:18;9408:26;;9444:71;9512:1;9501:9;9497:17;9488:6;9444:71;:::i;:::-;9525:70;9591:2;9580:9;9576:18;9567:6;9525:70;:::i;:::-;9605;9671:2;9660:9;9656:18;9647:6;9605:70;:::i;:::-;9248:434;;;;;;:::o;9688:222::-;9781:4;9819:2;9808:9;9804:18;9796:26;;9832:71;9900:1;9889:9;9885:17;9876:6;9832:71;:::i;:::-;9688:222;;;;:::o;9916:122::-;9989:24;10007:5;9989:24;:::i;:::-;9982:5;9979:35;9969:63;;10028:1;10025;10018:12;9969:63;9916:122;:::o;10044:139::-;10090:5;10128:6;10115:20;10106:29;;10144:33;10171:5;10144:33;:::i;:::-;10044:139;;;;:::o;10189:120::-;10261:23;10278:5;10261:23;:::i;:::-;10254:5;10251:34;10241:62;;10299:1;10296;10289:12;10241:62;10189:120;:::o;10315:137::-;10360:5;10398:6;10385:20;10376:29;;10414:32;10440:5;10414:32;:::i;:::-;10315:137;;;;:::o;10458:472::-;10525:6;10533;10582:2;10570:9;10561:7;10557:23;10553:32;10550:119;;;10588:79;;:::i;:::-;10550:119;10708:1;10733:53;10778:7;10769:6;10758:9;10754:22;10733:53;:::i;:::-;10723:63;;10679:117;10835:2;10861:52;10905:7;10896:6;10885:9;10881:22;10861:52;:::i;:::-;10851:62;;10806:117;10458:472;;;;;:::o;10936:218::-;11027:4;11065:2;11054:9;11050:18;11042:26;;11078:69;11144:1;11133:9;11129:17;11120:6;11078:69;:::i;:::-;10936:218;;;;:::o;11160:329::-;11219:6;11268:2;11256:9;11247:7;11243:23;11239:32;11236:119;;;11274:79;;:::i;:::-;11236:119;11394:1;11419:53;11464:7;11455:6;11444:9;11440:22;11419:53;:::i;:::-;11409:63;;11365:117;11160:329;;;;:::o;11495:60::-;11523:3;11544:5;11537:12;;11495:60;;;:::o;11561:142::-;11611:9;11644:53;11662:34;11671:24;11689:5;11671:24;:::i;:::-;11662:34;:::i;:::-;11644:53;:::i;:::-;11631:66;;11561:142;;;:::o;11709:126::-;11759:9;11792:37;11823:5;11792:37;:::i;:::-;11779:50;;11709:126;;;:::o;11841:139::-;11904:9;11937:37;11968:5;11937:37;:::i;:::-;11924:50;;11841:139;;;:::o;11986:157::-;12086:50;12130:5;12086:50;:::i;:::-;12081:3;12074:63;11986:157;;:::o;12149:248::-;12255:4;12293:2;12282:9;12278:18;12270:26;;12306:84;12387:1;12376:9;12372:17;12363:6;12306:84;:::i;:::-;12149:248;;;;:::o;12403:474::-;12471:6;12479;12528:2;12516:9;12507:7;12503:23;12499:32;12496:119;;;12534:79;;:::i;:::-;12496:119;12654:1;12679:53;12724:7;12715:6;12704:9;12700:22;12679:53;:::i;:::-;12669:63;;12625:117;12781:2;12807:53;12852:7;12843:6;12832:9;12828:22;12807:53;:::i;:::-;12797:63;;12752:118;12403:474;;;;;:::o;12883:90::-;12917:7;12960:5;12953:13;12946:21;12935:32;;12883:90;;;:::o;12979:116::-;13049:21;13064:5;13049:21;:::i;:::-;13042:5;13039:32;13029:60;;13085:1;13082;13075:12;13029:60;12979:116;:::o;13101:133::-;13144:5;13182:6;13169:20;13160:29;;13198:30;13222:5;13198:30;:::i;:::-;13101:133;;;;:::o;13240:468::-;13305:6;13313;13362:2;13350:9;13341:7;13337:23;13333:32;13330:119;;;13368:79;;:::i;:::-;13330:119;13488:1;13513:53;13558:7;13549:6;13538:9;13534:22;13513:53;:::i;:::-;13503:63;;13459:117;13615:2;13641:50;13683:7;13674:6;13663:9;13659:22;13641:50;:::i;:::-;13631:60;;13586:115;13240:468;;;;;:::o;13714:108::-;13791:24;13809:5;13791:24;:::i;:::-;13786:3;13779:37;13714:108;;:::o;13888:696::-;14053:4;14048:3;14044:14;14139:4;14132:5;14128:16;14122:23;14158:63;14215:4;14210:3;14206:14;14192:12;14158:63;:::i;:::-;14068:163;14313:4;14306:5;14302:16;14296:23;14332:63;14389:4;14384:3;14380:14;14366:12;14332:63;:::i;:::-;14241:164;14487:4;14480:5;14476:16;14470:23;14506:61;14561:4;14556:3;14552:14;14538:12;14506:61;:::i;:::-;14415:162;14022:562;13888:696;;:::o;14590:358::-;14751:4;14789:2;14778:9;14774:18;14766:26;;14802:139;14938:1;14927:9;14923:17;14914:6;14802:139;:::i;:::-;14590:358;;;;:::o;14954:142::-;15020:9;15053:37;15084:5;15053:37;:::i;:::-;15040:50;;14954:142;;;:::o;15102:163::-;15205:53;15252:5;15205:53;:::i;:::-;15200:3;15193:66;15102:163;;:::o;15271:254::-;15380:4;15418:2;15407:9;15403:18;15395:26;;15431:87;15515:1;15504:9;15500:17;15491:6;15431:87;:::i;:::-;15271:254;;;;:::o;15531:419::-;15670:4;15708:2;15697:9;15693:18;15685:26;;15757:9;15751:4;15747:20;15743:1;15732:9;15728:17;15721:47;15785:76;15856:4;15847:6;15785:76;:::i;:::-;15777:84;;15871:72;15939:2;15928:9;15924:18;15915:6;15871:72;:::i;:::-;15531:419;;;;;:::o;15956:309::-;16067:4;16105:2;16094:9;16090:18;16082:26;;16154:9;16148:4;16144:20;16140:1;16129:9;16125:17;16118:47;16182:76;16253:4;16244:6;16182:76;:::i;:::-;16174:84;;15956:309;;;;:::o;16271:147::-;16372:11;16409:3;16394:18;;16271:147;;;;:::o;16424:114::-;;:::o;16544:398::-;16703:3;16724:83;16805:1;16800:3;16724:83;:::i;:::-;16717:90;;16816:93;16905:3;16816:93;:::i;:::-;16934:1;16929:3;16925:11;16918:18;;16544:398;;;:::o;16948:379::-;17132:3;17154:147;17297:3;17154:147;:::i;:::-;17147:154;;17318:3;17311:10;;16948:379;;;:::o;17333:332::-;17454:4;17492:2;17481:9;17477:18;17469:26;;17505:71;17573:1;17562:9;17558:17;17549:6;17505:71;:::i;:::-;17586:72;17654:2;17643:9;17639:18;17630:6;17586:72;:::i;:::-;17333:332;;;;;:::o;17671:137::-;17725:5;17756:6;17750:13;17741:22;;17772:30;17796:5;17772:30;:::i;:::-;17671:137;;;;:::o;17814:345::-;17881:6;17930:2;17918:9;17909:7;17905:23;17901:32;17898:119;;;17936:79;;:::i;:::-;17898:119;18056:1;18081:61;18134:7;18125:6;18114:9;18110:22;18081:61;:::i;:::-;18071:71;;18027:125;17814:345;;;;:::o;18165:117::-;18274:1;18271;18264:12;18288:117;18397:1;18394;18387:12;18411:469;18516:9;18527;18565:8;18553:10;18550:24;18547:111;;;18577:79;;:::i;:::-;18547:111;18683:6;18673:8;18670:20;18667:107;;;18693:79;;:::i;:::-;18667:107;18824:1;18812:10;18808:18;18800:6;18796:31;18783:44;;18863:10;18853:8;18849:25;18836:38;;18411:469;;;;;;;:::o;18886:96::-;18944:6;18972:3;18962:13;;18886:96;;;;:::o;19080:107::-;19124:8;19174:5;19168:4;19164:16;19143:37;;19080:107;;;;:::o;19193:552::-;19284:5;19315:45;19356:3;19349:5;19315:45;:::i;:::-;19385:5;19409:41;19440:8;19427:22;19409:41;:::i;:::-;19400:50;;19474:2;19466:6;19463:14;19460:278;;;19545:169;19630:66;19600:6;19596:2;19592:15;19589:1;19585:23;19545:169;:::i;:::-;19522:5;19501:227;19492:236;;19460:278;19290:455;;19193:552;;;;:::o;19751:116::-;19802:4;19825:3;19817:11;;19855:4;19850:3;19846:14;19838:22;;19751:116;;;:::o;19873:150::-;19910:7;19950:66;19943:5;19939:78;19928:89;;19873:150;;;:::o;20029:154::-;20072:11;20108:29;20132:3;20126:10;20108:29;:::i;:::-;20171:5;20147:29;;20084:99;20029:154;;;:::o;20189:594::-;20273:5;20304:38;20336:5;20304:38;:::i;:::-;20367:5;20394:40;20428:5;20394:40;:::i;:::-;20382:52;;20453:35;20479:8;20453:35;:::i;:::-;20444:44;;20512:2;20504:6;20501:14;20498:278;;;20583:169;20668:66;20638:6;20634:2;20630:15;20627:1;20623:23;20583:169;:::i;:::-;20560:5;20539:227;20530:236;;20498:278;20279:504;;20189:594;;;:::o;20789:154::-;20832:11;20868:29;20892:3;20886:10;20868:29;:::i;:::-;20931:5;20907:29;;20844:99;20789:154;;;:::o;20949:594::-;21033:5;21064:38;21096:5;21064:38;:::i;:::-;21127:5;21154:40;21188:5;21154:40;:::i;:::-;21142:52;;21213:35;21239:8;21213:35;:::i;:::-;21204:44;;21272:2;21264:6;21261:14;21258:278;;;21343:169;21428:66;21398:6;21394:2;21390:15;21387:1;21383:23;21343:169;:::i;:::-;21320:5;21299:227;21290:236;;21258:278;21039:504;;20949:594;;;:::o;21549:158::-;21622:11;21656:6;21651:3;21644:19;21696:4;21691:3;21687:14;21672:29;;21549:158;;;;:::o;21713:353::-;21789:3;21817:38;21849:5;21817:38;:::i;:::-;21871:60;21924:6;21919:3;21871:60;:::i;:::-;21864:67;;21940:65;21998:6;21993:3;21986:4;21979:5;21975:16;21940:65;:::i;:::-;22030:29;22052:6;22030:29;:::i;:::-;22025:3;22021:39;22014:46;;21793:273;21713:353;;;;:::o;22136:822::-;22279:3;22315:4;22310:3;22306:14;22406:4;22399:5;22395:16;22389:23;22425:63;22482:4;22477:3;22473:14;22459:12;22425:63;:::i;:::-;22330:168;22588:4;22581:5;22577:16;22571:23;22607:63;22664:4;22659:3;22655:14;22641:12;22607:63;:::i;:::-;22508:172;22770:4;22763:5;22759:16;22753:23;22823:3;22817:4;22813:14;22806:4;22801:3;22797:14;22790:38;22849:71;22915:4;22901:12;22849:71;:::i;:::-;22841:79;;22690:241;22948:4;22941:11;;22284:674;22136:822;;;;:::o;22964:421::-;23131:4;23169:2;23158:9;23154:18;23146:26;;23218:9;23212:4;23208:20;23204:1;23193:9;23189:17;23182:47;23246:132;23373:4;23364:6;23246:132;:::i;:::-;23238:140;;22964:421;;;;:::o;23391:328::-;23510:4;23548:2;23537:9;23533:18;23525:26;;23561:71;23629:1;23618:9;23614:17;23605:6;23561:71;:::i;:::-;23642:70;23708:2;23697:9;23693:18;23684:6;23642:70;:::i;:::-;23391:328;;;;;:::o;23725:386::-;23829:3;23857:38;23889:5;23857:38;:::i;:::-;23911:88;23992:6;23987:3;23911:88;:::i;:::-;23904:95;;24008:65;24066:6;24061:3;24054:4;24047:5;24043:16;24008:65;:::i;:::-;24098:6;24093:3;24089:16;24082:23;;23833:278;23725:386;;;;:::o;24117:271::-;24247:3;24269:93;24358:3;24349:6;24269:93;:::i;:::-;24262:100;;24379:3;24372:10;;24117:271;;;;:::o;24394:117::-;24503:1;24500;24493:12;24640:141;24696:5;24727:6;24721:13;24712:22;;24743:32;24769:5;24743:32;:::i;:::-;24640:141;;;;:::o;24840:785::-;24929:5;24973:4;24961:9;24956:3;24952:19;24948:30;24945:117;;;24981:79;;:::i;:::-;24945:117;25080:21;25096:4;25080:21;:::i;:::-;25071:30;;25161:1;25201:59;25256:3;25247:6;25236:9;25232:22;25201:59;:::i;:::-;25194:4;25187:5;25183:16;25176:85;25111:161;25331:2;25372:59;25427:3;25418:6;25407:9;25403:22;25372:59;:::i;:::-;25365:4;25358:5;25354:16;25347:85;25282:161;25506:2;25547:59;25602:3;25593:6;25582:9;25578:22;25547:59;:::i;:::-;25540:4;25533:5;25529:16;25522:85;25453:165;24840:785;;;;:::o;25631:409::-;25730:6;25779:2;25767:9;25758:7;25754:23;25750:32;25747:119;;;25785:79;;:::i;:::-;25747:119;25905:1;25930:93;26015:7;26006:6;25995:9;25991:22;25930:93;:::i;:::-;25920:103;;25876:157;25631:409;;;;:::o;26046:180::-;26094:77;26091:1;26084:88;26191:4;26188:1;26181:15;26215:4;26212:1;26205:15;26232:102;26274:8;26321:5;26318:1;26314:13;26293:34;;26232:102;;;:::o;26340:848::-;26401:5;26408:4;26432:6;26423:15;;26456:5;26447:14;;26470:712;26491:1;26481:8;26478:15;26470:712;;;26586:4;26581:3;26577:14;26571:4;26568:24;26565:50;;;26595:18;;:::i;:::-;26565:50;26645:1;26635:8;26631:16;26628:451;;;27060:4;27053:5;27049:16;27040:25;;26628:451;27110:4;27104;27100:15;27092:23;;27140:32;27163:8;27140:32;:::i;:::-;27128:44;;26470:712;;;26340:848;;;;;;;:::o;27194:1073::-;27248:5;27439:8;27429:40;;27460:1;27451:10;;27462:5;;27429:40;27488:4;27478:36;;27505:1;27496:10;;27507:5;;27478:36;27574:4;27622:1;27617:27;;;;27658:1;27653:191;;;;27567:277;;27617:27;27635:1;27626:10;;27637:5;;;27653:191;27698:3;27688:8;27685:17;27682:43;;;27705:18;;:::i;:::-;27682:43;27754:8;27751:1;27747:16;27738:25;;27789:3;27782:5;27779:14;27776:40;;;27796:18;;:::i;:::-;27776:40;27829:5;;;27567:277;;27953:2;27943:8;27940:16;27934:3;27928:4;27925:13;27921:36;27903:2;27893:8;27890:16;27885:2;27879:4;27876:12;27872:35;27856:111;27853:246;;;28009:8;28003:4;27999:19;27990:28;;28044:3;28037:5;28034:14;28031:40;;;28051:18;;:::i;:::-;28031:40;28084:5;;27853:246;28124:42;28162:3;28152:8;28146:4;28143:1;28124:42;:::i;:::-;28109:57;;;;28198:4;28193:3;28189:14;28182:5;28179:25;28176:51;;;28207:18;;:::i;:::-;28176:51;28256:4;28249:5;28245:16;28236:25;;27194:1073;;;;;;:::o;28273:283::-;28332:5;28356:23;28374:4;28356:23;:::i;:::-;28348:31;;28400:26;28417:8;28400:26;:::i;:::-;28388:38;;28445:104;28482:66;28472:8;28466:4;28445:104;:::i;:::-;28436:113;;28273:283;;;;:::o;28562:180::-;28610:77;28607:1;28600:88;28707:4;28704:1;28697:15;28731:4;28728:1;28721:15;28748:185;28788:1;28805:20;28823:1;28805:20;:::i;:::-;28800:25;;28839:20;28857:1;28839:20;:::i;:::-;28834:25;;28878:1;28868:35;;28883:18;;:::i;:::-;28868:35;28925:1;28922;28918:9;28913:14;;28748:185;;;;:::o;28939:324::-;29056:4;29094:2;29083:9;29079:18;29071:26;;29107:69;29173:1;29162:9;29158:17;29149:6;29107:69;:::i;:::-;29186:70;29252:2;29241:9;29237:18;29228:6;29186:70;:::i;:::-;28939:324;;;;;:::o;29269:208::-;29308:4;29328:19;29345:1;29328:19;:::i;:::-;29323:24;;29361:19;29378:1;29361:19;:::i;:::-;29356:24;;29404:1;29401;29397:9;29389:17;;29428:18;29422:4;29419:28;29416:54;;;29450:18;;:::i;:::-;29416:54;29269:208;;;;:::o;29483:410::-;29523:7;29546:20;29564:1;29546:20;:::i;:::-;29541:25;;29580:20;29598:1;29580:20;:::i;:::-;29575:25;;29635:1;29632;29628:9;29657:30;29675:11;29657:30;:::i;:::-;29646:41;;29836:1;29827:7;29823:15;29820:1;29817:22;29797:1;29790:9;29770:83;29747:139;;29866:18;;:::i;:::-;29747:139;29531:362;29483:410;;;;:::o;29899:194::-;29939:4;29959:20;29977:1;29959:20;:::i;:::-;29954:25;;29993:20;30011:1;29993:20;:::i;:::-;29988:25;;30037:1;30034;30030:9;30022:17;;30061:1;30055:4;30052:11;30049:37;;;30066:18;;:::i;:::-;30049:37;29899:194;;;;:::o;30099:191::-;30139:3;30158:20;30176:1;30158:20;:::i;:::-;30153:25;;30192:20;30210:1;30192:20;:::i;:::-;30187:25;;30235:1;30232;30228:9;30221:16;;30256:3;30253:1;30250:10;30247:36;;;30263:18;;:::i;:::-;30247:36;30099:191;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "454": [{ "start": 1585, "length": 32 }],
      "457": [{ "start": 2101, "length": 32 }],
      "460": [
        { "start": 2551, "length": 32 },
        { "start": 3397, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "HLP_PRECOMPILE_READ_SPOT_BALANCE()": "ba872679",
    "HLP_PRECOMPILE_WRITE()": "dd850075",
    "VALID_COMPOSE_MESSAGE_LENGTH_ENCODE()": "9278d99a",
    "VALID_COMPOSE_MESSAGE_LENGTH_PACKED()": "807d6c3f",
    "balanceOfHyperCore(address,uint64)": "81e8dcb4",
    "endpoint()": "5e280f11",
    "getHypeAsset()": "aae12e46",
    "getOFTAsset()": "2d0e315c",
    "hypeAsset()": "f6e6b240",
    "oft()": "9b5215f6",
    "oftAsset()": "765008a1",
    "quoteHyperCoreAmount(uint256,bool)": "f9716faf",
    "refundERC20(address,uint256)": "ebaeefd6",
    "refundNativeTokens(address)": "8483bc00",
    "token()": "fc0c546a",
    "validate_addresses_or_refund(bytes,bytes32,uint256)": "5241b496",
    "validate_payload(bytes)": "1b224831"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"errorMessage\",\"type\":\"bytes\"}],\"name\":\"ErrorMsg\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"tokenId\",\"type\":\"uint64\"}],\"name\":\"HyperLiquidComposerCore_SpotBalanceRead_Failed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"HyperLiquidComposer_FailedToRefund_HYPE\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"notComposerAddress\",\"type\":\"address\"}],\"name\":\"HyperLiquidComposer_InvalidCall_NotComposer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"refundTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"ErrorERC20_Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"refundTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"ErrorHYPE_Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"ErrorMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"amountCore\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"maxTransferableAmount\",\"type\":\"uint64\"}],\"name\":\"OverflowDetected\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"HLP_PRECOMPILE_READ_SPOT_BALANCE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HLP_PRECOMPILE_WRITE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALID_COMPOSE_MESSAGE_LENGTH_ENCODE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALID_COMPOSE_MESSAGE_LENGTH_PACKED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_tokenId\",\"type\":\"uint64\"}],\"name\":\"balanceOfHyperCore\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHypeAsset\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetBridgeAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"coreIndexId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"decimalDiff\",\"type\":\"uint64\"}],\"internalType\":\"struct IHyperAsset\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOFTAsset\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetBridgeAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"coreIndexId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"decimalDiff\",\"type\":\"uint64\"}],\"internalType\":\"struct IHyperAsset\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hypeAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetBridgeAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"coreIndexId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"decimalDiff\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oft\",\"outputs\":[{\"internalType\":\"contract IOFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oftAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetBridgeAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"coreIndexId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"decimalDiff\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isOFT\",\"type\":\"bool\"}],\"name\":\"quoteHyperCoreAmount\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"evm\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dust\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"core\",\"type\":\"uint64\"}],\"internalType\":\"struct IHyperAssetAmount\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"refundERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"}],\"name\":\"refundNativeTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_maybeReceiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_senderBytes32\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"}],\"name\":\"validate_addresses_or_refund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_composeMessage\",\"type\":\"bytes\"}],\"name\":\"validate_payload\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOfHyperCore(address,uint64)\":{\"params\":{\"_tokenId\":\"The token id of the hypercore\",\"_user\":\"The address of the user\"},\"returns\":{\"_0\":\"The balance of the user in the hypercore\"}},\"quoteHyperCoreAmount(uint256,bool)\":{\"params\":{\"_amount\":\"The amount of tokens to send\",\"_isOFT\":\"Whether the amount is an OFT amount or a HYPE amount\"},\"returns\":{\"_0\":\"IHyperAssetAmount - The amount of tokens to send to HyperCore (scaled on evm), dust (to be refunded), and the swap amount (of the tokens scaled on hypercore)\"}},\"refundERC20(address,uint256)\":{\"details\":\"If the refund address is set to the zero address - it means that the transaction sender is a non-evm address and the receiver is malformed.In this case, the tokens are locked in the composer.\",\"params\":{\"_amount\":\"The amount of tokens to refund\",\"_refundAddress\":\"The address to refund the native tokens to\"}},\"refundNativeTokens(address)\":{\"details\":\"It is possible that the refund address is a contract without fallback or receive functions - in that case the transfer fails and tokens will be locked in the contract.Since this is an external function - the msg.value can be different to the msg.value sent to the lzCompose function by tx.originIt is different in the case of a partial refund where the call is:`this.refundNativeTokens{ value: amounts.dust }(_receiver)`In this case, the msg.value is the amount of the dust and not the msg.value sent to the lzCompose function by tx.origin\",\"params\":{\"_refundAddress\":\"The address to refund the native tokens to\"}}},\"stateVariables\":{\"VALID_COMPOSE_MESSAGE_LENGTH_ENCODE\":{\"details\":\"If we are in abi.encode(address) mode, the length is 32 bytes\"},\"VALID_COMPOSE_MESSAGE_LENGTH_PACKED\":{\"details\":\"Valid compose message lengths for the HyperLiquidComposer - can be abi.encodePacked(address) or abi.encode(address)If we are in abi.encodePacked(address) mode, the length is 20 bytes because addresses are 20 bytes\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOfHyperCore(address,uint64)\":{\"notice\":\"External function to read the balance of the user in the hypercore\"},\"quoteHyperCoreAmount(uint256,bool)\":{\"notice\":\"External function to quote the conversion of evm tokens to hypercore tokens\"},\"refundERC20(address,uint256)\":{\"notice\":\"Refunds the native tokens to the refund addressThis function is called by the refundTokens function\"},\"refundNativeTokens(address)\":{\"notice\":\"Refunds the native tokens to the refund addressThis function is called by the refundTokens function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HyperLiquidComposerCore.sol\":\"HyperLiquidComposerCore\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=node_modules/@layerzerolabs/toolbox-foundry/lib/ds-test/\",\":forge-std/=node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/contracts/=node_modules/@layerzerolabs/toolbox-foundry/lib/solidity-bytes-utils/\"]},\"sources\":{\"contracts/HyperLiquidComposerCore.sol\":{\"keccak256\":\"0x3e434f92a67cf8ebe665165b67c61a9a4f44ff100c8d758e469149e44705644d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a0893f8b064c38db25dee123fac75c2f1fe8f4e734a565fb7cf89a8295cb674\",\"dweb:/ipfs/QmeyR1opq8nCj3bkPxvaKmaatcxQWVg6Vm728gZRkDzMg4\"]},\"contracts/interfaces/IHyperLiquidComposerCore.sol\":{\"keccak256\":\"0x18674ea2cf84642166ab12a717c341503f7c5d490ec52b14d4d20924f5ff17aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cdd6b1cc2428ce607117df50ede9cc12307cda7c332a1fd20143dbc3ea18274\",\"dweb:/ipfs/QmbmWTNbbf2jj3JFFQL8EwcaY4L9tXLPdrkGJYgPop9zda\"]},\"contracts/interfaces/IHyperLiquidComposerErrors.sol\":{\"keccak256\":\"0xb2444c6b5070d989f610d8dafff535ece8af031a78464f27f56af1cc74e06f69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a636fa5beff36bde5c49fa5433df8c6dc94a47b220d984eb8caf1004f2ea22c\",\"dweb:/ipfs/QmaZLvXPUnN2VxzsyG5EASRXVQCwG3JhExJF58Wa5ScoPy\"]},\"contracts/interfaces/IHyperLiquidReadPrecompile.sol\":{\"keccak256\":\"0x3a6df8d89dca4f7547bbdc912c92315020f88b50c648c55f04fcb3ecb47d9ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://836bc90fe0705ca588329e218253e375bc76752d762b76e31c5f568be1b9409f\",\"dweb:/ipfs/QmYMRCYqsKho9fHZcC8f4JBPSxx9p6a4zLL7nX8CDoZsXc\"]},\"contracts/interfaces/IHyperLiquidWritePrecompile.sol\":{\"keccak256\":\"0xbfa7d38d7675898af0def60823f15550730af3bacb64068a09e1746b21c2cf4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5cba8210ee21bd186dfddbaa2b3f1ceaeb597763cac1e6271c9ae6e8ff4b53f\",\"dweb:/ipfs/QmVV8BtvpwQQ3jqUdTEFs2nnT9Q7gxTajRqgJPmKQuforV\"]},\"contracts/library/HyperLiquidComposerCodec.sol\":{\"keccak256\":\"0x26e2d98f264344ec7d44110b294b72c84bda78eb89d43e7e8164b0e2972aa52d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eac0654e9b43c8fdba761bff402d3909bd7a65c1684c4794a975abb07895864d\",\"dweb:/ipfs/QmPa5guHnQoke2ToDfmu9ovwQdTRbjA6c3rh1T7QqjMEQs\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\":{\"keccak256\":\"0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f254bc60ac26687b5320a43a556e30777b0745abf7cd64d5f4720d9b1d1f7fdf\",\"dweb:/ipfs/QmRSJEZVgxaC3L2DdE6s8P5qkYfM3V5JMeseeFJJqGR4xz\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bacc29fd3866af71e59cb0bdc1cf82c882a4a7f4e2652fd413c9f12649762083\",\"dweb:/ipfs/QmZh2toLnrQDWaNYhS5K4NoW7Vxd2GdZx9KA77vKEDLAqs\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8ff6a8a89297fa127f86b54e0db3eba1d6a6eeb4f6398d3c84d569665ac8f1b\",\"dweb:/ipfs/QmVSwhw6xFDrLRAX4RXaCM47yBaBtac4wf36DYEq6KCTvT\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e1b245d58221d16d8b5e0f01ef3e289a24a7df1ace3b94239e4d5b954ad5927\",\"dweb:/ipfs/Qmappsgp7PCY9rSSNE9Cdn4BTRX591WfCSEgq2HxhA3z6S\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b18b23a1643fc6636c4ad9d9023e2e6ca2d3c2a4a046482d4655bff09950598d\",\"dweb:/ipfs/Qma6G5SqiovwrMPfgqTrRngK1HWW373Wkf9c6YP2NhXpPk\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5173fc9143bea314b159ca5a9adb5626659ef763bc598e27de5fa46efe3291a6\",\"dweb:/ipfs/QmSLFeMFPmVeGxT4sxRPW28ictjAS22M8rLeYRu9TXkA6D\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://606515dd9193551bd2c94ac8c304f3776fafcc70e544ebf441f334658b2fd5f0\",\"dweb:/ipfs/QmZ88ey7DdZqV5taAoebabvszX5kdPMSrQCAmTteVdDtcH\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\":{\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d42b471418efadcc3577ef3fa9f8f504e8bed7db90c3b0c862038d8b29529eb2\",\"dweb:/ipfs/QmZETDQiJN4U92fmLKo8T9ZbdDf7BNBUUvo9H7M7GqAyFU\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\":{\"keccak256\":\"0xe5014c411acb2b59dd74ae74a1bab02cf32d94a41a548a5ab553d64aeeb55dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dfb7bc121002fc7e7931c34eb17af0ae0f0127dcc3199511c83a58a917160d\",\"dweb:/ipfs/QmPdq1wcRRBdUP169LHCLoLuPRunN9eR71TQN42FjGpowx\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a1deb2a6a3eb1fb83936c9578469142bff470295f403d7d07d955a76be3adbd\",\"dweb:/ipfs/QmS9bjSfBaE4YhQ1PCQ1TknbEPbNfRXzBK9E7SaPGyiZEv\"]},\"node_modules/@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol\":{\"keccak256\":\"0x7ba6bb62fba7ee83451cfb0e727ddeef0e96b4388bd4e9ff0fc6ce103e1101c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfbd447f2e8a730bd46a14c3c3e6a0b2bf7446145579603a9793ba5ac1dd38b4\",\"dweb:/ipfs/QmZ4nx4iGrFmBHvYFgki5TXFdCHz4Co38hgdgwpRaM7NLs\"]},\"node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\":{\"keccak256\":\"0xaae73d6eb8b9561c43f1802f3c416c00ccd35f172b711f9781ccdf1b25a40db5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7beda2d895ae9e15269dd261a492ce0a29b498e5bebf088ed6f2ae6a5185719e\",\"dweb:/ipfs/QmScog2tW1YVyEPLVcUVqGGc85ub46sA28nUKNzFEZcFdK\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.22+commit.4fc1097e" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "bytes", "name": "errorMessage", "type": "bytes" }
          ],
          "type": "error",
          "name": "ErrorMsg"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" },
            { "internalType": "uint64", "name": "tokenId", "type": "uint64" }
          ],
          "type": "error",
          "name": "HyperLiquidComposerCore_SpotBalanceRead_Failed"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "type": "error",
          "name": "HyperLiquidComposer_FailedToRefund_HYPE"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "notComposerAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "HyperLiquidComposer_InvalidCall_NotComposer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "refundTo",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "refundAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ErrorERC20_Refund",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "refundTo",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "refundAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ErrorHYPE_Refund",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "reason",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ErrorMessage",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "amountCore",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "maxTransferableAmount",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OverflowDetected",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HLP_PRECOMPILE_WRITE",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VALID_COMPOSE_MESSAGE_LENGTH_ENCODE",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VALID_COMPOSE_MESSAGE_LENGTH_PACKED",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" },
            { "internalType": "uint64", "name": "_tokenId", "type": "uint64" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfHyperCore",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "endpoint",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHypeAsset",
          "outputs": [
            {
              "internalType": "struct IHyperAsset",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetBridgeAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "coreIndexId",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "decimalDiff",
                  "type": "uint64"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOFTAsset",
          "outputs": [
            {
              "internalType": "struct IHyperAsset",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetBridgeAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "coreIndexId",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "decimalDiff",
                  "type": "uint64"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hypeAsset",
          "outputs": [
            {
              "internalType": "address",
              "name": "assetBridgeAddress",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "coreIndexId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "decimalDiff",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oft",
          "outputs": [
            { "internalType": "contract IOFT", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oftAsset",
          "outputs": [
            {
              "internalType": "address",
              "name": "assetBridgeAddress",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "coreIndexId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "decimalDiff",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "_amount", "type": "uint256" },
            { "internalType": "bool", "name": "_isOFT", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteHyperCoreAmount",
          "outputs": [
            {
              "internalType": "struct IHyperAssetAmount",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "evm", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "dust",
                  "type": "uint256"
                },
                { "internalType": "uint64", "name": "core", "type": "uint64" }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_refundAddress",
              "type": "address"
            },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_refundAddress",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundNativeTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            { "internalType": "contract IERC20", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_maybeReceiver",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "_senderBytes32",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "_amountLD",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "validate_addresses_or_refund",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_composeMessage",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "validate_payload",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "bytes32", "name": "", "type": "bytes32" },
            { "internalType": "bytes", "name": "", "type": "bytes" }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOfHyperCore(address,uint64)": {
            "params": {
              "_tokenId": "The token id of the hypercore",
              "_user": "The address of the user"
            },
            "returns": { "_0": "The balance of the user in the hypercore" }
          },
          "quoteHyperCoreAmount(uint256,bool)": {
            "params": {
              "_amount": "The amount of tokens to send",
              "_isOFT": "Whether the amount is an OFT amount or a HYPE amount"
            },
            "returns": {
              "_0": "IHyperAssetAmount - The amount of tokens to send to HyperCore (scaled on evm), dust (to be refunded), and the swap amount (of the tokens scaled on hypercore)"
            }
          },
          "refundERC20(address,uint256)": {
            "details": "If the refund address is set to the zero address - it means that the transaction sender is a non-evm address and the receiver is malformed.In this case, the tokens are locked in the composer.",
            "params": {
              "_amount": "The amount of tokens to refund",
              "_refundAddress": "The address to refund the native tokens to"
            }
          },
          "refundNativeTokens(address)": {
            "details": "It is possible that the refund address is a contract without fallback or receive functions - in that case the transfer fails and tokens will be locked in the contract.Since this is an external function - the msg.value can be different to the msg.value sent to the lzCompose function by tx.originIt is different in the case of a partial refund where the call is:`this.refundNativeTokens{ value: amounts.dust }(_receiver)`In this case, the msg.value is the amount of the dust and not the msg.value sent to the lzCompose function by tx.origin",
            "params": {
              "_refundAddress": "The address to refund the native tokens to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "balanceOfHyperCore(address,uint64)": {
            "notice": "External function to read the balance of the user in the hypercore"
          },
          "quoteHyperCoreAmount(uint256,bool)": {
            "notice": "External function to quote the conversion of evm tokens to hypercore tokens"
          },
          "refundERC20(address,uint256)": {
            "notice": "Refunds the native tokens to the refund addressThis function is called by the refundTokens function"
          },
          "refundNativeTokens(address)": {
            "notice": "Refunds the native tokens to the refund addressThis function is called by the refundTokens function"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@layerzerolabs/=node_modules/@layerzerolabs/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=node_modules/@layerzerolabs/toolbox-foundry/lib/ds-test/",
        "forge-std/=node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/",
        "hardhat/=node_modules/hardhat/",
        "solidity-bytes-utils/contracts/=node_modules/@layerzerolabs/toolbox-foundry/lib/solidity-bytes-utils/"
      ],
      "optimizer": { "enabled": false, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "contracts/HyperLiquidComposerCore.sol": "HyperLiquidComposerCore"
      },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "contracts/HyperLiquidComposerCore.sol": {
        "keccak256": "0x3e434f92a67cf8ebe665165b67c61a9a4f44ff100c8d758e469149e44705644d",
        "urls": [
          "bzz-raw://5a0893f8b064c38db25dee123fac75c2f1fe8f4e734a565fb7cf89a8295cb674",
          "dweb:/ipfs/QmeyR1opq8nCj3bkPxvaKmaatcxQWVg6Vm728gZRkDzMg4"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHyperLiquidComposerCore.sol": {
        "keccak256": "0x18674ea2cf84642166ab12a717c341503f7c5d490ec52b14d4d20924f5ff17aa",
        "urls": [
          "bzz-raw://5cdd6b1cc2428ce607117df50ede9cc12307cda7c332a1fd20143dbc3ea18274",
          "dweb:/ipfs/QmbmWTNbbf2jj3JFFQL8EwcaY4L9tXLPdrkGJYgPop9zda"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHyperLiquidComposerErrors.sol": {
        "keccak256": "0xb2444c6b5070d989f610d8dafff535ece8af031a78464f27f56af1cc74e06f69",
        "urls": [
          "bzz-raw://0a636fa5beff36bde5c49fa5433df8c6dc94a47b220d984eb8caf1004f2ea22c",
          "dweb:/ipfs/QmaZLvXPUnN2VxzsyG5EASRXVQCwG3JhExJF58Wa5ScoPy"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHyperLiquidReadPrecompile.sol": {
        "keccak256": "0x3a6df8d89dca4f7547bbdc912c92315020f88b50c648c55f04fcb3ecb47d9ae0",
        "urls": [
          "bzz-raw://836bc90fe0705ca588329e218253e375bc76752d762b76e31c5f568be1b9409f",
          "dweb:/ipfs/QmYMRCYqsKho9fHZcC8f4JBPSxx9p6a4zLL7nX8CDoZsXc"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHyperLiquidWritePrecompile.sol": {
        "keccak256": "0xbfa7d38d7675898af0def60823f15550730af3bacb64068a09e1746b21c2cf4b",
        "urls": [
          "bzz-raw://a5cba8210ee21bd186dfddbaa2b3f1ceaeb597763cac1e6271c9ae6e8ff4b53f",
          "dweb:/ipfs/QmVV8BtvpwQQ3jqUdTEFs2nnT9Q7gxTajRqgJPmKQuforV"
        ],
        "license": "MIT"
      },
      "contracts/library/HyperLiquidComposerCodec.sol": {
        "keccak256": "0x26e2d98f264344ec7d44110b294b72c84bda78eb89d43e7e8164b0e2972aa52d",
        "urls": [
          "bzz-raw://eac0654e9b43c8fdba761bff402d3909bd7a65c1684c4794a975abb07895864d",
          "dweb:/ipfs/QmPa5guHnQoke2ToDfmu9ovwQdTRbjA6c3rh1T7QqjMEQs"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol": {
        "keccak256": "0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49",
        "urls": [
          "bzz-raw://f254bc60ac26687b5320a43a556e30777b0745abf7cd64d5f4720d9b1d1f7fdf",
          "dweb:/ipfs/QmRSJEZVgxaC3L2DdE6s8P5qkYfM3V5JMeseeFJJqGR4xz"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol": {
        "keccak256": "0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3",
        "urls": [
          "bzz-raw://bacc29fd3866af71e59cb0bdc1cf82c882a4a7f4e2652fd413c9f12649762083",
          "dweb:/ipfs/QmZh2toLnrQDWaNYhS5K4NoW7Vxd2GdZx9KA77vKEDLAqs"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol": {
        "keccak256": "0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc",
        "urls": [
          "bzz-raw://d8ff6a8a89297fa127f86b54e0db3eba1d6a6eeb4f6398d3c84d569665ac8f1b",
          "dweb:/ipfs/QmVSwhw6xFDrLRAX4RXaCM47yBaBtac4wf36DYEq6KCTvT"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol": {
        "keccak256": "0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972",
        "urls": [
          "bzz-raw://7e1b245d58221d16d8b5e0f01ef3e289a24a7df1ace3b94239e4d5b954ad5927",
          "dweb:/ipfs/Qmappsgp7PCY9rSSNE9Cdn4BTRX591WfCSEgq2HxhA3z6S"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol": {
        "keccak256": "0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901",
        "urls": [
          "bzz-raw://b18b23a1643fc6636c4ad9d9023e2e6ca2d3c2a4a046482d4655bff09950598d",
          "dweb:/ipfs/Qma6G5SqiovwrMPfgqTrRngK1HWW373Wkf9c6YP2NhXpPk"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol": {
        "keccak256": "0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e",
        "urls": [
          "bzz-raw://5173fc9143bea314b159ca5a9adb5626659ef763bc598e27de5fa46efe3291a6",
          "dweb:/ipfs/QmSLFeMFPmVeGxT4sxRPW28ictjAS22M8rLeYRu9TXkA6D"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol": {
        "keccak256": "0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc",
        "urls": [
          "bzz-raw://606515dd9193551bd2c94ac8c304f3776fafcc70e544ebf441f334658b2fd5f0",
          "dweb:/ipfs/QmZ88ey7DdZqV5taAoebabvszX5kdPMSrQCAmTteVdDtcH"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol": {
        "keccak256": "0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20",
        "urls": [
          "bzz-raw://d42b471418efadcc3577ef3fa9f8f504e8bed7db90c3b0c862038d8b29529eb2",
          "dweb:/ipfs/QmZETDQiJN4U92fmLKo8T9ZbdDf7BNBUUvo9H7M7GqAyFU"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol": {
        "keccak256": "0xe5014c411acb2b59dd74ae74a1bab02cf32d94a41a548a5ab553d64aeeb55dae",
        "urls": [
          "bzz-raw://29dfb7bc121002fc7e7931c34eb17af0ae0f0127dcc3199511c83a58a917160d",
          "dweb:/ipfs/QmPdq1wcRRBdUP169LHCLoLuPRunN9eR71TQN42FjGpowx"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol": {
        "keccak256": "0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58",
        "urls": [
          "bzz-raw://4a1deb2a6a3eb1fb83936c9578469142bff470295f403d7d07d955a76be3adbd",
          "dweb:/ipfs/QmS9bjSfBaE4YhQ1PCQ1TknbEPbNfRXzBK9E7SaPGyiZEv"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol": {
        "keccak256": "0x7ba6bb62fba7ee83451cfb0e727ddeef0e96b4388bd4e9ff0fc6ce103e1101c8",
        "urls": [
          "bzz-raw://cfbd447f2e8a730bd46a14c3c3e6a0b2bf7446145579603a9793ba5ac1dd38b4",
          "dweb:/ipfs/QmZ4nx4iGrFmBHvYFgki5TXFdCHz4Co38hgdgwpRaM7NLs"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol": {
        "keccak256": "0xaae73d6eb8b9561c43f1802f3c416c00ccd35f172b711f9781ccdf1b25a40db5",
        "urls": [
          "bzz-raw://7beda2d895ae9e15269dd261a492ce0a29b498e5bebf088ed6f2ae6a5185719e",
          "dweb:/ipfs/QmScog2tW1YVyEPLVcUVqGGc85ub46sA28nUKNzFEZcFdK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310",
        "urls": [
          "bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862",
          "dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5",
        "urls": [
          "bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23",
          "dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/HyperLiquidComposerCore.sol",
    "id": 874,
    "exportedSymbols": {
      "ErrorMessagePayload": [1004],
      "HyperLiquidComposerCodec": [1582],
      "HyperLiquidComposerCore": [873],
      "IERC20": [46722],
      "IHyperAsset": [897],
      "IHyperAssetAmount": [904],
      "IHyperLiquidComposerCore": [995],
      "IHyperLiquidComposerErrors": [1051],
      "IHyperLiquidReadPrecompile": [1171],
      "IHyperLiquidWritePrecompile": [1291],
      "IOFT": [5118],
      "OFTComposeMsgCodec": [5287]
    },
    "nodeType": "SourceUnit",
    "src": "32:10055:1",
    "nodes": [
      {
        "id": 388,
        "nodeType": "PragmaDirective",
        "src": "32:24:1",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".20"]
      },
      {
        "id": 390,
        "nodeType": "ImportDirective",
        "src": "58:76:1",
        "nodes": [],
        "absolutePath": "node_modules/@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol",
        "file": "@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 874,
        "sourceUnit": 5119,
        "symbolAliases": [
          {
            "foreign": {
              "id": 389,
              "name": "IOFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5118,
              "src": "67:4:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 392,
        "nodeType": "ImportDirective",
        "src": "135:72:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 874,
        "sourceUnit": 46723,
        "symbolAliases": [
          {
            "foreign": {
              "id": 391,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46722,
              "src": "144:6:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 394,
        "nodeType": "ImportDirective",
        "src": "209:82:1",
        "nodes": [],
        "absolutePath": "contracts/library/HyperLiquidComposerCodec.sol",
        "file": "./library/HyperLiquidComposerCodec.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 874,
        "sourceUnit": 1583,
        "symbolAliases": [
          {
            "foreign": {
              "id": 393,
              "name": "HyperLiquidComposerCodec",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1582,
              "src": "218:24:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 397,
        "nodeType": "ImportDirective",
        "src": "292:110:1",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IHyperLiquidComposerErrors.sol",
        "file": "./interfaces/IHyperLiquidComposerErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 874,
        "sourceUnit": 1052,
        "symbolAliases": [
          {
            "foreign": {
              "id": 395,
              "name": "IHyperLiquidComposerErrors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1051,
              "src": "301:26:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 396,
              "name": "ErrorMessagePayload",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1004,
              "src": "329:19:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 399,
        "nodeType": "ImportDirective",
        "src": "403:91:1",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IHyperLiquidWritePrecompile.sol",
        "file": "./interfaces/IHyperLiquidWritePrecompile.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 874,
        "sourceUnit": 1292,
        "symbolAliases": [
          {
            "foreign": {
              "id": 398,
              "name": "IHyperLiquidWritePrecompile",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1291,
              "src": "412:27:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 401,
        "nodeType": "ImportDirective",
        "src": "495:89:1",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IHyperLiquidReadPrecompile.sol",
        "file": "./interfaces/IHyperLiquidReadPrecompile.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 874,
        "sourceUnit": 1172,
        "symbolAliases": [
          {
            "foreign": {
              "id": 400,
              "name": "IHyperLiquidReadPrecompile",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1171,
              "src": "504:26:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 403,
        "nodeType": "ImportDirective",
        "src": "585:98:1",
        "nodes": [],
        "absolutePath": "node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol",
        "file": "@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 874,
        "sourceUnit": 5288,
        "symbolAliases": [
          {
            "foreign": {
              "id": 402,
              "name": "OFTComposeMsgCodec",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5287,
              "src": "594:18:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 407,
        "nodeType": "ImportDirective",
        "src": "684:117:1",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IHyperLiquidComposerCore.sol",
        "file": "./interfaces/IHyperLiquidComposerCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 874,
        "sourceUnit": 996,
        "symbolAliases": [
          {
            "foreign": {
              "id": 404,
              "name": "IHyperLiquidComposerCore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 995,
              "src": "693:24:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 405,
              "name": "IHyperAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 897,
              "src": "719:11:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 406,
              "name": "IHyperAssetAmount",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 904,
              "src": "732:17:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 873,
        "nodeType": "ContractDefinition",
        "src": "803:9283:1",
        "nodes": [
          {
            "id": 412,
            "nodeType": "UsingForDirective",
            "src": "870:43:1",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 410,
              "name": "HyperLiquidComposerCodec",
              "nameLocations": ["876:24:1"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1582,
              "src": "876:24:1"
            },
            "typeName": {
              "id": 411,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "905:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 415,
            "nodeType": "UsingForDirective",
            "src": "918:41:1",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 413,
              "name": "HyperLiquidComposerCodec",
              "nameLocations": ["924:24:1"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1582,
              "src": "924:24:1"
            },
            "typeName": {
              "id": 414,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "953:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 418,
            "nodeType": "UsingForDirective",
            "src": "964:43:1",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 416,
              "name": "HyperLiquidComposerCodec",
              "nameLocations": ["970:24:1"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1582,
              "src": "970:24:1"
            },
            "typeName": {
              "id": 417,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "999:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 438,
            "nodeType": "ModifierDefinition",
            "src": "1013:198:1",
            "nodes": [],
            "body": {
              "id": 437,
              "nodeType": "Block",
              "src": "1037:174:1",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 420,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1051:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1055:6:1",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1051:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 424,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1073:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HyperLiquidComposerCore_$873",
                            "typeString": "contract HyperLiquidComposerCore"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_HyperLiquidComposerCore_$873",
                            "typeString": "contract HyperLiquidComposerCore"
                          }
                        ],
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1065:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1065:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1065:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1051:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 435,
                  "nodeType": "IfStatement",
                  "src": "1047:147:1",
                  "trueBody": {
                    "id": 434,
                    "nodeType": "Block",
                    "src": "1080:114:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 430,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1172:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1176:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1172:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 427,
                              "name": "IHyperLiquidComposerErrors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1051,
                              "src": "1101:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHyperLiquidComposerErrors_$1051_$",
                                "typeString": "type(contract IHyperLiquidComposerErrors)"
                              }
                            },
                            "id": 429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1128:43:1",
                            "memberName": "HyperLiquidComposer_InvalidCall_NotComposer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1024,
                            "src": "1101:70:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1101:82:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 433,
                        "nodeType": "RevertStatement",
                        "src": "1094:89:1"
                      }
                    ]
                  }
                },
                {
                  "id": 436,
                  "nodeType": "PlaceholderStatement",
                  "src": "1203:1:1"
                }
              ]
            },
            "name": "onlyComposer",
            "nameLocation": "1022:12:1",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1034:2:1"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 442,
            "nodeType": "VariableDeclaration",
            "src": "1458:64:1",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 439,
              "nodeType": "StructuredDocumentation",
              "src": "1217:236:1",
              "text": "@dev Valid compose message lengths for the HyperLiquidComposer - can be abi.encodePacked(address) or abi.encode(address)\n @dev If we are in abi.encodePacked(address) mode, the length is 20 bytes because addresses are 20 bytes"
            },
            "functionSelector": "807d6c3f",
            "mutability": "constant",
            "name": "VALID_COMPOSE_MESSAGE_LENGTH_PACKED",
            "nameLocation": "1482:35:1",
            "scope": 873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 440,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1458:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 441,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1520:2:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "public"
          },
          {
            "id": 446,
            "nodeType": "VariableDeclaration",
            "src": "1603:64:1",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 443,
              "nodeType": "StructuredDocumentation",
              "src": "1528:70:1",
              "text": "@dev If we are in abi.encode(address) mode, the length is 32 bytes"
            },
            "functionSelector": "9278d99a",
            "mutability": "constant",
            "name": "VALID_COMPOSE_MESSAGE_LENGTH_ENCODE",
            "nameLocation": "1627:35:1",
            "scope": 873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 444,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1603:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3332",
              "id": 445,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1665:2:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_32_by_1",
                "typeString": "int_const 32"
              },
              "value": "32"
            },
            "visibility": "public"
          },
          {
            "id": 449,
            "nodeType": "VariableDeclaration",
            "src": "1674:89:1",
            "nodes": [],
            "baseFunctions": [942],
            "constant": true,
            "functionSelector": "dd850075",
            "mutability": "constant",
            "name": "HLP_PRECOMPILE_WRITE",
            "nameLocation": "1698:20:1",
            "scope": 873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 447,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1674:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307833333333333333333333333333333333333333333333333333333333333333333333333333333333",
              "id": 448,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1721:42:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x3333333333333333333333333333333333333333"
            },
            "visibility": "public"
          },
          {
            "id": 452,
            "nodeType": "VariableDeclaration",
            "src": "1769:101:1",
            "nodes": [],
            "baseFunctions": [947],
            "constant": true,
            "functionSelector": "ba872679",
            "mutability": "constant",
            "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
            "nameLocation": "1793:32:1",
            "scope": 873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 450,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1769:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030383031",
              "id": 451,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1828:42:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000000000801"
            },
            "visibility": "public"
          },
          {
            "id": 454,
            "nodeType": "VariableDeclaration",
            "src": "1877:33:1",
            "nodes": [],
            "baseFunctions": [925],
            "constant": false,
            "functionSelector": "5e280f11",
            "mutability": "immutable",
            "name": "endpoint",
            "nameLocation": "1902:8:1",
            "scope": 873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 453,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1877:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 457,
            "nodeType": "VariableDeclaration",
            "src": "1917:25:1",
            "nodes": [],
            "baseFunctions": [931],
            "constant": false,
            "functionSelector": "9b5215f6",
            "mutability": "immutable",
            "name": "oft",
            "nameLocation": "1939:3:1",
            "scope": 873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IOFT_$5118",
              "typeString": "contract IOFT"
            },
            "typeName": {
              "id": 456,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 455,
                "name": "IOFT",
                "nameLocations": ["1917:4:1"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5118,
                "src": "1917:4:1"
              },
              "referencedDeclaration": 5118,
              "src": "1917:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOFT_$5118",
                "typeString": "contract IOFT"
              }
            },
            "visibility": "public"
          },
          {
            "id": 460,
            "nodeType": "VariableDeclaration",
            "src": "1948:29:1",
            "nodes": [],
            "baseFunctions": [937],
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "1972:5:1",
            "scope": 873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$46722",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 459,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 458,
                "name": "IERC20",
                "nameLocations": ["1948:6:1"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46722,
                "src": "1948:6:1"
              },
              "referencedDeclaration": 46722,
              "src": "1948:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$46722",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 463,
            "nodeType": "VariableDeclaration",
            "src": "1984:27:1",
            "nodes": [],
            "constant": false,
            "functionSelector": "765008a1",
            "mutability": "mutable",
            "name": "oftAsset",
            "nameLocation": "2003:8:1",
            "scope": 873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
              "typeString": "struct IHyperAsset"
            },
            "typeName": {
              "id": 462,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 461,
                "name": "IHyperAsset",
                "nameLocations": ["1984:11:1"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 897,
                "src": "1984:11:1"
              },
              "referencedDeclaration": 897,
              "src": "1984:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_IHyperAsset_$897_storage_ptr",
                "typeString": "struct IHyperAsset"
              }
            },
            "visibility": "public"
          },
          {
            "id": 466,
            "nodeType": "VariableDeclaration",
            "src": "2017:28:1",
            "nodes": [],
            "constant": false,
            "functionSelector": "f6e6b240",
            "mutability": "mutable",
            "name": "hypeAsset",
            "nameLocation": "2036:9:1",
            "scope": 873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
              "typeString": "struct IHyperAsset"
            },
            "typeName": {
              "id": 465,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 464,
                "name": "IHyperAsset",
                "nameLocations": ["2017:11:1"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 897,
                "src": "2017:11:1"
              },
              "referencedDeclaration": 897,
              "src": "2017:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_IHyperAsset_$897_storage_ptr",
                "typeString": "struct IHyperAsset"
              }
            },
            "visibility": "public"
          },
          {
            "id": 506,
            "nodeType": "FunctionDefinition",
            "src": "2052:732:1",
            "nodes": [],
            "body": {
              "id": 505,
              "nodeType": "Block",
              "src": "2165:619:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [479],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 479,
                      "mutability": "mutable",
                      "name": "amountLD",
                      "nameLocation": "2372:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 505,
                      "src": "2364:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 478,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2364:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Revert type : out of bounds or type cast error\n @dev Reason: Trying to slice the bytes object when it isn't of the form created by a OFTComposeMsgCodec.encode()",
                  "id": 484,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 482,
                        "name": "_composeMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "2411:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 480,
                        "name": "OFTComposeMsgCodec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5287,
                        "src": "2383:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OFTComposeMsgCodec_$5287_$",
                          "typeString": "type(library OFTComposeMsgCodec)"
                        }
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2402:8:1",
                      "memberName": "amountLD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5216,
                      "src": "2383:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes calldata) pure returns (uint256)"
                      }
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2383:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2364:63:1"
                },
                {
                  "assignments": [486],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 486,
                      "mutability": "mutable",
                      "name": "maybeSenderBytes32",
                      "nameLocation": "2445:18:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 505,
                      "src": "2437:26:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 485,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2437:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 491,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 489,
                        "name": "_composeMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "2497:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 487,
                        "name": "OFTComposeMsgCodec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5287,
                        "src": "2466:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OFTComposeMsgCodec_$5287_$",
                          "typeString": "type(library OFTComposeMsgCodec)"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2485:11:1",
                      "memberName": "composeFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5233,
                      "src": "2466:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes calldata) pure returns (bytes32)"
                      }
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2466:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2437:76:1"
                },
                {
                  "assignments": [494],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 494,
                      "mutability": "mutable",
                      "name": "maybeReceiver",
                      "nameLocation": "2652:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 505,
                      "src": "2639:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 493,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2639:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev This is an unbounded slice range without type casting thereby having the least chance of erroring",
                  "id": 499,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 497,
                        "name": "_composeMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "2698:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 495,
                        "name": "OFTComposeMsgCodec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5287,
                        "src": "2668:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OFTComposeMsgCodec_$5287_$",
                          "typeString": "type(library OFTComposeMsgCodec)"
                        }
                      },
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2687:10:1",
                      "memberName": "composeMsg",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5246,
                      "src": "2668:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes calldata) pure returns (bytes memory)"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2668:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2639:75:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 500,
                        "name": "amountLD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "2733:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 501,
                        "name": "maybeSenderBytes32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 486,
                        "src": "2743:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 502,
                        "name": "maybeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "2763:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 503,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2732:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(uint256,bytes32,bytes memory)"
                    }
                  },
                  "functionReturnParameters": 476,
                  "id": 504,
                  "nodeType": "Return",
                  "src": "2725:52:1"
                }
              ]
            },
            "functionSelector": "1b224831",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validate_payload",
            "nameLocation": "2061:16:1",
            "parameters": {
              "id": 469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 468,
                  "mutability": "mutable",
                  "name": "_composeMessage",
                  "nameLocation": "2093:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "2078:30:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2078:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2077:32:1"
            },
            "returnParameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 471,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "2133:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 473,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "2142:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2142:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 475,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "2151:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2132:32:1"
            },
            "scope": 873,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 563,
            "nodeType": "FunctionDefinition",
            "src": "2790:1090:1",
            "nodes": [],
            "body": {
              "id": 562,
              "nodeType": "Block",
              "src": "2962:918:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [519],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 519,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "3159:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 562,
                      "src": "3151:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 518,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3151:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Test the conversion of the below (i.e. bytes and bytes32 into address)\n @dev This function returns address(0) if the sender is not a valid evm address",
                  "id": 523,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 520,
                        "name": "_senderBytes32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "3168:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3183:23:1",
                      "memberName": "into_evmAddress_or_zero",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1496,
                      "src": "3168:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_address_$attached_to$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (address)"
                      }
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3168:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3151:57:1"
                },
                {
                  "assignments": [525],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 525,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "3226:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 562,
                      "src": "3218:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 524,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3218:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 529,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 526,
                        "name": "_maybeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "3237:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3252:23:1",
                      "memberName": "into_evmAddress_or_zero",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1544,
                      "src": "3237:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (address)"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3237:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3218:59:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 530,
                      "name": "receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "3457:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3477:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3469:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3469:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3469:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3457:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "@dev Initiate refund if the receiver is not a valid evm adress\n @dev Handling the if sender is not a valid evm address in the refund function",
                  "id": 559,
                  "nodeType": "IfStatement",
                  "src": "3453:395:1",
                  "trueBody": {
                    "id": 558,
                    "nodeType": "Block",
                    "src": "3481:367:1",
                    "statements": [
                      {
                        "assignments": [537],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 537,
                            "mutability": "mutable",
                            "name": "errMsg",
                            "nameLocation": "3508:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 558,
                            "src": "3495:19:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 536,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3495:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 547,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 540,
                                  "name": "IHyperLiquidComposerErrors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1051,
                                  "src": "3557:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IHyperLiquidComposerErrors_$1051_$",
                                    "typeString": "type(contract IHyperLiquidComposerErrors)"
                                  }
                                },
                                "id": 541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3584:57:1",
                                "memberName": "HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1044,
                                "src": "3557:84:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                                  "typeString": "function (bytes memory,uint256) pure"
                                }
                              },
                              "id": 542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3642:8:1",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "3557:93:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 543,
                              "name": "_maybeReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 508,
                              "src": "3668:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 544,
                                "name": "_maybeReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 508,
                                "src": "3700:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3715:6:1",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "3700:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 538,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3517:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3521:18:1",
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "3517:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3517:218:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3495:240:1"
                      },
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 553,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 519,
                                  "src": "3818:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 554,
                                  "name": "_amountLD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "3826:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 551,
                                  "name": "errMsg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 537,
                                  "src": "3792:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3799:18:1",
                                "memberName": "createErrorMessage",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1581,
                                "src": "3792:25:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$attached_to$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory,address,uint256) pure returns (bytes memory)"
                                }
                              },
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3792:44:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 548,
                              "name": "IHyperLiquidComposerErrors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1051,
                              "src": "3756:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHyperLiquidComposerErrors_$1051_$",
                                "typeString": "type(contract IHyperLiquidComposerErrors)"
                              }
                            },
                            "id": 550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3783:8:1",
                            "memberName": "ErrorMsg",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1008,
                            "src": "3756:35:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) pure"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3756:81:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 557,
                        "nodeType": "RevertStatement",
                        "src": "3749:88:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 560,
                    "name": "receiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 525,
                    "src": "3865:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 516,
                  "id": 561,
                  "nodeType": "Return",
                  "src": "3858:15:1"
                }
              ]
            },
            "baseFunctions": [958],
            "functionSelector": "5241b496",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validate_addresses_or_refund",
            "nameLocation": "2799:28:1",
            "parameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "_maybeReceiver",
                  "nameLocation": "2850:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "2837:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2837:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "_senderBytes32",
                  "nameLocation": "2882:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "2874:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "_amountLD",
                  "nameLocation": "2914:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "2906:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2906:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2827:102:1"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "2953:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2953:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2952:9:1"
            },
            "scope": 873,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 618,
            "nodeType": "FunctionDefinition",
            "src": "4295:587:1",
            "nodes": [],
            "body": {
              "id": 617,
              "nodeType": "Block",
              "src": "4397:485:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [576],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 576,
                      "mutability": "mutable",
                      "name": "asset",
                      "nameLocation": "4426:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 617,
                      "src": "4407:24:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                        "typeString": "struct IHyperAsset"
                      },
                      "typeName": {
                        "id": 575,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 574,
                          "name": "IHyperAsset",
                          "nameLocations": ["4407:11:1"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 897,
                          "src": "4407:11:1"
                        },
                        "referencedDeclaration": 897,
                        "src": "4407:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IHyperAsset_$897_storage_ptr",
                          "typeString": "struct IHyperAsset"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 577,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4407:24:1"
                },
                {
                  "assignments": [579],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 579,
                      "mutability": "mutable",
                      "name": "maxTransferableAmount",
                      "nameLocation": "4448:21:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 617,
                      "src": "4441:28:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 578,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "4441:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 580,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4441:28:1"
                },
                {
                  "condition": {
                    "id": 581,
                    "name": "_isOFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 568,
                    "src": "4484:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 609,
                    "nodeType": "Block",
                    "src": "4647:152:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 596,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "4661:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                              "typeString": "struct IHyperAsset memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 597,
                            "name": "hypeAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 466,
                            "src": "4669:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                              "typeString": "struct IHyperAsset storage ref"
                            }
                          },
                          "src": "4661:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                            "typeString": "struct IHyperAsset memory"
                          }
                        },
                        "id": 599,
                        "nodeType": "ExpressionStatement",
                        "src": "4661:17:1"
                      },
                      {
                        "expression": {
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 600,
                            "name": "maxTransferableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "4692:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 602,
                                  "name": "hypeAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 466,
                                  "src": "4736:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                                    "typeString": "struct IHyperAsset storage ref"
                                  }
                                },
                                "id": 603,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4746:18:1",
                                "memberName": "assetBridgeAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 892,
                                "src": "4736:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 604,
                                  "name": "hypeAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 466,
                                  "src": "4766:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                                    "typeString": "struct IHyperAsset storage ref"
                                  }
                                },
                                "id": 605,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4776:11:1",
                                "memberName": "coreIndexId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 894,
                                "src": "4766:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 601,
                              "name": "_balanceOfHyperCore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4716:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint64_$",
                                "typeString": "function (address,uint64) view returns (uint64)"
                              }
                            },
                            "id": 606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4716:72:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "4692:96:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 608,
                        "nodeType": "ExpressionStatement",
                        "src": "4692:96:1"
                      }
                    ]
                  },
                  "id": 610,
                  "nodeType": "IfStatement",
                  "src": "4480:319:1",
                  "trueBody": {
                    "id": 595,
                    "nodeType": "Block",
                    "src": "4492:149:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 582,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "4506:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                              "typeString": "struct IHyperAsset memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 583,
                            "name": "oftAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "4514:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                              "typeString": "struct IHyperAsset storage ref"
                            }
                          },
                          "src": "4506:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                            "typeString": "struct IHyperAsset memory"
                          }
                        },
                        "id": 585,
                        "nodeType": "ExpressionStatement",
                        "src": "4506:16:1"
                      },
                      {
                        "expression": {
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 586,
                            "name": "maxTransferableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "4536:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 588,
                                  "name": "oftAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 463,
                                  "src": "4580:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                                    "typeString": "struct IHyperAsset storage ref"
                                  }
                                },
                                "id": 589,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4589:18:1",
                                "memberName": "assetBridgeAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 892,
                                "src": "4580:27:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 590,
                                  "name": "oftAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 463,
                                  "src": "4609:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                                    "typeString": "struct IHyperAsset storage ref"
                                  }
                                },
                                "id": 591,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4618:11:1",
                                "memberName": "coreIndexId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 894,
                                "src": "4609:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 587,
                              "name": "_balanceOfHyperCore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4560:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint64_$",
                                "typeString": "function (address,uint64) view returns (uint64)"
                              }
                            },
                            "id": 592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4560:70:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "4536:94:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 594,
                        "nodeType": "ExpressionStatement",
                        "src": "4536:94:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 613,
                        "name": "maxTransferableAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 579,
                        "src": "4846:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 614,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "4869:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                          "typeString": "struct IHyperAsset memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                          "typeString": "struct IHyperAsset memory"
                        }
                      ],
                      "expression": {
                        "id": 611,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "4816:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4824:21:1",
                      "memberName": "into_hyperAssetAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1458,
                      "src": "4816:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint64_$_t_struct$_IHyperAsset_$897_memory_ptr_$returns$_t_struct$_IHyperAssetAmount_$904_memory_ptr_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint64,struct IHyperAsset memory) returns (struct IHyperAssetAmount memory)"
                      }
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4816:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IHyperAssetAmount_$904_memory_ptr",
                      "typeString": "struct IHyperAssetAmount memory"
                    }
                  },
                  "functionReturnParameters": 573,
                  "id": 616,
                  "nodeType": "Return",
                  "src": "4809:66:1"
                }
              ]
            },
            "baseFunctions": [968],
            "documentation": {
              "id": 564,
              "nodeType": "StructuredDocumentation",
              "src": "3886:404:1",
              "text": "@notice External function to quote the conversion of evm tokens to hypercore tokens\n @param _amount The amount of tokens to send\n @param _isOFT Whether the amount is an OFT amount or a HYPE amount\n @return IHyperAssetAmount - The amount of tokens to send to HyperCore (scaled on evm), dust (to be refunded), and the swap amount (of the tokens scaled on hypercore)"
            },
            "functionSelector": "f9716faf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quoteHyperCoreAmount",
            "nameLocation": "4304:20:1",
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 566,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4333:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "4325:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4325:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "_isOFT",
                  "nameLocation": "4347:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "4342:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4342:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4324:30:1"
            },
            "returnParameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 572,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "4371:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IHyperAssetAmount_$904_memory_ptr",
                    "typeString": "struct IHyperAssetAmount"
                  },
                  "typeName": {
                    "id": 571,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 570,
                      "name": "IHyperAssetAmount",
                      "nameLocations": ["4371:17:1"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 904,
                      "src": "4371:17:1"
                    },
                    "referencedDeclaration": 904,
                    "src": "4371:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IHyperAssetAmount_$904_storage_ptr",
                      "typeString": "struct IHyperAssetAmount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4370:26:1"
            },
            "scope": 873,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 634,
            "nodeType": "FunctionDefinition",
            "src": "5143:151:1",
            "nodes": [],
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "5234:60:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 629,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "5271:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 630,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 623,
                        "src": "5278:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 628,
                      "name": "_balanceOfHyperCore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 684,
                      "src": "5251:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint64_$",
                        "typeString": "function (address,uint64) view returns (uint64)"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5251:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 627,
                  "id": 632,
                  "nodeType": "Return",
                  "src": "5244:43:1"
                }
              ]
            },
            "baseFunctions": [977],
            "documentation": {
              "id": 619,
              "nodeType": "StructuredDocumentation",
              "src": "4888:250:1",
              "text": "@notice External function to read the balance of the user in the hypercore\n @param _user The address of the user\n @param _tokenId The token id of the hypercore\n @return The balance of the user in the hypercore"
            },
            "functionSelector": "81e8dcb4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfHyperCore",
            "nameLocation": "5152:18:1",
            "parameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5179:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "5171:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5171:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5193:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "5186:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5170:32:1"
            },
            "returnParameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "5226:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5226:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5225:8:1"
            },
            "scope": 873,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 684,
            "nodeType": "FunctionDefinition",
            "src": "5555:480:1",
            "nodes": [],
            "body": {
              "id": 683,
              "nodeType": "Block",
              "src": "5647:388:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [645],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 645,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "5662:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 683,
                      "src": "5657:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 644,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5657:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 646,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5657:12:1"
                },
                {
                  "assignments": [648],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "5692:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 683,
                      "src": "5679:19:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5679:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 649,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5679:19:1"
                },
                {
                  "expression": {
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 650,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "5709:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 651,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 648,
                          "src": "5718:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 652,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "5708:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 657,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 637,
                              "src": "5783:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 658,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 639,
                              "src": "5790:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "expression": {
                              "id": 655,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5772:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5776:6:1",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "5772:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5772:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 653,
                          "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "5728:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5761:10:1",
                        "memberName": "staticcall",
                        "nodeType": "MemberAccess",
                        "src": "5728:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                        }
                      },
                      "id": 660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5728:72:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "5708:92:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 662,
                  "nodeType": "ExpressionStatement",
                  "src": "5708:92:1"
                },
                {
                  "condition": {
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5814:8:1",
                    "subExpression": {
                      "id": 663,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "5815:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 673,
                  "nodeType": "IfStatement",
                  "src": "5810:136:1",
                  "trueBody": {
                    "id": 672,
                    "nodeType": "Block",
                    "src": "5824:122:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 668,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 637,
                              "src": "5919:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 669,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 639,
                              "src": "5926:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "expression": {
                              "id": 665,
                              "name": "IHyperLiquidComposerErrors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1051,
                              "src": "5845:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHyperLiquidComposerErrors_$1051_$",
                                "typeString": "type(contract IHyperLiquidComposerErrors)"
                              }
                            },
                            "id": 667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5872:46:1",
                            "memberName": "HyperLiquidComposerCore_SpotBalanceRead_Failed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1050,
                            "src": "5845:73:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint64_$returns$__$",
                              "typeString": "function (address,uint64) pure"
                            }
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5845:90:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 671,
                        "nodeType": "RevertStatement",
                        "src": "5838:97:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 676,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 648,
                          "src": "5973:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "expression": {
                                "id": 677,
                                "name": "IHyperLiquidReadPrecompile",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1171,
                                "src": "5982:26:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IHyperLiquidReadPrecompile_$1171_$",
                                  "typeString": "type(contract IHyperLiquidReadPrecompile)"
                                }
                              },
                              "id": 678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6009:11:1",
                              "memberName": "SpotBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1067,
                              "src": "5982:38:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SpotBalance_$1067_storage_ptr_$",
                                "typeString": "type(struct IHyperLiquidReadPrecompile.SpotBalance storage pointer)"
                              }
                            }
                          ],
                          "id": 679,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5981:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SpotBalance_$1067_storage_ptr_$",
                            "typeString": "type(struct IHyperLiquidReadPrecompile.SpotBalance storage pointer)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_struct$_SpotBalance_$1067_storage_ptr_$",
                            "typeString": "type(struct IHyperLiquidReadPrecompile.SpotBalance storage pointer)"
                          }
                        ],
                        "expression": {
                          "id": 674,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "5962:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5966:6:1",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "5962:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5962:60:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SpotBalance_$1067_memory_ptr",
                        "typeString": "struct IHyperLiquidReadPrecompile.SpotBalance memory"
                      }
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6023:5:1",
                    "memberName": "total",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1062,
                    "src": "5962:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 643,
                  "id": 682,
                  "nodeType": "Return",
                  "src": "5955:73:1"
                }
              ]
            },
            "documentation": {
              "id": 635,
              "nodeType": "StructuredDocumentation",
              "src": "5300:250:1",
              "text": "@notice Internal function to read the balance of the user in the hypercore\n @param _user The address of the user\n @param _tokenId The token id of the hypercore\n @return The balance of the user in the hypercore"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_balanceOfHyperCore",
            "nameLocation": "5564:19:1",
            "parameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 637,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5592:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 684,
                  "src": "5584:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 636,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5584:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5606:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 684,
                  "src": "5599:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5599:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5583:32:1"
            },
            "returnParameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 684,
                  "src": "5639:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5639:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5638:8:1"
            },
            "scope": 873,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 773,
            "nodeType": "FunctionDefinition",
            "src": "6564:1077:1",
            "nodes": [],
            "body": {
              "id": 772,
              "nodeType": "Block",
              "src": "6639:1002:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [693],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 693,
                      "mutability": "mutable",
                      "name": "encodedErrorMessage",
                      "nameLocation": "6800:19:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 772,
                      "src": "6787:32:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 692,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6787:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 697,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 694,
                        "name": "_err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "6822:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6827:19:1",
                      "memberName": "extractErrorPayload",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1559,
                      "src": "6822:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6822:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6787:61:1"
                },
                {
                  "assignments": [700],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 700,
                      "mutability": "mutable",
                      "name": "errMsg",
                      "nameLocation": "6885:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 772,
                      "src": "6858:33:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ErrorMessagePayload_$1004_memory_ptr",
                        "typeString": "struct ErrorMessagePayload"
                      },
                      "typeName": {
                        "id": 699,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 698,
                          "name": "ErrorMessagePayload",
                          "nameLocations": ["6858:19:1"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1004,
                          "src": "6858:19:1"
                        },
                        "referencedDeclaration": 1004,
                        "src": "6858:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ErrorMessagePayload_$1004_storage_ptr",
                          "typeString": "struct ErrorMessagePayload"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 707,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 703,
                        "name": "encodedErrorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "6905:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 704,
                            "name": "ErrorMessagePayload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "6927:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_ErrorMessagePayload_$1004_storage_ptr_$",
                              "typeString": "type(struct ErrorMessagePayload storage pointer)"
                            }
                          }
                        ],
                        "id": 705,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6926:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ErrorMessagePayload_$1004_storage_ptr_$",
                          "typeString": "type(struct ErrorMessagePayload storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_ErrorMessagePayload_$1004_storage_ptr_$",
                          "typeString": "type(struct ErrorMessagePayload storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 701,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6894:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6898:6:1",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6894:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6894:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ErrorMessagePayload_$1004_memory_ptr",
                      "typeString": "struct ErrorMessagePayload memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6858:90:1"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 715,
                        "nodeType": "Block",
                        "src": "7081:2:1",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 716,
                      "nodeType": "TryCatchClause",
                      "src": "7081:2:1"
                    },
                    {
                      "block": {
                        "id": 724,
                        "nodeType": "Block",
                        "src": "7090:85:1",
                        "statements": [
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 718,
                                    "name": "errMsg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 700,
                                    "src": "7127:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ErrorMessagePayload_$1004_memory_ptr",
                                      "typeString": "struct ErrorMessagePayload memory"
                                    }
                                  },
                                  "id": 719,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7134:8:1",
                                  "memberName": "refundTo",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 999,
                                  "src": "7127:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 720,
                                    "name": "errMsg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 700,
                                    "src": "7144:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ErrorMessagePayload_$1004_memory_ptr",
                                      "typeString": "struct ErrorMessagePayload memory"
                                    }
                                  },
                                  "id": 721,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7151:12:1",
                                  "memberName": "refundAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1001,
                                  "src": "7144:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 717,
                                "name": "ErrorERC20_Refund",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 910,
                                "src": "7109:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7109:55:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 723,
                            "nodeType": "EmitStatement",
                            "src": "7104:60:1"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 725,
                      "nodeType": "TryCatchClause",
                      "src": "7084:91:1"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 710,
                          "name": "errMsg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 700,
                          "src": "7043:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ErrorMessagePayload_$1004_memory_ptr",
                            "typeString": "struct ErrorMessagePayload memory"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7050:8:1",
                        "memberName": "refundTo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 999,
                        "src": "7043:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 712,
                          "name": "errMsg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 700,
                          "src": "7060:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ErrorMessagePayload_$1004_memory_ptr",
                            "typeString": "struct ErrorMessagePayload memory"
                          }
                        },
                        "id": 713,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7067:12:1",
                        "memberName": "refundAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1001,
                        "src": "7060:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 708,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "7026:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HyperLiquidComposerCore_$873",
                          "typeString": "contract HyperLiquidComposerCore"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7031:11:1",
                      "memberName": "refundERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 803,
                      "src": "7026:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7026:54:1",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "TryStatement",
                  "src": "7022:153:1"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 735,
                        "nodeType": "Block",
                        "src": "7341:2:1",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 736,
                      "nodeType": "TryCatchClause",
                      "src": "7341:2:1"
                    },
                    {
                      "block": {
                        "id": 766,
                        "nodeType": "Block",
                        "src": "7350:249:1",
                        "statements": [
                          {
                            "assignments": [738, null],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 738,
                                "mutability": "mutable",
                                "name": "success",
                                "nameLocation": "7370:7:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 766,
                                "src": "7365:12:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "typeName": {
                                  "id": 737,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7365:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "visibility": "internal"
                              },
                              null
                            ],
                            "id": 747,
                            "initialValue": {
                              "arguments": [
                                {
                                  "hexValue": "",
                                  "id": 745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7418:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  },
                                  "value": ""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 739,
                                      "name": "tx",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -26,
                                      "src": "7383:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_transaction",
                                        "typeString": "tx"
                                      }
                                    },
                                    "id": 740,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7386:6:1",
                                    "memberName": "origin",
                                    "nodeType": "MemberAccess",
                                    "src": "7383:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 741,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7393:4:1",
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "src": "7383:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": ["value"],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "expression": {
                                      "id": 742,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7406:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 743,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7410:5:1",
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "7406:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "src": "7383:34:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7383:38:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "7364:57:1"
                          },
                          {
                            "condition": {
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "7439:8:1",
                              "subExpression": {
                                "id": 748,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 738,
                                "src": "7440:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 758,
                            "nodeType": "IfStatement",
                            "src": "7435:90:1",
                            "trueBody": {
                              "id": 757,
                              "nodeType": "Block",
                              "src": "7449:76:1",
                              "statements": [
                                {
                                  "eventCall": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 751,
                                          "name": "tx",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -26,
                                          "src": "7489:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_transaction",
                                            "typeString": "tx"
                                          }
                                        },
                                        "id": 752,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7492:6:1",
                                        "memberName": "origin",
                                        "nodeType": "MemberAccess",
                                        "src": "7489:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 753,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "7500:3:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 754,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7504:5:1",
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "src": "7500:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 750,
                                      "name": "ErrorHYPE_Refund",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 916,
                                      "src": "7472:16:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,uint256)"
                                      }
                                    },
                                    "id": 755,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7472:38:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 756,
                                  "nodeType": "EmitStatement",
                                  "src": "7467:43:1"
                                }
                              ]
                            }
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 760,
                                    "name": "errMsg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 700,
                                    "src": "7561:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ErrorMessagePayload_$1004_memory_ptr",
                                      "typeString": "struct ErrorMessagePayload memory"
                                    }
                                  },
                                  "id": 761,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7568:8:1",
                                  "memberName": "refundTo",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 999,
                                  "src": "7561:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 762,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7578:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7582:5:1",
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "7578:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 759,
                                "name": "ErrorHYPE_Refund",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 916,
                                "src": "7544:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7544:44:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 765,
                            "nodeType": "EmitStatement",
                            "src": "7539:49:1"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 767,
                      "nodeType": "TryCatchClause",
                      "src": "7344:255:1"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 732,
                          "name": "errMsg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 700,
                          "src": "7324:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ErrorMessagePayload_$1004_memory_ptr",
                            "typeString": "struct ErrorMessagePayload memory"
                          }
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7331:8:1",
                        "memberName": "refundTo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 999,
                        "src": "7324:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 727,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "7280:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HyperLiquidComposerCore_$873",
                            "typeString": "contract HyperLiquidComposerCore"
                          }
                        },
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7285:18:1",
                        "memberName": "refundNativeTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 854,
                        "src": "7280:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 729,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7312:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7316:5:1",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7312:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "7280:43:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7280:60:1",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 768,
                  "nodeType": "TryStatement",
                  "src": "7276:323:1"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 769,
                      "name": "errMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 700,
                      "src": "7615:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ErrorMessagePayload_$1004_memory_ptr",
                        "typeString": "struct ErrorMessagePayload memory"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7622:12:1",
                    "memberName": "errorMessage",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1003,
                    "src": "7615:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 691,
                  "id": 771,
                  "nodeType": "Return",
                  "src": "7608:26:1"
                }
              ]
            },
            "documentation": {
              "id": 685,
              "nodeType": "StructuredDocumentation",
              "src": "6041:518:1",
              "text": "@notice Refunds the tokens to the sender\n @notice This function is called by the lzCompose function\n @dev The function refunds the oft token or msg.value to the sender if the error message contains a refund amount\n @dev This is applicable in cases when we would normally revert the transaction but can't due to the composer being the intermediate recipient of the minted tokens\n @param _err The error message\n @return errMsg.errorMessage The error message"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeRefund",
            "nameLocation": "6573:14:1",
            "parameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "_err",
                  "nameLocation": "6601:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "6588:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6588:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6587:19:1"
            },
            "returnParameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "6625:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6625:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6624:14:1"
            },
            "scope": 873,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 803,
            "nodeType": "FunctionDefinition",
            "src": "8142:221:1",
            "nodes": [],
            "body": {
              "id": 802,
              "nodeType": "Block",
              "src": "8234:129:1",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 783,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 778,
                        "src": "8248:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8258:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8248:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 786,
                        "name": "_refundAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "8263:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8289:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8281:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 787,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8281:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8281:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8263:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8248:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 801,
                  "nodeType": "IfStatement",
                  "src": "8244:113:1",
                  "trueBody": {
                    "id": 800,
                    "nodeType": "Block",
                    "src": "8293:64:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 796,
                              "name": "_refundAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "8322:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 797,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "8338:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 793,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 460,
                              "src": "8307:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$46722",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8313:8:1",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46689,
                            "src": "8307:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8307:39:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 799,
                        "nodeType": "ExpressionStatement",
                        "src": "8307:39:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 774,
              "nodeType": "StructuredDocumentation",
              "src": "7647:490:1",
              "text": "@notice Refunds the native tokens to the refund address\n @notice This function is called by the refundTokens function\n @dev If the refund address is set to the zero address - it means that the transaction sender is a non-evm address and the receiver is malformed.\n @dev In this case, the tokens are locked in the composer.\n @param _refundAddress The address to refund the native tokens to\n @param _amount The amount of tokens to refund"
            },
            "functionSelector": "ebaeefd6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 781,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 780,
                  "name": "onlyComposer",
                  "nameLocations": ["8221:12:1"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 438,
                  "src": "8221:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "8221:12:1"
              }
            ],
            "name": "refundERC20",
            "nameLocation": "8151:11:1",
            "parameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "_refundAddress",
                  "nameLocation": "8171:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "8163:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8163:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8195:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "8187:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8187:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8162:41:1"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8234:0:1"
            },
            "scope": 873,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 854,
            "nodeType": "FunctionDefinition",
            "src": "9200:674:1",
            "nodes": [],
            "body": {
              "id": 853,
              "nodeType": "Block",
              "src": "9282:592:1",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 811,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9296:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9300:5:1",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "9296:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9308:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9296:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 852,
                  "nodeType": "IfStatement",
                  "src": "9292:576:1",
                  "trueBody": {
                    "id": 851,
                    "nodeType": "Block",
                    "src": "9311:557:1",
                    "statements": [
                      {
                        "assignments": [817],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 817,
                            "mutability": "mutable",
                            "name": "refundAddress",
                            "nameLocation": "9549:13:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 851,
                            "src": "9541:21:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 816,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9541:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@dev If the refund address is the zero address, we refund to the tx.origin\n @dev This is to emulate the behavior on a revert - where the msg.value is returned to the transaction sender",
                        "id": 828,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 818,
                              "name": "_refundAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 806,
                              "src": "9565:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 821,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9591:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9583:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 819,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9583:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9583:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "9565:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 826,
                            "name": "_refundAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "9608:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "9565:57:1",
                          "trueExpression": {
                            "expression": {
                              "id": 824,
                              "name": "tx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -26,
                              "src": "9596:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_transaction",
                                "typeString": "tx"
                              }
                            },
                            "id": 825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9599:6:1",
                            "memberName": "origin",
                            "nodeType": "MemberAccess",
                            "src": "9596:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9541:81:1"
                      },
                      {
                        "assignments": [830, null],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 830,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "9643:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 851,
                            "src": "9638:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 829,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9638:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 838,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9695:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 831,
                                "name": "refundAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 817,
                                "src": "9656:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9670:4:1",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "9656:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": ["value"],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 833,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9683:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9687:5:1",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "9683:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "9656:38:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9656:42:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9637:61:1"
                      },
                      {
                        "condition": {
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9716:8:1",
                          "subExpression": {
                            "id": 839,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "9717:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 850,
                        "nodeType": "IfStatement",
                        "src": "9712:146:1",
                        "trueBody": {
                          "id": 849,
                          "nodeType": "Block",
                          "src": "9726:132:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 844,
                                    "name": "refundAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 817,
                                    "src": "9818:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 845,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "9833:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 846,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9837:5:1",
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "9833:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 841,
                                    "name": "IHyperLiquidComposerErrors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1051,
                                    "src": "9751:26:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IHyperLiquidComposerErrors_$1051_$",
                                      "typeString": "type(contract IHyperLiquidComposerErrors)"
                                    }
                                  },
                                  "id": 843,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9778:39:1",
                                  "memberName": "HyperLiquidComposer_FailedToRefund_HYPE",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1034,
                                  "src": "9751:66:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) pure"
                                  }
                                },
                                "id": 847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9751:92:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 848,
                              "nodeType": "RevertStatement",
                              "src": "9744:99:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [994],
            "documentation": {
              "id": 804,
              "nodeType": "StructuredDocumentation",
              "src": "8369:826:1",
              "text": "@notice Refunds the native tokens to the refund address\n @notice This function is called by the refundTokens function\n @dev It is possible that the refund address is a contract without fallback or receive functions - in that case the transfer fails and tokens will be locked in the contract.\n @dev Since this is an external function - the msg.value can be different to the msg.value sent to the lzCompose function by tx.origin\n @dev It is different in the case of a partial refund where the call is:\n @dev `this.refundNativeTokens{ value: amounts.dust }(_receiver)`\n @dev In this case, the msg.value is the amount of the dust and not the msg.value sent to the lzCompose function by tx.origin\n @param _refundAddress The address to refund the native tokens to"
            },
            "functionSelector": "8483bc00",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 809,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 808,
                  "name": "onlyComposer",
                  "nameLocations": ["9269:12:1"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 438,
                  "src": "9269:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "9269:12:1"
              }
            ],
            "name": "refundNativeTokens",
            "nameLocation": "9209:18:1",
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 806,
                  "mutability": "mutable",
                  "name": "_refundAddress",
                  "nameLocation": "9236:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "9228:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9228:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9227:24:1"
            },
            "returnParameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9282:0:1"
            },
            "scope": 873,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 863,
            "nodeType": "FunctionDefinition",
            "src": "9880:98:1",
            "nodes": [],
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "9946:32:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 860,
                    "name": "oftAsset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 463,
                    "src": "9963:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                      "typeString": "struct IHyperAsset storage ref"
                    }
                  },
                  "functionReturnParameters": 859,
                  "id": 861,
                  "nodeType": "Return",
                  "src": "9956:15:1"
                }
              ]
            },
            "baseFunctions": [983],
            "functionSelector": "2d0e315c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOFTAsset",
            "nameLocation": "9889:11:1",
            "parameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9900:2:1"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "9926:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                    "typeString": "struct IHyperAsset"
                  },
                  "typeName": {
                    "id": 857,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 856,
                      "name": "IHyperAsset",
                      "nameLocations": ["9926:11:1"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 897,
                      "src": "9926:11:1"
                    },
                    "referencedDeclaration": 897,
                    "src": "9926:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IHyperAsset_$897_storage_ptr",
                      "typeString": "struct IHyperAsset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9925:20:1"
            },
            "scope": 873,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 872,
            "nodeType": "FunctionDefinition",
            "src": "9984:100:1",
            "nodes": [],
            "body": {
              "id": 871,
              "nodeType": "Block",
              "src": "10051:33:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 869,
                    "name": "hypeAsset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 466,
                    "src": "10068:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                      "typeString": "struct IHyperAsset storage ref"
                    }
                  },
                  "functionReturnParameters": 868,
                  "id": 870,
                  "nodeType": "Return",
                  "src": "10061:16:1"
                }
              ]
            },
            "baseFunctions": [989],
            "functionSelector": "aae12e46",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHypeAsset",
            "nameLocation": "9993:12:1",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10005:2:1"
            },
            "returnParameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 867,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "10031:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                    "typeString": "struct IHyperAsset"
                  },
                  "typeName": {
                    "id": 866,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 865,
                      "name": "IHyperAsset",
                      "nameLocations": ["10031:11:1"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 897,
                      "src": "10031:11:1"
                    },
                    "referencedDeclaration": 897,
                    "src": "10031:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IHyperAsset_$897_storage_ptr",
                      "typeString": "struct IHyperAsset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10030:20:1"
            },
            "scope": 873,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 408,
              "name": "IHyperLiquidComposerCore",
              "nameLocations": ["839:24:1"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 995,
              "src": "839:24:1"
            },
            "id": 409,
            "nodeType": "InheritanceSpecifier",
            "src": "839:24:1"
          }
        ],
        "canonicalName": "HyperLiquidComposerCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [873, 995],
        "name": "HyperLiquidComposerCore",
        "nameLocation": "812:23:1",
        "scope": 874,
        "usedErrors": [1008, 1024, 1034, 1050],
        "usedEvents": [910, 916, 920, 1328]
      }
    ],
    "license": "MIT"
  },
  "id": 1
}
