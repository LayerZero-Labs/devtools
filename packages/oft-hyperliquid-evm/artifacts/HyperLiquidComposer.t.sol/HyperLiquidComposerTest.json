{
  "abi": [
    {
      "type": "function",
      "name": "ALICE",
      "inputs": [],
      "outputs": [
        {
          "name": "assetBridgeAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "coreIndexId", "type": "uint64", "internalType": "uint64" },
        { "name": "decimalDiff", "type": "uint64", "internalType": "uint64" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "AMOUNT_TO_FUND",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "AMOUNT_TO_SEND",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "DST_EID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "DUST",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "HLP_PRECOMPILE_WRITE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "HL_LZ_ENDPOINT_V2",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "HYPE",
      "inputs": [],
      "outputs": [
        {
          "name": "assetBridgeAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "coreIndexId", "type": "uint64", "internalType": "uint64" },
        { "name": "decimalDiff", "type": "uint64", "internalType": "uint64" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "IS_TEST",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "SRC_EID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeArtifacts",
      "inputs": [],
      "outputs": [
        {
          "name": "excludedArtifacts_",
          "type": "string[]",
          "internalType": "string[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeContracts",
      "inputs": [],
      "outputs": [
        {
          "name": "excludedContracts_",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeSelectors",
      "inputs": [],
      "outputs": [
        {
          "name": "excludedSelectors_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            {
              "name": "selectors",
              "type": "bytes4[]",
              "internalType": "bytes4[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeSenders",
      "inputs": [],
      "outputs": [
        {
          "name": "excludedSenders_",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "failed",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hyperLiquidComposer",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract HyperLiquidComposer"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "oft",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract OFTMock" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setUp",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "targetArtifactSelectors",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
          "components": [
            { "name": "artifact", "type": "string", "internalType": "string" },
            {
              "name": "selectors",
              "type": "bytes4[]",
              "internalType": "bytes4[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetArtifacts",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedArtifacts_",
          "type": "string[]",
          "internalType": "string[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetContracts",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedContracts_",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetInterfaces",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedInterfaces_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            {
              "name": "artifacts",
              "type": "string[]",
              "internalType": "string[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetSelectors",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedSelectors_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            {
              "name": "selectors",
              "type": "bytes4[]",
              "internalType": "bytes4[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetSenders",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedSenders_",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "test_SendSpot_and_FundAddress",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "test_SendSpot_no_FundAddress",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "test_deployment",
      "inputs": [],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "test_getBalanceOfHyperCore",
      "inputs": [
        { "name": "_balance", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "userA",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "userB",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "Received",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SlotFound",
      "inputs": [
        {
          "name": "who",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "fsig",
          "type": "bytes4",
          "indexed": false,
          "internalType": "bytes4"
        },
        {
          "name": "keysHash",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "slot",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SpotSend",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "destination",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        },
        {
          "name": "_wei",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WARNING_UninitedSlot",
      "inputs": [
        {
          "name": "who",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "slot",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log",
      "inputs": [
        {
          "name": "",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_address",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_array",
      "inputs": [
        {
          "name": "val",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_array",
      "inputs": [
        {
          "name": "val",
          "type": "int256[]",
          "indexed": false,
          "internalType": "int256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_array",
      "inputs": [
        {
          "name": "val",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_bytes",
      "inputs": [
        {
          "name": "",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_bytes32",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_int",
      "inputs": [
        {
          "name": "",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_address",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_array",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_array",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "int256[]",
          "indexed": false,
          "internalType": "int256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_array",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_bytes",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_bytes32",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_decimal_int",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "decimals",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_decimal_uint",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "decimals",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_int",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_string",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_uint",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_string",
      "inputs": [
        {
          "name": "",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_uint",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "logs",
      "inputs": [
        {
          "name": "",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x60806040526001600c5f6101000a81548160ff0219169083151502179055506001601f5f6101000a81548160ff0219169083151502179055506200007e6040518060400160405280600581526020017f75736572410000000000000000000000000000000000000000000000000000008152506200015560201b60201c565b60265f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001036040518060400160405280600581526020017f75736572420000000000000000000000000000000000000000000000000000008152506200015560201b60201c565b60275f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200014e575f80fd5b50620004cd565b5f62000167826200017160201b60201c565b5080915050919050565b5f808260405160200162000186919062000348565b604051602081830303815290604052805190602001205f1c90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663ffa18649826040518263ffffffff1660e01b8152600401620001fd91906200037a565b602060405180830381865afa15801562000219573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200023f9190620003fa565b91507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663c657c71883856040518363ffffffff1660e01b8152600401620002a09291906200049b565b5f604051808303815f87803b158015620002b8575f80fd5b505af1158015620002cb573d5f803e3d5ffd5b50505050915091565b5f81519050919050565b5f81905092915050565b5f5b8381101562000307578082015181840152602081019050620002ea565b5f8484015250505050565b5f6200031e82620002d4565b6200032a8185620002de565b93506200033c818560208601620002e8565b80840191505092915050565b5f62000355828462000312565b915081905092915050565b5f819050919050565b620003748162000360565b82525050565b5f6020820190506200038f5f83018462000369565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620003c48262000399565b9050919050565b620003d681620003b8565b8114620003e1575f80fd5b50565b5f81519050620003f481620003cb565b92915050565b5f6020828403121562000412576200041162000395565b5b5f6200042184828501620003e4565b91505092915050565b6200043581620003b8565b82525050565b5f82825260208201905092915050565b5f601f19601f8301169050919050565b5f6200046782620002d4565b6200047381856200043b565b935062000485818560208601620002e8565b62000490816200044b565b840191505092915050565b5f604082019050620004b05f8301856200042a565b8181036020830152620004c481846200045b565b90509392505050565b6201097980620004dc5f395ff3fe608060405234801562000010575f80fd5b506004361062000212575f3560e01c80639b5215f61162000127578063c33d080d11620000af578063deb22e9a1162000079578063deb22e9a146200056c578063e20c9f71146200058e578063e93bfee614620005b0578063fa7626d414620005bc5762000212565b8063c33d080d14620004e2578063c9279a741462000506578063cb1a295f1462000528578063dd850075146200054a5762000212565b8063b5508aa911620000f1578063b5508aa9146200045a578063ba414fa6146200047c578063ba872679146200049e578063bb641b3e14620004c05762000212565b80639b5215f614620003e8578063a09e7430146200040a578063a985a8ad146200042c578063b0464fdc14620004385762000212565b80633f7286f411620001ab57806376e86e72116200017557806376e86e72146200035e57806385226c8114620003825780639127ace214620003a4578063916a17c614620003c65762000212565b80633f7286f414620002d85780634e0cd79914620002fa57806366d9a9a0146200031c57806375258814146200033e5762000212565b80631ed7831c11620001ed5780631ed7831c14620002505780632ade38801462000272578063318f405a14620002945780633e5e3c2314620002b65762000212565b80630a9254e414620002165780631015594a1462000222578063176e619e146200022e575b5f80fd5b62000220620005de565b005b6200022c62000e00565b005b6200023862001030565b60405162000247919062005305565b60405180910390f35b6200025a62001045565b60405162000269919062005419565b60405180910390f35b6200027c620010d2565b6040516200028b91906200569f565b60405180910390f35b6200029e62001262565b604051620002ad9190620056d2565b60405180910390f35b620002c06200127a565b604051620002cf919062005419565b60405180910390f35b620002e262001307565b604051620002f1919062005419565b60405180910390f35b6200030462001394565b60405162000313919062005711565b60405180910390f35b6200032662001399565b6040516200033591906200592c565b60405180910390f35b6200035c60048036038101906200035691906200598e565b62001527565b005b62000368620016d4565b6040516200037993929190620059be565b60405180910390f35b6200038c62001730565b6040516200039b919062005a88565b60405180910390f35b620003ae6200180e565b604051620003bd919062005711565b60405180910390f35b620003d062001817565b604051620003df919062005bb1565b60405180910390f35b620003f262001962565b60405162000401919062005c3a565b60405180910390f35b6200041462001988565b60405162000423919062005c8c565b60405180910390f35b62000436620019ad565b005b620004426200239e565b60405162000451919062005bb1565b60405180910390f35b62000464620024e9565b60405162000473919062005a88565b60405180910390f35b62000486620025c7565b60405162000495919062005cc3565b60405180910390f35b620004a8620026e2565b604051620004b79190620056d2565b60405180910390f35b620004ca620026e8565b604051620004d9919062005711565b60405180910390f35b620004ec620026f4565b604051620004fd93929190620059be565b60405180910390f35b6200051062002750565b6040516200051f919062005305565b60405180910390f35b6200053262002756565b604051620005419190620056d2565b60405180910390f35b620005546200277b565b604051620005639190620056d2565b60405180910390f35b6200057662002793565b604051620005859190620056d2565b60405180910390f35b62000598620027b8565b604051620005a7919062005419565b60405180910390f35b620005ba62002845565b005b620005c662003353565b604051620005d5919062005cc3565b60405180910390f35b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663986800346040518163ffffffff1660e01b8152600401620006399062005d62565b6020604051808303815f875af115801562000656573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200067c919062005dba565b506040518060600160405280620006956104cf62003365565b73ffffffffffffffffffffffffffffffffffffffff1681526020016104cf67ffffffffffffffff168152602001600c67ffffffffffffffff1681525060205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050604051806060016040528073222222222222222222222222222222222222222273ffffffffffffffffffffffffffffffffffffffff16815260200161045167ffffffffffffffff168152602001600867ffffffffffffffff1681525060225f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663b4d6c782610801604051620008c6906200521e565b604051809103905ff080158015620008e0573d5f803e3d5ffd5b5073ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181525f908060200190933c6040518363ffffffff1660e01b81526004016200093192919062005e44565b5f604051808303815f87803b15801562000949575f80fd5b505af11580156200095c573d5f803e3d5ffd5b5050505061080173ffffffffffffffffffffffffffffffffffffffff1663312f619f60205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660205f0160149054906101000a900467ffffffffffffffff1667ffffffffffffffff6040518463ffffffff1660e01b8152600401620009e493929190620059be565b5f604051808303815f87803b158015620009fc575f80fd5b505af115801562000a0f573d5f803e3d5ffd5b5050505061080173ffffffffffffffffffffffffffffffffffffffff1663312f619f60225f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660225f0160149054906101000a900467ffffffffffffffff1667ffffffffffffffff6040518463ffffffff1660e01b815260040162000a9793929190620059be565b5f604051808303815f87803b15801562000aaf575f80fd5b505af115801562000ac2573d5f803e3d5ffd5b5050505073f9e1815f151024bde4b7c10bac10e8ba9f6b53e13360405162000aea906200522c565b62000af792919062005ec4565b604051809103905ff08015801562000b11573d5f803e3d5ffd5b50602460046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073f9e1815f151024bde4b7c10bac10e8ba9f6b53e1602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660205f0160149054906101000a900467ffffffffffffffff1660206001015f9054906101000a900467ffffffffffffffff1660405162000bca906200523a565b62000bd9949392919062005f19565b604051809103905ff08015801562000bf3573d5f803e3d5ffd5b5060255f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635e280f116040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c9f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000cc5919062005fa6565b73ffffffffffffffffffffffffffffffffffffffff1663416ecebf6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000d0e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000d34919062006005565b60245f6101000a81548163ffffffff021916908363ffffffff1602179055507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663c88a5e6d73f9e1815f151024bde4b7c10bac10e8ba9f6b53e168056bc75e2d631000006040518363ffffffff1660e01b815260040162000dcf92919062006076565b5f604051808303815f87803b15801562000de7575f80fd5b505af115801562000dfa573d5f803e3d5ffd5b50505050565b5f60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aae12e466040518163ffffffff1660e01b8152600401606060405180830381865afa15801562000e6c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000e929190620061d7565b905062000eb7815f0151732222222222222222222222222222222222222222620033a5565b62000ed3816020015167ffffffffffffffff1661045162003436565b62000eee816040015167ffffffffffffffff16600a62003436565b5f60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632d0e315c6040518163ffffffff1660e01b8152600401606060405180830381865afa15801562000f5a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000f809190620061d7565b905062000fb4815f015160205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620033a5565b62000ff0816020015167ffffffffffffffff1660205f0160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1662003436565b6200102c816040015167ffffffffffffffff1660206001015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1662003436565b5050565b60245f9054906101000a900463ffffffff1681565b60606016805480602002602001604051908101604052809291908181526020018280548015620010c857602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200107e575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020015f905b8282101562001259578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020015f905b8282101562001241578382905f5260205f20018054620011af9062006234565b80601f0160208091040260200160405190810160405280929190818152602001828054620011dd9062006234565b80156200122c5780601f1062001202576101008083540402835291602001916200122c565b820191905f5260205f20905b8154815290600101906020018083116200120e57829003601f168201915b5050505050815260200190600101906200118f565b505050508152505081526020019060010190620010f5565b50505050905090565b73f9e1815f151024bde4b7c10bac10e8ba9f6b53e181565b60606018805480602002602001604051908101604052809291908181526020018280548015620012fd57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620012b3575b5050505050905090565b606060178054806020026020016040519081016040528092919081815260200182805480156200138a57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162001340575b5050505050905090565b600181565b6060601b805480602002602001604051908101604052809291908181526020015f905b828210156200151e578382905f5260205f2090600202016040518060400160405290815f82018054620013ef9062006234565b80601f01602080910402602001604051908101604052809291908181526020018280546200141d9062006234565b80156200146c5780601f1062001442576101008083540402835291602001916200146c565b820191905f5260205f20905b8154815290600101906020018083116200144e57829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200150557602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620014b15790505b50505050508152505081526020019060010190620013bc565b50505050905090565b61080173ffffffffffffffffffffffffffffffffffffffff1663312f619f60225f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660225f0160149054906101000a900467ffffffffffffffff16846040518463ffffffff1660e01b8152600401620015a393929190620059be565b5f604051808303815f87803b158015620015bb575f80fd5b505af1158015620015ce573d5f803e3d5ffd5b505050505f60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381e8dcb460225f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660225f0160149054906101000a900467ffffffffffffffff166040518363ffffffff1660e01b81526004016200166c92919062006268565b602060405180830381865afa15801562001688573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620016ae919062006293565b9050620016d08167ffffffffffffffff168367ffffffffffffffff1662003436565b5050565b6022805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b6060601a805480602002602001604051908101604052809291908181526020015f905b8282101562001805578382905f5260205f20018054620017739062006234565b80601f0160208091040260200160405190810160405280929190818152602001828054620017a19062006234565b8015620017f05780601f10620017c657610100808354040283529160200191620017f0565b820191905f5260205f20905b815481529060010190602001808311620017d257829003601f168201915b50505050508152602001906001019062001753565b50505050905090565b64174876e80081565b6060601d805480602002602001604051908101604052809291908181526020015f905b8282101562001959578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054806020026020016040519081016040528092919081815260200182805480156200194057602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620018ec5790505b505050505081525050815260200190600101906200183a565b50505050905090565b602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051602001620019e2919062006310565b60405160208183030381529060405290505f62001a725f619ce16001670de0b6b3a764000062001a13919062006359565b67ffffffffffffffff1662001a4960265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620034c7565b8660405160200162001a5d92919062006408565b604051602081830303815290604052620034e8565b905062001ae4602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001670de0b6b3a764000062001ad4919062006359565b67ffffffffffffffff166200351c565b62001bcf602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162001b669190620056d2565b602060405180830381865afa15801562001b82573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001ba8919062005dba565b6001670de0b6b3a764000062001bbf919062006359565b67ffffffffffffffff1662003436565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162001c4e9190620056d2565b5f604051808303815f87803b15801562001c66575f80fd5b505af115801562001c79573d5f803e3d5ffd5b5050505060205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef670de0b6b3a764000060405162001d2891906200646b565b60405180910390a37f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd8500756040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001dd9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001dff919062006486565b6040518263ffffffff1660e01b815260040162001e1d9190620056d2565b5f604051808303815f87803b15801562001e35575f80fd5b505af115801562001e48573d5f803e3d5ffd5b5050505060275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f09f4a089fd53b0b2cd536bc6d609a82b696295ebdcb91c7e216ad11c5223f1d960205f0160149054906101000a900467ffffffffffffffff1660206001015f9054906101000a900467ffffffffffffffff16600a62001f1d919062006606565b670de0b6b3a764000067ffffffffffffffff1662001f3c919062006683565b60405162001f4c929190620066ba565b60405180910390a35f602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162001fd39190620056d2565b602060405180830381865afa15801562001fef573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002015919062005dba565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166306447d5673f9e1815f151024bde4b7c10bac10e8ba9f6b53e16040518263ffffffff1660e01b8152600401620020889190620056d2565b5f604051808303815f87803b158015620020a0575f80fd5b505af1158015620020b3573d5f803e3d5ffd5b5050505060255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0a10260602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f801b85336040518563ffffffff1660e01b81526004016200213d94939291906200671d565b5f604051808303815f87803b15801562002155575f80fd5b505af115801562002168573d5f803e3d5ffd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b158015620021d4575f80fd5b505af1158015620021e7573d5f803e3d5ffd5b50505050620022b6602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016200226d9190620056d2565b602060405180830381865afa15801562002289573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620022af919062005dba565b5f62003436565b62002399602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401620023389190620056d2565b602060405180830381865afa15801562002354573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200237a919062005dba565b600167ffffffffffffffff168362002393919062006784565b62003436565b505050565b6060601c805480602002602001604051908101604052809291908181526020015f905b82821015620024e0578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020018280548015620024c757602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620024735790505b50505050508152505081526020019060010190620023c1565b50505050905090565b60606019805480602002602001604051908101604052809291908181526020015f905b82821015620025be578382905f5260205f200180546200252c9062006234565b80601f01602080910402602001604051908101604052809291908181526020018280546200255a9062006234565b8015620025a95780601f106200257f57610100808354040283529160200191620025a9565b820191905f5260205f20905b8154815290600101906020018083116200258b57829003601f168201915b5050505050815260200190600101906200250c565b50505050905090565b5f60085f9054906101000a900460ff1615620025f45760085f9054906101000a900460ff169050620026df565b5f801b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d707f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c7f6661696c656400000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040162002698929190620067be565b602060405180830381865afa158015620026b4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620026da919062006818565b141590505b90565b61080181565b670de0b6b3a764000081565b6020805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b619ce181565b60275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73333333333333333333333333333333333333333381565b60265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060158054806020026020016040519081016040528092919081815260200182805480156200283b57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620027f1575b5050505050905090565b5f60275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516020016200287a919062006310565b60405160208183030381529060405290505f620028fc5f619ce1670de0b6b3a764000067ffffffffffffffff16620028d360265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620034c7565b86604051602001620028e792919062006408565b604051602081830303815290604052620034e8565b905062002960602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a764000067ffffffffffffffff166200351c565b62002a3d602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401620029e29190620056d2565b602060405180830381865afa158015620029fe573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002a24919062005dba565b670de0b6b3a764000067ffffffffffffffff1662003436565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aae12e466040518163ffffffff1660e01b8152600401606060405180830381865afa15801562002ae6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002b0c9190620061d7565b5f01516040518263ffffffff1660e01b815260040162002b2d9190620056d2565b5f604051808303815f87803b15801562002b45575f80fd5b505af115801562002b58573d5f803e3d5ffd5b5050505060255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587464174876e80060405162002bca91906200646b565b60405180910390a27f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162002c519190620056d2565b5f604051808303815f87803b15801562002c69575f80fd5b505af115801562002c7c573d5f803e3d5ffd5b5050505060205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef670de0b6b3a764000060405162002d2b91906200646b565b60405180910390a37f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd8500756040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002ddc573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002e02919062006486565b6040518263ffffffff1660e01b815260040162002e209190620056d2565b5f604051808303815f87803b15801562002e38575f80fd5b505af115801562002e4b573d5f803e3d5ffd5b5050505060275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f09f4a089fd53b0b2cd536bc6d609a82b696295ebdcb91c7e216ad11c5223f1d960205f0160149054906101000a900467ffffffffffffffff1660206001015f9054906101000a900467ffffffffffffffff16600a62002f20919062006606565b670de0b6b3a764000067ffffffffffffffff1662002f3f919062006683565b60405162002f4f929190620066ba565b60405180910390a35f60225f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163190505f60275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163190507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166306447d5673f9e1815f151024bde4b7c10bac10e8ba9f6b53e16040518263ffffffff1660e01b8152600401620030429190620056d2565b5f604051808303815f87803b1580156200305a575f80fd5b505af11580156200306d573d5f803e3d5ffd5b5050505060255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0a10260600164174876e800620030c2919062006359565b67ffffffffffffffff16602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f801b87336040518663ffffffff1660e01b81526004016200311594939291906200671d565b5f604051808303818588803b1580156200312d575f80fd5b505af115801562003140573d5f803e3d5ffd5b50505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b158015620031ad575f80fd5b505af1158015620031c0573d5f803e3d5ffd5b505050506200328f602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401620032469190620056d2565b602060405180830381865afa15801562003262573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062003288919062005dba565b5f62003436565b620032f160225f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163164174876e80067ffffffffffffffff1684620032eb919062006784565b62003436565b6200334d60275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631600167ffffffffffffffff168362003347919062006784565b62003436565b50505050565b601f5f9054906101000a900460ff1681565b5f8173200000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166200339e919062006784565b9050919050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663515361f683836040518363ffffffff1660e01b81526004016200340492919062006848565b5f6040518083038186803b1580156200341b575f80fd5b505afa1580156200342e573d5f803e3d5ffd5b505050505050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166398296c5483836040518363ffffffff1660e01b81526004016200349592919062006884565b5f6040518083038186803b158015620034ac575f80fd5b505afa158015620034bf573d5f803e3d5ffd5b505050505050565b5f8173ffffffffffffffffffffffffffffffffffffffff165f1b9050919050565b60608484848460405160200162003503949392919062006947565b6040516020818303038152906040529050949350505050565b6200352a8383835f6200352f565b505050565b5f8473ffffffffffffffffffffffffffffffffffffffff166370a08231856040516024016200355f9190620056d2565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620035af919062006998565b5f60405180830381855afa9150503d805f8114620035e9576040519150601f19603f3d011682016040523d82523d5f602084013e620035ee565b606091505b509150505f8180602001905181019062003609919062005dba565b905062003664846200365587620036466370a0823160e01b620036378c600d620037d490919063ffffffff16565b620037e990919063ffffffff16565b620037fe90919063ffffffff16565b6200381390919063ffffffff16565b8215620037cc575f8673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040516024016040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620036de919062006998565b5f60405180830381855afa9150503d805f811462003718576040519150601f19603f3d011682016040523d82523d5f602084013e6200371d565b606091505b509150505f8180602001905181019062003738919062005dba565b90508286101562003766578583620037519190620069b0565b816200375e9190620069b0565b905062003784565b8286620037749190620069b0565b8162003781919062006784565b90505b620037c981620037ba6318160ddd60e01b620037ab8c600d620037d490919063ffffffff16565b620037e990919063ffffffff16565b6200381390919063ffffffff16565b50505b505050505050565b5f620037e1838362003825565b905092915050565b5f620037f6838362003871565b905092915050565b5f6200380b83836200389a565b905092915050565b6200382182825f1b620038e4565b5050565b5f81836004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082905092915050565b5f81836002015f6101000a81548163ffffffff021916908360e01c021790555082905092915050565b5f826001018273ffffffffffffffffffffffffffffffffffffffff165f1b908060018154018082558091505060019003905f5260205f20015f909190919091505582905092915050565b5f826004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f836002015f9054906101000a900460e01b90505f846003015490505f620039338662003eae565b9050855f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f8284604051602001620039d6929190620069ea565b6040516020818303038152906040528051906020012081526020019081526020015f206003015f9054906101000a900460ff1662003a1c5762003a1a865f62003fca565b505b5f865f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f838560405160200162003abe929190620069ea565b6040516020818303038152906040528051906020012081526020019081526020015f2090505f8160020154826001015462003afa919062006784565b111562003c46575f8160020154826001015462003b18919062006784565b61010062003b279190620069b0565b600262003b35919062006a15565b905080875f1c107f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff16636900a3ae836040518263ffffffff1660e01b815260040162003b99919062006a65565b5f60405180830381865afa15801562003bb4573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019062003bde919062006b39565b60405160200162003bf0919062006c62565b6040516020818303038152906040529062003c43576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162003c3a919062006cc7565b60405180910390fd5b50505b5f7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d7087845f01545f1b6040518363ffffffff1660e01b815260040162003cab929190620067be565b602060405180830381865afa15801562003cc7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062003ced919062006818565b90505f62003d0882895f1c8560010154866002015462003fe2565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb88855f01545f1b846040518463ffffffff1660e01b815260040162003d709392919062006ce9565b5f604051808303815f87803b15801562003d88575f80fd5b505af115801562003d9b573d5f803e3d5ffd5b505050505f8062003dac8b62004005565b9150915081158062003dbe5750898114155b1562003e96577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb8a875f01545f1b876040518463ffffffff1660e01b815260040162003e2a9392919062006ce9565b5f604051808303815f87803b15801562003e42575f80fd5b505af115801562003e55573d5f803e3d5ffd5b505050506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162003e8d9062006d98565b60405180910390fd5b62003ea18b62004108565b5050505050505050505050565b60605f82600701805462003ec29062006234565b90500362003f2f5762003f278260010180548060200260200160405190810160405280929190818152602001828054801562003f1c57602002820191905f5260205f20905b81548152602001906001019080831162003f07575b505050505062004116565b905062003fc5565b81600701805462003f409062006234565b80601f016020809104026020016040519081016040528092919081815260200182805462003f6e9062006234565b801562003fbd5780601f1062003f935761010080835404028352916020019162003fbd565b820191905f5260205f20905b81548152906001019060200180831162003f9f57829003601f168201915b505050505090505b919050565b5f62003fd78383620041cc565b5f0154905092915050565b5f8184901b62003ff3848462004b38565b19865f1c16175f1b9050949350505050565b5f805f836002015f9054906101000a900460e01b620040248562003eae565b6040516020016200403792919062006ddc565b60405160208183030381529060405290505f80856004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168360405162004094919062006998565b5f60405180830381855afa9150503d805f8114620040ce576040519150601f19603f3d011682016040523d82523d5f602084013e620040d3565b606091505b50915091505f620040f78288600301546020620040f1919062006e07565b62004b4f565b905082819550955050505050915091565b620041138162004bf9565b50565b60605f6020835162004129919062006e07565b67ffffffffffffffff811115620041455762004144620060a5565b5b6040519080825280601f01601f191660200182016040528015620041785781602001600182028036833780820191505090505b5090505f5b8351811015620041c2575f8482815181106200419e576200419d62006e51565b5b6020026020010151905080826020026020018401525080806001019150506200417d565b5080915050919050565b5f80836004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f846002015f9054906101000a900460e01b90505f856003015490505f6200421c8762003eae565b9050865f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f8284604051602001620042bf929190620069ea565b6040516020818303038152906040528051906020012081526020019081526020015f206003015f9054906101000a900460ff1615620043db5785156200430b576200430a8762004bf9565b5b865f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f8284604051602001620043ac929190620069ea565b6040516020818303038152906040528051906020012081526020019081526020015f2094505050505062004b32565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663266cf1096040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562004443575f80fd5b505af115801562004456573d5f803e3d5ffd5b505050505f620044668862004005565b9150505f7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166365bc9481876040518263ffffffff1660e01b8152600401620044c79190620056d2565b5f604051808303815f875af1158015620044e3573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906200450d919062006f55565b5090505f81510362004556576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200454d906200704c565b60405180910390fd5b5f815190505b5f8162004569906200706c565b915081106200493b575f7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d7089858581518110620045c857620045c762006e51565b5b60200260200101516040518363ffffffff1660e01b8152600401620045ef929190620067be565b602060405180830381865afa1580156200460b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062004631919062006818565b90505f801b810362004698577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58884848151811062004675576200467462006e51565b5b60200260200101515f1c6040516200468f92919062007098565b60405180910390a15b620046c18b848481518110620046b357620046b262006e51565b5b602002602001015162004c74565b620046cd575062004935565b5f805f80915091508c6006015f9054906101000a900460ff161562004734575f620047168e87878151811062004708576200470762006e51565b5b602002602001015162004f17565b8094508195508293505050508062004732575050505062004935565b505b5f8162004742848462004b38565b855f1c16901c905080875f1c146200475e575050505062004935565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162004796929190620069ea565b60405160208183030381529060405280519060200120898981518110620047c257620047c162006e51565b5b60200260200101515f1c604051620047de9493929190620070d4565b60405180910390a1604051806080016040528087878151811062004807576200480662006e51565b5b60200260200101515f1c8152602001848152602001838152602001600115158152508e5f015f8d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8c7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f8a8c604051602001620048ca929190620069ea565b6040516020818303038152906040528051906020012081526020019081526020015f205f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548160ff021916908315150217905550905050505050506200493b565b6200455c565b50885f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f8486604051602001620049dd929190620069ea565b6040516020818303038152906040528051906020012081526020019081526020015f206003015f9054906101000a900460ff1662004a52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162004a499062007193565b60405180910390fd5b871562004a655762004a648962004bf9565b5b885f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f848660405160200162004b06929190620069ea565b6040516020818303038152906040528051906020012081526020019081526020015f2096505050505050505b92915050565b5f600180848401610100031b03821b905092915050565b5f805f602085511162004b6457845162004b67565b60205b90505f5b8181101562004bed5760088162004b83919062006e07565b60ff60f81b87838862004b97919062006784565b8151811062004bab5762004baa62006e51565b5b602001015160f81c60f81b167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c83179250808060010191505062004b6b565b50819250505092915050565b806004015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055806002015f6101000a81549063ffffffff0219169055806001015f62004c46919062005248565b806003015f9055806006015f6101000a81549060ff0219169055806007015f62004c71919062005268565b50565b5f807f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d70856004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b815260040162004cf8929190620067be565b602060405180830381865afa15801562004d14573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062004d3a919062006818565b90505f8062004d498662004005565b915091505f805f1b821462004d61575f801b62004d85565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5f1b5b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb886004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688846040518463ffffffff1660e01b815260040162004e0b9392919062006ce9565b5f604051808303815f87803b15801562004e23575f80fd5b505af115801562004e36573d5f803e3d5ffd5b505050505f62004e468862004005565b9150507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb896004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1689886040518463ffffffff1660e01b815260040162004ecd9392919062006ce9565b5f604051808303815f87803b15801562004ee5575f80fd5b505af115801562004ef8573d5f803e3d5ffd5b5050505083801562004f0a5750808314155b9550505050505092915050565b5f805f807f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d70876004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876040518363ffffffff1660e01b815260040162004f9d929190620067be565b602060405180830381865afa15801562004fb9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062004fdf919062006818565b90505f8062004ff188886001620050da565b915091505f80620050048a8a5f620050da565b915091507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb8b6004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b886040518463ffffffff1660e01b81526004016200508c9392919062006ce9565b5f604051808303815f87803b158015620050a4575f80fd5b505af1158015620050b7573d5f803e3d5ffd5b50505050838015620050c65750815b838297509750975050505050509250925092565b5f805f5b6101008110156200520e575f84620050fb57816001901b6200510f565b8160ff6200510a9190620069b0565b6001901b5b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb886004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688845f1b6040518463ffffffff1660e01b8152600401620051979392919062006ce9565b5f604051808303815f87803b158015620051af575f80fd5b505af1158015620051c2573d5f803e3d5ffd5b505050505f80620051d38962004005565b91509150818015620051e657505f815f1c115b15620051fd57600184955095505050505062005216565b5050508080600101915050620050de565b505f80915091505b935093915050565b6104cd80620071b483390190565b615cbe806200768183390190565b613605806200d33f83390190565b5080545f8255905f5260205f2090810190620052659190620052ab565b50565b508054620052769062006234565b5f825580601f10620052895750620052a8565b601f0160209004905f5260205f2090810190620052a79190620052c8565b5b50565b5b80821115620052c4575f815f905550600101620052ac565b5090565b5b80821115620052e1575f815f905550600101620052c9565b5090565b5f63ffffffff82169050919050565b620052ff81620052e5565b82525050565b5f6020820190506200531a5f830184620052f4565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620053748262005349565b9050919050565b620053868162005368565b82525050565b5f6200539983836200537b565b60208301905092915050565b5f602082019050919050565b5f620053bd8262005320565b620053c981856200532a565b9350620053d6836200533a565b805f5b838110156200540c578151620053f088826200538c565b9750620053fd83620053a5565b925050600181019050620053d9565b5085935050505092915050565b5f6020820190508181035f830152620054338184620053b1565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015620054c6578082015181840152602081019050620054a9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f620054ed826200548d565b620054f9818562005497565b93506200550b818560208601620054a7565b6200551681620054d1565b840191505092915050565b5f6200552e8383620054e1565b905092915050565b5f602082019050919050565b5f6200554e8262005464565b6200555a81856200546e565b9350836020820285016200556e856200547e565b805f5b85811015620055af57848403895281516200558d858262005521565b94506200559a8362005536565b925060208a0199505060018101905062005571565b50829750879550505050505092915050565b5f604083015f830151620055d85f8601826200537b565b5060208301518482036020860152620055f2828262005542565b9150508091505092915050565b5f6200560c8383620055c1565b905092915050565b5f602082019050919050565b5f6200562c826200543b565b62005638818562005445565b9350836020820285016200564c8562005455565b805f5b858110156200568d57848403895281516200566b8582620055ff565b9450620056788362005614565b925060208a019950506001810190506200564f565b50829750879550505050505092915050565b5f6020820190508181035f830152620056b9818462005620565b905092915050565b620056cc8162005368565b82525050565b5f602082019050620056e75f830184620056c1565b92915050565b5f67ffffffffffffffff82169050919050565b6200570b81620056ed565b82525050565b5f602082019050620057265f83018462005700565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b620057b4816200577e565b82525050565b5f620057c78383620057a9565b60208301905092915050565b5f602082019050919050565b5f620057eb8262005755565b620057f781856200575f565b935062005804836200576f565b805f5b838110156200583a5781516200581e8882620057ba565b97506200582b83620057d3565b92505060018101905062005807565b5085935050505092915050565b5f604083015f8301518482035f860152620058638282620054e1565b915050602083015184820360208601526200587f8282620057df565b9150508091505092915050565b5f62005899838362005847565b905092915050565b5f602082019050919050565b5f620058b9826200572c565b620058c5818562005736565b935083602082028501620058d98562005746565b805f5b858110156200591a5784840389528151620058f885826200588c565b94506200590583620058a1565b925060208a01995050600181019050620058dc565b50829750879550505050505092915050565b5f6020820190508181035f830152620059468184620058ad565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b6200596a81620056ed565b811462005975575f80fd5b50565b5f8135905062005988816200595f565b92915050565b5f60208284031215620059a657620059a562005957565b5b5f620059b58482850162005978565b91505092915050565b5f606082019050620059d35f830186620056c1565b620059e2602083018562005700565b620059f1604083018462005700565b949350505050565b5f82825260208201905092915050565b5f62005a158262005464565b62005a218185620059f9565b93508360208202850162005a35856200547e565b805f5b8581101562005a76578484038952815162005a54858262005521565b945062005a618362005536565b925060208a0199505060018101905062005a38565b50829750879550505050505092915050565b5f6020820190508181035f83015262005aa2818462005a09565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f604083015f83015162005aea5f8601826200537b565b506020830151848203602086015262005b048282620057df565b9150508091505092915050565b5f62005b1e838362005ad3565b905092915050565b5f602082019050919050565b5f62005b3e8262005aaa565b62005b4a818562005ab4565b93508360208202850162005b5e8562005ac4565b805f5b8581101562005b9f578484038952815162005b7d858262005b11565b945062005b8a8362005b26565b925060208a0199505060018101905062005b61565b50829750879550505050505092915050565b5f6020820190508181035f83015262005bcb818462005b32565b905092915050565b5f819050919050565b5f62005bfc62005bf662005bf08462005349565b62005bd3565b62005349565b9050919050565b5f62005c0f8262005bdc565b9050919050565b5f62005c228262005c03565b9050919050565b62005c348162005c16565b82525050565b5f60208201905062005c4f5f83018462005c29565b92915050565b5f62005c618262005bdc565b9050919050565b5f62005c748262005c55565b9050919050565b62005c868162005c68565b82525050565b5f60208201905062005ca15f83018462005c7b565b92915050565b5f8115159050919050565b62005cbd8162005ca7565b82525050565b5f60208201905062005cd85f83018462005cb2565b92915050565b5f82825260208201905092915050565b7f68747470733a2f2f7270632e68797065726c69717569642d746573746e65742e5f8201527f78797a2f65766d00000000000000000000000000000000000000000000000000602082015250565b5f62005d4a60278362005cde565b915062005d578262005cee565b604082019050919050565b5f6020820190508181035f83015262005d7b8162005d3c565b9050919050565b5f819050919050565b62005d968162005d82565b811462005da1575f80fd5b50565b5f8151905062005db48162005d8b565b92915050565b5f6020828403121562005dd25762005dd162005957565b5b5f62005de18482850162005da4565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f62005e108262005dea565b62005e1c818562005df4565b935062005e2e818560208601620054a7565b62005e3981620054d1565b840191505092915050565b5f60408201905062005e595f830185620056c1565b818103602083015262005e6d818462005e04565b90509392505050565b7f74657374000000000000000000000000000000000000000000000000000000005f82015250565b5f62005eac60048362005cde565b915062005eb98262005e76565b602082019050919050565b5f6080820190508181035f83015262005edd8162005e9e565b9050818103602083015262005ef28162005e9e565b905062005f036040830185620056c1565b62005f126060830184620056c1565b9392505050565b5f60808201905062005f2e5f830187620056c1565b62005f3d6020830186620056c1565b62005f4c604083018562005700565b62005f5b606083018462005700565b95945050505050565b5f62005f708262005368565b9050919050565b62005f828162005f64565b811462005f8d575f80fd5b50565b5f8151905062005fa08162005f77565b92915050565b5f6020828403121562005fbe5762005fbd62005957565b5b5f62005fcd8482850162005f90565b91505092915050565b62005fe181620052e5565b811462005fec575f80fd5b50565b5f8151905062005fff8162005fd6565b92915050565b5f602082840312156200601d576200601c62005957565b5b5f6200602c8482850162005fef565b91505092915050565b5f819050919050565b5f6200605e62006058620060528462006035565b62005bd3565b62005d82565b9050919050565b62006070816200603e565b82525050565b5f6040820190506200608b5f830185620056c1565b6200609a602083018462006065565b9392505050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620060dd82620054d1565b810181811067ffffffffffffffff82111715620060ff57620060fe620060a5565b5b80604052505050565b5f620061136200594e565b9050620061218282620060d2565b919050565b620061318162005368565b81146200613c575f80fd5b50565b5f815190506200614f8162006126565b92915050565b5f8151905062006165816200595f565b92915050565b5f60608284031215620061835762006182620060a1565b5b6200618f606062006108565b90505f620061a0848285016200613f565b5f830152506020620061b58482850162006155565b6020830152506040620061cb8482850162006155565b60408301525092915050565b5f60608284031215620061ef57620061ee62005957565b5b5f620061fe848285016200616b565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200624c57607f821691505b60208210810362006262576200626162006207565b5b50919050565b5f6040820190506200627d5f830185620056c1565b6200628c602083018462005700565b9392505050565b5f60208284031215620062ab57620062aa62005957565b5b5f620062ba8482850162006155565b91505092915050565b5f8160601b9050919050565b5f620062db82620062c3565b9050919050565b5f620062ee82620062cf565b9050919050565b6200630a620063048262005368565b620062e2565b82525050565b5f6200631d8284620062f5565b60148201915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200636582620056ed565b91506200637283620056ed565b9250828201905067ffffffffffffffff8111156200639557620063946200632c565b5b92915050565b5f819050919050565b5f819050919050565b620063c2620063bc826200639b565b620063a4565b82525050565b5f81905092915050565b5f620063de8262005dea565b620063ea8185620063c8565b9350620063fc818560208601620054a7565b80840191505092915050565b5f620064158285620063ad565b602082019150620064278284620063d2565b91508190509392505050565b5f620064536200644d6200644784620056ed565b62005bd3565b62005d82565b9050919050565b620064658162006433565b82525050565b5f602082019050620064805f8301846200645a565b92915050565b5f602082840312156200649e576200649d62005957565b5b5f620064ad848285016200613f565b91505092915050565b5f8160011c9050919050565b5f808291508390505b60018511156200651357808604811115620064eb57620064ea6200632c565b5b6001851615620064fb5780820291505b80810290506200650b85620064b6565b9450620064cb565b94509492505050565b5f826200652d5760019050620065ff565b816200653c575f9050620065ff565b8160018114620065555760028114620065605762006596565b6001915050620065ff565b60ff8411156200657557620065746200632c565b5b8360020a9150848211156200658f576200658e6200632c565b5b50620065ff565b5060208310610133831016604e8410600b8410161715620065d05782820a905083811115620065ca57620065c96200632c565b5b620065ff565b620065df8484846001620064c2565b92509050818404811115620065f957620065f86200632c565b5b81810290505b9392505050565b5f620066128262005d82565b91506200661f83620056ed565b92506200664e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200651c565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6200668f8262005d82565b91506200669c8362005d82565b925082620066af57620066ae62006656565b5b828204905092915050565b5f604082019050620066cf5f83018562005700565b620066de602083018462005700565b9392505050565b620066f0816200639b565b82525050565b50565b5f620067065f8362005df4565b91506200671382620066f6565b5f82019050919050565b5f60a082019050620067325f830187620056c1565b620067416020830186620066e5565b818103604083015262006755818562005e04565b9050620067666060830184620056c1565b81810360808301526200677981620066f9565b905095945050505050565b5f620067908262005d82565b91506200679d8362005d82565b9250828201905080821115620067b857620067b76200632c565b5b92915050565b5f604082019050620067d35f830185620056c1565b620067e26020830184620066e5565b9392505050565b620067f4816200639b565b8114620067ff575f80fd5b50565b5f815190506200681281620067e9565b92915050565b5f6020828403121562006830576200682f62005957565b5b5f6200683f8482850162006802565b91505092915050565b5f6040820190506200685d5f830185620056c1565b6200686c6020830184620056c1565b9392505050565b6200687e8162005d82565b82525050565b5f604082019050620068995f83018562006873565b620068a8602083018462006873565b9392505050565b5f8160c01b9050919050565b5f620068c782620068af565b9050919050565b620068e3620068dd82620056ed565b620068bb565b82525050565b5f8160e01b9050919050565b5f6200690182620068e9565b9050919050565b6200691d6200691782620052e5565b620068f5565b82525050565b5f819050919050565b620069416200693b8262005d82565b62006923565b82525050565b5f620069548287620068ce565b60088201915062006966828662006908565b6004820191506200697882856200692c565b6020820191506200698a8284620063d2565b915081905095945050505050565b5f620069a58284620063d2565b915081905092915050565b5f620069bc8262005d82565b9150620069c98362005d82565b9250828203905081811115620069e457620069e36200632c565b5b92915050565b5f620069f78285620063d2565b915062006a0582846200692c565b6020820191508190509392505050565b5f62006a218262005d82565b915062006a2e8362005d82565b925062006a5d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200651c565b905092915050565b5f60208201905062006a7a5f83018462006873565b92915050565b5f80fd5b5f80fd5b5f67ffffffffffffffff82111562006aa55762006aa4620060a5565b5b62006ab082620054d1565b9050602081019050919050565b5f62006ad362006acd8462006a88565b62006108565b90508281526020810184848401111562006af25762006af162006a84565b5b62006aff848285620054a7565b509392505050565b5f82601f83011262006b1e5762006b1d62006a80565b5b815162006b3084826020860162006abd565b91505092915050565b5f6020828403121562006b515762006b5062005957565b5b5f82015167ffffffffffffffff81111562006b715762006b706200595b565b5b62006b7f8482850162006b07565b91505092915050565b5f81905092915050565b7f73746453746f726167652066696e642853746453746f72616765293a205061635f8201527f6b656420736c6f742e2057652063616e2774206669742076616c75652067726560208201527f61746572207468616e2000000000000000000000000000000000000000000000604082015250565b5f62006c14604a8362006b88565b915062006c218262006b92565b604a82019050919050565b5f62006c38826200548d565b62006c44818562006b88565b935062006c56818560208601620054a7565b80840191505092915050565b5f62006c6e8262006c06565b915062006c7c828462006c2c565b915081905092915050565b5f62006c93826200548d565b62006c9f818562005cde565b935062006cb1818560208601620054a7565b62006cbc81620054d1565b840191505092915050565b5f6020820190508181035f83015262006ce1818462006c87565b905092915050565b5f60608201905062006cfe5f830186620056c1565b62006d0d6020830185620066e5565b62006d1c6040830184620066e5565b949350505050565b7f73746453746f726167652066696e642853746453746f72616765293a204661695f8201527f6c656420746f2077726974652076616c75652e00000000000000000000000000602082015250565b5f62006d8060338362005cde565b915062006d8d8262006d24565b604082019050919050565b5f6020820190508181035f83015262006db18162006d72565b9050919050565b5f819050919050565b62006dd662006dd0826200577e565b62006db8565b82525050565b5f62006de9828562006dc1565b60048201915062006dfb8284620063d2565b91508190509392505050565b5f62006e138262005d82565b915062006e208362005d82565b925082820262006e308162005d82565b9150828204841483151762006e4a5762006e496200632c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f67ffffffffffffffff82111562006e9b5762006e9a620060a5565b5b602082029050602081019050919050565b5f80fd5b5f62006ec662006ec08462006e7e565b62006108565b9050808382526020820190506020840283018581111562006eec5762006eeb62006eac565b5b835b8181101562006f19578062006f04888262006802565b84526020840193505060208101905062006eee565b5050509392505050565b5f82601f83011262006f3a5762006f3962006a80565b5b815162006f4c84826020860162006eb0565b91505092915050565b5f806040838503121562006f6e5762006f6d62005957565b5b5f83015167ffffffffffffffff81111562006f8e5762006f8d6200595b565b5b62006f9c8582860162006f23565b925050602083015167ffffffffffffffff81111562006fc05762006fbf6200595b565b5b62006fce8582860162006f23565b9150509250929050565b7f73746453746f726167652066696e642853746453746f72616765293a204e6f205f8201527f73746f726167652075736520646574656374656420666f72207461726765742e602082015250565b5f6200703460408362005cde565b9150620070418262006fd8565b604082019050919050565b5f6020820190508181035f830152620070658162007026565b9050919050565b5f620070788262005d82565b91505f82036200708d576200708c6200632c565b5b600182039050919050565b5f604082019050620070ad5f830185620056c1565b620070bc602083018462006873565b9392505050565b620070ce816200577e565b82525050565b5f608082019050620070e95f830187620056c1565b620070f86020830186620070c3565b620071076040830185620066e5565b62007116606083018462006873565b95945050505050565b7f73746453746f726167652066696e642853746453746f72616765293a20536c6f5f8201527f74287329206e6f7420666f756e642e0000000000000000000000000000000000602082015250565b5f6200717b602f8362005cde565b915062007188826200711f565b604082019050919050565b5f6020820190508181035f830152620071ac816200716d565b905091905056fe608060405234801561000f575f80fd5b506104b08061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061002d575f3560e01c8063312f619f146100d45761002e565b5b5f3660605f80848481019061004391906102b3565b915091505f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8267ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f206040516020016100b691906103d6565b60405160208183030381529060405292505050915050805190602001f35b6100ee60048036038101906100e9919061042a565b6100f0565b005b60405180606001604052808267ffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff168152505f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8467ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506020820151815f0160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151815f0160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102458261021c565b9050919050565b6102558161023b565b811461025f575f80fd5b50565b5f813590506102708161024c565b92915050565b5f67ffffffffffffffff82169050919050565b61029281610276565b811461029c575f80fd5b50565b5f813590506102ad81610289565b92915050565b5f80604083850312156102c9576102c8610218565b5b5f6102d685828601610262565b92505060206102e78582860161029f565b9150509250929050565b5f815f1c9050919050565b5f67ffffffffffffffff82169050919050565b5f61032161031c836102f1565b6102fc565b9050919050565b61033181610276565b82525050565b5f8160401c9050919050565b5f61035561035083610337565b6102fc565b9050919050565b5f8160801c9050919050565b5f61037a6103758361035c565b6102fc565b9050919050565b606082015f8083015490506103958161030f565b6103a15f860182610328565b506103ab81610343565b6103b86020860182610328565b506103c281610368565b6103cf6040860182610328565b5050505050565b5f6060820190506103e95f830184610381565b92915050565b5f6103f98261021c565b9050919050565b610409816103ef565b8114610413575f80fd5b50565b5f8135905061042481610400565b92915050565b5f805f6060848603121561044157610440610218565b5b5f61044e86828701610416565b935050602061045f8682870161029f565b92505060406104708682870161029f565b915050925092509256fea2646970667358221220dbb79e72c88524d69893e0cb4a3f3e0ab2b92959b5db537fe6e5f0052a45904764736f6c6343000816003360c060405234801562000010575f80fd5b5060405162005cbe38038062005cbe833981810160405281019062000036919062000552565b8383838383836200004c6200029b60201b60201c565b8484818181818d5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000c6575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000bd919062000610565b60405180910390fd5b620000d781620002a360201b60201c565b508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000172576040517fb586360400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60805173ffffffffffffffffffffffffffffffffffffffff1663ca5eb5e1826040518263ffffffff1660e01b8152600401620001af919062000610565b5f604051808303815f87803b158015620001c7575f80fd5b505af1158015620001da573d5f803e3d5ffd5b5050505050505050620001f26200036460201b60201c565b60ff168360ff16101562000232576040517f1e9714b000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620002426200036460201b60201c565b836200024f919062000664565b600a6200025d9190620007f8565b60a08181525050505050816008908162000278919062000a76565b5080600990816200028a919062000a76565b505050505050505050505062000b5a565b5f6012905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6006905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620003cd8262000385565b810181811067ffffffffffffffff82111715620003ef57620003ee62000395565b5b80604052505050565b5f620004036200036c565b9050620004118282620003c2565b919050565b5f67ffffffffffffffff82111562000433576200043262000395565b5b6200043e8262000385565b9050602081019050919050565b5f5b838110156200046a5780820151818401526020810190506200044d565b5f8484015250505050565b5f6200048b620004858462000416565b620003f8565b905082815260208101848484011115620004aa57620004a962000381565b5b620004b78482856200044b565b509392505050565b5f82601f830112620004d657620004d56200037d565b5b8151620004e884826020860162000475565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200051c82620004f1565b9050919050565b6200052e8162000510565b811462000539575f80fd5b50565b5f815190506200054c8162000523565b92915050565b5f805f80608085870312156200056d576200056c62000375565b5b5f85015167ffffffffffffffff8111156200058d576200058c62000379565b5b6200059b87828801620004bf565b945050602085015167ffffffffffffffff811115620005bf57620005be62000379565b5b620005cd87828801620004bf565b9350506040620005e0878288016200053c565b9250506060620005f3878288016200053c565b91505092959194509250565b6200060a8162000510565b82525050565b5f602082019050620006255f830184620005ff565b92915050565b5f60ff82169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000670826200062b565b91506200067d836200062b565b9250828203905060ff81111562000699576200069862000637565b5b92915050565b5f8160011c9050919050565b5f808291508390505b6001851115620006fc57808604811115620006d457620006d362000637565b5b6001851615620006e45780820291505b8081029050620006f4856200069f565b9450620006b4565b94509492505050565b5f82620007165760019050620007e8565b8162000725575f9050620007e8565b81600181146200073e576002811462000749576200077f565b6001915050620007e8565b60ff8411156200075e576200075d62000637565b5b8360020a91508482111562000778576200077762000637565b5b50620007e8565b5060208310610133831016604e8410600b8410161715620007b95782820a905083811115620007b357620007b262000637565b5b620007e8565b620007c88484846001620006ab565b92509050818404811115620007e257620007e162000637565b5b81810290505b9392505050565b5f819050919050565b5f6200080482620007ef565b915062000811836200062b565b9250620008407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000705565b905092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200089757607f821691505b602082108103620008ad57620008ac62000852565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620009117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620008d4565b6200091d8683620008d4565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6200095e620009586200095284620007ef565b62000935565b620007ef565b9050919050565b5f819050919050565b62000979836200093e565b62000991620009888262000965565b848454620008e0565b825550505050565b5f90565b620009a762000999565b620009b48184846200096e565b505050565b5b81811015620009db57620009cf5f826200099d565b600181019050620009ba565b5050565b601f82111562000a2a57620009f481620008b3565b620009ff84620008c5565b8101602085101562000a0f578190505b62000a2762000a1e85620008c5565b830182620009b9565b50505b505050565b5f82821c905092915050565b5f62000a4c5f198460080262000a2f565b1980831691505092915050565b5f62000a66838362000a3b565b9150826002028217905092915050565b62000a818262000848565b67ffffffffffffffff81111562000a9d5762000a9c62000395565b5b62000aa982546200087f565b62000ab6828285620009df565b5f60209050601f83116001811462000aec575f841562000ad7578287015190505b62000ae3858262000a59565b86555062000b52565b601f19841662000afc86620008b3565b5f5b8281101562000b255784890151825560018201915060208501945060208101905062000afe565b8683101562000b45578489015162000b41601f89168262000a3b565b8355505b6001600288020188555050505b505050505050565b60805160a0516150f562000bc95f395f818161116d0152818161254a0152818161256b0152818161260f015261295e01525f8181610c8d01528181610f6e0152818161160f01528181611a5901528181611f5501528181612a5801528181612caa0152612da201526150f55ff3fe608060405260043610610250575f3560e01c80637d25a05e11610138578063bb0b6a53116100b5578063d045a0dc11610079578063d045a0dc146108e7578063d424388514610903578063dd62ed3e1461092b578063f2fde38b14610967578063fc0c546a1461098f578063ff7bd03d146109b957610250565b8063bb0b6a53146107fa578063bc70b35414610836578063bd815db014610872578063c7c7f5b31461088e578063ca5eb5e1146108bf57610250565b8063963efcaa116100fc578063963efcaa146107185780639f68b96414610742578063a9059cbb1461076c578063b731ea0a146107a8578063b98bd070146107d257610250565b80637d25a05e1461062257806382413eac1461065e578063857749b01461069a5780638da5cb5b146106c457806395d89b41146106ee57610250565b806323b872dd116101d15780635535d461116101955780635535d461146105065780635a0dfe4d146105425780635e280f111461057e5780636fc1b31e146105a857806370a08231146105d0578063715018a61461060c57610250565b806323b872dd14610412578063313ce5671461044e5780633400288b146104785780633b6f743b146104a057806352ae2879146104dc57610250565b8063134d4f2511610218578063134d4f251461033e578063156a0d0f1461036857806317442b701461039357806318160ddd146103be5780631f5e1334146103e857610250565b806306fdde0314610254578063095ea7b31461027e5780630d35b415146102ba578063111ecdad146102f857806313137d6514610322575b5f80fd5b34801561025f575f80fd5b506102686109f5565b6040516102759190613027565b60405180910390f35b348015610289575f80fd5b506102a4600480360381019061029f91906130e5565b610a85565b6040516102b1919061313d565b60405180910390f35b3480156102c5575f80fd5b506102e060048036038101906102db9190613178565b610aa7565b6040516102ef9392919061337d565b60405180910390f35b348015610303575f80fd5b5061030c610c4f565b60405161031991906133c8565b60405180910390f35b61033c60048036038101906103379190613493565b610c74565b005b348015610349575f80fd5b50610352610d94565b60405161035f9190613566565b60405180910390f35b348015610373575f80fd5b5061037c610d99565b60405161038a9291906135db565b60405180910390f35b34801561039e575f80fd5b506103a7610dc6565b6040516103b5929190613602565b60405180910390f35b3480156103c9575f80fd5b506103d2610dd4565b6040516103df9190613638565b60405180910390f35b3480156103f3575f80fd5b506103fc610ddd565b6040516104099190613566565b60405180910390f35b34801561041d575f80fd5b5061043860048036038101906104339190613651565b610de2565b604051610445919061313d565b60405180910390f35b348015610459575f80fd5b50610462610e10565b60405161046f91906136bc565b60405180910390f35b348015610483575f80fd5b5061049e6004803603810190610499919061370e565b610e18565b005b3480156104ab575f80fd5b506104c660048036038101906104c19190613776565b610e2e565b6040516104d391906137fd565b60405180910390f35b3480156104e7575f80fd5b506104f0610e96565b6040516104fd91906133c8565b60405180910390f35b348015610511575f80fd5b5061052c60048036038101906105279190613840565b610e9d565b60405161053991906138d0565b60405180910390f35b34801561054d575f80fd5b506105686004803603810190610563919061370e565b610f43565b604051610575919061313d565b60405180910390f35b348015610589575f80fd5b50610592610f6c565b60405161059f919061394b565b60405180910390f35b3480156105b3575f80fd5b506105ce60048036038101906105c99190613964565b610f90565b005b3480156105db575f80fd5b506105f660048036038101906105f19190613964565b611012565b6040516106039190613638565b60405180910390f35b348015610617575f80fd5b50610620611058565b005b34801561062d575f80fd5b506106486004803603810190610643919061370e565b61106b565b604051610655919061398f565b60405180910390f35b348015610669575f80fd5b50610684600480360381019061067f91906139a8565b611072565b604051610691919061313d565b60405180910390f35b3480156106a5575f80fd5b506106ae6110ac565b6040516106bb91906136bc565b60405180910390f35b3480156106cf575f80fd5b506106d86110b4565b6040516106e591906133c8565b60405180910390f35b3480156106f9575f80fd5b506107026110db565b60405161070f9190613027565b60405180910390f35b348015610723575f80fd5b5061072c61116b565b6040516107399190613638565b60405180910390f35b34801561074d575f80fd5b5061075661118f565b604051610763919061313d565b60405180910390f35b348015610777575f80fd5b50610792600480360381019061078d91906130e5565b611193565b60405161079f919061313d565b60405180910390f35b3480156107b3575f80fd5b506107bc6111b5565b6040516107c991906133c8565b60405180910390f35b3480156107dd575f80fd5b506107f860048036038101906107f39190613a6e565b6111da565b005b348015610805575f80fd5b50610820600480360381019061081b9190613ab9565b6111fb565b60405161082d9190613af3565b60405180910390f35b348015610841575f80fd5b5061085c60048036038101906108579190613b0c565b611210565b60405161086991906138d0565b60405180910390f35b61088c60048036038101906108879190613bd2565b611412565b005b6108a860048036038101906108a39190613c3b565b6115de565b6040516108b6929190613d32565b60405180910390f35b3480156108ca575f80fd5b506108e560048036038101906108e09190613964565b611605565b005b61090160048036038101906108fc9190613493565b611696565b005b34801561090e575f80fd5b5061092960048036038101906109249190613964565b611713565b005b348015610936575f80fd5b50610951600480360381019061094c9190613d59565b611795565b60405161095e9190613638565b60405180910390f35b348015610972575f80fd5b5061098d60048036038101906109889190613964565b611817565b005b34801561099a575f80fd5b506109a361189b565b6040516109b091906133c8565b60405180910390f35b3480156109c4575f80fd5b506109df60048036038101906109da9190613d97565b6118a2565b6040516109ec919061313d565b60405180910390f35b606060088054610a0490613def565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3090613def565b8015610a7b5780601f10610a5257610100808354040283529160200191610a7b565b820191905f5260205f20905b815481529060010190602001808311610a5e57829003601f168201915b5050505050905090565b5f80610a8f6118df565b9050610a9c8185856118e6565b600191505092915050565b610aaf612f0a565b6060610ab9612f22565b5f803073ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b04573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b289190613e33565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b70573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b949190613e72565b905060405180604001604052808381526020018281525094505f67ffffffffffffffff811115610bc757610bc6613e9d565b5b604051908082528060200260200182016040528015610c0057816020015b610bed612f3a565b815260200190600190039081610be55790505b5093505f80610c29886040013589606001358a5f016020810190610c249190613ab9565b6118f8565b915091506040518060400160405280838152602001828152509450505050509193909250565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610d0457336040517f91ac5e4f000000000000000000000000000000000000000000000000000000008152600401610cfb91906133c8565b60405180910390fd5b8660200135610d23885f016020810190610d1e9190613ab9565b611957565b14610d7c57865f016020810190610d3a9190613ab9565b87602001356040517fc26bebcc000000000000000000000000000000000000000000000000000000008152600401610d73929190613ed9565b60405180910390fd5b610d8b878787878787876119c8565b50505050505050565b600281565b5f807f02e49c2c000000000000000000000000000000000000000000000000000000006001915091509091565b5f8060016002915091509091565b5f600754905090565b600181565b5f80610dec6118df565b9050610df9858285611b52565b610e04858585611be4565b60019150509392505050565b5f6012905090565b610e20611cd4565b610e2a8282611d5b565b5050565b610e36612f53565b5f610e5b84604001358560600135865f016020810190610e569190613ab9565b6118f8565b9150505f80610e6a8684611dba565b91509150610e8b865f016020810190610e839190613ab9565b838388611f4b565b935050505092915050565b5f30905090565b6003602052815f5260405f20602052805f5260405f205f91509150508054610ec490613def565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef090613def565b8015610f3b5780601f10610f1257610100808354040283529160200191610f3b565b820191905f5260205f20905b815481529060010190602001808311610f1e57829003601f168201915b505050505081565b5f8160015f8563ffffffff1663ffffffff1681526020019081526020015f205414905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610f98611cd4565b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff0be4f1e87349231d80c36b33f9e8639658eeaf474014dee15a3e6a4d44141978160405161100791906133c8565b60405180910390a150565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b611060611cd4565b6110695f61202c565b565b5f92915050565b5f3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050949350505050565b5f6006905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600980546110ea90613def565b80601f016020809104026020016040519081016040528092919081815260200182805461111690613def565b80156111615780601f1061113857610100808354040283529160200191611161565b820191905f5260205f20905b81548152906001019060200180831161114457829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f90565b5f8061119d6118df565b90506111aa818585611be4565b600191505092915050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6111e2611cd4565b6111f78282906111f29190614131565b6120ed565b5050565b6001602052805f5260405f205f915090505481565b60605f60035f8763ffffffff1663ffffffff1681526020019081526020015f205f8661ffff1661ffff1681526020019081526020015f20805461125290613def565b80601f016020809104026020016040519081016040528092919081815260200182805461127e90613def565b80156112c95780601f106112a0576101008083540402835291602001916112c9565b820191905f5260205f20905b8154815290600101906020018083116112ac57829003601f168201915b505050505090505f8151036113245783838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505091505061140a565b5f8484905003611337578091505061140a565b600284849050106113cb5761138e84848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050612202565b80848460029080926113a29392919061414d565b6040516020016113b4939291906141e5565b60405160208183030381529060405291505061140a565b83836040517f9a6d49cd000000000000000000000000000000000000000000000000000000008152600401611401929190614236565b60405180910390fd5b949350505050565b5f5b82829050811015611531573683838381811061143357611432614258565b5b90506020028101906114459190614291565b905061146a815f015f01602081019061145e9190613ab9565b825f0160200135610f43565b6114745750611524565b3073ffffffffffffffffffffffffffffffffffffffff1663d045a0dc8260c00135835f018460a00135858061010001906114ae91906142b9565b8760e00160208101906114c19190613964565b888061012001906114d291906142b9565b6040518963ffffffff1660e01b81526004016114f497969594939291906143ee565b5f604051808303818588803b15801561150b575f80fd5b505af115801561151d573d5f803e3d5ffd5b5050505050505b8080600101915050611414565b503373ffffffffffffffffffffffffffffffffffffffff16638e9e70996040518163ffffffff1660e01b81526004015f60405180830381865afa15801561157a573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906115a291906144bf565b6040517f8351eea70000000000000000000000000000000000000000000000000000000081526004016115d591906138d0565b60405180910390fd5b6115e6612f6b565b6115ee612f22565b6115f985858561225b565b91509150935093915050565b61160d611cd4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ca5eb5e1826040518263ffffffff1660e01b815260040161166691906133c8565b5f604051808303815f87803b15801561167d575f80fd5b505af115801561168f573d5f803e3d5ffd5b5050505050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116fb576040517f14d4a4e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61170a87878787878787612360565b50505050505050565b61171b611cd4565b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd48d879cef83a1c0bdda516f27b13ddb1b3f8bbac1c9e1511bb2a659c24277608160405161178a91906133c8565b60405180910390a150565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61181f611cd4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361188f575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161188691906133c8565b60405180910390fd5b6118988161202c565b50565b5f30905090565b5f816020013560015f845f0160208101906118bd9190613ab9565b63ffffffff1663ffffffff1681526020019081526020015f2054149050919050565b5f33905090565b6118f38383836001612378565b505050565b5f8061190385612547565b91508190508381101561194f5780846040517f71c4efed000000000000000000000000000000000000000000000000000000008152600401611946929190614506565b60405180910390fd5b935093915050565b5f8060015f8463ffffffff1663ffffffff1681526020019081526020015f205490505f801b81036119bf57826040517ff6ff4fb70000000000000000000000000000000000000000000000000000000081526004016119b6919061452d565b60405180910390fd5b80915050919050565b5f6119db6119d687876125a6565b6125d0565b90505f611a0b826119f46119ef8a8a6125db565b61260c565b8b5f016020810190611a069190613ab9565b61264a565b9050611a178787612698565b15611ae5575f611a558a6040016020810190611a339190614546565b8b5f016020810190611a459190613ab9565b84611a508c8c6126ab565b61270d565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637cb59012848b5f856040518563ffffffff1660e01b8152600401611ab694939291906145aa565b5f604051808303815f87803b158015611acd575f80fd5b505af1158015611adf573d5f803e3d5ffd5b50505050505b8173ffffffffffffffffffffffffffffffffffffffff16887fefed6d3500546b29533b128a29e3a94d70788727f0507505ac12eaf2e578fd9c8b5f016020810190611b309190613ab9565b84604051611b3f9291906145f4565b60405180910390a3505050505050505050565b5f611b5d8484611795565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611bde5781811015611bcf578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611bc69392919061461b565b60405180910390fd5b611bdd84848484035f612378565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c54575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611c4b91906133c8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611cc4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611cbb91906133c8565b60405180910390fd5b611ccf83838361273f565b505050565b611cdc6118df565b73ffffffffffffffffffffffffffffffffffffffff16611cfa6110b4565b73ffffffffffffffffffffffffffffffffffffffff1614611d5957611d1d6118df565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611d5091906133c8565b60405180910390fd5b565b8060015f8463ffffffff1663ffffffff1681526020019081526020015f20819055507f238399d427b947898edb290f5ff0f9109849b1c3ba196a42e35f00c50a54b98b8282604051611dae929190613ed9565b60405180910390a15050565b6060805f611e268560200135611dcf8661295b565b878060a00190611ddf91906142b9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505061298f565b80925081945050505f81611e3b576001611e3e565b60025b9050611e6b865f016020810190611e559190613ab9565b82888060800190611e6691906142b9565b611210565b92505f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611f41578073ffffffffffffffffffffffffffffffffffffffff1663043a78eb86866040518363ffffffff1660e01b8152600401611f00929190614650565b602060405180830381865afa158015611f1b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f3f9190614699565b505b5050509250929050565b611f53612f53565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ddc28c586040518060a001604052808863ffffffff168152602001611faf89611957565b8152602001878152602001868152602001851515815250306040518363ffffffff1660e01b8152600401611fe4929190614795565b6040805180830381865afa158015611ffe573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120229190614810565b9050949350505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5b81518110156121c75761211f82828151811061210e5761210d614258565b5b602002602001015160400151612202565b81818151811061213257612131614258565b5b60200260200101516040015160035f84848151811061215457612153614258565b5b60200260200101515f015163ffffffff1663ffffffff1681526020019081526020015f205f84848151811061218c5761218b614258565b5b60200260200101516020015161ffff1661ffff1681526020019081526020015f2090816121b991906149cf565b5080806001019150506120ef565b507fbe4864a8e820971c0247f5992e2da559595f7bf076a21cb5928d443d2a13b674816040516121f79190614bb5565b60405180910390a150565b5f60028201519050600361ffff168161ffff161461225757816040517f9a6d49cd00000000000000000000000000000000000000000000000000000000815260040161224e91906138d0565b60405180910390fd5b5050565b612263612f6b565b61226b612f22565b5f8061229233886040013589606001358a5f01602081019061228d9190613ab9565b6129fd565b915091505f806122a28984611dba565b915091506122d4895f0160208101906122bb9190613ab9565b83838b8036038101906122ce9190614c22565b8b612a25565b955060405180604001604052808581526020018481525094503373ffffffffffffffffffffffffffffffffffffffff16865f01517f85496b760a4b7f8d66384b9df21b381f5d1b1e79f229a47aaf4c232edc2fe59a8b5f01602081019061233b9190613ab9565b878760405161234c93929190614c4d565b60405180910390a350505050935093915050565b61236f878787878787876119c8565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036123e8575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016123df91906133c8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612458575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161244f91906133c8565b60405180910390fd5b8160065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015612541578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516125389190613638565b60405180910390a35b50505050565b5f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000836125959190614cdc565b61259f9190614d0c565b9050919050565b5f82825f90602060ff16926125bd9392919061414d565b906125c89190614d57565b905092915050565b5f815f1c9050919050565b5f8282602060ff1690602860ff16926125f69392919061414d565b906126019190614de0565b60c01c905092915050565b5f7f00000000000000000000000000000000000000000000000000000000000000008267ffffffffffffffff166126439190614d0c565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036126845761dead93505b61268e8484612b3b565b8290509392505050565b5f602860ff168383905011905092915050565b60608282602860ff169080926126c39392919061414d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050905092915050565b6060848484846040516020016127269493929190614ec6565b6040516020818303038152906040529050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361278f578060075f8282546127839190614f0f565b9250508190555061285f565b5f60055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015612819578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016128109392919061461b565b60405180910390fd5b81810360055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036128a6578060075f82825403925050819055506128f1565b8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161294e9190613638565b60405180910390a3505050565b5f7f0000000000000000000000000000000000000000000000000000000000000000826129889190614cdc565b9050919050565b60605f808351119050806129c45784846040516020016129b0929190614f62565b6040516020818303038152906040526129f3565b84846129cf33612bba565b856040516020016129e39493929190614f8d565b6040516020818303038152906040525b9150935093915050565b5f80612a0a8585856118f8565b8092508193505050612a1c8683612bdb565b94509492505050565b612a2d612f6b565b5f612a3a845f0151612c5a565b90505f84602001511115612a5657612a558460200151612ca7565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632637a450826040518060a001604052808b63ffffffff168152602001612ab38c611957565b81526020018a81526020018981526020015f8960200151111515815250866040518463ffffffff1660e01b8152600401612aee929190614795565b60806040518083038185885af1158015612b0a573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190612b2f919061505f565b91505095945050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612bab575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401612ba291906133c8565b60405180910390fd5b612bb65f838361273f565b5050565b5f8173ffffffffffffffffffffffffffffffffffffffff165f1b9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612c4b575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401612c4291906133c8565b60405180910390fd5b612c56825f8361273f565b5050565b5f813414612c9f57346040517f9f704120000000000000000000000000000000000000000000000000000000008152600401612c969190613638565b60405180910390fd5b819050919050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e4fe1d946040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612d359190613e33565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612d9c576040517f5373352a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612de9337f0000000000000000000000000000000000000000000000000000000000000000848473ffffffffffffffffffffffffffffffffffffffff16612ded909392919063ffffffff16565b5050565b612e69848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401612e229392919061508a565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612e6f565b50505050565b5f8060205f8451602086015f885af180612e8e576040513d5f823e3d81fd5b3d92505f519150505f8214612ea7576001811415612ec2565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15612f0457836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401612efb91906133c8565b60405180910390fd5b50505050565b60405180604001604052805f81526020015f81525090565b60405180604001604052805f81526020015f81525090565b60405180604001604052805f8152602001606081525090565b60405180604001604052805f81526020015f81525090565b60405180606001604052805f80191681526020015f67ffffffffffffffff168152602001612f97612f53565b81525090565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612fd4578082015181840152602081019050612fb9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f612ff982612f9d565b6130038185612fa7565b9350613013818560208601612fb7565b61301c81612fdf565b840191505092915050565b5f6020820190508181035f83015261303f8184612fef565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61308182613058565b9050919050565b61309181613077565b811461309b575f80fd5b50565b5f813590506130ac81613088565b92915050565b5f819050919050565b6130c4816130b2565b81146130ce575f80fd5b50565b5f813590506130df816130bb565b92915050565b5f80604083850312156130fb576130fa613050565b5b5f6131088582860161309e565b9250506020613119858286016130d1565b9150509250929050565b5f8115159050919050565b61313781613123565b82525050565b5f6020820190506131505f83018461312e565b92915050565b5f80fd5b5f60e0828403121561316f5761316e613156565b5b81905092915050565b5f6020828403121561318d5761318c613050565b5b5f82013567ffffffffffffffff8111156131aa576131a9613054565b5b6131b68482850161315a565b91505092915050565b6131c8816130b2565b82525050565b604082015f8201516131e25f8501826131bf565b5060208201516131f560208501826131bf565b50505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b61323681613224565b82525050565b5f82825260208201905092915050565b5f61325682612f9d565b613260818561323c565b9350613270818560208601612fb7565b61327981612fdf565b840191505092915050565b5f604083015f8301516132995f86018261322d565b50602083015184820360208601526132b1828261324c565b9150508091505092915050565b5f6132c98383613284565b905092915050565b5f602082019050919050565b5f6132e7826131fb565b6132f18185613205565b93508360208202850161330385613215565b805f5b8581101561333e578484038952815161331f85826132be565b945061332a836132d1565b925060208a01995050600181019050613306565b50829750879550505050505092915050565b604082015f8201516133645f8501826131bf565b50602082015161337760208501826131bf565b50505050565b5f60a0820190506133905f8301866131ce565b81810360408301526133a281856132dd565b90506133b16060830184613350565b949350505050565b6133c281613077565b82525050565b5f6020820190506133db5f8301846133b9565b92915050565b5f606082840312156133f6576133f5613156565b5b81905092915050565b5f819050919050565b613411816133ff565b811461341b575f80fd5b50565b5f8135905061342c81613408565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261345357613452613432565b5b8235905067ffffffffffffffff8111156134705761346f613436565b5b60208301915083600182028301111561348c5761348b61343a565b5b9250929050565b5f805f805f805f60e0888a0312156134ae576134ad613050565b5b5f6134bb8a828b016133e1565b97505060606134cc8a828b0161341e565b965050608088013567ffffffffffffffff8111156134ed576134ec613054565b5b6134f98a828b0161343e565b955095505060a061350c8a828b0161309e565b93505060c088013567ffffffffffffffff81111561352d5761352c613054565b5b6135398a828b0161343e565b925092505092959891949750929550565b5f61ffff82169050919050565b6135608161354a565b82525050565b5f6020820190506135795f830184613557565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6135b38161357f565b82525050565b5f67ffffffffffffffff82169050919050565b6135d5816135b9565b82525050565b5f6040820190506135ee5f8301856135aa565b6135fb60208301846135cc565b9392505050565b5f6040820190506136155f8301856135cc565b61362260208301846135cc565b9392505050565b613632816130b2565b82525050565b5f60208201905061364b5f830184613629565b92915050565b5f805f6060848603121561366857613667613050565b5b5f6136758682870161309e565b93505060206136868682870161309e565b9250506040613697868287016130d1565b9150509250925092565b5f60ff82169050919050565b6136b6816136a1565b82525050565b5f6020820190506136cf5f8301846136ad565b92915050565b5f63ffffffff82169050919050565b6136ed816136d5565b81146136f7575f80fd5b50565b5f81359050613708816136e4565b92915050565b5f806040838503121561372457613723613050565b5b5f613731858286016136fa565b92505060206137428582860161341e565b9150509250929050565b61375581613123565b811461375f575f80fd5b50565b5f813590506137708161374c565b92915050565b5f806040838503121561378c5761378b613050565b5b5f83013567ffffffffffffffff8111156137a9576137a8613054565b5b6137b58582860161315a565b92505060206137c685828601613762565b9150509250929050565b604082015f8201516137e45f8501826131bf565b5060208201516137f760208501826131bf565b50505050565b5f6040820190506138105f8301846137d0565b92915050565b61381f8161354a565b8114613829575f80fd5b50565b5f8135905061383a81613816565b92915050565b5f806040838503121561385657613855613050565b5b5f613863858286016136fa565b92505060206138748582860161382c565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f6138a28261387e565b6138ac8185613888565b93506138bc818560208601612fb7565b6138c581612fdf565b840191505092915050565b5f6020820190508181035f8301526138e88184613898565b905092915050565b5f819050919050565b5f61391361390e61390984613058565b6138f0565b613058565b9050919050565b5f613924826138f9565b9050919050565b5f6139358261391a565b9050919050565b6139458161392b565b82525050565b5f60208201905061395e5f83018461393c565b92915050565b5f6020828403121561397957613978613050565b5b5f6139868482850161309e565b91505092915050565b5f6020820190506139a25f8301846135cc565b92915050565b5f805f8060a085870312156139c0576139bf613050565b5b5f6139cd878288016133e1565b945050606085013567ffffffffffffffff8111156139ee576139ed613054565b5b6139fa8782880161343e565b93509350506080613a0d8782880161309e565b91505092959194509250565b5f8083601f840112613a2e57613a2d613432565b5b8235905067ffffffffffffffff811115613a4b57613a4a613436565b5b602083019150836020820283011115613a6757613a6661343a565b5b9250929050565b5f8060208385031215613a8457613a83613050565b5b5f83013567ffffffffffffffff811115613aa157613aa0613054565b5b613aad85828601613a19565b92509250509250929050565b5f60208284031215613ace57613acd613050565b5b5f613adb848285016136fa565b91505092915050565b613aed816133ff565b82525050565b5f602082019050613b065f830184613ae4565b92915050565b5f805f8060608587031215613b2457613b23613050565b5b5f613b31878288016136fa565b9450506020613b428782880161382c565b935050604085013567ffffffffffffffff811115613b6357613b62613054565b5b613b6f8782880161343e565b925092505092959194509250565b5f8083601f840112613b9257613b91613432565b5b8235905067ffffffffffffffff811115613baf57613bae613436565b5b602083019150836020820283011115613bcb57613bca61343a565b5b9250929050565b5f8060208385031215613be857613be7613050565b5b5f83013567ffffffffffffffff811115613c0557613c04613054565b5b613c1185828601613b7d565b92509250509250929050565b5f60408284031215613c3257613c31613156565b5b81905092915050565b5f805f60808486031215613c5257613c51613050565b5b5f84013567ffffffffffffffff811115613c6f57613c6e613054565b5b613c7b8682870161315a565b9350506020613c8c86828701613c1d565b9250506060613c9d8682870161309e565b9150509250925092565b613cb0816133ff565b82525050565b613cbf816135b9565b82525050565b604082015f820151613cd95f8501826131bf565b506020820151613cec60208501826131bf565b50505050565b608082015f820151613d065f850182613ca7565b506020820151613d196020850182613cb6565b506040820151613d2c6040850182613cc5565b50505050565b5f60c082019050613d455f830185613cf2565b613d526080830184613350565b9392505050565b5f8060408385031215613d6f57613d6e613050565b5b5f613d7c8582860161309e565b9250506020613d8d8582860161309e565b9150509250929050565b5f60608284031215613dac57613dab613050565b5b5f613db9848285016133e1565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680613e0657607f821691505b602082108103613e1957613e18613dc2565b5b50919050565b5f81519050613e2d81613088565b92915050565b5f60208284031215613e4857613e47613050565b5b5f613e5584828501613e1f565b91505092915050565b5f81519050613e6c816130bb565b92915050565b5f60208284031215613e8757613e86613050565b5b5f613e9484828501613e5e565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b613ed3816136d5565b82525050565b5f604082019050613eec5f830185613eca565b613ef96020830184613ae4565b9392505050565b613f0982612fdf565b810181811067ffffffffffffffff82111715613f2857613f27613e9d565b5b80604052505050565b5f613f3a613047565b9050613f468282613f00565b919050565b5f67ffffffffffffffff821115613f6557613f64613e9d565b5b602082029050602081019050919050565b5f80fd5b5f80fd5b5f80fd5b5f67ffffffffffffffff821115613f9c57613f9b613e9d565b5b613fa582612fdf565b9050602081019050919050565b828183375f83830152505050565b5f613fd2613fcd84613f82565b613f31565b905082815260208101848484011115613fee57613fed613f7e565b5b613ff9848285613fb2565b509392505050565b5f82601f83011261401557614014613432565b5b8135614025848260208601613fc0565b91505092915050565b5f6060828403121561404357614042613f76565b5b61404d6060613f31565b90505f61405c848285016136fa565b5f83015250602061406f8482850161382c565b602083015250604082013567ffffffffffffffff81111561409357614092613f7a565b5b61409f84828501614001565b60408301525092915050565b5f6140bd6140b884613f4b565b613f31565b905080838252602082019050602084028301858111156140e0576140df61343a565b5b835b8181101561412757803567ffffffffffffffff81111561410557614104613432565b5b808601614112898261402e565b855260208501945050506020810190506140e2565b5050509392505050565b5f61413d3684846140ab565b905092915050565b5f80fd5b5f80fd5b5f80858511156141605761415f614145565b5b8386111561417157614170614149565b5b6001850283019150848603905094509492505050565b5f81905092915050565b5f61419b8261387e565b6141a58185614187565b93506141b5818560208601612fb7565b80840191505092915050565b5f6141cc8385614187565b93506141d9838584613fb2565b82840190509392505050565b5f6141f08286614191565b91506141fd8284866141c1565b9150819050949350505050565b5f6142158385613888565b9350614222838584613fb2565b61422b83612fdf565b840190509392505050565b5f6020820190508181035f83015261424f81848661420a565b90509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f80fd5b5f80fd5b5f80fd5b5f82356001610140038336030381126142ad576142ac614285565b5b80830191505092915050565b5f80833560016020038436030381126142d5576142d4614285565b5b80840192508235915067ffffffffffffffff8211156142f7576142f6614289565b5b6020830192506001820236038313156143135761431261428d565b5b509250929050565b5f61432960208401846136fa565b905092915050565b61433a816136d5565b82525050565b5f61434e602084018461341e565b905092915050565b61435f816135b9565b8114614369575f80fd5b50565b5f8135905061437a81614356565b92915050565b5f61438e602084018461436c565b905092915050565b606082016143a65f83018361431b565b6143b25f850182614331565b506143c06020830183614340565b6143cd6020850182613ca7565b506143db6040830183614380565b6143e86040850182613cb6565b50505050565b5f60e0820190506144015f83018a614396565b61440e6060830189613ae4565b818103608083015261442181878961420a565b905061443060a08301866133b9565b81810360c083015261444381848661420a565b905098975050505050505050565b5f61446361445e84613f82565b613f31565b90508281526020810184848401111561447f5761447e613f7e565b5b61448a848285612fb7565b509392505050565b5f82601f8301126144a6576144a5613432565b5b81516144b6848260208601614451565b91505092915050565b5f602082840312156144d4576144d3613050565b5b5f82015167ffffffffffffffff8111156144f1576144f0613054565b5b6144fd84828501614492565b91505092915050565b5f6040820190506145195f830185613629565b6145266020830184613629565b9392505050565b5f6020820190506145405f830184613eca565b92915050565b5f6020828403121561455b5761455a613050565b5b5f6145688482850161436c565b91505092915050565b5f819050919050565b5f61459461458f61458a84614571565b6138f0565b61354a565b9050919050565b6145a48161457a565b82525050565b5f6080820190506145bd5f8301876133b9565b6145ca6020830186613ae4565b6145d7604083018561459b565b81810360608301526145e98184613898565b905095945050505050565b5f6040820190506146075f830185613eca565b6146146020830184613629565b9392505050565b5f60608201905061462e5f8301866133b9565b61463b6020830185613629565b6146486040830184613629565b949350505050565b5f6040820190508181035f8301526146688185613898565b9050818103602083015261467c8184613898565b90509392505050565b5f815190506146938161374c565b92915050565b5f602082840312156146ae576146ad613050565b5b5f6146bb84828501614685565b91505092915050565b5f82825260208201905092915050565b5f6146de8261387e565b6146e881856146c4565b93506146f8818560208601612fb7565b61470181612fdf565b840191505092915050565b61471581613123565b82525050565b5f60a083015f8301516147305f860182614331565b5060208301516147436020860182613ca7565b506040830151848203604086015261475b82826146d4565b9150506060830151848203606086015261477582826146d4565b915050608083015161478a608086018261470c565b508091505092915050565b5f6040820190508181035f8301526147ad818561471b565b90506147bc60208301846133b9565b9392505050565b5f604082840312156147d8576147d7613f76565b5b6147e26040613f31565b90505f6147f184828501613e5e565b5f83015250602061480484828501613e5e565b60208301525092915050565b5f6040828403121561482557614824613050565b5b5f614832848285016147c3565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026148977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261485c565b6148a1868361485c565b95508019841693508086168417925050509392505050565b5f6148d36148ce6148c9846130b2565b6138f0565b6130b2565b9050919050565b5f819050919050565b6148ec836148b9565b6149006148f8826148da565b848454614868565b825550505050565b5f90565b614914614908565b61491f8184846148e3565b505050565b5b81811015614942576149375f8261490c565b600181019050614925565b5050565b601f821115614987576149588161483b565b6149618461484d565b81016020851015614970578190505b61498461497c8561484d565b830182614924565b50505b505050565b5f82821c905092915050565b5f6149a75f198460080261498c565b1980831691505092915050565b5f6149bf8383614998565b9150826002028217905092915050565b6149d88261387e565b67ffffffffffffffff8111156149f1576149f0613e9d565b5b6149fb8254613def565b614a06828285614946565b5f60209050601f831160018114614a37575f8415614a25578287015190505b614a2f85826149b4565b865550614a96565b601f198416614a458661483b565b5f5b82811015614a6c57848901518255600182019150602085019450602081019050614a47565b86831015614a895784890151614a85601f891682614998565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b614ad08161354a565b82525050565b5f606083015f830151614aeb5f860182614331565b506020830151614afe6020860182614ac7565b5060408301518482036040860152614b1682826146d4565b9150508091505092915050565b5f614b2e8383614ad6565b905092915050565b5f602082019050919050565b5f614b4c82614a9e565b614b568185614aa8565b935083602082028501614b6885614ab8565b805f5b85811015614ba35784840389528151614b848582614b23565b9450614b8f83614b36565b925060208a01995050600181019050614b6b565b50829750879550505050505092915050565b5f6020820190508181035f830152614bcd8184614b42565b905092915050565b5f60408284031215614bea57614be9613f76565b5b614bf46040613f31565b90505f614c03848285016130d1565b5f830152506020614c16848285016130d1565b60208301525092915050565b5f60408284031215614c3757614c36613050565b5b5f614c4484828501614bd5565b91505092915050565b5f606082019050614c605f830186613eca565b614c6d6020830185613629565b614c7a6040830184613629565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f614ce6826130b2565b9150614cf1836130b2565b925082614d0157614d00614c82565b5b828204905092915050565b5f614d16826130b2565b9150614d21836130b2565b9250828202614d2f816130b2565b91508282048414831517614d4657614d45614caf565b5b5092915050565b5f82905092915050565b5f614d628383614d4d565b82614d6d81356133ff565b92506020821015614dad57614da87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261485c565b831692505b505092915050565b5f7fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b5f614deb8383614d4d565b82614df68135614db5565b92506008821015614e3657614e317fffffffffffffffff0000000000000000000000000000000000000000000000008360080360080261485c565b831692505b505092915050565b5f8160c01b9050919050565b5f614e5482614e3e565b9050919050565b614e6c614e67826135b9565b614e4a565b82525050565b5f8160e01b9050919050565b5f614e8882614e72565b9050919050565b614ea0614e9b826136d5565b614e7e565b82525050565b5f819050919050565b614ec0614ebb826130b2565b614ea6565b82525050565b5f614ed18287614e5b565b600882019150614ee18286614e8f565b600482019150614ef18285614eaf565b602082019150614f018284614191565b915081905095945050505050565b5f614f19826130b2565b9150614f24836130b2565b9250828201905080821115614f3c57614f3b614caf565b5b92915050565b5f819050919050565b614f5c614f57826133ff565b614f42565b82525050565b5f614f6d8285614f4b565b602082019150614f7d8284614e5b565b6008820191508190509392505050565b5f614f988287614f4b565b602082019150614fa88286614e5b565b600882019150614fb88285614f4b565b602082019150614fc88284614191565b915081905095945050505050565b5f81519050614fe481613408565b92915050565b5f81519050614ff881614356565b92915050565b5f6080828403121561501357615012613f76565b5b61501d6060613f31565b90505f61502c84828501614fd6565b5f83015250602061503f84828501614fea565b6020830152506040615053848285016147c3565b60408301525092915050565b5f6080828403121561507457615073613050565b5b5f61508184828501614ffe565b91505092915050565b5f60608201905061509d5f8301866133b9565b6150aa60208301856133b9565b6150b76040830184613629565b94935050505056fea2646970667358221220ede3d0118fefb2e19a171ee13d3541fad18f5600279130d85295bf5cda7402b064736f6c6343000816003360e060405234801562000010575f80fd5b506040516200360538038062003605833981810160405281019062000036919062000438565b60405180606001604052806200005c8467ffffffffffffffff166200035160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1681526020018367ffffffffffffffff1681526020018267ffffffffffffffff168152505f80820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050604051806060016040528073222222222222222222222222222222222222222273ffffffffffffffffffffffffffffffffffffffff16815260200161045167ffffffffffffffff168152602001600a67ffffffffffffffff1681525060025f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505060a05173ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002ba573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620002e09190620004a7565b73ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050505062000547565b5f8173200000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166200038a91906200050d565b9050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620003c08262000395565b9050919050565b620003d281620003b4565b8114620003dd575f80fd5b50565b5f81519050620003f081620003c7565b92915050565b5f67ffffffffffffffff82169050919050565b6200041481620003f6565b81146200041f575f80fd5b50565b5f81519050620004328162000409565b92915050565b5f805f806080858703121562000453576200045262000391565b5b5f6200046287828801620003e0565b94505060206200047587828801620003e0565b9350506040620004888782880162000422565b92505060606200049b8782880162000422565b91505092959194509250565b5f60208284031215620004bf57620004be62000391565b5b5f620004ce84828501620003e0565b91505092915050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200051982620004d7565b91506200052683620004d7565b9250828201905080821115620005415762000540620004e0565b5b92915050565b60805160a05160c051613062620005a35f395f8181610dae015281816110fc015281816119600152611ac601525f818161086701528181610a2a0152610a6601525f81816106630152818161097801526109b401526130625ff3fe60806040526004361061010c575f3560e01c80639b5215f611610094578063dd85007511610063578063dd85007514610357578063ebaeefd614610381578063f6e6b2401461039d578063f9716faf146103c9578063fc0c546a1461040557610113565b80639b5215f6146102bd578063aae12e46146102e7578063ba87267914610311578063d0a102601461033b57610113565b8063765008a1116100db578063765008a1146101e5578063807d6c3f1461021157806381e8dcb41461023b5780638483bc00146102775780639278d99a1461029357610113565b80631b224831146101175780632d0e315c146101555780635241b4961461017f5780635e280f11146101bb57610113565b3661011357005b5f80fd5b348015610122575f80fd5b5061013d60048036038101906101389190611d5d565b61042f565b60405161014c93929190611e62565b60405180910390f35b348015610160575f80fd5b5061016961046d565b6040516101769190611f3f565b60405180910390f35b34801561018a575f80fd5b506101a560048036038101906101a091906120d4565b61053c565b6040516101b2919061214f565b60405180910390f35b3480156101c6575f80fd5b506101cf610661565b6040516101dc919061214f565b60405180910390f35b3480156101f0575f80fd5b506101f9610685565b60405161020893929190612177565b60405180910390f35b34801561021c575f80fd5b506102256106e0565b60405161023291906121ac565b60405180910390f35b348015610246575f80fd5b50610261600480360381019061025c9190612219565b6106e5565b60405161026e9190612257565b60405180910390f35b610291600480360381019061028c9190612270565b6106f8565b005b34801561029e575f80fd5b506102a7610860565b6040516102b491906121ac565b60405180910390f35b3480156102c8575f80fd5b506102d1610865565b6040516102de91906122f6565b60405180910390f35b3480156102f2575f80fd5b506102fb610889565b6040516103089190611f3f565b60405180910390f35b34801561031c575f80fd5b50610325610959565b604051610332919061214f565b60405180910390f35b6103556004803603810190610350919061230f565b61095f565b005b348015610362575f80fd5b5061036b610ce4565b604051610378919061214f565b60405180910390f35b61039b600480360381019061039691906123c6565b610cfc565b005b3480156103a8575f80fd5b506103b1610e4d565b6040516103c093929190612177565b60405180910390f35b3480156103d4575f80fd5b506103ef60048036038101906103ea9190612439565b610ea9565b6040516103fc91906124c6565b60405180910390f35b348015610410575f80fd5b506104196110fa565b60405161042691906124ff565b60405180910390f35b5f8060605f61043e868661111e565b90505f61044b878761114e565b90505f610458888861117c565b90508282829550955095505050509250925092565b610475611c7b565b5f6040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905090565b5f80610547846111de565b90505f61055386611215565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610655575f6309b3473160e01b8788516040516024016105a5929190612518565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506106198386836112699092919063ffffffff16565b6040517f4f95203300000000000000000000000000000000000000000000000000000000815260040161064c9190612546565b60405180910390fd5b80925050509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b601481565b5f6106f083836112c4565b905092915050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461076857336040517f5950c85e00000000000000000000000000000000000000000000000000000000815260040161075f919061214f565b60405180910390fd5b5f34111561085d575f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146107aa57816107ac565b325b90505f8173ffffffffffffffffffffffffffffffffffffffff16346040516107d390612593565b5f6040518083038185875af1925050503d805f811461080d576040519150601f19603f3d011682016040523d82523d5f602084013e610812565b606091505b505090508061085a5781346040517fc8ee485e0000000000000000000000000000000000000000000000000000000081526004016108519291906125a7565b60405180910390fd5b50505b50565b602081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610891611c7b565b60026040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905090565b61080181565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610a11577f0000000000000000000000000000000000000000000000000000000000000000336040517fefa9309d000000000000000000000000000000000000000000000000000000008152600401610a089291906125ce565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610ac3577f0000000000000000000000000000000000000000000000000000000000000000876040517f86fee0c0000000000000000000000000000000000000000000000000000000008152600401610aba9291906125ce565b60405180910390fd5b5f805f60603073ffffffffffffffffffffffffffffffffffffffff16631b2248318a8a6040518363ffffffff1660e01b8152600401610b03929190612621565b5f60405180830381865afa925050508015610b4057506040513d5f823e3d601f19601f82011682018060405250810190610b3d91906126d9565b60015b610bb0573d805f8114610b6e576040519150601f19603f3d011682016040523d82523d5f602084013e610b73565b606091505b50806040517ed4895a000000000000000000000000000000000000000000000000000000008152600401610ba79190612546565b60405180910390fd5b8295508194508093505050503073ffffffffffffffffffffffffffffffffffffffff16635241b4968284866040518463ffffffff1660e01b8152600401610bf993929190612745565b602060405180830381865afa925050508015610c3357506040513d601f19601f82011682018060405250810190610c309190612795565b60015b610cb5573d805f8114610c61576040519150601f19603f3d011682016040523d82523d5f602084013e610c66565b606091505b505f610c71826113bb565b90507f612baef0082f9abcf6dc7b491d75346418381b75756830d7029939026d1b46b981604051610ca29190612546565b60405180910390a1505050505050610cdb565b809450505f341115610ccc57610ccb8434611668565b5b610cd68484611950565b505050505b50505050505050565b73333333333333333333333333333333333333333381565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d6c57336040517f5950c85e000000000000000000000000000000000000000000000000000000008152600401610d63919061214f565b60405180910390fd5b5f81118015610da757505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15610e49577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610e079291906125a7565b6020604051808303815f875af1158015610e23573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e4791906127d4565b505b5050565b6002805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b610eb1611cc3565b610eb9611c7b565b5f8315610fce575f6040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150610fc75f80015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f800160149054906101000a900467ffffffffffffffff166112c4565b90506110db565b60026040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505091506110d860025f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f0160149054906101000a900467ffffffffffffffff166112c4565b90505b6110f0818387611b6a9092919063ffffffff16565b9250505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f8282600c60ff1690602c60ff169261113993929190612807565b906111449190612857565b5f1c905092915050565b5f8282602c60ff1690604c60ff169261116993929190612807565b906111749190612857565b905092915050565b60608282604c60ff1690809261119493929190612807565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050905092915050565b5f80825f1c905073ffffffffffffffffffffffffffffffffffffffff8016811161120b5780915050611210565b5f9150505b919050565b5f808251905060148103611238578261122d90612903565b60601c915050611264565b6020810361125f575f8361124b9061297d565b9050611256816111de565b92505050611264565b5f9150505b919050565b606060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001858152506040516020016112ac9190612a78565b60405160208183030381529060405290509392505050565b5f80606061080173ffffffffffffffffffffffffffffffffffffffff1685856040516020016112f4929190612a98565b6040516020818303038152906040526040516113109190612aef565b5f60405180830381855afa9150503d805f8114611348576040519150601f19603f3d011682016040523d82523d5f602084013e61134d565b606091505b5080925081935050508161139a5784846040517fa91ed721000000000000000000000000000000000000000000000000000000008152600401611391929190612a98565b60405180910390fd5b808060200190518101906113ae9190612b82565b5f01519250505092915050565b60605f8273__$583e42a4fcd29c5c863b44cd876f1d3349$__63a405952790916040518263ffffffff1660e01b81526004016113f79190612bf5565b5f60405180830381865af4158015611411573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906114399190612c15565b90505f818060200190518101906114509190612cd9565b90503073ffffffffffffffffffffffffffffffffffffffff1663ebaeefd6825f015183602001516040518363ffffffff1660e01b81526004016114949291906125a7565b5f604051808303815f87803b1580156114ab575f80fd5b505af19250505080156114bc575060015b611505577feb907f6e0de6862ca2ced78e890a55c5e8352dc4051697356bc835abf7cedcac815f015182602001516040516114f89291906125a7565b60405180910390a1611506565b5b3073ffffffffffffffffffffffffffffffffffffffff16638483bc0034835f01516040518363ffffffff1660e01b8152600401611543919061214f565b5f604051808303818588803b15801561155a575f80fd5b505af19350505050801561156c575060015b611659575f3273ffffffffffffffffffffffffffffffffffffffff163460405161159590612593565b5f6040518083038185875af1925050503d805f81146115cf576040519150601f19603f3d011682016040523d82523d5f602084013e6115d4565b606091505b5050905080611617577f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d577323460405161160e9291906125a7565b60405180910390a15b7f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d577825f01513460405161164b9291906125a7565b60405180910390a15061165a565b5b806040015192505050919050565b5f611673825f610ea9565b90505f60025f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16825f01516040516116c090612593565b5f6040518083038185875af1925050503d805f81146116fa576040519150601f19603f3d011682016040523d82523d5f602084013e6116ff565b606091505b505090508061174557826040517fb7e54a0700000000000000000000000000000000000000000000000000000000815260040161173c91906121ac565b60405180910390fd5b73333333333333333333333333333333333333333373ffffffffffffffffffffffffffffffffffffffff16630b0ac0ab8560025f0160149054906101000a900467ffffffffffffffff1685604001516040518463ffffffff1660e01b81526004016117b293929190612177565b5f604051808303815f87803b1580156117c9575f80fd5b505af11580156117db573d5f803e3d5ffd5b505050505f8260200151111561194a573073ffffffffffffffffffffffffffffffffffffffff16638483bc008360200151866040518363ffffffff1660e01b8152600401611829919061214f565b5f604051808303818588803b158015611840575f80fd5b505af193505050508015611852575060015b611948573273ffffffffffffffffffffffffffffffffffffffff16826020015160405161187e90612593565b5f6040518083038185875af1925050503d805f81146118b8576040519150601f19603f3d011682016040523d82523d5f602084013e6118bd565b606091505b50508091505080611906577f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d5773283602001516040516118fd9291906125a7565b60405180910390a15b7f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d57784836020015160405161193b9291906125a7565b60405180910390a1611949565b5b5b50505050565b5f61195c826001610ea9565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb5f80015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16835f01516040518363ffffffff1660e01b81526004016119de9291906125a7565b6020604051808303815f875af11580156119fa573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a1e91906127d4565b5073333333333333333333333333333333333333333373ffffffffffffffffffffffffffffffffffffffff16630b0ac0ab845f800160149054906101000a900467ffffffffffffffff1684604001516040518463ffffffff1660e01b8152600401611a8b93929190612177565b5f604051808303815f87803b158015611aa2575f80fd5b505af1158015611ab4573d5f803e3d5ffd5b505050505f81602001511115611b65577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8483602001516040518363ffffffff1660e01b8152600401611b239291906125a7565b6020604051808303815f875af1158015611b3f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b6391906127d4565b505b505050565b611b72611cc3565b5f8260400151600a611b849190612e7c565b90505f80828781611b9857611b97612ec6565b5b06915081870390505f8388611bad9190612ef3565b90508667ffffffffffffffff168167ffffffffffffffff161115611c49577ff17459c2e89c2b011fa739accb3b853858d0a689d31382b9aa4f56a1ca00f9d38188604051611bfc929190612f23565b60405180910390a15f848883611c129190612f4a565b67ffffffffffffffff16611c269190612f85565b90508791508083611c379190612fc6565b92508084611c459190612ff9565b9350505b60405180606001604052808381526020018481526020018267ffffffffffffffff168152509450505050509392505050565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff1681525090565b60405180606001604052805f81526020015f81526020015f67ffffffffffffffff1681525090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611d1d57611d1c611cfc565b5b8235905067ffffffffffffffff811115611d3a57611d39611d00565b5b602083019150836001820283011115611d5657611d55611d04565b5b9250929050565b5f8060208385031215611d7357611d72611cf4565b5b5f83013567ffffffffffffffff811115611d9057611d8f611cf8565b5b611d9c85828601611d08565b92509250509250929050565b5f819050919050565b611dba81611da8565b82525050565b5f819050919050565b611dd281611dc0565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611e0f578082015181840152602081019050611df4565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611e3482611dd8565b611e3e8185611de2565b9350611e4e818560208601611df2565b611e5781611e1a565b840191505092915050565b5f606082019050611e755f830186611db1565b611e826020830185611dc9565b8181036040830152611e948184611e2a565b9050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ec782611e9e565b9050919050565b611ed781611ebd565b82525050565b5f67ffffffffffffffff82169050919050565b611ef981611edd565b82525050565b606082015f820151611f135f850182611ece565b506020820151611f266020850182611ef0565b506040820151611f396040850182611ef0565b50505050565b5f606082019050611f525f830184611eff565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611f9282611e1a565b810181811067ffffffffffffffff82111715611fb157611fb0611f5c565b5b80604052505050565b5f611fc3611ceb565b9050611fcf8282611f89565b919050565b5f67ffffffffffffffff821115611fee57611fed611f5c565b5b611ff782611e1a565b9050602081019050919050565b828183375f83830152505050565b5f61202461201f84611fd4565b611fba565b9050828152602081018484840111156120405761203f611f58565b5b61204b848285612004565b509392505050565b5f82601f83011261206757612066611cfc565b5b8135612077848260208601612012565b91505092915050565b61208981611dc0565b8114612093575f80fd5b50565b5f813590506120a481612080565b92915050565b6120b381611da8565b81146120bd575f80fd5b50565b5f813590506120ce816120aa565b92915050565b5f805f606084860312156120eb576120ea611cf4565b5b5f84013567ffffffffffffffff81111561210857612107611cf8565b5b61211486828701612053565b935050602061212586828701612096565b9250506040612136868287016120c0565b9150509250925092565b61214981611ebd565b82525050565b5f6020820190506121625f830184612140565b92915050565b61217181611edd565b82525050565b5f60608201905061218a5f830186612140565b6121976020830185612168565b6121a46040830184612168565b949350505050565b5f6020820190506121bf5f830184611db1565b92915050565b6121ce81611ebd565b81146121d8575f80fd5b50565b5f813590506121e9816121c5565b92915050565b6121f881611edd565b8114612202575f80fd5b50565b5f81359050612213816121ef565b92915050565b5f806040838503121561222f5761222e611cf4565b5b5f61223c858286016121db565b925050602061224d85828601612205565b9150509250929050565b5f60208201905061226a5f830184612168565b92915050565b5f6020828403121561228557612284611cf4565b5b5f612292848285016121db565b91505092915050565b5f819050919050565b5f6122be6122b96122b484611e9e565b61229b565b611e9e565b9050919050565b5f6122cf826122a4565b9050919050565b5f6122e0826122c5565b9050919050565b6122f0816122d6565b82525050565b5f6020820190506123095f8301846122e7565b92915050565b5f805f805f805f60a0888a03121561232a57612329611cf4565b5b5f6123378a828b016121db565b97505060206123488a828b01612096565b965050604088013567ffffffffffffffff81111561236957612368611cf8565b5b6123758a828b01611d08565b955095505060606123888a828b016121db565b935050608088013567ffffffffffffffff8111156123a9576123a8611cf8565b5b6123b58a828b01611d08565b925092505092959891949750929550565b5f80604083850312156123dc576123db611cf4565b5b5f6123e9858286016121db565b92505060206123fa858286016120c0565b9150509250929050565b5f8115159050919050565b61241881612404565b8114612422575f80fd5b50565b5f813590506124338161240f565b92915050565b5f806040838503121561244f5761244e611cf4565b5b5f61245c858286016120c0565b925050602061246d85828601612425565b9150509250929050565b61248081611da8565b82525050565b606082015f82015161249a5f850182612477565b5060208201516124ad6020850182612477565b5060408201516124c06040850182611ef0565b50505050565b5f6060820190506124d95f830184612486565b92915050565b5f6124e9826122c5565b9050919050565b6124f9816124df565b82525050565b5f6020820190506125125f8301846124f0565b92915050565b5f6040820190508181035f8301526125308185611e2a565b905061253f6020830184611db1565b9392505050565b5f6020820190508181035f83015261255e8184611e2a565b905092915050565b5f81905092915050565b50565b5f61257e5f83612566565b915061258982612570565b5f82019050919050565b5f61259d82612573565b9150819050919050565b5f6040820190506125ba5f830185612140565b6125c76020830184611db1565b9392505050565b5f6040820190506125e15f830185612140565b6125ee6020830184612140565b9392505050565b5f6126008385611de2565b935061260d838584612004565b61261683611e1a565b840190509392505050565b5f6020820190508181035f83015261263a8184866125f5565b90509392505050565b5f81519050612651816120aa565b92915050565b5f8151905061266581612080565b92915050565b5f61267d61267884611fd4565b611fba565b90508281526020810184848401111561269957612698611f58565b5b6126a4848285611df2565b509392505050565b5f82601f8301126126c0576126bf611cfc565b5b81516126d084826020860161266b565b91505092915050565b5f805f606084860312156126f0576126ef611cf4565b5b5f6126fd86828701612643565b935050602061270e86828701612657565b925050604084015167ffffffffffffffff81111561272f5761272e611cf8565b5b61273b868287016126ac565b9150509250925092565b5f6060820190508181035f83015261275d8186611e2a565b905061276c6020830185611dc9565b6127796040830184611db1565b949350505050565b5f8151905061278f816121c5565b92915050565b5f602082840312156127aa576127a9611cf4565b5b5f6127b784828501612781565b91505092915050565b5f815190506127ce8161240f565b92915050565b5f602082840312156127e9576127e8611cf4565b5b5f6127f6848285016127c0565b91505092915050565b5f80fd5b5f80fd5b5f808585111561281a576128196127ff565b5b8386111561282b5761282a612803565b5b6001850283019150848603905094509492505050565b5f82905092915050565b5f82821b905092915050565b5f6128628383612841565b8261286d8135611dc0565b925060208210156128ad576128a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261284b565b831692505b505092915050565b5f819050602082019050919050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b5f6128fa82516128c4565b80915050919050565b5f61290d82611dd8565b82612917846128b5565b9050612922816128ef565b925060148210156129625761295d7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360140360080261284b565b831692505b5050919050565b5f6129748251611dc0565b80915050919050565b5f61298782611dd8565b82612991846128b5565b905061299c81612969565b925060208210156129dc576129d77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261284b565b831692505b5050919050565b5f82825260208201905092915050565b5f6129fd82611dd8565b612a0781856129e3565b9350612a17818560208601611df2565b612a2081611e1a565b840191505092915050565b5f606083015f830151612a405f860182611ece565b506020830151612a536020860182612477565b5060408301518482036040860152612a6b82826129f3565b9150508091505092915050565b5f6020820190508181035f830152612a908184612a2b565b905092915050565b5f604082019050612aab5f830185612140565b612ab86020830184612168565b9392505050565b5f612ac982611dd8565b612ad38185612566565b9350612ae3818560208601611df2565b80840191505092915050565b5f612afa8284612abf565b915081905092915050565b5f80fd5b5f80fd5b5f81519050612b1b816121ef565b92915050565b5f60608284031215612b3657612b35612b05565b5b612b406060611fba565b90505f612b4f84828501612b0d565b5f830152506020612b6284828501612b0d565b6020830152506040612b7684828501612b0d565b60408301525092915050565b5f60608284031215612b9757612b96611cf4565b5b5f612ba484828501612b21565b91505092915050565b5f82825260208201905092915050565b5f612bc782611dd8565b612bd18185612bad565b9350612be1818560208601611df2565b612bea81611e1a565b840191505092915050565b5f6020820190508181035f830152612c0d8184612bbd565b905092915050565b5f60208284031215612c2a57612c29611cf4565b5b5f82015167ffffffffffffffff811115612c4757612c46611cf8565b5b612c53848285016126ac565b91505092915050565b5f60608284031215612c7157612c70612b05565b5b612c7b6060611fba565b90505f612c8a84828501612781565b5f830152506020612c9d84828501612643565b602083015250604082015167ffffffffffffffff811115612cc157612cc0612b09565b5b612ccd848285016126ac565b60408301525092915050565b5f60208284031215612cee57612ced611cf4565b5b5f82015167ffffffffffffffff811115612d0b57612d0a611cf8565b5b612d1784828501612c5c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115612da257808604811115612d7e57612d7d612d20565b5b6001851615612d8d5780820291505b8081029050612d9b85612d4d565b9450612d62565b94509492505050565b5f82612dba5760019050612e75565b81612dc7575f9050612e75565b8160018114612ddd5760028114612de757612e16565b6001915050612e75565b60ff841115612df957612df8612d20565b5b8360020a915084821115612e1057612e0f612d20565b5b50612e75565b5060208310610133831016604e8410600b8410161715612e4b5782820a905083811115612e4657612e45612d20565b5b612e75565b612e588484846001612d59565b92509050818404811115612e6f57612e6e612d20565b5b81810290505b9392505050565b5f612e8682611da8565b9150612e9183611edd565b9250612ebe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612dab565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612efd82611da8565b9150612f0883611da8565b925082612f1857612f17612ec6565b5b828204905092915050565b5f604082019050612f365f830185612168565b612f436020830184612168565b9392505050565b5f612f5482611edd565b9150612f5f83611edd565b9250828203905067ffffffffffffffff811115612f7f57612f7e612d20565b5b92915050565b5f612f8f82611da8565b9150612f9a83611da8565b9250828202612fa881611da8565b91508282048414831517612fbf57612fbe612d20565b5b5092915050565b5f612fd082611da8565b9150612fdb83611da8565b9250828203905081811115612ff357612ff2612d20565b5b92915050565b5f61300382611da8565b915061300e83611da8565b925082820190508082111561302657613025612d20565b5b9291505056fea264697066735822122071985d961321e1bdce2201740af446e08456eb6ced8aecf3761c5b0de55378c264736f6c63430008160033a2646970667358221220e88382e046144677324157796e606d361c4ef409c3861e7ac1fcb8f43abe110c64736f6c63430008160033",
    "sourceMap": "980:6670:76:-:0;;;3166:4:40;3126:44;;;;;;;;;;;;;;;;;;;;1038:4:50;1016:26;;;;;;;;;;;;;;;;;;;;1603:17:76;;;;;;;;;;;;;;;;;;:8;;;:17;;:::i;:::-;1580:40;;;;;;;;;;;;;;;;;;;;1649:17;;;;;;;;;;;;;;;;;;:8;;;:17;;:::i;:::-;1626:40;;;;;;;;;;;;;;;;;;;;980:6670;;;;;;;;;;;;20454:125:41;20518:12;20552:20;20567:4;20552:14;;;:20;;:::i;:::-;20542:30;;;;;20454:125;;;:::o;20173:242::-;20243:12;20257:18;20335:4;20318:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;20308:33;;;;;;20300:42;;20287:55;;318:28;310:37;;20359:7;;;20367:10;20359:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20352:26;;318:28;310:37;;20388:8;;;20397:4;20403;20388:20;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20173:242;;;:::o;7:99:84:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:148::-;214:11;251:3;236:18;;112:148;;;;:::o;266:246::-;347:1;357:113;371:6;368:1;365:13;357:113;;;456:1;451:3;447:11;441:18;437:1;432:3;428:11;421:39;393:2;390:1;386:10;381:15;;357:113;;;504:1;495:6;490:3;486:16;479:27;328:184;266:246;;;:::o;518:390::-;624:3;652:39;685:5;652:39;:::i;:::-;707:89;789:6;784:3;707:89;:::i;:::-;700:96;;805:65;863:6;858:3;851:4;844:5;840:16;805:65;:::i;:::-;895:6;890:3;886:16;879:23;;628:280;518:390;;;;:::o;914:275::-;1046:3;1068:95;1159:3;1150:6;1068:95;:::i;:::-;1061:102;;1180:3;1173:10;;914:275;;;;:::o;1195:77::-;1232:7;1261:5;1250:16;;1195:77;;;:::o;1278:118::-;1365:24;1383:5;1365:24;:::i;:::-;1360:3;1353:37;1278:118;;:::o;1402:222::-;1495:4;1533:2;1522:9;1518:18;1510:26;;1546:71;1614:1;1603:9;1599:17;1590:6;1546:71;:::i;:::-;1402:222;;;;:::o;1711:117::-;1820:1;1817;1810:12;1957:126;1994:7;2034:42;2027:5;2023:54;2012:65;;1957:126;;;:::o;2089:96::-;2126:7;2155:24;2173:5;2155:24;:::i;:::-;2144:35;;2089:96;;;:::o;2191:122::-;2264:24;2282:5;2264:24;:::i;:::-;2257:5;2254:35;2244:63;;2303:1;2300;2293:12;2244:63;2191:122;:::o;2319:143::-;2376:5;2407:6;2401:13;2392:22;;2423:33;2450:5;2423:33;:::i;:::-;2319:143;;;;:::o;2468:351::-;2538:6;2587:2;2575:9;2566:7;2562:23;2558:32;2555:119;;;2593:79;;:::i;:::-;2555:119;2713:1;2738:64;2794:7;2785:6;2774:9;2770:22;2738:64;:::i;:::-;2728:74;;2684:128;2468:351;;;;:::o;2825:118::-;2912:24;2930:5;2912:24;:::i;:::-;2907:3;2900:37;2825:118;;:::o;2949:169::-;3033:11;3067:6;3062:3;3055:19;3107:4;3102:3;3098:14;3083:29;;2949:169;;;;:::o;3124:102::-;3165:6;3216:2;3212:7;3207:2;3200:5;3196:14;3192:28;3182:38;;3124:102;;;:::o;3232:377::-;3320:3;3348:39;3381:5;3348:39;:::i;:::-;3403:71;3467:6;3462:3;3403:71;:::i;:::-;3396:78;;3483:65;3541:6;3536:3;3529:4;3522:5;3518:16;3483:65;:::i;:::-;3573:29;3595:6;3573:29;:::i;:::-;3568:3;3564:39;3557:46;;3324:285;3232:377;;;;:::o;3615:423::-;3756:4;3794:2;3783:9;3779:18;3771:26;;3807:71;3875:1;3864:9;3860:17;3851:6;3807:71;:::i;:::-;3925:9;3919:4;3915:20;3910:2;3899:9;3895:18;3888:48;3953:78;4026:4;4017:6;3953:78;:::i;:::-;3945:86;;3615:423;;;;;:::o;980:6670:76:-;;;;;;;",
    "linkReferences": {
      "contracts/library/HyperLiquidComposerCodec.sol": {
        "HyperLiquidComposerCodec": [{ "start": 61823, "length": 20 }]
      }
    }
  },
  "deployedBytecode": {
    "object": "$583e42a4fcd29c5c863b44cd876f1d3349$__63a405952790916040518263ffffffff1660e01b81526004016113f79190612bf5565b5f60405180830381865af4158015611411573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906114399190612c15565b90505f818060200190518101906114509190612cd9565b90503073ffffffffffffffffffffffffffffffffffffffff1663ebaeefd6825f015183602001516040518363ffffffff1660e01b81526004016114949291906125a7565b5f604051808303815f87803b1580156114ab575f80fd5b505af19250505080156114bc575060015b611505577feb907f6e0de6862ca2ced78e890a55c5e8352dc4051697356bc835abf7cedcac815f015182602001516040516114f89291906125a7565b60405180910390a1611506565b5b3073ffffffffffffffffffffffffffffffffffffffff16638483bc0034835f01516040518363ffffffff1660e01b8152600401611543919061214f565b5f604051808303818588803b15801561155a575f80fd5b505af19350505050801561156c575060015b611659575f3273ffffffffffffffffffffffffffffffffffffffff163460405161159590612593565b5f6040518083038185875af1925050503d805f81146115cf576040519150601f19603f3d011682016040523d82523d5f602084013e6115d4565b606091505b5050905080611617577f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d577323460405161160e9291906125a7565b60405180910390a15b7f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d577825f01513460405161164b9291906125a7565b60405180910390a15061165a565b5b806040015192505050919050565b5f611673825f610ea9565b90505f60025f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16825f01516040516116c090612593565b5f6040518083038185875af1925050503d805f81146116fa576040519150601f19603f3d011682016040523d82523d5f602084013e6116ff565b606091505b505090508061174557826040517fb7e54a0700000000000000000000000000000000000000000000000000000000815260040161173c91906121ac565b60405180910390fd5b73333333333333333333333333333333333333333373ffffffffffffffffffffffffffffffffffffffff16630b0ac0ab8560025f0160149054906101000a900467ffffffffffffffff1685604001516040518463ffffffff1660e01b81526004016117b293929190612177565b5f604051808303815f87803b1580156117c9575f80fd5b505af11580156117db573d5f803e3d5ffd5b505050505f8260200151111561194a573073ffffffffffffffffffffffffffffffffffffffff16638483bc008360200151866040518363ffffffff1660e01b8152600401611829919061214f565b5f604051808303818588803b158015611840575f80fd5b505af193505050508015611852575060015b611948573273ffffffffffffffffffffffffffffffffffffffff16826020015160405161187e90612593565b5f6040518083038185875af1925050503d805f81146118b8576040519150601f19603f3d011682016040523d82523d5f602084013e6118bd565b606091505b50508091505080611906577f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d5773283602001516040516118fd9291906125a7565b60405180910390a15b7f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d57784836020015160405161193b9291906125a7565b60405180910390a1611949565b5b5b50505050565b5f61195c826001610ea9565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb5f80015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16835f01516040518363ffffffff1660e01b81526004016119de9291906125a7565b6020604051808303815f875af11580156119fa573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a1e91906127d4565b5073333333333333333333333333333333333333333373ffffffffffffffffffffffffffffffffffffffff16630b0ac0ab845f800160149054906101000a900467ffffffffffffffff1684604001516040518463ffffffff1660e01b8152600401611a8b93929190612177565b5f604051808303815f87803b158015611aa2575f80fd5b505af1158015611ab4573d5f803e3d5ffd5b505050505f81602001511115611b65577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8483602001516040518363ffffffff1660e01b8152600401611b239291906125a7565b6020604051808303815f875af1158015611b3f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b6391906127d4565b505b505050565b611b72611cc3565b5f8260400151600a611b849190612e7c565b90505f80828781611b9857611b97612ec6565b5b06915081870390505f8388611bad9190612ef3565b90508667ffffffffffffffff168167ffffffffffffffff161115611c49577ff17459c2e89c2b011fa739accb3b853858d0a689d31382b9aa4f56a1ca00f9d38188604051611bfc929190612f23565b60405180910390a15f848883611c129190612f4a565b67ffffffffffffffff16611c269190612f85565b90508791508083611c379190612fc6565b92508084611c459190612ff9565b9350505b60405180606001604052808381526020018481526020018267ffffffffffffffff168152509450505050509392505050565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff1681525090565b60405180606001604052805f81526020015f81526020015f67ffffffffffffffff1681525090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611d1d57611d1c611cfc565b5b8235905067ffffffffffffffff811115611d3a57611d39611d00565b5b602083019150836001820283011115611d5657611d55611d04565b5b9250929050565b5f8060208385031215611d7357611d72611cf4565b5b5f83013567ffffffffffffffff811115611d9057611d8f611cf8565b5b611d9c85828601611d08565b92509250509250929050565b5f819050919050565b611dba81611da8565b82525050565b5f819050919050565b611dd281611dc0565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611e0f578082015181840152602081019050611df4565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611e3482611dd8565b611e3e8185611de2565b9350611e4e818560208601611df2565b611e5781611e1a565b840191505092915050565b5f606082019050611e755f830186611db1565b611e826020830185611dc9565b8181036040830152611e948184611e2a565b9050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ec782611e9e565b9050919050565b611ed781611ebd565b82525050565b5f67ffffffffffffffff82169050919050565b611ef981611edd565b82525050565b606082015f820151611f135f850182611ece565b506020820151611f266020850182611ef0565b506040820151611f396040850182611ef0565b50505050565b5f606082019050611f525f830184611eff565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611f9282611e1a565b810181811067ffffffffffffffff82111715611fb157611fb0611f5c565b5b80604052505050565b5f611fc3611ceb565b9050611fcf8282611f89565b919050565b5f67ffffffffffffffff821115611fee57611fed611f5c565b5b611ff782611e1a565b9050602081019050919050565b828183375f83830152505050565b5f61202461201f84611fd4565b611fba565b9050828152602081018484840111156120405761203f611f58565b5b61204b848285612004565b509392505050565b5f82601f83011261206757612066611cfc565b5b8135612077848260208601612012565b91505092915050565b61208981611dc0565b8114612093575f80fd5b50565b5f813590506120a481612080565b92915050565b6120b381611da8565b81146120bd575f80fd5b50565b5f813590506120ce816120aa565b92915050565b5f805f606084860312156120eb576120ea611cf4565b5b5f84013567ffffffffffffffff81111561210857612107611cf8565b5b61211486828701612053565b935050602061212586828701612096565b9250506040612136868287016120c0565b9150509250925092565b61214981611ebd565b82525050565b5f6020820190506121625f830184612140565b92915050565b61217181611edd565b82525050565b5f60608201905061218a5f830186612140565b6121976020830185612168565b6121a46040830184612168565b949350505050565b5f6020820190506121bf5f830184611db1565b92915050565b6121ce81611ebd565b81146121d8575f80fd5b50565b5f813590506121e9816121c5565b92915050565b6121f881611edd565b8114612202575f80fd5b50565b5f81359050612213816121ef565b92915050565b5f806040838503121561222f5761222e611cf4565b5b5f61223c858286016121db565b925050602061224d85828601612205565b9150509250929050565b5f60208201905061226a5f830184612168565b92915050565b5f6020828403121561228557612284611cf4565b5b5f612292848285016121db565b91505092915050565b5f819050919050565b5f6122be6122b96122b484611e9e565b61229b565b611e9e565b9050919050565b5f6122cf826122a4565b9050919050565b5f6122e0826122c5565b9050919050565b6122f0816122d6565b82525050565b5f6020820190506123095f8301846122e7565b92915050565b5f805f805f805f60a0888a03121561232a57612329611cf4565b5b5f6123378a828b016121db565b97505060206123488a828b01612096565b965050604088013567ffffffffffffffff81111561236957612368611cf8565b5b6123758a828b01611d08565b955095505060606123888a828b016121db565b935050608088013567ffffffffffffffff8111156123a9576123a8611cf8565b5b6123b58a828b01611d08565b925092505092959891949750929550565b5f80604083850312156123dc576123db611cf4565b5b5f6123e9858286016121db565b92505060206123fa858286016120c0565b9150509250929050565b5f8115159050919050565b61241881612404565b8114612422575f80fd5b50565b5f813590506124338161240f565b92915050565b5f806040838503121561244f5761244e611cf4565b5b5f61245c858286016120c0565b925050602061246d85828601612425565b9150509250929050565b61248081611da8565b82525050565b606082015f82015161249a5f850182612477565b5060208201516124ad6020850182612477565b5060408201516124c06040850182611ef0565b50505050565b5f6060820190506124d95f830184612486565b92915050565b5f6124e9826122c5565b9050919050565b6124f9816124df565b82525050565b5f6020820190506125125f8301846124f0565b92915050565b5f6040820190508181035f8301526125308185611e2a565b905061253f6020830184611db1565b9392505050565b5f6020820190508181035f83015261255e8184611e2a565b905092915050565b5f81905092915050565b50565b5f61257e5f83612566565b915061258982612570565b5f82019050919050565b5f61259d82612573565b9150819050919050565b5f6040820190506125ba5f830185612140565b6125c76020830184611db1565b9392505050565b5f6040820190506125e15f830185612140565b6125ee6020830184612140565b9392505050565b5f6126008385611de2565b935061260d838584612004565b61261683611e1a565b840190509392505050565b5f6020820190508181035f83015261263a8184866125f5565b90509392505050565b5f81519050612651816120aa565b92915050565b5f8151905061266581612080565b92915050565b5f61267d61267884611fd4565b611fba565b90508281526020810184848401111561269957612698611f58565b5b6126a4848285611df2565b509392505050565b5f82601f8301126126c0576126bf611cfc565b5b81516126d084826020860161266b565b91505092915050565b5f805f606084860312156126f0576126ef611cf4565b5b5f6126fd86828701612643565b935050602061270e86828701612657565b925050604084015167ffffffffffffffff81111561272f5761272e611cf8565b5b61273b868287016126ac565b9150509250925092565b5f6060820190508181035f83015261275d8186611e2a565b905061276c6020830185611dc9565b6127796040830184611db1565b949350505050565b5f8151905061278f816121c5565b92915050565b5f602082840312156127aa576127a9611cf4565b5b5f6127b784828501612781565b91505092915050565b5f815190506127ce8161240f565b92915050565b5f602082840312156127e9576127e8611cf4565b5b5f6127f6848285016127c0565b91505092915050565b5f80fd5b5f80fd5b5f808585111561281a576128196127ff565b5b8386111561282b5761282a612803565b5b6001850283019150848603905094509492505050565b5f82905092915050565b5f82821b905092915050565b5f6128628383612841565b8261286d8135611dc0565b925060208210156128ad576128a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261284b565b831692505b505092915050565b5f819050602082019050919050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b5f6128fa82516128c4565b80915050919050565b5f61290d82611dd8565b82612917846128b5565b9050612922816128ef565b925060148210156129625761295d7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360140360080261284b565b831692505b5050919050565b5f6129748251611dc0565b80915050919050565b5f61298782611dd8565b82612991846128b5565b905061299c81612969565b925060208210156129dc576129d77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261284b565b831692505b5050919050565b5f82825260208201905092915050565b5f6129fd82611dd8565b612a0781856129e3565b9350612a17818560208601611df2565b612a2081611e1a565b840191505092915050565b5f606083015f830151612a405f860182611ece565b506020830151612a536020860182612477565b5060408301518482036040860152612a6b82826129f3565b9150508091505092915050565b5f6020820190508181035f830152612a908184612a2b565b905092915050565b5f604082019050612aab5f830185612140565b612ab86020830184612168565b9392505050565b5f612ac982611dd8565b612ad38185612566565b9350612ae3818560208601611df2565b80840191505092915050565b5f612afa8284612abf565b915081905092915050565b5f80fd5b5f80fd5b5f81519050612b1b816121ef565b92915050565b5f60608284031215612b3657612b35612b05565b5b612b406060611fba565b90505f612b4f84828501612b0d565b5f830152506020612b6284828501612b0d565b6020830152506040612b7684828501612b0d565b60408301525092915050565b5f60608284031215612b9757612b96611cf4565b5b5f612ba484828501612b21565b91505092915050565b5f82825260208201905092915050565b5f612bc782611dd8565b612bd18185612bad565b9350612be1818560208601611df2565b612bea81611e1a565b840191505092915050565b5f6020820190508181035f830152612c0d8184612bbd565b905092915050565b5f60208284031215612c2a57612c29611cf4565b5b5f82015167ffffffffffffffff811115612c4757612c46611cf8565b5b612c53848285016126ac565b91505092915050565b5f60608284031215612c7157612c70612b05565b5b612c7b6060611fba565b90505f612c8a84828501612781565b5f830152506020612c9d84828501612643565b602083015250604082015167ffffffffffffffff811115612cc157612cc0612b09565b5b612ccd848285016126ac565b60408301525092915050565b5f60208284031215612cee57612ced611cf4565b5b5f82015167ffffffffffffffff811115612d0b57612d0a611cf8565b5b612d1784828501612c5c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115612da257808604811115612d7e57612d7d612d20565b5b6001851615612d8d5780820291505b8081029050612d9b85612d4d565b9450612d62565b94509492505050565b5f82612dba5760019050612e75565b81612dc7575f9050612e75565b8160018114612ddd5760028114612de757612e16565b6001915050612e75565b60ff841115612df957612df8612d20565b5b8360020a915084821115612e1057612e0f612d20565b5b50612e75565b5060208310610133831016604e8410600b8410161715612e4b5782820a905083811115612e4657612e45612d20565b5b612e75565b612e588484846001612d59565b92509050818404811115612e6f57612e6e612d20565b5b81810290505b9392505050565b5f612e8682611da8565b9150612e9183611edd565b9250612ebe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612dab565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612efd82611da8565b9150612f0883611da8565b925082612f1857612f17612ec6565b5b828204905092915050565b5f604082019050612f365f830185612168565b612f436020830184612168565b9392505050565b5f612f5482611edd565b9150612f5f83611edd565b9250828203905067ffffffffffffffff811115612f7f57612f7e612d20565b5b92915050565b5f612f8f82611da8565b9150612f9a83611da8565b9250828202612fa881611da8565b91508282048414831517612fbf57612fbe612d20565b5b5092915050565b5f612fd082611da8565b9150612fdb83611da8565b9250828203905081811115612ff357612ff2612d20565b5b92915050565b5f61300382611da8565b915061300e83611da8565b925082820190508082111561302657613025612d20565b5b9291505056fea264697066735822122071985d961321e1bdce2201740af446e08456eb6ced8aecf3761c5b0de55378c264736f6c63430008160033a2646970667358221220e88382e046144677324157796e606d361c4ef409c3861e7ac1fcb8f43abe110c64736f6c63430008160033",
    "sourceMap": "980:6670:76:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:1311;;;:::i;:::-;;3136:570;;;:::i;:::-;;1475:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2907:134:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3823:151;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1086:86:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3684:133:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3385:141;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1777:35:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3193:186:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7117:396:76;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1057:23;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3047:140:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1723:48:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:146:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1503:18:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1527:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3712:1435;;;:::i;:::-;;2754:147:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2459:141;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1243:204:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1273:101:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1673:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1027:24;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1404:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1626:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1178:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1580:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2606:142:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5153:1958:76;;;:::i;:::-;;1016:26:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:1311:76;317:28:38;309:37;;1853:19:76;;;:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1934:175;;;;;;;;1980:54;2029:4;1980:48;:54::i;:::-;1934:175;;;;;;2061:4;1934:175;;;;;;2092:6;1934:175;;;;;1926:5;:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2127:164;;;;;;;;2173:42;2127:164;;;;;;2242:4;2127:164;;;;;;2273:7;2127:164;;;;;2120:4;:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:38;309:37;;2302:7:76;;;1332:42;2352:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2344:45;;;;;;;;;;;;;;;;;;;;;;;;;2302:88;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1332:42;2400:74;;;2488:5;:24;;;;;;;;;;;;2526:5;:17;;;;;;;;;;;;2557:16;2400:183;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1332:42;2594:74;;;2682:4;:23;;;;;;;;;;;;2719:4;:16;;;;;;;;;;;;2749;2594:181;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1130:42;2839:10;2792:58;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2786:3;;:64;;;;;;;;;;;;;;;;;;1130:42;2959:3;;;;;;;;;;;2977:5;:17;;;;;;;;;;;;3008:5;:17;;;;;;;;;;;;2883:152;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2861:19;;:174;;;;;;;;;;;;;;;;;;3055:3;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3045:7;;:30;;;;;;;;;;;;;;;;;;317:28:38;309:37;;3086:7:76;;;1130:42;3113:9;3086:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:1311::o;3136:570::-;3185:28;3216:19;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3185:65;;3260:82;3269:9;:28;;;3299:42;3260:8;:82::i;:::-;3352:37;3361:9;:21;;;3352:37;;3384:4;3352:8;:37::i;:::-;3399:35;3408:9;:21;;;3399:35;;3431:2;3399:8;:35::i;:::-;3445:27;3475:19;;;;;;;;;;;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3445:63;;3518;3527:8;:27;;;3556:5;:24;;;;;;;;;;;;3518:8;:63::i;:::-;3591:49;3600:8;:20;;;3591:49;;3622:5;:17;;;;;;;;;;;;3591:49;;:8;:49::i;:::-;3650;3659:8;:20;;;3650:49;;3681:5;:17;;;;;;;;;;;;3650:49;;:8;:49::i;:::-;3175:531;;3136:570::o;1475:21::-;;;;;;;;;;;;;:::o;2907:134:43:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;3823:151::-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;1086:86:76:-;1130:42;1086:86;:::o;3684:133:43:-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;3385:141::-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;1777:35:76:-;1807:5;1777:35;:::o;3193:186:43:-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3193:186;:::o;7117:396:76:-;1332:42;7187:74;;;7275:4;:23;;;;;;;;;;;;7312:4;:16;;;;;;;;;;;;7342:8;7187:173;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7371:14;7388:19;;;;;;;;;;;:38;;;7427:4;:23;;;;;;;;;;;;7452:4;:16;;;;;;;;;;;;7388:81;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7371:98;;7479:27;7488:7;7479:27;;7497:8;7479:27;;:8;:27::i;:::-;7177:336;7117:396;:::o;1057:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3047:140:43:-;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:140;:::o;1723:48:76:-;1763:8;1723:48;:::o;3532:146:43:-;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:146;:::o;1503:18:76:-;;;;;;;;;;;;;:::o;1527:46::-;;;;;;;;;;;;;:::o;3712:1435::-;3769:23;3812:5;;;;;;;;;;;3795:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;3769:49;;3899:25;3927:173;3966:1;1437:5;1807;1713:4;4002:21;;;;:::i;:::-;3927:173;;4054:23;4071:5;;;;;;;;;;;4054:16;:23::i;:::-;4079:10;4037:53;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3927:25;:173::i;:::-;3899:201;;4111:71;4124:3;;;;;;;;;;;4138:19;;;;;;;;;;;1807:5;1713:4;4160:21;;;;:::i;:::-;4111:71;;:4;:71::i;:::-;4193:76;4202:3;;;;;;;;;;;:13;;;4224:19;;;;;;;;;;;4202:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1807:5;1713:4;4247:21;;;;:::i;:::-;4193:76;;:8;:76::i;:::-;317:28:38;309:37;;4331:13:76;;;4353:3;;;;;;;;;;;4331:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4419:5;:24;;;;;;;;;;;;4373:87;;4397:19;;;;;;;;;;;4373:87;;;1713:4;4373:87;;;;;;:::i;:::-;;;;;;;;317:28:38;309:37;;4522:13:76;;;4536:19;;;;;;;;;;;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4522:57;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4686:5;;;;;;;;;;;4594:200;;4652:19;;;;;;;;;;;4594:200;;;4705:5;:17;;;;;;;;;;;;4766:5;:17;;;;;;;;;;;;4760:2;:23;;;;:::i;:::-;1713:4;4743:40;;;;;;:::i;:::-;4594:200;;;;;;;:::i;:::-;;;;;;;;4805:21;4829:3;;;;;;;;;;;:13;;;4843:5;;;;;;;;;;;4829:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4805:44;;317:28:38;309:37;;4860:13:76;;;1130:42;4860:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4902:19;;;;;;;;;;;:29;;;4940:3;;;;;;;;;;;4954:1;4946:10;;4958:12;4972:10;4902:85;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:38;309:37;;4997:12:76;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5022:56;5031:3;;;;;;;;;;;:13;;;5053:19;;;;;;;;;;;5031:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5076:1;5022:8;:56::i;:::-;5088:52;5097:3;;;;;;;;;;;:13;;;5111:5;;;;;;;;;;;5097:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1807:5;5119:20;;:13;:20;;;;:::i;:::-;5088:8;:52::i;:::-;3759:1388;;;3712:1435::o;2754:147:43:-;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:147;:::o;2459:141::-;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;:::o;1243:204:39:-;1282:4;1302:7;;;;;;;;;;;1298:143;;;1332:7;;;;;;;;;;;1325:14;;;;1298:143;1428:1;1420:10;;219:28;211:37;;1377:7;;;219:28;211:37;;1398:17;1377:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;;:::o;1273:101:76:-;1332:42;1273:101;:::o;1673:44::-;1713:4;1673:44;:::o;1027:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1404:38::-;1437:5;1404:38;:::o;1626:40::-;;;;;;;;;;;;;:::o;1178:89::-;1225:42;1178:89;:::o;1580:40::-;;;;;;;;;;;;;:::o;2606:142:43:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;5153:1958:76:-;5211:23;5254:5;;;;;;;;;;;5237:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;5211:49;;5341:25;5369:166;5408:1;1437:5;1713:4;5369:166;;5489:23;5506:5;;;;;;;;;;;5489:16;:23::i;:::-;5514:10;5472:53;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5369:25;:166::i;:::-;5341:194;;5546:64;5559:3;;;;;;;;;;;5573:19;;;;;;;;;;;1713:4;5546:64;;:4;:64::i;:::-;5620:69;5629:3;;;;;;;;;;;:13;;;5651:19;;;;;;;;;;;5629:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1713:4;5620:69;;:8;:69::i;:::-;317:28:38;309:37;;5785:13:76;;;5799:19;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;;5785:68;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5901:19;;;;;;;;;;;5868:70;;;1763:8;5868:70;;;;;;:::i;:::-;;;;;;;;317:28:38;309:37;;6000:13:76;;;6022:3;;;;;;;;;;;6000:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6088:5;:24;;;;;;;;;;;;6042:87;;6066:19;;;;;;;;;;;6042:87;;;1713:4;6042:87;;;;;;:::i;:::-;;;;;;;;317:28:38;309:37;;6228:13:76;;;6242:19;;;;;;;;;;;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6228:57;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6392:5;;;;;;;;;;;6300:200;;6358:19;;;;;;;;;;;6300:200;;;6411:5;:17;;;;;;;;;;;;6472:5;:17;;;;;;;;;;;;6466:2;:23;;;;:::i;:::-;1713:4;6449:40;;;;;;:::i;:::-;6300:200;;;;;;;:::i;:::-;;;;;;;;6511:27;6541:4;:23;;;;;;;;;;;;:31;;;6511:61;;6582:26;6611:5;;;;;;;;;;;:13;;;6582:42;;317:28:38;309:37;;6635:13:76;;;1130:42;6635:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6677:19;;;;;;;;;;;:29;;;1807:5;1763:8;6715:21;;;;:::i;:::-;6677:187;;6760:3;;;;;;;;;;;6786:1;6778:10;;6802:12;6828:10;6677:187;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:38;309:37;;6874:12:76;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6899:56;6908:3;;;;;;;;;;;:13;;;6930:19;;;;;;;;;;;6908:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6953:1;6899:8;:56::i;:::-;6965:79;6974:4;:23;;;;;;;;;;;;:31;;;1763:8;7007:36;;:19;:36;;;;:::i;:::-;6965:8;:79::i;:::-;7054:50;7063:5;;;;;;;;;;;:13;;;1807:5;7078:25;;:18;:25;;;;:::i;:::-;7054:8;:50::i;:::-;5201:1910;;;;5153:1958::o;1016:26:50:-;;;;;;;;;;;;;:::o;1797:177:7:-;1875:7;1953:12;1283:42;1391:43;;1917:48;;;;:::i;:::-;1894:73;;1797:177;;;:::o;3454:110:39:-;219:28;211:37;;3533:11;;;3545:4;3551:5;3533:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3454:110;;:::o;2270:::-;219:28;211:37;;2349:11;;;2361:4;2367:5;2349:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2270:110;;:::o;7519:129:76:-;7583:7;7633:5;7617:23;;7609:32;;7602:39;;7519:129;;;:::o;640:284:36:-;824:17;877:6;885:7;894:9;905:11;860:57;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;853:64;;640:284;;;;;;:::o;26964:117:41:-;27046:28;27051:5;27058:2;27062:4;27068:5;27046:4;:28::i;:::-;26964:117;;;:::o;27360:837::-;27489:20;27513:5;:16;;27553:10;27565:2;27530:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27513:56;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27486:83;;;27579:15;27608:7;27597:30;;;;;;;;;;;;:::i;:::-;27579:48;;27664:71;27730:4;27664:51;27712:2;27664:38;27691:10;27664:38;;:22;27680:5;27664:8;:15;;:22;;;;:::i;:::-;:26;;:38;;;;:::i;:::-;:47;;:51;;;;:::i;:::-;:65;;:71;;;;:::i;:::-;27781:6;27777:414;;;27806:23;27833:5;:16;;27873:10;27850:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27833:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27803:82;;;27899:14;27927:10;27916:33;;;;;;;;;;;;:::i;:::-;27899:50;;27974:7;27967:4;:14;27963:144;;;28022:4;28012:7;:14;;;;:::i;:::-;28001:26;;;;;:::i;:::-;;;27963:144;;;28084:7;28077:4;:14;;;;:::i;:::-;28066:26;;;;;:::i;:::-;;;27963:144;28120:60;28173:6;28120:38;28147:10;28120:38;;:22;28136:5;28120:8;:15;;:22;;;;:::i;:::-;:26;;:38;;;;:::i;:::-;:52;;:60;;;;:::i;:::-;27789:402;;27777:414;27445:752;;27360:837;;;;:::o;13258:156:46:-;13334:18;13371:36;13393:4;13399:7;13371:21;:36::i;:::-;13364:43;;13258:156;;;;:::o;13420:143::-;13489:18;13526:30;13545:4;13551;13526:18;:30::i;:::-;13519:37;;13420:143;;;;:::o;13725:152::-;13799:18;13836:34;13860:4;13866:3;13836:23;:34::i;:::-;13829:41;;13725:152;;;;:::o;14946:120::-;15026:33;15040:4;15054:3;15046:12;;15026:13;:33::i;:::-;14946:120;;:::o;6747:156::-;6823:18;6868:7;6853:4;:12;;;:22;;;;;;;;;;;;;;;;;;6892:4;6885:11;;6747:156;;;;:::o;6909:143::-;6978:18;7020:4;7008;:9;;;:16;;;;;;;;;;;;;;;;;;7041:4;7034:11;;6909:143;;;;:::o;7400:179::-;7474:18;7504:4;:10;;7544:3;7528:21;;7520:30;;7504:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7568:4;7561:11;;7400:179;;;;:::o;15438:1484::-;15518:11;15532:4;:12;;;;;;;;;;;;15518:26;;15554:11;15568:4;:9;;;;;;;;;;;;15554:23;;15587:19;15609:4;:11;;;15587:33;;15630:19;15652:34;15681:4;15652:28;:34::i;:::-;15630:56;;15702:4;:10;;:15;15713:3;15702:15;;;;;;;;;;;;;;;:21;15718:4;15702:21;;;;;;;;;;;;;;;;;:71;15751:6;15759:11;15734:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15724:48;;;;;;15702:71;;;;;;;;;;;:77;;;;;;;;;;;;15697:126;;15795:17;15800:4;15806:5;15795:4;:17::i;:::-;;15697:126;15832:21;15856:4;:10;;:15;15867:3;15856:15;;;;;;;;;;;;;;;:21;15872:4;15856:21;;;;;;;;;;;;;;;;;:71;15905:6;15913:11;15888:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15878:48;;;;;;15856:71;;;;;;;;;;;15832:95;;15980:1;15960:4;:16;;;15942:4;:15;;;:34;;;;:::i;:::-;15941:40;15937:460;;;15997:14;16045:4;:16;;;16027:4;:15;;;:34;;;;:::i;:::-;16020:3;:42;;;;:::i;:::-;16014:1;:49;;;;:::i;:::-;15997:66;;16117:6;16110:3;16102:12;;:21;12836:28;12828:37;;16313:11;;;16325:6;16313:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16169:185;;;;;;;;:::i;:::-;;;;;;;;;;;;;16077:309;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;15983:414;15937:460;16406:14;12836:28;12828:37;;16423:7;;;16431:3;16444:4;:9;;;16436:18;;16423:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16406:49;;16465:16;16484:91;16519:6;16535:3;16527:12;;16541:4;:15;;;16558:4;:16;;;16484:34;:91::i;:::-;16465:110;;12836:28;12828:37;;16586:8;;;16595:3;16608:4;:9;;;16600:18;;16620:8;16586:43;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16641:12;16655:18;16677:31;16703:4;16677:25;:31::i;:::-;16640:68;;;;16724:7;16723:8;:29;;;;16749:3;16735:10;:17;;16723:29;16719:176;;;12836:28;12828:37;;16768:8;;;16777:3;16790:4;:9;;;16782:18;;16802:6;16768:41;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16823:61;;;;;;;;;;:::i;:::-;;;;;;;;16719:176;16904:11;16910:4;16904:5;:11::i;:::-;15508:1414;;;;;;;;;15438:1484;;:::o;953:236::-;1024:12;1077:1;1052:4;:14;;:21;;;;;:::i;:::-;;;:26;1048:135;;1101:19;1109:4;:10;;1101:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:19::i;:::-;1094:26;;;;1048:135;1158:4;:14;;1151:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:236;;;;:::o;13111:141::-;13181:7;13207:33;13227:4;13233:6;13207:19;:33::i;:::-;:38;;;13200:45;;13111:141;;;;:::o;12455:300::-;12608:16;12735:11;12723:8;:23;;12677:41;12694:10;12706:11;12677:16;:41::i;:::-;12676:42;12664:8;12656:17;;:62;12655:92;12647:101;;12640:108;;12455:300;;;;;;:::o;1251:343::-;1319:4;1325:7;1344:17;1381:4;:9;;;;;;;;;;;;1392:19;1406:4;1392:13;:19::i;:::-;1364:48;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1344:68;;1423:12;1437:17;1458:4;:12;;;;;;;;;;;;:23;;1482:4;1458:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:65;;;;1497:14;1514:38;1529:4;1540;:11;;;1535:2;:16;;;;:::i;:::-;1514:14;:38::i;:::-;1497:55;;1571:7;1580:6;1563:24;;;;;;;;1251:343;;;:::o;14704:92::-;14763:26;14784:4;14763:20;:26::i;:::-;14704:92;:::o;11186:393::-;11245:12;11269:19;11312:2;11301:1;:8;:13;;;;:::i;:::-;11291:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11269:46;;11330:9;11325:224;11349:1;:8;11345:1;:12;11325:224;;;11378:9;11390:1;11392;11390:4;;;;;;;;:::i;:::-;;;;;;;;11378:16;;11523:1;11517;11513:2;11509:10;11505:2;11501:19;11493:6;11489:32;11482:43;11464:75;11359:3;;;;;;;11325:224;;;;11566:6;11559:13;;;11186:393;;;:::o;4249:2492::-;4319:16;4347:11;4361:4;:12;;;;;;;;;;;;4347:26;;4383:11;4397:4;:9;;;;;;;;;;;;4383:23;;4416:19;4438:4;:11;;;4416:33;;4459:19;4481;4495:4;4481:13;:19::i;:::-;4459:41;;4551:4;:10;;:15;4562:3;4551:15;;;;;;;;;;;;;;;:21;4567:4;4551:21;;;;;;;;;;;;;;;;;:71;4600:6;4608:11;4583:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4573:48;;;;;;4551:71;;;;;;;;;;;:77;;;;;;;;;;;;4547:255;;;4648:6;4644:56;;;4674:11;4680:4;4674:5;:11::i;:::-;4644:56;4720:4;:10;;:15;4731:3;4720:15;;;;;;;;;;;;;;;:21;4736:4;4720:21;;;;;;;;;;;;;;;;;:71;4769:6;4777:11;4752:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4742:48;;;;;;4720:71;;;;;;;;;;;4713:78;;;;;;;;4547:255;670:28;662:37;;4811:9;;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:18;4857:16;4868:4;4857:10;:16::i;:::-;4832:41;;;4884:22;670:28;662:37;;4911:11;;;4931:3;4911:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4883:53;;;4967:1;4951:5;:12;:17;4947:1460;;4984:74;;;;;;;;;;:::i;:::-;;;;;;;;4947:1460;5094:9;5106:5;:12;5094:24;;5089:1308;5127:1;5120:3;;;;:::i;:::-;;;;:8;5089:1308;;5149:12;670:28;662:37;;5164:7;;;5172:3;5177:5;5183:1;5177:8;;;;;;;;:::i;:::-;;;;;;;;5164:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5149:37;;5224:1;5216:10;;5208:4;:18;5204:114;;5255:44;5276:3;5289:5;5295:1;5289:8;;;;;;;;:::i;:::-;;;;;;;;5281:17;;5255:44;;;;;;;:::i;:::-;;;;;;;;5204:114;5341:36;5362:4;5368:5;5374:1;5368:8;;;;;;;;:::i;:::-;;;;;;;;5341:20;:36::i;:::-;5336:92;;5401:8;;;5336:92;5447:18;5467:19;5491:1;5494;5446:50;;;;5519:4;:25;;;;;;;;;;;;5515:256;;;5568:10;5635:27;5647:4;5653:5;5659:1;5653:8;;;;;;;;:::i;:::-;;;;;;;;5635:11;:27::i;:::-;5600:62;;;;;;;;;;;;5689:5;5684:69;;5722:8;;;;;;5684:69;5546:225;5515:256;5883:14;5963:11;5917:41;5934:10;5946:11;5917:16;:41::i;:::-;5909:4;5901:13;;:57;5900:74;;5883:91;;6020:6;6005:10;5997:19;;:29;5993:84;;6050:8;;;;;;5993:84;6100:89;6110:3;6115:4;6148:6;6156:11;6131:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6121:48;;;;;;6179:5;6185:1;6179:8;;;;;;;;:::i;:::-;;;;;;;;6171:17;;6100:89;;;;;;;;;:::i;:::-;;;;;;;;6301:58;;;;;;;;6318:5;6324:1;6318:8;;;;;;;;:::i;:::-;;;;;;;;6310:17;;6301:58;;;;6329:10;6301:58;;;;6341:11;6301:58;;;;6354:4;6301:58;;;;;6207:4;:10;;:15;6218:3;6207:15;;;;;;;;;;;;;;;:21;6223:4;6207:21;;;;;;;;;;;;;;;;;:71;6256:6;6264:11;6239:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6229:48;;;;;;6207:71;;;;;;;;;;;:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6377:5;;;;;;5089:1308;;;;;6438:4;:10;;:15;6449:3;6438:15;;;;;;;;;;;;;;;:21;6454:4;6438:21;;;;;;;;;;;;;;;;;:71;6487:6;6495:11;6470:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6460:48;;;;;;6438:71;;;;;;;;;;;:77;;;;;;;;;;;;6417:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;6603:6;6599:48;;;6625:11;6631:4;6625:5;:11::i;:::-;6599:48;6663:4;:10;;:15;6674:3;6663:15;;;;;;;;;;;;;;;:21;6679:4;6663:21;;;;;;;;;;;;;;;;;:71;6712:6;6720:11;6695:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6685:48;;;;;;6663:71;;;;;;;;;;;6656:78;;;;;;;;4249:2492;;;;;:::o;12017:376::-;12107:12;12374:1;12370;12356:10;12343:11;12339:28;12334:3;12330:38;12326:46;12322:54;12309:11;12305:72;12297:80;;12017:376;;;;:::o;10876:304::-;10954:7;10973:11;10995;11020:2;11009:1;:8;:13;:29;;11030:1;:8;11009:29;;;11025:2;11009:29;10995:43;;11053:9;11048:106;11072:3;11068:1;:7;11048:106;;;11141:1;11137;:5;;;;:::i;:::-;11127:4;11111:20;;:1;11122;11113:6;:10;;;;:::i;:::-;11111:13;;;;;;;;:::i;:::-;;;;;;;;;;:20;11103:29;;;:40;;11096:47;;;;11077:3;;;;;;;11048:106;;;;11170:3;11163:10;;;;10876:304;;;;:::o;11585:239::-;11651:4;:12;;;11644:19;;;;;;;;;;;11680:4;:9;;;11673:16;;;;;;;;;;;11706:4;:10;;;11699:17;;;;:::i;:::-;11733:4;:11;;11726:18;;;11761:4;:25;;;11754:32;;;;;;;;;;;11803:4;:14;;;11796:21;;;;:::i;:::-;11585:239;:::o;1851:546::-;1938:4;1954:21;670:28;662:37;;1978:7;;;1986:4;:12;;;;;;;;;;;;2000:4;1978:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1954:51;;2016:12;2030:23;2057:16;2068:4;2057:10;:16::i;:::-;2015:58;;;;2084:15;2129:1;2121:10;;2102:15;:29;:65;;2165:1;2157:10;;2102:65;;;739:78;2134:20;;2102:65;2084:83;;670:28;662:37;;2177:8;;;2186:4;:12;;;;;;;;;;;;2200:4;2206:7;2177:37;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:22;2254:16;2265:4;2254:10;:16::i;:::-;2225:45;;;670:28;662:37;;2281:8;;;2290:4;:12;;;;;;;;;;;;2304:4;2310:13;2281:43;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:7;:46;;;;;2374:14;2355:15;:33;;2343:46;2335:55;;;;;;;1851:546;;;;:::o;3080:534::-;3158:4;3164:7;3173;3192:21;670:28;662:37;;3216:7;;;3224:4;:12;;;;;;;;;;;;3238:4;3216:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3192:51;;3255:14;3271:18;3293:28;3304:4;3310;3316;3293:10;:28::i;:::-;3254:67;;;;3332:15;3349:19;3372:29;3383:4;3389;3395:5;3372:10;:29::i;:::-;3331:70;;;;670:28;662:37;;3497:8;;;3506:4;:12;;;;;;;;;;;;3520:4;3526:13;3497:43;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:9;:23;;;;;3571:10;3558:23;3583:10;3595:11;3550:57;;;;;;;;;;;3080:534;;;;;:::o;2560:514::-;2648:4;2654:7;2678:14;2673:368;2707:3;2698:6;:12;2673:368;;;2736:18;2757:4;:44;;2794:6;2789:1;:11;;2757:44;;;2777:6;2771:3;:12;;;;:::i;:::-;2765:1;:19;;2757:44;2736:65;;670:28;662:37;;2815:8;;;2824:4;:12;;;;;;;;;;;;2838:4;2852:10;2844:19;;2815:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2880:12;2894;2910:16;2921:4;2910:10;:16::i;:::-;2879:47;;;;2945:7;:30;;;;;2973:1;2965:4;2957:13;;:17;2945:30;2941:90;;;3003:4;3009:6;2995:21;;;;;;;;;;2941:90;2722:319;;;2712:8;;;;;;;2673:368;;;;3058:5;3065:1;3050:17;;;;2560:514;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:93:84:-;43:7;83:10;76:5;72:22;61:33;;7:93;;;:::o;106:115::-;191:23;208:5;191:23;:::i;:::-;186:3;179:36;106:115;;:::o;227:218::-;318:4;356:2;345:9;341:18;333:26;;369:69;435:1;424:9;420:17;411:6;369:69;:::i;:::-;227:218;;;;:::o;451:114::-;518:6;552:5;546:12;536:22;;451:114;;;:::o;571:184::-;670:11;704:6;699:3;692:19;744:4;739:3;735:14;720:29;;571:184;;;;:::o;761:132::-;828:4;851:3;843:11;;881:4;876:3;872:14;864:22;;761:132;;;:::o;899:126::-;936:7;976:42;969:5;965:54;954:65;;899:126;;;:::o;1031:96::-;1068:7;1097:24;1115:5;1097:24;:::i;:::-;1086:35;;1031:96;;;:::o;1133:108::-;1210:24;1228:5;1210:24;:::i;:::-;1205:3;1198:37;1133:108;;:::o;1247:179::-;1316:10;1337:46;1379:3;1371:6;1337:46;:::i;:::-;1415:4;1410:3;1406:14;1392:28;;1247:179;;;;:::o;1432:113::-;1502:4;1534;1529:3;1525:14;1517:22;;1432:113;;;:::o;1581:732::-;1700:3;1729:54;1777:5;1729:54;:::i;:::-;1799:86;1878:6;1873:3;1799:86;:::i;:::-;1792:93;;1909:56;1959:5;1909:56;:::i;:::-;1988:7;2019:1;2004:284;2029:6;2026:1;2023:13;2004:284;;;2105:6;2099:13;2132:63;2191:3;2176:13;2132:63;:::i;:::-;2125:70;;2218:60;2271:6;2218:60;:::i;:::-;2208:70;;2064:224;2051:1;2048;2044:9;2039:14;;2004:284;;;2008:14;2304:3;2297:10;;1705:608;;;1581:732;;;;:::o;2319:373::-;2462:4;2500:2;2489:9;2485:18;2477:26;;2549:9;2543:4;2539:20;2535:1;2524:9;2520:17;2513:47;2577:108;2680:4;2671:6;2577:108;:::i;:::-;2569:116;;2319:373;;;;:::o;2698:146::-;2797:6;2831:5;2825:12;2815:22;;2698:146;;;:::o;2850:216::-;2981:11;3015:6;3010:3;3003:19;3055:4;3050:3;3046:14;3031:29;;2850:216;;;;:::o;3072:164::-;3171:4;3194:3;3186:11;;3224:4;3219:3;3215:14;3207:22;;3072:164;;;:::o;3242:124::-;3319:6;3353:5;3347:12;3337:22;;3242:124;;;:::o;3372:184::-;3471:11;3505:6;3500:3;3493:19;3545:4;3540:3;3536:14;3521:29;;3372:184;;;;:::o;3562:142::-;3639:4;3662:3;3654:11;;3692:4;3687:3;3683:14;3675:22;;3562:142;;;:::o;3710:99::-;3762:6;3796:5;3790:12;3780:22;;3710:99;;;:::o;3815:159::-;3889:11;3923:6;3918:3;3911:19;3963:4;3958:3;3954:14;3939:29;;3815:159;;;;:::o;3980:246::-;4061:1;4071:113;4085:6;4082:1;4079:13;4071:113;;;4170:1;4165:3;4161:11;4155:18;4151:1;4146:3;4142:11;4135:39;4107:2;4104:1;4100:10;4095:15;;4071:113;;;4218:1;4209:6;4204:3;4200:16;4193:27;4042:184;3980:246;;;:::o;4232:102::-;4273:6;4324:2;4320:7;4315:2;4308:5;4304:14;4300:28;4290:38;;4232:102;;;:::o;4340:357::-;4418:3;4446:39;4479:5;4446:39;:::i;:::-;4501:61;4555:6;4550:3;4501:61;:::i;:::-;4494:68;;4571:65;4629:6;4624:3;4617:4;4610:5;4606:16;4571:65;:::i;:::-;4661:29;4683:6;4661:29;:::i;:::-;4656:3;4652:39;4645:46;;4422:275;4340:357;;;;:::o;4703:196::-;4792:10;4827:66;4889:3;4881:6;4827:66;:::i;:::-;4813:80;;4703:196;;;;:::o;4905:123::-;4985:4;5017;5012:3;5008:14;5000:22;;4905:123;;;:::o;5062:971::-;5191:3;5220:64;5278:5;5220:64;:::i;:::-;5300:86;5379:6;5374:3;5300:86;:::i;:::-;5293:93;;5412:3;5457:4;5449:6;5445:17;5440:3;5436:27;5487:66;5547:5;5487:66;:::i;:::-;5576:7;5607:1;5592:396;5617:6;5614:1;5611:13;5592:396;;;5688:9;5682:4;5678:20;5673:3;5666:33;5739:6;5733:13;5767:84;5846:4;5831:13;5767:84;:::i;:::-;5759:92;;5874:70;5937:6;5874:70;:::i;:::-;5864:80;;5973:4;5968:3;5964:14;5957:21;;5652:336;5639:1;5636;5632:9;5627:14;;5592:396;;;5596:14;6004:4;5997:11;;6024:3;6017:10;;5196:837;;;;;5062:971;;;;:::o;6117:665::-;6240:3;6276:4;6271:3;6267:14;6363:4;6356:5;6352:16;6346:23;6382:63;6439:4;6434:3;6430:14;6416:12;6382:63;:::i;:::-;6291:164;6542:4;6535:5;6531:16;6525:23;6595:3;6589:4;6585:14;6578:4;6573:3;6569:14;6562:38;6621:123;6739:4;6725:12;6621:123;:::i;:::-;6613:131;;6465:290;6772:4;6765:11;;6245:537;6117:665;;;;:::o;6788:284::-;6921:10;6956:110;7062:3;7054:6;6956:110;:::i;:::-;6942:124;;6788:284;;;;:::o;7078:145::-;7180:4;7212;7207:3;7203:14;7195:22;;7078:145;;;:::o;7311:1167::-;7494:3;7523:86;7603:5;7523:86;:::i;:::-;7625:118;7736:6;7731:3;7625:118;:::i;:::-;7618:125;;7769:3;7814:4;7806:6;7802:17;7797:3;7793:27;7844:88;7926:5;7844:88;:::i;:::-;7955:7;7986:1;7971:462;7996:6;7993:1;7990:13;7971:462;;;8067:9;8061:4;8057:20;8052:3;8045:33;8118:6;8112:13;8146:128;8269:4;8254:13;8146:128;:::i;:::-;8138:136;;8297:92;8382:6;8297:92;:::i;:::-;8287:102;;8418:4;8413:3;8409:14;8402:21;;8031:402;8018:1;8015;8011:9;8006:14;;7971:462;;;7975:14;8449:4;8442:11;;8469:3;8462:10;;7499:979;;;;;7311:1167;;;;:::o;8484:501::-;8691:4;8729:2;8718:9;8714:18;8706:26;;8778:9;8772:4;8768:20;8764:1;8753:9;8749:17;8742:47;8806:172;8973:4;8964:6;8806:172;:::i;:::-;8798:180;;8484:501;;;;:::o;8991:118::-;9078:24;9096:5;9078:24;:::i;:::-;9073:3;9066:37;8991:118;;:::o;9115:222::-;9208:4;9246:2;9235:9;9231:18;9223:26;;9259:71;9327:1;9316:9;9312:17;9303:6;9259:71;:::i;:::-;9115:222;;;;:::o;9343:101::-;9379:7;9419:18;9412:5;9408:30;9397:41;;9343:101;;;:::o;9450:115::-;9535:23;9552:5;9535:23;:::i;:::-;9530:3;9523:36;9450:115;;:::o;9571:218::-;9662:4;9700:2;9689:9;9685:18;9677:26;;9713:69;9779:1;9768:9;9764:17;9755:6;9713:69;:::i;:::-;9571:218;;;;:::o;9795:153::-;9901:6;9935:5;9929:12;9919:22;;9795:153;;;:::o;9954:223::-;10092:11;10126:6;10121:3;10114:19;10166:4;10161:3;10157:14;10142:29;;9954:223;;;;:::o;10183:171::-;10289:4;10312:3;10304:11;;10342:4;10337:3;10333:14;10325:22;;10183:171;;;:::o;10360:113::-;10426:6;10460:5;10454:12;10444:22;;10360:113;;;:::o;10479:173::-;10567:11;10601:6;10596:3;10589:19;10641:4;10636:3;10632:14;10617:29;;10479:173;;;;:::o;10658:131::-;10724:4;10747:3;10739:11;;10777:4;10772:3;10768:14;10760:22;;10658:131;;;:::o;10795:149::-;10831:7;10871:66;10864:5;10860:78;10849:89;;10795:149;;;:::o;10950:105::-;11025:23;11042:5;11025:23;:::i;:::-;11020:3;11013:36;10950:105;;:::o;11061:175::-;11128:10;11149:44;11189:3;11181:6;11149:44;:::i;:::-;11225:4;11220:3;11216:14;11202:28;;11061:175;;;;:::o;11242:112::-;11311:4;11343;11338:3;11334:14;11326:22;;11242:112;;;:::o;11388:704::-;11495:3;11524:53;11571:5;11524:53;:::i;:::-;11593:75;11661:6;11656:3;11593:75;:::i;:::-;11586:82;;11692:55;11741:5;11692:55;:::i;:::-;11770:7;11801:1;11786:281;11811:6;11808:1;11805:13;11786:281;;;11887:6;11881:13;11914:61;11971:3;11956:13;11914:61;:::i;:::-;11907:68;;11998:59;12050:6;11998:59;:::i;:::-;11988:69;;11846:221;11833:1;11830;11826:9;11821:14;;11786:281;;;11790:14;12083:3;12076:10;;11500:592;;;11388:704;;;;:::o;12190:732::-;12327:3;12363:4;12358:3;12354:14;12454:4;12447:5;12443:16;12437:23;12507:3;12501:4;12497:14;12490:4;12485:3;12481:14;12474:38;12533:73;12601:4;12587:12;12533:73;:::i;:::-;12525:81;;12378:239;12704:4;12697:5;12693:16;12687:23;12757:3;12751:4;12747:14;12740:4;12735:3;12731:14;12724:38;12783:101;12879:4;12865:12;12783:101;:::i;:::-;12775:109;;12627:268;12912:4;12905:11;;12332:590;12190:732;;;;:::o;12928:312::-;13075:10;13110:124;13230:3;13222:6;13110:124;:::i;:::-;13096:138;;12928:312;;;;:::o;13246:152::-;13355:4;13387;13382:3;13378:14;13370:22;;13246:152;;;:::o;13500:1223::-;13697:3;13726:93;13813:5;13726:93;:::i;:::-;13835:125;13953:6;13948:3;13835:125;:::i;:::-;13828:132;;13986:3;14031:4;14023:6;14019:17;14014:3;14010:27;14061:95;14150:5;14061:95;:::i;:::-;14179:7;14210:1;14195:483;14220:6;14217:1;14214:13;14195:483;;;14291:9;14285:4;14281:20;14276:3;14269:33;14342:6;14336:13;14370:142;14507:4;14492:13;14370:142;:::i;:::-;14362:150;;14535:99;14627:6;14535:99;:::i;:::-;14525:109;;14663:4;14658:3;14654:14;14647:21;;14255:423;14242:1;14239;14235:9;14230:14;;14195:483;;;14199:14;14694:4;14687:11;;14714:3;14707:10;;13702:1021;;;;;13500:1223;;;;:::o;14729:529::-;14950:4;14988:2;14977:9;14973:18;14965:26;;15037:9;15031:4;15027:20;15023:1;15012:9;15008:17;15001:47;15065:186;15246:4;15237:6;15065:186;:::i;:::-;15057:194;;14729:529;;;;:::o;15264:75::-;15297:6;15330:2;15324:9;15314:19;;15264:75;:::o;15345:117::-;15454:1;15451;15444:12;15468:117;15577:1;15574;15567:12;15591:120;15663:23;15680:5;15663:23;:::i;:::-;15656:5;15653:34;15643:62;;15701:1;15698;15691:12;15643:62;15591:120;:::o;15717:137::-;15762:5;15800:6;15787:20;15778:29;;15816:32;15842:5;15816:32;:::i;:::-;15717:137;;;;:::o;15860:327::-;15918:6;15967:2;15955:9;15946:7;15942:23;15938:32;15935:119;;;15973:79;;:::i;:::-;15935:119;16093:1;16118:52;16162:7;16153:6;16142:9;16138:22;16118:52;:::i;:::-;16108:62;;16064:116;15860:327;;;;:::o;16193:434::-;16338:4;16376:2;16365:9;16361:18;16353:26;;16389:71;16457:1;16446:9;16442:17;16433:6;16389:71;:::i;:::-;16470:70;16536:2;16525:9;16521:18;16512:6;16470:70;:::i;:::-;16550;16616:2;16605:9;16601:18;16592:6;16550:70;:::i;:::-;16193:434;;;;;;:::o;16633:194::-;16742:11;16776:6;16771:3;16764:19;16816:4;16811:3;16807:14;16792:29;;16633:194;;;;:::o;16861:991::-;17000:3;17029:64;17087:5;17029:64;:::i;:::-;17109:96;17198:6;17193:3;17109:96;:::i;:::-;17102:103;;17231:3;17276:4;17268:6;17264:17;17259:3;17255:27;17306:66;17366:5;17306:66;:::i;:::-;17395:7;17426:1;17411:396;17436:6;17433:1;17430:13;17411:396;;;17507:9;17501:4;17497:20;17492:3;17485:33;17558:6;17552:13;17586:84;17665:4;17650:13;17586:84;:::i;:::-;17578:92;;17693:70;17756:6;17693:70;:::i;:::-;17683:80;;17792:4;17787:3;17783:14;17776:21;;17471:336;17458:1;17455;17451:9;17446:14;;17411:396;;;17415:14;17823:4;17816:11;;17843:3;17836:10;;17005:847;;;;;16861:991;;;;:::o;17858:413::-;18021:4;18059:2;18048:9;18044:18;18036:26;;18108:9;18102:4;18098:20;18094:1;18083:9;18079:17;18072:47;18136:128;18259:4;18250:6;18136:128;:::i;:::-;18128:136;;17858:413;;;;:::o;18277:145::-;18375:6;18409:5;18403:12;18393:22;;18277:145;;;:::o;18428:215::-;18558:11;18592:6;18587:3;18580:19;18632:4;18627:3;18623:14;18608:29;;18428:215;;;;:::o;18649:163::-;18747:4;18770:3;18762:11;;18800:4;18795:3;18791:14;18783:22;;18649:163;;;:::o;18894:641::-;19015:3;19051:4;19046:3;19042:14;19138:4;19131:5;19127:16;19121:23;19157:63;19214:4;19209:3;19205:14;19191:12;19157:63;:::i;:::-;19066:164;19317:4;19310:5;19306:16;19300:23;19370:3;19364:4;19360:14;19353:4;19348:3;19344:14;19337:38;19396:101;19492:4;19478:12;19396:101;:::i;:::-;19388:109;;19240:268;19525:4;19518:11;;19020:515;18894:641;;;;:::o;19541:280::-;19672:10;19707:108;19811:3;19803:6;19707:108;:::i;:::-;19693:122;;19541:280;;;;:::o;19827:144::-;19928:4;19960;19955:3;19951:14;19943:22;;19827:144;;;:::o;20057:1159::-;20238:3;20267:85;20346:5;20267:85;:::i;:::-;20368:117;20478:6;20473:3;20368:117;:::i;:::-;20361:124;;20511:3;20556:4;20548:6;20544:17;20539:3;20535:27;20586:87;20667:5;20586:87;:::i;:::-;20696:7;20727:1;20712:459;20737:6;20734:1;20731:13;20712:459;;;20808:9;20802:4;20798:20;20793:3;20786:33;20859:6;20853:13;20887:126;21008:4;20993:13;20887:126;:::i;:::-;20879:134;;21036:91;21120:6;21036:91;:::i;:::-;21026:101;;21156:4;21151:3;21147:14;21140:21;;20772:399;20759:1;20756;20752:9;20747:14;;20712:459;;;20716:14;21187:4;21180:11;;21207:3;21200:10;;20243:973;;;;;20057:1159;;;;:::o;21222:497::-;21427:4;21465:2;21454:9;21450:18;21442:26;;21514:9;21508:4;21504:20;21500:1;21489:9;21485:17;21478:47;21542:170;21707:4;21698:6;21542:170;:::i;:::-;21534:178;;21222:497;;;;:::o;21725:60::-;21753:3;21774:5;21767:12;;21725:60;;;:::o;21791:142::-;21841:9;21874:53;21892:34;21901:24;21919:5;21901:24;:::i;:::-;21892:34;:::i;:::-;21874:53;:::i;:::-;21861:66;;21791:142;;;:::o;21939:126::-;21989:9;22022:37;22053:5;22022:37;:::i;:::-;22009:50;;21939:126;;;:::o;22071:143::-;22138:9;22171:37;22202:5;22171:37;:::i;:::-;22158:50;;22071:143;;;:::o;22220:165::-;22324:54;22372:5;22324:54;:::i;:::-;22319:3;22312:67;22220:165;;:::o;22391:256::-;22501:4;22539:2;22528:9;22524:18;22516:26;;22552:88;22637:1;22626:9;22622:17;22613:6;22552:88;:::i;:::-;22391:256;;;;:::o;22653:134::-;22711:9;22744:37;22775:5;22744:37;:::i;:::-;22731:50;;22653:134;;;:::o;22793:169::-;22878:9;22911:45;22950:5;22911:45;:::i;:::-;22898:58;;22793:169;;;:::o;22968:201::-;23090:72;23156:5;23090:72;:::i;:::-;23085:3;23078:85;22968:201;;:::o;23175:292::-;23303:4;23341:2;23330:9;23326:18;23318:26;;23354:106;23457:1;23446:9;23442:17;23433:6;23354:106;:::i;:::-;23175:292;;;;:::o;23473:90::-;23507:7;23550:5;23543:13;23536:21;23525:32;;23473:90;;;:::o;23569:109::-;23650:21;23665:5;23650:21;:::i;:::-;23645:3;23638:34;23569:109;;:::o;23684:210::-;23771:4;23809:2;23798:9;23794:18;23786:26;;23822:65;23884:1;23873:9;23869:17;23860:6;23822:65;:::i;:::-;23684:210;;;;:::o;23900:169::-;23984:11;24018:6;24013:3;24006:19;24058:4;24053:3;24049:14;24034:29;;23900:169;;;;:::o;24075:234::-;24215:34;24211:1;24203:6;24199:14;24192:58;24288:9;24283:2;24275:6;24271:15;24264:34;24075:234;:::o;24319:382::-;24461:3;24486:67;24550:2;24545:3;24486:67;:::i;:::-;24479:74;;24566:93;24655:3;24566:93;:::i;:::-;24688:2;24683:3;24679:12;24672:19;;24319:382;;;:::o;24711:435::-;24877:4;24919:2;24908:9;24904:18;24896:26;;24972:9;24966:4;24962:20;24958:1;24947:9;24943:17;24936:47;25004:131;25130:4;25004:131;:::i;:::-;24996:139;;24711:435;;;:::o;25156:85::-;25193:7;25226:5;25215:16;;25156:85;;;:::o;25251:130::-;25328:24;25346:5;25328:24;:::i;:::-;25321:5;25318:35;25308:63;;25367:1;25364;25357:12;25308:63;25251:130;:::o;25391:155::-;25448:5;25483:6;25477:13;25468:22;;25503:33;25530:5;25503:33;:::i;:::-;25391:155;;;;:::o;25556:375::-;25626:6;25679:2;25667:9;25658:7;25654:23;25650:32;25647:119;;;25685:79;;:::i;:::-;25647:119;25813:1;25842:64;25898:7;25889:6;25878:9;25874:22;25842:64;:::i;:::-;25832:74;;25780:140;25556:375;;;;:::o;25941:106::-;25992:6;26030:5;26024:12;26014:22;;25941:106;;;:::o;26057:180::-;26140:11;26178:6;26173:3;26166:19;26222:4;26217:3;26213:14;26198:29;;26057:180;;;;:::o;26247:393::-;26333:3;26365:38;26397:5;26365:38;:::i;:::-;26423:70;26486:6;26481:3;26423:70;:::i;:::-;26416:77;;26506:65;26564:6;26559:3;26552:4;26545:5;26541:16;26506:65;:::i;:::-;26600:29;26622:6;26600:29;:::i;:::-;26595:3;26591:39;26584:46;;26337:303;26247:393;;;;:::o;26650:439::-;26789:4;26831:2;26820:9;26816:18;26808:26;;26848:71;26916:1;26905:9;26901:17;26892:6;26848:71;:::i;:::-;26970:9;26964:4;26960:20;26955:2;26944:9;26940:18;26933:48;27002:76;27073:4;27064:6;27002:76;:::i;:::-;26994:84;;26650:439;;;;;:::o;27099:162::-;27243:6;27239:1;27231:6;27227:14;27220:30;27099:162;:::o;27271:381::-;27413:3;27438:66;27502:1;27497:3;27438:66;:::i;:::-;27431:73;;27517:93;27606:3;27517:93;:::i;:::-;27639:2;27634:3;27630:12;27623:19;;27271:381;;;:::o;27662:979::-;27985:4;28027:3;28016:9;28012:19;28004:27;;28081:9;28075:4;28071:20;28067:1;28056:9;28052:17;28045:47;28113:131;28239:4;28113:131;:::i;:::-;28105:139;;28295:9;28289:4;28285:20;28280:2;28269:9;28265:18;28258:48;28327:131;28453:4;28327:131;:::i;:::-;28319:139;;28472:72;28540:2;28529:9;28525:18;28516:6;28472:72;:::i;:::-;28558;28626:2;28615:9;28611:18;28602:6;28558:72;:::i;:::-;27662:979;;;;;:::o;28651:569::-;28824:4;28866:3;28855:9;28851:19;28843:27;;28884:71;28952:1;28941:9;28937:17;28928:6;28884:71;:::i;:::-;28969:72;29037:2;29026:9;29022:18;29013:6;28969:72;:::i;:::-;29055:70;29121:2;29110:9;29106:18;29097:6;29055:70;:::i;:::-;29139;29205:2;29194:9;29190:18;29181:6;29139:70;:::i;:::-;28651:569;;;;;;;:::o;29230:133::-;29296:7;29329:24;29347:5;29329:24;:::i;:::-;29318:35;;29230:133;;;:::o;29373:188::-;29479:53;29526:5;29479:53;:::i;:::-;29472:5;29469:64;29459:92;;29547:1;29544;29537:12;29459:92;29373:188;:::o;29571:213::-;29657:5;29692:6;29686:13;29677:22;;29712:62;29768:5;29712:62;:::i;:::-;29571:213;;;;:::o;29794:433::-;29893:6;29946:2;29934:9;29925:7;29921:23;29917:32;29914:119;;;29952:79;;:::i;:::-;29914:119;30080:1;30109:93;30194:7;30185:6;30174:9;30170:22;30109:93;:::i;:::-;30099:103;;30047:169;29794:433;;;;:::o;30237:128::-;30313:23;30330:5;30313:23;:::i;:::-;30306:5;30303:34;30293:62;;30351:1;30348;30341:12;30293:62;30237:128;:::o;30375:153::-;30431:5;30466:6;30460:13;30451:22;;30486:32;30512:5;30486:32;:::i;:::-;30375:153;;;;:::o;30538:373::-;30607:6;30660:2;30648:9;30639:7;30635:23;30631:32;30628:119;;;30666:79;;:::i;:::-;30628:119;30794:1;30823:63;30878:7;30869:6;30858:9;30854:22;30823:63;:::i;:::-;30813:73;;30761:139;30538:373;;;;:::o;30921:113::-;30986:7;31019:5;31008:16;;30921:113;;;:::o;31044:206::-;31122:9;31159:81;31177:62;31186:52;31232:5;31186:52;:::i;:::-;31177:62;:::i;:::-;31159:81;:::i;:::-;31146:94;;31044:206;;;:::o;31260:195::-;31379:65;31438:5;31379:65;:::i;:::-;31374:3;31367:78;31260:195;;:::o;31465:404::-;31614:4;31656:2;31645:9;31641:18;31633:26;;31673:71;31741:1;31730:9;31726:17;31717:6;31673:71;:::i;:::-;31758:100;31854:2;31843:9;31839:18;31830:6;31758:100;:::i;:::-;31465:404;;;;;:::o;31879:125::-;31992:1;31989;31982:12;32014:196;32066:77;32063:1;32056:88;32167:4;32164:1;32157:15;32195:4;32192:1;32185:15;32220:301;32307:27;32329:4;32307:27;:::i;:::-;32299:6;32295:40;32445:6;32433:10;32430:22;32409:18;32397:10;32394:34;32391:62;32388:88;;;32456:18;;:::i;:::-;32388:88;32500:10;32496:2;32489:22;32263:258;32220:301;;:::o;32531:141::-;32565:6;32596:20;;:::i;:::-;32586:30;;32629:33;32657:4;32649:6;32629:33;:::i;:::-;32531:141;;;:::o;32817:130::-;32894:24;32912:5;32894:24;:::i;:::-;32887:5;32884:35;32874:63;;32933:1;32930;32923:12;32874:63;32817:130;:::o;32957:155::-;33014:5;33049:6;33043:13;33034:22;;33069:33;33096:5;33069:33;:::i;:::-;32957:155;;;;:::o;33122:153::-;33178:5;33213:6;33207:13;33198:22;;33233:32;33259:5;33233:32;:::i;:::-;33122:153;;;;:::o;33315:880::-;33403:5;33451:4;33439:9;33434:3;33430:19;33426:30;33423:117;;;33459:79;;:::i;:::-;33423:117;33562:21;33578:4;33562:21;:::i;:::-;33553:30;;33668:1;33712:60;33768:3;33759:6;33748:9;33744:22;33712:60;:::i;:::-;33705:4;33698:5;33694:16;33687:86;33597:191;33866:2;33911:59;33966:3;33957:6;33946:9;33942:22;33911:59;:::i;:::-;33904:4;33897:5;33893:16;33886:85;33802:184;34064:2;34109:59;34164:3;34155:6;34144:9;34140:22;34109:59;:::i;:::-;34102:4;34095:5;34091:16;34084:85;34000:184;33315:880;;;;:::o;34205:431::-;34303:6;34356:2;34344:9;34335:7;34331:23;34327:32;34324:119;;;34362:79;;:::i;:::-;34324:119;34490:1;34519:92;34603:7;34594:6;34583:9;34579:22;34519:92;:::i;:::-;34509:102;;34457:168;34205:431;;;;:::o;34646:196::-;34698:77;34695:1;34688:88;34799:4;34796:1;34789:15;34827:4;34824:1;34817:15;34852:356;34896:6;34937:1;34931:4;34927:12;34917:22;;34988:1;34982:4;34978:12;35013:18;35003:89;;35073:4;35065:6;35061:17;35051:27;;35003:89;35143:2;35135:6;35132:14;35112:18;35109:38;35106:92;;35166:18;;:::i;:::-;35106:92;34903:305;34852:356;;;:::o;35218:344::-;35337:4;35379:2;35368:9;35364:18;35356:26;;35396:71;35464:1;35453:9;35449:17;35440:6;35396:71;:::i;:::-;35481:70;35547:2;35536:9;35532:18;35523:6;35481:70;:::i;:::-;35218:344;;;;;:::o;35572:373::-;35641:6;35694:2;35682:9;35673:7;35669:23;35665:32;35662:119;;;35700:79;;:::i;:::-;35662:119;35828:1;35857:63;35912:7;35903:6;35892:9;35888:22;35857:63;:::i;:::-;35847:73;;35795:139;35572:373;;;;:::o;35955:106::-;35988:8;36044:5;36040:2;36036:14;36011:39;;35955:106;;;:::o;36071:102::-;36110:7;36143:20;36157:5;36143:20;:::i;:::-;36132:31;;36071:102;;;:::o;36183:108::-;36222:7;36255:26;36275:5;36255:26;:::i;:::-;36244:37;;36183:108;;;:::o;36301:165::-;36410:45;36430:24;36448:5;36430:24;:::i;:::-;36410:45;:::i;:::-;36405:3;36398:58;36301:165;;:::o;36476:272::-;36588:3;36607:75;36678:3;36669:6;36607:75;:::i;:::-;36711:2;36706:3;36702:12;36695:19;;36735:3;36728:10;;36476:272;;;;:::o;36758:196::-;36810:77;36807:1;36800:88;36911:4;36908:1;36901:15;36939:4;36936:1;36929:15;36964:225;37003:3;37026:19;37043:1;37026:19;:::i;:::-;37021:24;;37063:19;37080:1;37063:19;:::i;:::-;37058:24;;37109:1;37106;37102:9;37095:16;;37136:18;37131:3;37128:27;37125:53;;;37158:18;;:::i;:::-;37125:53;36964:225;;;;:::o;37199:85::-;37236:7;37269:5;37258:16;;37199:85;;;:::o;37294:87::-;37333:7;37366:5;37355:16;;37294:87;;;:::o;37391:165::-;37500:45;37520:24;37538:5;37520:24;:::i;:::-;37500:45;:::i;:::-;37495:3;37488:58;37391:165;;:::o;37566:155::-;37667:11;37708:3;37693:18;;37566:155;;;;:::o;37731:406::-;37835:3;37867:38;37899:5;37867:38;:::i;:::-;37925:88;38006:6;38001:3;37925:88;:::i;:::-;37918:95;;38026:65;38084:6;38079:3;38072:4;38065:5;38061:16;38026:65;:::i;:::-;38120:6;38115:3;38111:16;38104:23;;37839:298;37731:406;;;;:::o;38147:432::-;38305:3;38324:75;38395:3;38386:6;38324:75;:::i;:::-;38428:2;38423:3;38419:12;38412:19;;38452:93;38541:3;38532:6;38452:93;:::i;:::-;38445:100;;38566:3;38559:10;;38147:432;;;;;:::o;38589:148::-;38638:9;38675:52;38693:33;38702:23;38719:5;38702:23;:::i;:::-;38693:33;:::i;:::-;38675:52;:::i;:::-;38662:65;;38589:148;;;:::o;38747:137::-;38837:36;38867:5;38837:36;:::i;:::-;38832:3;38825:49;38747:137;;:::o;38894:232::-;38986:4;39028:2;39017:9;39013:18;39005:26;;39045:70;39112:1;39101:9;39097:17;39088:6;39045:70;:::i;:::-;38894:232;;;;:::o;39136:375::-;39206:6;39259:2;39247:9;39238:7;39234:23;39230:32;39227:119;;;39265:79;;:::i;:::-;39227:119;39393:1;39422:64;39478:7;39469:6;39458:9;39454:22;39422:64;:::i;:::-;39412:74;;39360:140;39136:375;;;;:::o;39521:114::-;39563:8;39618:5;39615:1;39611:13;39586:38;;39521:114;;;:::o;39645:924::-;39706:5;39713:4;39741:6;39732:15;;39769:5;39760:14;;39787:772;39808:1;39798:8;39795:15;39787:772;;;39915:4;39910:3;39906:14;39900:4;39897:24;39894:50;;;39924:18;;:::i;:::-;39894:50;39978:1;39968:8;39964:16;39961:483;;;40421:4;40414:5;40410:16;40401:25;;39961:483;40479:4;40473;40469:15;40461:23;;40513:32;40536:8;40513:32;:::i;:::-;40501:44;;39787:772;;;39645:924;;;;;;;:::o;40579:1189::-;40633:5;40840:8;40830:40;;40861:1;40852:10;;40863:5;;40830:40;40893:4;40883:36;;40910:1;40901:10;;40912:5;;40883:36;40987:4;41043:1;41038:27;;;;41083:1;41078:215;;;;40980:313;;41038:27;41056:1;41047:10;;41058:5;;;41078:215;41131:3;41121:8;41118:17;41115:43;;;41138:18;;:::i;:::-;41115:43;41191:8;41188:1;41184:16;41175:25;;41230:3;41223:5;41220:14;41217:40;;;41237:18;;:::i;:::-;41217:40;41274:5;;;40980:313;;41414:2;41404:8;41401:16;41395:3;41389:4;41386:13;41382:36;41360:2;41350:8;41347:16;41342:2;41336:4;41333:12;41329:35;41309:123;41306:278;;;41482:8;41476:4;41472:19;41463:28;;41521:3;41514:5;41511:14;41508:40;;;41528:18;;:::i;:::-;41508:40;41565:5;;41306:278;41613:42;41651:3;41641:8;41635:4;41632:1;41613:42;:::i;:::-;41598:57;;;;41691:4;41686:3;41682:14;41675:5;41672:25;41669:51;;;41700:18;;:::i;:::-;41669:51;41753:4;41746:5;41742:16;41733:25;;40579:1189;;;;;;:::o;41778:299::-;41837:5;41865:23;41883:4;41865:23;:::i;:::-;41857:31;;41913:26;41930:8;41913:26;:::i;:::-;41901:38;;41962:104;41999:66;41989:8;41983:4;41962:104;:::i;:::-;41953:113;;41778:299;;;;:::o;42087:196::-;42139:77;42136:1;42129:88;42240:4;42237:1;42230:15;42268:4;42265:1;42258:15;42293:205;42333:1;42354:20;42372:1;42354:20;:::i;:::-;42349:25;;42392:20;42410:1;42392:20;:::i;:::-;42387:25;;42435:1;42425:35;;42440:18;;:::i;:::-;42425:35;42486:1;42483;42479:9;42474:14;;42293:205;;;;:::o;42508:340::-;42625:4;42667:2;42656:9;42652:18;42644:26;;42684:69;42750:1;42739:9;42735:17;42726:6;42684:69;:::i;:::-;42767:70;42833:2;42822:9;42818:18;42809:6;42767:70;:::i;:::-;42508:340;;;;;:::o;42858:126::-;42949:24;42967:5;42949:24;:::i;:::-;42944:3;42937:37;42858:126;;:::o;42994:118::-;;:::o;43122:378::-;43263:3;43288:65;43351:1;43346:3;43288:65;:::i;:::-;43281:72;;43366:93;43455:3;43366:93;:::i;:::-;43488:1;43483:3;43479:11;43472:18;;43122:378;;;:::o;43510:982::-;43805:4;43847:3;43836:9;43832:19;43824:27;;43865:71;43933:1;43922:9;43918:17;43909:6;43865:71;:::i;:::-;43950:72;44018:2;44007:9;44003:18;43994:6;43950:72;:::i;:::-;44073:9;44067:4;44063:20;44058:2;44047:9;44043:18;44036:48;44105:76;44176:4;44167:6;44105:76;:::i;:::-;44097:84;;44195:72;44263:2;44252:9;44248:18;44239:6;44195:72;:::i;:::-;44319:9;44313:4;44309:20;44303:3;44292:9;44288:19;44281:49;44351:130;44476:4;44351:130;:::i;:::-;44343:138;;43510:982;;;;;;;:::o;44502:211::-;44542:3;44565:20;44583:1;44565:20;:::i;:::-;44560:25;;44603:20;44621:1;44603:20;:::i;:::-;44598:25;;44650:1;44647;44643:9;44636:16;;44675:3;44672:1;44669:10;44666:36;;;44682:18;;:::i;:::-;44666:36;44502:211;;;;:::o;44723:348::-;44844:4;44886:2;44875:9;44871:18;44863:26;;44903:71;44971:1;44960:9;44956:17;44947:6;44903:71;:::i;:::-;44988:72;45056:2;45045:9;45041:18;45032:6;44988:72;:::i;:::-;44723:348;;;;;:::o;45081:130::-;45158:24;45176:5;45158:24;:::i;:::-;45151:5;45148:35;45138:63;;45197:1;45194;45187:12;45138:63;45081:130;:::o;45221:155::-;45278:5;45313:6;45307:13;45298:22;;45333:33;45360:5;45333:33;:::i;:::-;45221:155;;;;:::o;45386:375::-;45456:6;45509:2;45497:9;45488:7;45484:23;45480:32;45477:119;;;45515:79;;:::i;:::-;45477:119;45643:1;45672:64;45728:7;45719:6;45708:9;45704:22;45672:64;:::i;:::-;45662:74;;45610:140;45386:375;;;;:::o;45771:348::-;45892:4;45934:2;45923:9;45919:18;45911:26;;45951:71;46019:1;46008:9;46004:17;45995:6;45951:71;:::i;:::-;46036:72;46104:2;46093:9;46089:18;46080:6;46036:72;:::i;:::-;45771:348;;;;;:::o;46129:126::-;46220:24;46238:5;46220:24;:::i;:::-;46215:3;46208:37;46129:126;;:::o;46265:348::-;46386:4;46428:2;46417:9;46413:18;46405:26;;46445:71;46513:1;46502:9;46498:17;46489:6;46445:71;:::i;:::-;46530:72;46598:2;46587:9;46583:18;46574:6;46530:72;:::i;:::-;46265:348;;;;;:::o;46623:108::-;46657:8;46714:5;46709:3;46705:15;46680:40;;46623:108;;;:::o;46741:102::-;46779:7;46812:21;46827:5;46812:21;:::i;:::-;46801:32;;46741:102;;;:::o;46853:161::-;46960:43;46979:23;46996:5;46979:23;:::i;:::-;46960:43;:::i;:::-;46955:3;46948:56;46853:161;;:::o;47024:108::-;47058:8;47115:5;47110:3;47106:15;47081:40;;47024:108;;;:::o;47142:102::-;47180:7;47213:21;47228:5;47213:21;:::i;:::-;47202:32;;47142:102;;;:::o;47254:161::-;47361:43;47380:23;47397:5;47380:23;:::i;:::-;47361:43;:::i;:::-;47356:3;47349:56;47254:161;;:::o;47425:87::-;47464:7;47497:5;47486:16;;47425:87;;;:::o;47522:165::-;47631:45;47651:24;47669:5;47651:24;:::i;:::-;47631:45;:::i;:::-;47626:3;47619:58;47522:165;;:::o;47697:720::-;47907:3;47926:73;47995:3;47986:6;47926:73;:::i;:::-;48028:1;48023:3;48019:11;48012:18;;48044:73;48113:3;48104:6;48044:73;:::i;:::-;48146:1;48141:3;48137:11;48130:18;;48162:75;48233:3;48224:6;48162:75;:::i;:::-;48266:2;48261:3;48257:12;48250:19;;48290:93;48379:3;48370:6;48290:93;:::i;:::-;48283:100;;48404:3;48397:10;;47697:720;;;;;;;:::o;48427:283::-;48557:3;48583:93;48672:3;48663:6;48583:93;:::i;:::-;48576:100;;48697:3;48690:10;;48427:283;;;;:::o;48720:214::-;48760:4;48784:20;48802:1;48784:20;:::i;:::-;48779:25;;48822:20;48840:1;48822:20;:::i;:::-;48817:25;;48870:1;48867;48863:9;48855:17;;48898:1;48892:4;48889:11;48886:37;;;48903:18;;:::i;:::-;48886:37;48720:214;;;;:::o;48944:432::-;49102:3;49128:93;49217:3;49208:6;49128:93;:::i;:::-;49121:100;;49235:75;49306:3;49297:6;49235:75;:::i;:::-;49339:2;49334:3;49330:12;49323:19;;49363:3;49356:10;;48944:432;;;;;:::o;49386:301::-;49446:5;49474:23;49492:4;49474:23;:::i;:::-;49466:31;;49522:27;49540:8;49522:27;:::i;:::-;49510:39;;49572:104;49609:66;49599:8;49593:4;49572:104;:::i;:::-;49563:113;;49386:301;;;;:::o;49697:234::-;49790:4;49832:2;49821:9;49817:18;49809:26;;49849:71;49917:1;49906:9;49902:17;49893:6;49849:71;:::i;:::-;49697:234;;;;:::o;49941:125::-;50054:1;50051;50044:12;50076:125;50189:1;50186;50179:12;50211:332;50273:4;50371:18;50363:6;50360:30;50357:56;;;50393:18;;:::i;:::-;50357:56;50435:29;50457:6;50435:29;:::i;:::-;50427:37;;50527:4;50521;50517:15;50509:23;;50211:332;;;:::o;50553:458::-;50642:5;50671:66;50687:49;50729:6;50687:49;:::i;:::-;50671:66;:::i;:::-;50662:75;;50764:6;50757:5;50750:21;50806:4;50799:5;50795:16;50848:3;50839:6;50834:3;50830:16;50827:25;50824:112;;;50855:79;;:::i;:::-;50824:112;50949:52;50994:6;50989:3;50984;50949:52;:::i;:::-;50648:363;50553:458;;;;;:::o;51039:371::-;51106:5;51159:3;51152:4;51144:6;51140:17;51136:27;51126:122;;51167:79;;:::i;:::-;51126:122;51281:6;51275:13;51310:90;51396:3;51388:6;51381:4;51373:6;51369:17;51310:90;:::i;:::-;51301:99;;51112:298;51039:371;;;;:::o;51420:552::-;51500:6;51553:2;51541:9;51532:7;51528:23;51524:32;51521:119;;;51559:79;;:::i;:::-;51521:119;51708:1;51697:9;51693:17;51687:24;51742:18;51734:6;51731:30;51728:117;;;51764:79;;:::i;:::-;51728:117;51873:74;51939:7;51930:6;51919:9;51915:22;51873:74;:::i;:::-;51863:84;;51654:307;51420:552;;;;:::o;51982:156::-;52084:11;52125:3;52110:18;;51982:156;;;;:::o;52148:314::-;52292:34;52288:1;52280:6;52276:14;52269:58;52365:34;52360:2;52352:6;52348:15;52341:59;52438:12;52433:2;52425:6;52421:15;52414:37;52148:314;:::o;52472:418::-;52632:3;52657:85;52739:2;52734:3;52657:85;:::i;:::-;52650:92;;52755:93;52844:3;52755:93;:::i;:::-;52877:2;52872:3;52868:12;52861:19;;52472:418;;;:::o;52900:410::-;53006:3;53038:39;53071:5;53038:39;:::i;:::-;53097:89;53179:6;53174:3;53097:89;:::i;:::-;53090:96;;53199:65;53257:6;53252:3;53245:4;53238:5;53234:16;53199:65;:::i;:::-;53293:6;53288:3;53284:16;53277:23;;53010:300;52900:410;;;;:::o;53320:557::-;53553:3;53579:148;53723:3;53579:148;:::i;:::-;53572:155;;53748:95;53839:3;53830:6;53748:95;:::i;:::-;53741:102;;53864:3;53857:10;;53320:557;;;;:::o;53887:397::-;53975:3;54007:39;54040:5;54007:39;:::i;:::-;54066:71;54130:6;54125:3;54066:71;:::i;:::-;54059:78;;54150:65;54208:6;54203:3;54196:4;54189:5;54185:16;54150:65;:::i;:::-;54244:29;54266:6;54244:29;:::i;:::-;54239:3;54235:39;54228:46;;53979:305;53887:397;;;;:::o;54294:329::-;54407:4;54449:2;54438:9;54434:18;54426:26;;54502:9;54496:4;54492:20;54488:1;54477:9;54473:17;54466:47;54534:78;54607:4;54598:6;54534:78;:::i;:::-;54526:86;;54294:329;;;;:::o;54633:462::-;54782:4;54824:2;54813:9;54809:18;54801:26;;54841:71;54909:1;54898:9;54894:17;54885:6;54841:71;:::i;:::-;54926:72;54994:2;54983:9;54979:18;54970:6;54926:72;:::i;:::-;55012;55080:2;55069:9;55065:18;55056:6;55012:72;:::i;:::-;54633:462;;;;;;:::o;55105:250::-;55249:34;55245:1;55237:6;55233:14;55226:58;55322:21;55317:2;55309:6;55305:15;55298:46;55105:250;:::o;55365:382::-;55507:3;55532:67;55596:2;55591:3;55532:67;:::i;:::-;55525:74;;55612:93;55701:3;55612:93;:::i;:::-;55734:2;55729:3;55725:12;55718:19;;55365:382;;;:::o;55757:435::-;55923:4;55965:2;55954:9;55950:18;55942:26;;56018:9;56012:4;56008:20;56004:1;55993:9;55989:17;55982:47;56050:131;56176:4;56050:131;:::i;:::-;56042:139;;55757:435;;;:::o;56202:86::-;56240:7;56273:5;56262:16;;56202:86;;;:::o;56298:161::-;56405:43;56424:23;56441:5;56424:23;:::i;:::-;56405:43;:::i;:::-;56400:3;56393:56;56298:161;;:::o;56469:427::-;56625:3;56644:73;56713:3;56704:6;56644:73;:::i;:::-;56746:1;56741:3;56737:11;56730:18;;56769:93;56858:3;56849:6;56769:93;:::i;:::-;56762:100;;56883:3;56876:10;;56469:427;;;;;:::o;56906:458::-;56946:7;56973:20;56991:1;56973:20;:::i;:::-;56968:25;;57011:20;57029:1;57011:20;:::i;:::-;57006:25;;57070:1;57067;57063:9;57096:30;57114:11;57096:30;:::i;:::-;57085:41;;57295:1;57286:7;57282:15;57279:1;57276:22;57252:1;57245:9;57221:95;57194:159;;57333:18;;:::i;:::-;57194:159;56954:410;56906:458;;;;:::o;57374:196::-;57426:77;57423:1;57416:88;57527:4;57524:1;57517:15;57555:4;57552:1;57545:15;57580:335;57657:4;57755:18;57747:6;57744:30;57741:56;;;57777:18;;:::i;:::-;57741:56;57831:4;57823:6;57819:17;57811:25;;57899:4;57893;57889:15;57881:23;;57580:335;;;:::o;57925:125::-;58038:1;58035;58028:12;58081:792;58188:5;58217:81;58233:64;58290:6;58233:64;:::i;:::-;58217:81;:::i;:::-;58208:90;;58322:5;58355:6;58348:5;58341:21;58393:4;58386:5;58382:16;58375:23;;58450:4;58442:6;58438:17;58430:6;58426:30;58483:3;58475:6;58472:15;58469:130;;;58506:79;;:::i;:::-;58469:130;58629:6;58612:251;58646:6;58641:3;58638:15;58612:251;;;58729:3;58762:48;58806:3;58794:10;58762:48;:::i;:::-;58757:3;58750:61;58844:4;58839:3;58835:14;58828:21;;58692:171;58672:4;58667:3;58663:14;58656:21;;58612:251;;;58616:21;58194:679;;58081:792;;;;;:::o;58904:401::-;58986:5;59039:3;59032:4;59024:6;59020:17;59016:27;59006:122;;59047:79;;:::i;:::-;59006:122;59161:6;59155:13;59190:105;59291:3;59283:6;59276:4;59268:6;59264:17;59190:105;:::i;:::-;59181:114;;58992:313;58904:401;;;;:::o;59315:961::-;59444:6;59452;59505:2;59493:9;59484:7;59480:23;59476:32;59473:119;;;59511:79;;:::i;:::-;59473:119;59660:1;59649:9;59645:17;59639:24;59694:18;59686:6;59683:30;59680:117;;;59716:79;;:::i;:::-;59680:117;59825:89;59906:7;59897:6;59886:9;59882:22;59825:89;:::i;:::-;59815:99;;59606:322;59996:2;59985:9;59981:18;59975:25;60031:18;60023:6;60020:30;60017:117;;;60053:79;;:::i;:::-;60017:117;60162:89;60243:7;60234:6;60223:9;60219:22;60162:89;:::i;:::-;60152:99;;59942:323;59315:961;;;;;:::o;60286:263::-;60430:34;60426:1;60418:6;60414:14;60407:58;60503:34;60498:2;60490:6;60486:15;60479:59;60286:263;:::o;60559:382::-;60701:3;60726:67;60790:2;60785:3;60726:67;:::i;:::-;60719:74;;60806:93;60895:3;60806:93;:::i;:::-;60928:2;60923:3;60919:12;60912:19;;60559:382;;;:::o;60951:435::-;61117:4;61159:2;61148:9;61144:18;61136:26;;61212:9;61206:4;61202:20;61198:1;61187:9;61183:17;61176:47;61244:131;61370:4;61244:131;:::i;:::-;61236:139;;60951:435;;;:::o;61396:187::-;61435:3;61462:24;61480:5;61462:24;:::i;:::-;61453:33;;61512:4;61505:5;61502:15;61499:41;;61520:18;;:::i;:::-;61499:41;61571:1;61564:5;61560:13;61553:20;;61396:187;;;:::o;61593:348::-;61714:4;61756:2;61745:9;61741:18;61733:26;;61773:71;61841:1;61830:9;61826:17;61817:6;61773:71;:::i;:::-;61858:72;61926:2;61915:9;61911:18;61902:6;61858:72;:::i;:::-;61593:348;;;;;:::o;61951:123::-;62040:23;62057:5;62040:23;:::i;:::-;62035:3;62028:36;61951:123;;:::o;62084:573::-;62259:4;62301:3;62290:9;62286:19;62278:27;;62319:71;62387:1;62376:9;62372:17;62363:6;62319:71;:::i;:::-;62404:70;62470:2;62459:9;62455:18;62446:6;62404:70;:::i;:::-;62488:72;62556:2;62545:9;62541:18;62532:6;62488:72;:::i;:::-;62574;62642:2;62631:9;62627:18;62618:6;62574:72;:::i;:::-;62084:573;;;;;;;:::o;62667:246::-;62811:34;62807:1;62799:6;62795:14;62788:58;62884:17;62879:2;62871:6;62867:15;62860:42;62667:246;:::o;62923:382::-;63065:3;63090:67;63154:2;63149:3;63090:67;:::i;:::-;63083:74;;63170:93;63259:3;63170:93;:::i;:::-;63292:2;63287:3;63283:12;63276:19;;62923:382;;;:::o;63315:435::-;63481:4;63523:2;63512:9;63508:18;63500:26;;63576:9;63570:4;63566:20;63562:1;63551:9;63547:17;63540:47;63608:131;63734:4;63608:131;:::i;:::-;63600:139;;63315:435;;;:::o",
    "linkReferences": {
      "contracts/library/HyperLiquidComposerCodec.sol": {
        "HyperLiquidComposerCodec": [{ "start": 60579, "length": 20 }]
      }
    }
  },
  "methodIdentifiers": {
    "ALICE()": "c33d080d",
    "AMOUNT_TO_FUND()": "9127ace2",
    "AMOUNT_TO_SEND()": "bb641b3e",
    "DST_EID()": "176e619e",
    "DUST()": "4e0cd799",
    "HLP_PRECOMPILE_READ_SPOT_BALANCE()": "ba872679",
    "HLP_PRECOMPILE_WRITE()": "dd850075",
    "HL_LZ_ENDPOINT_V2()": "318f405a",
    "HYPE()": "76e86e72",
    "IS_TEST()": "fa7626d4",
    "SRC_EID()": "c9279a74",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSelectors()": "b0464fdc",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "hyperLiquidComposer()": "a09e7430",
    "oft()": "9b5215f6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_SendSpot_and_FundAddress()": "e93bfee6",
    "test_SendSpot_no_FundAddress()": "a985a8ad",
    "test_deployment()": "1015594a",
    "test_getBalanceOfHyperCore(uint64)": "75258814",
    "userA()": "deb22e9a",
    "userB()": "cb1a295f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"token\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_wei\",\"type\":\"uint64\"}],\"name\":\"SpotSend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ALICE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetBridgeAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"coreIndexId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"decimalDiff\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AMOUNT_TO_FUND\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AMOUNT_TO_SEND\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DST_EID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DUST\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HLP_PRECOMPILE_READ_SPOT_BALANCE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HLP_PRECOMPILE_WRITE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HL_LZ_ENDPOINT_V2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HYPE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetBridgeAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"coreIndexId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"decimalDiff\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SRC_EID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hyperLiquidComposer\",\"outputs\":[{\"internalType\":\"contract HyperLiquidComposer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oft\",\"outputs\":[{\"internalType\":\"contract OFTMock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SendSpot_and_FundAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SendSpot_no_FundAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_deployment\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_balance\",\"type\":\"uint64\"}],\"name\":\"test_getBalanceOfHyperCore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/HyperLiquidComposer.t.sol\":\"HyperLiquidComposerTest\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=node_modules/@layerzerolabs/toolbox-foundry/lib/ds-test/\",\":forge-std/=node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/contracts/=node_modules/@layerzerolabs/toolbox-foundry/lib/solidity-bytes-utils/\"]},\"sources\":{\"contracts/HyperLiquidComposer.sol\":{\"keccak256\":\"0xe62cddcc0b667d7ed1114d773a076bbf20c409fb30d5a2d8b23f11bb505ce149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14836d07edb91500455fed30b6917f8ed17b0e2d74ae4ac3f7ec9822b4b10fb4\",\"dweb:/ipfs/QmfHCstiYLFTVZ97gf7LGSJNAEWyUHiYrRQanajY9dSLJH\"]},\"contracts/HyperLiquidComposerCore.sol\":{\"keccak256\":\"0x3e434f92a67cf8ebe665165b67c61a9a4f44ff100c8d758e469149e44705644d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a0893f8b064c38db25dee123fac75c2f1fe8f4e734a565fb7cf89a8295cb674\",\"dweb:/ipfs/QmeyR1opq8nCj3bkPxvaKmaatcxQWVg6Vm728gZRkDzMg4\"]},\"contracts/interfaces/IHYPEPrecompile.sol\":{\"keccak256\":\"0xa00c09fdbe78b82a68843ff08157edff124443ad929acac1e0aad8eb4e6c7235\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://379beb105c8914e43cd275344456d5a830d251b2c31f7ae03b73686ee8a1c7eb\",\"dweb:/ipfs/QmZssW3BnRj8TFZGrRtqhrXS4aDNACYYANoDniccpuJ51U\"]},\"contracts/interfaces/IHyperLiquidComposerCore.sol\":{\"keccak256\":\"0x18674ea2cf84642166ab12a717c341503f7c5d490ec52b14d4d20924f5ff17aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cdd6b1cc2428ce607117df50ede9cc12307cda7c332a1fd20143dbc3ea18274\",\"dweb:/ipfs/QmbmWTNbbf2jj3JFFQL8EwcaY4L9tXLPdrkGJYgPop9zda\"]},\"contracts/interfaces/IHyperLiquidComposerErrors.sol\":{\"keccak256\":\"0xb2444c6b5070d989f610d8dafff535ece8af031a78464f27f56af1cc74e06f69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a636fa5beff36bde5c49fa5433df8c6dc94a47b220d984eb8caf1004f2ea22c\",\"dweb:/ipfs/QmaZLvXPUnN2VxzsyG5EASRXVQCwG3JhExJF58Wa5ScoPy\"]},\"contracts/interfaces/IHyperLiquidReadPrecompile.sol\":{\"keccak256\":\"0x3a6df8d89dca4f7547bbdc912c92315020f88b50c648c55f04fcb3ecb47d9ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://836bc90fe0705ca588329e218253e375bc76752d762b76e31c5f568be1b9409f\",\"dweb:/ipfs/QmYMRCYqsKho9fHZcC8f4JBPSxx9p6a4zLL7nX8CDoZsXc\"]},\"contracts/interfaces/IHyperLiquidWritePrecompile.sol\":{\"keccak256\":\"0xbfa7d38d7675898af0def60823f15550730af3bacb64068a09e1746b21c2cf4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5cba8210ee21bd186dfddbaa2b3f1ceaeb597763cac1e6271c9ae6e8ff4b53f\",\"dweb:/ipfs/QmVV8BtvpwQQ3jqUdTEFs2nnT9Q7gxTajRqgJPmKQuforV\"]},\"contracts/library/HyperLiquidComposerCodec.sol\":{\"keccak256\":\"0x26e2d98f264344ec7d44110b294b72c84bda78eb89d43e7e8164b0e2972aa52d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eac0654e9b43c8fdba761bff402d3909bd7a65c1684c4794a975abb07895864d\",\"dweb:/ipfs/QmPa5guHnQoke2ToDfmu9ovwQdTRbjA6c3rh1T7QqjMEQs\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\":{\"keccak256\":\"0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f254bc60ac26687b5320a43a556e30777b0745abf7cd64d5f4720d9b1d1f7fdf\",\"dweb:/ipfs/QmRSJEZVgxaC3L2DdE6s8P5qkYfM3V5JMeseeFJJqGR4xz\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bacc29fd3866af71e59cb0bdc1cf82c882a4a7f4e2652fd413c9f12649762083\",\"dweb:/ipfs/QmZh2toLnrQDWaNYhS5K4NoW7Vxd2GdZx9KA77vKEDLAqs\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":{\"keccak256\":\"0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77415ae0820859e0faf3fabdce683cce9fa03ea026ae0f6fe081ef1c9205f933\",\"dweb:/ipfs/QmXd7APqoCunQ2jYy73AHvi5gsZofLpm3SzM6FPo7zRPfL\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLib.sol\":{\"keccak256\":\"0x5cf5f24751b4e3ea1c9c5ded07cedfdfd62566b6daaffcc0144733859c9dba0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cae7e35007a714f007ea08045ef7c0cfa6c91fd2425b5028b2d49abad357a5f0\",\"dweb:/ipfs/QmcDBs5tsiyB35b8cwzWQWNnpkawb3uuHRaqE77Hxm2tve\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8ff6a8a89297fa127f86b54e0db3eba1d6a6eeb4f6398d3c84d569665ac8f1b\",\"dweb:/ipfs/QmVSwhw6xFDrLRAX4RXaCM47yBaBtac4wf36DYEq6KCTvT\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e1b245d58221d16d8b5e0f01ef3e289a24a7df1ace3b94239e4d5b954ad5927\",\"dweb:/ipfs/Qmappsgp7PCY9rSSNE9Cdn4BTRX591WfCSEgq2HxhA3z6S\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b18b23a1643fc6636c4ad9d9023e2e6ca2d3c2a4a046482d4655bff09950598d\",\"dweb:/ipfs/Qma6G5SqiovwrMPfgqTrRngK1HWW373Wkf9c6YP2NhXpPk\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5173fc9143bea314b159ca5a9adb5626659ef763bc598e27de5fa46efe3291a6\",\"dweb:/ipfs/QmSLFeMFPmVeGxT4sxRPW28ictjAS22M8rLeYRu9TXkA6D\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ISendLib.sol\":{\"keccak256\":\"0xf1c07bc61e7b1dce195ed12d50f87980fbf2d63cac1326fd28287f55fe0ba625\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://060f10ff7afc33c1c2f2b4b5ba29231fd3c943146488084d0e4ab99fce991d97\",\"dweb:/ipfs/QmaSsefAqqEqtf8FgFUmDYMwTsAty3X1pqDb6SiFvry6B3\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/libs/AddressCast.sol\":{\"keccak256\":\"0x2ebbcaaab3554edcd41b581f1a72ac1806afbfb8047d0d47ff098f9af30d6deb\",\"license\":\"LZBL-1.2\",\"urls\":[\"bzz-raw://2d4b2cf5c3b16dc76c6767f285b57c0af917972327b2be3f7cba5825402f5fc1\",\"dweb:/ipfs/QmQQWiHE2jKEDbjzGutSoZwtApSXYfLqZt5CxEpFj8xyvT\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/messagelib/libs/PacketV1Codec.sol\":{\"keccak256\":\"0xc84cf1bf785977fe1fbe7566eef902c2db68d0e163813ebe6c34921754802680\",\"license\":\"LZBL-1.2\",\"urls\":[\"bzz-raw://de686666fc16fa432d4208d85cec87dc952faf3e481b683b9adf4b4610db4b09\",\"dweb:/ipfs/QmdmQeopzmxqRzi9DNB4EJDrYUXFfD7fUhnGhSni4QejUW\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol\":{\"keccak256\":\"0xac362c4c291fad2f1511a968424b2e78a5ad502d1c867bd31da04be742aca8c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1f8cf9f20a2b683a53c3883972aa0676af97a24c678f461fae08e1fb056df28\",\"dweb:/ipfs/QmPpKNqda3rgxDwnq3XiRTtT3NfWeqrCJT6LwmhYd2AoT2\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://606515dd9193551bd2c94ac8c304f3776fafcc70e544ebf441f334658b2fd5f0\",\"dweb:/ipfs/QmZ88ey7DdZqV5taAoebabvszX5kdPMSrQCAmTteVdDtcH\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol\":{\"keccak256\":\"0x0174e9f1ec4cefe4b5adc26c392269c699b9ff75965364e5b7264426a462c70b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd12bb4fe5802c53911b9a0081a2ea10639b1f99925d1e5c1b1421d1bdc17075\",\"dweb:/ipfs/QmZonarwbKiEwQ8qoASKur2bbMjusdy9pqK9RCR4P1YPtc\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\":{\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d42b471418efadcc3577ef3fa9f8f504e8bed7db90c3b0c862038d8b29529eb2\",\"dweb:/ipfs/QmZETDQiJN4U92fmLKo8T9ZbdDf7BNBUUvo9H7M7GqAyFU\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\":{\"keccak256\":\"0xe5014c411acb2b59dd74ae74a1bab02cf32d94a41a548a5ab553d64aeeb55dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dfb7bc121002fc7e7931c34eb17af0ae0f0127dcc3199511c83a58a917160d\",\"dweb:/ipfs/QmPdq1wcRRBdUP169LHCLoLuPRunN9eR71TQN42FjGpowx\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a1deb2a6a3eb1fb83936c9578469142bff470295f403d7d07d955a76be3adbd\",\"dweb:/ipfs/QmS9bjSfBaE4YhQ1PCQ1TknbEPbNfRXzBK9E7SaPGyiZEv\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppMsgInspector.sol\":{\"keccak256\":\"0x339654e699043c400cad92de209aa23855ce10211c31cf4114042cc5224d3b7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5222afde59bf086f67b39e0288ad36343f4f5ed683d250533f256a5db956f37e\",\"dweb:/ipfs/QmbEG9EMYsK3Y6Cz7QbNtkW4kHGzMuhp2y2seSoL8v1A5b\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppOptionsType3.sol\":{\"keccak256\":\"0x9fc08a51e9d7c9c710c4eb26f84fe77228305ad7da63fa486ff24ebf2f3bc461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e2eea8a93bb9fc3f629767118b362e9b4bda2443ff95eae21c6a894f3e334cc\",\"dweb:/ipfs/QmPRRNjAB4U19ke4gr3U7ZJGtdcVBxdXVBZ2BmB1riFkP7\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol\":{\"keccak256\":\"0xd26135185e19b3732746d4a9e2923e896f28dec8664bab161faea2ee26fcdc3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c236dfe386b508be33c3a1a74ae1d4fd64b8c77ae207767e9dbed0f2429518a2\",\"dweb:/ipfs/QmXVbZJjfryTRti98uN3BMh5qh4K7NuEs1RSCoBjRoYd4q\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol\":{\"keccak256\":\"0x5275636cd47e660a2fdf6c7fe9d41ff3cc866b785cc8a9d88c1b8ca983509f01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a59dd6e3cfcc332f45a13d44585eb228588c4b9d470cbb19852df5753a4571af\",\"dweb:/ipfs/QmQJF1QU3MKhvmw42eq61u9z3bzKJJKMsEdQVYyPyYgTVS\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol\":{\"keccak256\":\"0x205a0abfd8b3c9af2740769f251381b84999b8e9347f3cd50de3ef8290a17750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9778d7d5da941af2029410b6ac212f915ea1785573ae2865b0ed8f779fcca82\",\"dweb:/ipfs/QmNkVEkfecvgubgnMuaT5fEfSExd95vz8DQHhpZtMrVRjH\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/precrime/interfaces/IOAppPreCrimeSimulator.sol\":{\"keccak256\":\"0x5d24db150949ea8e6437178e65a942e8c8b7f332e5daf32750f56b23b35b5bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b1dcea0267234654126f926a1b405743606d7b5e49185b621afb7bd94d18b9a\",\"dweb:/ipfs/QmZ9BXQmbWJcrhHKuBs4yhNtbCV5WUpUY3AXSX7rkWwX6y\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/precrime/interfaces/IPreCrime.sol\":{\"keccak256\":\"0xc8d869f27ef8ceb2e13fdf6a70682fd4dee3f90c4924eb8e125bc1e66cb6af84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66bf49d59c14832ea0ddddcd12d512d4f9bd0fd254a1368442587bf3e77fe73e\",\"dweb:/ipfs/QmYUAvsyuUPiSYjbL4zVo6ZtiRSLCUPDvCesqgdZWbSGDg\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/precrime/libs/Packet.sol\":{\"keccak256\":\"0xcb2fb1c5b2eb3731de78b479b9c2ab3bba326fe0b0b3a008590f18e881e457a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f70724c61d226743c2bd8ba6c09758805e4339780978949ce5b333c106be4edc\",\"dweb:/ipfs/QmX5rV9K1N7RgTz9xtf8CDG8SrYiitGAzFh9ec2tbnEec4\"]},\"node_modules/@layerzerolabs/oft-evm/contracts/OFT.sol\":{\"keccak256\":\"0xdc3582e4a20e02a79050c17058a1f1f42a4335d1a70be06c0a52a3fb05d4c89a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83c4bd42e68528246860a952a92a79e51e3a789dac79a0b62576ab2f609de9c7\",\"dweb:/ipfs/QmVj1x655j1cFTnPT8uBaM71TCSrhFVwPdoFkAkWhhadns\"]},\"node_modules/@layerzerolabs/oft-evm/contracts/OFTCore.sol\":{\"keccak256\":\"0x4c5a5412cf671bb70d84c9e783312eddf864ef56566f7bf86401c5661015e228\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cac6c48bbc05456b0fccd0782b1a8c2560b0420d425dcba109526af8188893e\",\"dweb:/ipfs/QmRoCZX37UNgBeVKXTsfBvR7DgibZGL1tfrPqfvyGafHor\"]},\"node_modules/@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol\":{\"keccak256\":\"0x7ba6bb62fba7ee83451cfb0e727ddeef0e96b4388bd4e9ff0fc6ce103e1101c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfbd447f2e8a730bd46a14c3c3e6a0b2bf7446145579603a9793ba5ac1dd38b4\",\"dweb:/ipfs/QmZ4nx4iGrFmBHvYFgki5TXFdCHz4Co38hgdgwpRaM7NLs\"]},\"node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\":{\"keccak256\":\"0xaae73d6eb8b9561c43f1802f3c416c00ccd35f172b711f9781ccdf1b25a40db5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7beda2d895ae9e15269dd261a492ce0a29b498e5bebf088ed6f2ae6a5185719e\",\"dweb:/ipfs/QmScog2tW1YVyEPLVcUVqGGc85ub46sA28nUKNzFEZcFdK\"]},\"node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTMsgCodec.sol\":{\"keccak256\":\"0x5358948017669c03e157f871d8c38e988f9004dbd0801ad3119d2487f0d40b0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7d0f1bf32a80af9b99cd93fefa373dac5c27463351cc35f62b9c2439d5b9258\",\"dweb:/ipfs/Qmb81qoxzMwV3PkPANRvnXf4fJTsZ5sjJ8r2df9V2vhh6q\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdChains.sol\":{\"keccak256\":\"0x7dd11ac4db798fa196e00a0cfa288ce984acac881f1f34de03fe3187deed58de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c15fb03d5545e2d8d3948661596410edec5ec278a73988914b14a05d0d54557\",\"dweb:/ipfs/QmWGjkLgp4wSrTrFxF8cmhghaXQp5VyXYQvWE1DUTPL4rG\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdCheats.sol\":{\"keccak256\":\"0x28473c688050ed5cfdf6a47bfd59cdc7209e6a3eab8b438eb92055ea4066a49b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d7e6391ced7256389f496fa35962d4ecdd6a066c5a54bdbef58abe6287c732b\",\"dweb:/ipfs/QmTuTqyapx9XraMX3mUjNjs3YHzBiQSfAQ38can96WWohM\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdJson.sol\":{\"keccak256\":\"0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974\",\"dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdStorage.sol\":{\"keccak256\":\"0xb91ab24383a5872b894fc93325eef1add6cbbf981628f18e860068bf88bb7dcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2651e33b9ac8fc5803ed0a43078c1bf4fa90a0b0347aafd95776b02daccdcc57\",\"dweb:/ipfs/QmbdRyPuGJdZgnCuMnp7c1WsBo1Spf7j1KMmws1Z5rd4BQ\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdToml.sol\":{\"keccak256\":\"0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3\",\"dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Vm.sol\":{\"keccak256\":\"0xfe4466244a3c783594443a2f96e4b2d14e62e3eca310260f1b4c9107e9aafb53\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://3890f26c3e2c2d96f4b11f269e679c0a6f47ca995d761530a36c42382ddf7359\",\"dweb:/ipfs/QmWpcGEYqLxtfjouqwa3RP77uX2jnFGYnHjnzT4PPyRdbr\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/safeconsole.sol\":{\"keccak256\":\"0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab\",\"dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"test/HyperLiquidComposer.t.sol\":{\"keccak256\":\"0x1cf3c6b33e16f76a76cf226423b18783de705878af9ceba08dddc976537fc3cb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6ecbf3066f0ad58ad828d99bf9f2f06726673bd77fb5627a6a81b9ae16c24e09\",\"dweb:/ipfs/QmesLLmTeBLx5MCUKo82iLGPmfr3SxbKkwwAYV2HoZyk4b\"]},\"test/mocks/OFTMock.sol\":{\"keccak256\":\"0x4418ffbf7cbcc3e98033fe9869ae2c6b74a3fc22d9d5d5b927a53787b6e8d4ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://195f8028f158026b4be544c5c4dedd602b5114c43248060bead77b2b031a1aad\",\"dweb:/ipfs/QmbeMSV9NJSXAAfZVjkAqtKzr425MSTieJGn1DU28xMnM8\"]},\"test/mocks/SpotBalancePrecompileMock.sol\":{\"keccak256\":\"0xee2a309124d7af6d6737a859a8806e179e98aa25be49943510ab85e0db3c7603\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6f17d83704dc9f9f817b5676a601420759e6d1d26318b8601c90f482901ccdb8\",\"dweb:/ipfs/QmWvc4Rup1fE6SsEGxiWEwpKuem8hVoRwevQoeoE42WUey\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.22+commit.4fc1097e" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Received",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "fsig",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "keysHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlotFound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "destination",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "token",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "_wei",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SpotSend",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_UninitedSlot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ALICE",
          "outputs": [
            {
              "internalType": "address",
              "name": "assetBridgeAddress",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "coreIndexId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "decimalDiff",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_TO_FUND",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_TO_SEND",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DST_EID",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DUST",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HLP_PRECOMPILE_WRITE",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HL_LZ_ENDPOINT_V2",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HYPE",
          "outputs": [
            {
              "internalType": "address",
              "name": "assetBridgeAddress",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "coreIndexId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "decimalDiff",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SRC_EID",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "excludedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hyperLiquidComposer",
          "outputs": [
            {
              "internalType": "contract HyperLiquidComposer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oft",
          "outputs": [
            {
              "internalType": "contract OFTMock",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "artifact",
                  "type": "string"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SendSpot_and_FundAddress"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SendSpot_no_FundAddress"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_deployment"
        },
        {
          "inputs": [
            { "internalType": "uint64", "name": "_balance", "type": "uint64" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getBalanceOfHyperCore"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "userA",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "userB",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        }
      ],
      "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@layerzerolabs/=node_modules/@layerzerolabs/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=node_modules/@layerzerolabs/toolbox-foundry/lib/ds-test/",
        "forge-std/=node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/",
        "hardhat/=node_modules/hardhat/",
        "solidity-bytes-utils/contracts/=node_modules/@layerzerolabs/toolbox-foundry/lib/solidity-bytes-utils/"
      ],
      "optimizer": { "enabled": false, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "test/HyperLiquidComposer.t.sol": "HyperLiquidComposerTest"
      },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "contracts/HyperLiquidComposer.sol": {
        "keccak256": "0xe62cddcc0b667d7ed1114d773a076bbf20c409fb30d5a2d8b23f11bb505ce149",
        "urls": [
          "bzz-raw://14836d07edb91500455fed30b6917f8ed17b0e2d74ae4ac3f7ec9822b4b10fb4",
          "dweb:/ipfs/QmfHCstiYLFTVZ97gf7LGSJNAEWyUHiYrRQanajY9dSLJH"
        ],
        "license": "MIT"
      },
      "contracts/HyperLiquidComposerCore.sol": {
        "keccak256": "0x3e434f92a67cf8ebe665165b67c61a9a4f44ff100c8d758e469149e44705644d",
        "urls": [
          "bzz-raw://5a0893f8b064c38db25dee123fac75c2f1fe8f4e734a565fb7cf89a8295cb674",
          "dweb:/ipfs/QmeyR1opq8nCj3bkPxvaKmaatcxQWVg6Vm728gZRkDzMg4"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHYPEPrecompile.sol": {
        "keccak256": "0xa00c09fdbe78b82a68843ff08157edff124443ad929acac1e0aad8eb4e6c7235",
        "urls": [
          "bzz-raw://379beb105c8914e43cd275344456d5a830d251b2c31f7ae03b73686ee8a1c7eb",
          "dweb:/ipfs/QmZssW3BnRj8TFZGrRtqhrXS4aDNACYYANoDniccpuJ51U"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHyperLiquidComposerCore.sol": {
        "keccak256": "0x18674ea2cf84642166ab12a717c341503f7c5d490ec52b14d4d20924f5ff17aa",
        "urls": [
          "bzz-raw://5cdd6b1cc2428ce607117df50ede9cc12307cda7c332a1fd20143dbc3ea18274",
          "dweb:/ipfs/QmbmWTNbbf2jj3JFFQL8EwcaY4L9tXLPdrkGJYgPop9zda"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHyperLiquidComposerErrors.sol": {
        "keccak256": "0xb2444c6b5070d989f610d8dafff535ece8af031a78464f27f56af1cc74e06f69",
        "urls": [
          "bzz-raw://0a636fa5beff36bde5c49fa5433df8c6dc94a47b220d984eb8caf1004f2ea22c",
          "dweb:/ipfs/QmaZLvXPUnN2VxzsyG5EASRXVQCwG3JhExJF58Wa5ScoPy"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHyperLiquidReadPrecompile.sol": {
        "keccak256": "0x3a6df8d89dca4f7547bbdc912c92315020f88b50c648c55f04fcb3ecb47d9ae0",
        "urls": [
          "bzz-raw://836bc90fe0705ca588329e218253e375bc76752d762b76e31c5f568be1b9409f",
          "dweb:/ipfs/QmYMRCYqsKho9fHZcC8f4JBPSxx9p6a4zLL7nX8CDoZsXc"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHyperLiquidWritePrecompile.sol": {
        "keccak256": "0xbfa7d38d7675898af0def60823f15550730af3bacb64068a09e1746b21c2cf4b",
        "urls": [
          "bzz-raw://a5cba8210ee21bd186dfddbaa2b3f1ceaeb597763cac1e6271c9ae6e8ff4b53f",
          "dweb:/ipfs/QmVV8BtvpwQQ3jqUdTEFs2nnT9Q7gxTajRqgJPmKQuforV"
        ],
        "license": "MIT"
      },
      "contracts/library/HyperLiquidComposerCodec.sol": {
        "keccak256": "0x26e2d98f264344ec7d44110b294b72c84bda78eb89d43e7e8164b0e2972aa52d",
        "urls": [
          "bzz-raw://eac0654e9b43c8fdba761bff402d3909bd7a65c1684c4794a975abb07895864d",
          "dweb:/ipfs/QmPa5guHnQoke2ToDfmu9ovwQdTRbjA6c3rh1T7QqjMEQs"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol": {
        "keccak256": "0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49",
        "urls": [
          "bzz-raw://f254bc60ac26687b5320a43a556e30777b0745abf7cd64d5f4720d9b1d1f7fdf",
          "dweb:/ipfs/QmRSJEZVgxaC3L2DdE6s8P5qkYfM3V5JMeseeFJJqGR4xz"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol": {
        "keccak256": "0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3",
        "urls": [
          "bzz-raw://bacc29fd3866af71e59cb0bdc1cf82c882a4a7f4e2652fd413c9f12649762083",
          "dweb:/ipfs/QmZh2toLnrQDWaNYhS5K4NoW7Vxd2GdZx9KA77vKEDLAqs"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol": {
        "keccak256": "0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0",
        "urls": [
          "bzz-raw://77415ae0820859e0faf3fabdce683cce9fa03ea026ae0f6fe081ef1c9205f933",
          "dweb:/ipfs/QmXd7APqoCunQ2jYy73AHvi5gsZofLpm3SzM6FPo7zRPfL"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLib.sol": {
        "keccak256": "0x5cf5f24751b4e3ea1c9c5ded07cedfdfd62566b6daaffcc0144733859c9dba0c",
        "urls": [
          "bzz-raw://cae7e35007a714f007ea08045ef7c0cfa6c91fd2425b5028b2d49abad357a5f0",
          "dweb:/ipfs/QmcDBs5tsiyB35b8cwzWQWNnpkawb3uuHRaqE77Hxm2tve"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol": {
        "keccak256": "0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc",
        "urls": [
          "bzz-raw://d8ff6a8a89297fa127f86b54e0db3eba1d6a6eeb4f6398d3c84d569665ac8f1b",
          "dweb:/ipfs/QmVSwhw6xFDrLRAX4RXaCM47yBaBtac4wf36DYEq6KCTvT"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol": {
        "keccak256": "0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972",
        "urls": [
          "bzz-raw://7e1b245d58221d16d8b5e0f01ef3e289a24a7df1ace3b94239e4d5b954ad5927",
          "dweb:/ipfs/Qmappsgp7PCY9rSSNE9Cdn4BTRX591WfCSEgq2HxhA3z6S"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol": {
        "keccak256": "0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901",
        "urls": [
          "bzz-raw://b18b23a1643fc6636c4ad9d9023e2e6ca2d3c2a4a046482d4655bff09950598d",
          "dweb:/ipfs/Qma6G5SqiovwrMPfgqTrRngK1HWW373Wkf9c6YP2NhXpPk"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol": {
        "keccak256": "0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e",
        "urls": [
          "bzz-raw://5173fc9143bea314b159ca5a9adb5626659ef763bc598e27de5fa46efe3291a6",
          "dweb:/ipfs/QmSLFeMFPmVeGxT4sxRPW28ictjAS22M8rLeYRu9TXkA6D"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ISendLib.sol": {
        "keccak256": "0xf1c07bc61e7b1dce195ed12d50f87980fbf2d63cac1326fd28287f55fe0ba625",
        "urls": [
          "bzz-raw://060f10ff7afc33c1c2f2b4b5ba29231fd3c943146488084d0e4ab99fce991d97",
          "dweb:/ipfs/QmaSsefAqqEqtf8FgFUmDYMwTsAty3X1pqDb6SiFvry6B3"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/libs/AddressCast.sol": {
        "keccak256": "0x2ebbcaaab3554edcd41b581f1a72ac1806afbfb8047d0d47ff098f9af30d6deb",
        "urls": [
          "bzz-raw://2d4b2cf5c3b16dc76c6767f285b57c0af917972327b2be3f7cba5825402f5fc1",
          "dweb:/ipfs/QmQQWiHE2jKEDbjzGutSoZwtApSXYfLqZt5CxEpFj8xyvT"
        ],
        "license": "LZBL-1.2"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/messagelib/libs/PacketV1Codec.sol": {
        "keccak256": "0xc84cf1bf785977fe1fbe7566eef902c2db68d0e163813ebe6c34921754802680",
        "urls": [
          "bzz-raw://de686666fc16fa432d4208d85cec87dc952faf3e481b683b9adf4b4610db4b09",
          "dweb:/ipfs/QmdmQeopzmxqRzi9DNB4EJDrYUXFfD7fUhnGhSni4QejUW"
        ],
        "license": "LZBL-1.2"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol": {
        "keccak256": "0xac362c4c291fad2f1511a968424b2e78a5ad502d1c867bd31da04be742aca8c5",
        "urls": [
          "bzz-raw://e1f8cf9f20a2b683a53c3883972aa0676af97a24c678f461fae08e1fb056df28",
          "dweb:/ipfs/QmPpKNqda3rgxDwnq3XiRTtT3NfWeqrCJT6LwmhYd2AoT2"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol": {
        "keccak256": "0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc",
        "urls": [
          "bzz-raw://606515dd9193551bd2c94ac8c304f3776fafcc70e544ebf441f334658b2fd5f0",
          "dweb:/ipfs/QmZ88ey7DdZqV5taAoebabvszX5kdPMSrQCAmTteVdDtcH"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol": {
        "keccak256": "0x0174e9f1ec4cefe4b5adc26c392269c699b9ff75965364e5b7264426a462c70b",
        "urls": [
          "bzz-raw://cd12bb4fe5802c53911b9a0081a2ea10639b1f99925d1e5c1b1421d1bdc17075",
          "dweb:/ipfs/QmZonarwbKiEwQ8qoASKur2bbMjusdy9pqK9RCR4P1YPtc"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol": {
        "keccak256": "0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20",
        "urls": [
          "bzz-raw://d42b471418efadcc3577ef3fa9f8f504e8bed7db90c3b0c862038d8b29529eb2",
          "dweb:/ipfs/QmZETDQiJN4U92fmLKo8T9ZbdDf7BNBUUvo9H7M7GqAyFU"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol": {
        "keccak256": "0xe5014c411acb2b59dd74ae74a1bab02cf32d94a41a548a5ab553d64aeeb55dae",
        "urls": [
          "bzz-raw://29dfb7bc121002fc7e7931c34eb17af0ae0f0127dcc3199511c83a58a917160d",
          "dweb:/ipfs/QmPdq1wcRRBdUP169LHCLoLuPRunN9eR71TQN42FjGpowx"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol": {
        "keccak256": "0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58",
        "urls": [
          "bzz-raw://4a1deb2a6a3eb1fb83936c9578469142bff470295f403d7d07d955a76be3adbd",
          "dweb:/ipfs/QmS9bjSfBaE4YhQ1PCQ1TknbEPbNfRXzBK9E7SaPGyiZEv"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppMsgInspector.sol": {
        "keccak256": "0x339654e699043c400cad92de209aa23855ce10211c31cf4114042cc5224d3b7c",
        "urls": [
          "bzz-raw://5222afde59bf086f67b39e0288ad36343f4f5ed683d250533f256a5db956f37e",
          "dweb:/ipfs/QmbEG9EMYsK3Y6Cz7QbNtkW4kHGzMuhp2y2seSoL8v1A5b"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppOptionsType3.sol": {
        "keccak256": "0x9fc08a51e9d7c9c710c4eb26f84fe77228305ad7da63fa486ff24ebf2f3bc461",
        "urls": [
          "bzz-raw://2e2eea8a93bb9fc3f629767118b362e9b4bda2443ff95eae21c6a894f3e334cc",
          "dweb:/ipfs/QmPRRNjAB4U19ke4gr3U7ZJGtdcVBxdXVBZ2BmB1riFkP7"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol": {
        "keccak256": "0xd26135185e19b3732746d4a9e2923e896f28dec8664bab161faea2ee26fcdc3d",
        "urls": [
          "bzz-raw://c236dfe386b508be33c3a1a74ae1d4fd64b8c77ae207767e9dbed0f2429518a2",
          "dweb:/ipfs/QmXVbZJjfryTRti98uN3BMh5qh4K7NuEs1RSCoBjRoYd4q"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol": {
        "keccak256": "0x5275636cd47e660a2fdf6c7fe9d41ff3cc866b785cc8a9d88c1b8ca983509f01",
        "urls": [
          "bzz-raw://a59dd6e3cfcc332f45a13d44585eb228588c4b9d470cbb19852df5753a4571af",
          "dweb:/ipfs/QmQJF1QU3MKhvmw42eq61u9z3bzKJJKMsEdQVYyPyYgTVS"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol": {
        "keccak256": "0x205a0abfd8b3c9af2740769f251381b84999b8e9347f3cd50de3ef8290a17750",
        "urls": [
          "bzz-raw://d9778d7d5da941af2029410b6ac212f915ea1785573ae2865b0ed8f779fcca82",
          "dweb:/ipfs/QmNkVEkfecvgubgnMuaT5fEfSExd95vz8DQHhpZtMrVRjH"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/precrime/interfaces/IOAppPreCrimeSimulator.sol": {
        "keccak256": "0x5d24db150949ea8e6437178e65a942e8c8b7f332e5daf32750f56b23b35b5bb2",
        "urls": [
          "bzz-raw://1b1dcea0267234654126f926a1b405743606d7b5e49185b621afb7bd94d18b9a",
          "dweb:/ipfs/QmZ9BXQmbWJcrhHKuBs4yhNtbCV5WUpUY3AXSX7rkWwX6y"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/precrime/interfaces/IPreCrime.sol": {
        "keccak256": "0xc8d869f27ef8ceb2e13fdf6a70682fd4dee3f90c4924eb8e125bc1e66cb6af84",
        "urls": [
          "bzz-raw://66bf49d59c14832ea0ddddcd12d512d4f9bd0fd254a1368442587bf3e77fe73e",
          "dweb:/ipfs/QmYUAvsyuUPiSYjbL4zVo6ZtiRSLCUPDvCesqgdZWbSGDg"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/precrime/libs/Packet.sol": {
        "keccak256": "0xcb2fb1c5b2eb3731de78b479b9c2ab3bba326fe0b0b3a008590f18e881e457a6",
        "urls": [
          "bzz-raw://f70724c61d226743c2bd8ba6c09758805e4339780978949ce5b333c106be4edc",
          "dweb:/ipfs/QmX5rV9K1N7RgTz9xtf8CDG8SrYiitGAzFh9ec2tbnEec4"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oft-evm/contracts/OFT.sol": {
        "keccak256": "0xdc3582e4a20e02a79050c17058a1f1f42a4335d1a70be06c0a52a3fb05d4c89a",
        "urls": [
          "bzz-raw://83c4bd42e68528246860a952a92a79e51e3a789dac79a0b62576ab2f609de9c7",
          "dweb:/ipfs/QmVj1x655j1cFTnPT8uBaM71TCSrhFVwPdoFkAkWhhadns"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oft-evm/contracts/OFTCore.sol": {
        "keccak256": "0x4c5a5412cf671bb70d84c9e783312eddf864ef56566f7bf86401c5661015e228",
        "urls": [
          "bzz-raw://0cac6c48bbc05456b0fccd0782b1a8c2560b0420d425dcba109526af8188893e",
          "dweb:/ipfs/QmRoCZX37UNgBeVKXTsfBvR7DgibZGL1tfrPqfvyGafHor"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol": {
        "keccak256": "0x7ba6bb62fba7ee83451cfb0e727ddeef0e96b4388bd4e9ff0fc6ce103e1101c8",
        "urls": [
          "bzz-raw://cfbd447f2e8a730bd46a14c3c3e6a0b2bf7446145579603a9793ba5ac1dd38b4",
          "dweb:/ipfs/QmZ4nx4iGrFmBHvYFgki5TXFdCHz4Co38hgdgwpRaM7NLs"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol": {
        "keccak256": "0xaae73d6eb8b9561c43f1802f3c416c00ccd35f172b711f9781ccdf1b25a40db5",
        "urls": [
          "bzz-raw://7beda2d895ae9e15269dd261a492ce0a29b498e5bebf088ed6f2ae6a5185719e",
          "dweb:/ipfs/QmScog2tW1YVyEPLVcUVqGGc85ub46sA28nUKNzFEZcFdK"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTMsgCodec.sol": {
        "keccak256": "0x5358948017669c03e157f871d8c38e988f9004dbd0801ad3119d2487f0d40b0b",
        "urls": [
          "bzz-raw://c7d0f1bf32a80af9b99cd93fefa373dac5c27463351cc35f62b9c2439d5b9258",
          "dweb:/ipfs/Qmb81qoxzMwV3PkPANRvnXf4fJTsZ5sjJ8r2df9V2vhh6q"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdAssertions.sol": {
        "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
        "urls": [
          "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
          "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdChains.sol": {
        "keccak256": "0x7dd11ac4db798fa196e00a0cfa288ce984acac881f1f34de03fe3187deed58de",
        "urls": [
          "bzz-raw://2c15fb03d5545e2d8d3948661596410edec5ec278a73988914b14a05d0d54557",
          "dweb:/ipfs/QmWGjkLgp4wSrTrFxF8cmhghaXQp5VyXYQvWE1DUTPL4rG"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdCheats.sol": {
        "keccak256": "0x28473c688050ed5cfdf6a47bfd59cdc7209e6a3eab8b438eb92055ea4066a49b",
        "urls": [
          "bzz-raw://2d7e6391ced7256389f496fa35962d4ecdd6a066c5a54bdbef58abe6287c732b",
          "dweb:/ipfs/QmTuTqyapx9XraMX3mUjNjs3YHzBiQSfAQ38can96WWohM"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdInvariant.sol": {
        "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
        "urls": [
          "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
          "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdJson.sol": {
        "keccak256": "0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500",
        "urls": [
          "bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974",
          "dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdStorage.sol": {
        "keccak256": "0xb91ab24383a5872b894fc93325eef1add6cbbf981628f18e860068bf88bb7dcc",
        "urls": [
          "bzz-raw://2651e33b9ac8fc5803ed0a43078c1bf4fa90a0b0347aafd95776b02daccdcc57",
          "dweb:/ipfs/QmbdRyPuGJdZgnCuMnp7c1WsBo1Spf7j1KMmws1Z5rd4BQ"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdToml.sol": {
        "keccak256": "0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861",
        "urls": [
          "bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3",
          "dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdUtils.sol": {
        "keccak256": "0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410",
        "urls": [
          "bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa",
          "dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Test.sol": {
        "keccak256": "0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe",
        "urls": [
          "bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e",
          "dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Vm.sol": {
        "keccak256": "0xfe4466244a3c783594443a2f96e4b2d14e62e3eca310260f1b4c9107e9aafb53",
        "urls": [
          "bzz-raw://3890f26c3e2c2d96f4b11f269e679c0a6f47ca995d761530a36c42382ddf7359",
          "dweb:/ipfs/QmWpcGEYqLxtfjouqwa3RP77uX2jnFGYnHjnzT4PPyRdbr"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/console.sol": {
        "keccak256": "0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5",
        "urls": [
          "bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57",
          "dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/console2.sol": {
        "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
        "urls": [
          "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
          "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/mocks/MockERC721.sol": {
        "keccak256": "0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9",
        "urls": [
          "bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87",
          "dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/safeconsole.sol": {
        "keccak256": "0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11",
        "urls": [
          "bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab",
          "dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
        "urls": [
          "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
          "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31",
        "urls": [
          "bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09",
          "dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
        "urls": [
          "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
          "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310",
        "urls": [
          "bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862",
          "dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5",
        "urls": [
          "bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23",
          "dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "test/HyperLiquidComposer.t.sol": {
        "keccak256": "0x1cf3c6b33e16f76a76cf226423b18783de705878af9ceba08dddc976537fc3cb",
        "urls": [
          "bzz-raw://6ecbf3066f0ad58ad828d99bf9f2f06726673bd77fb5627a6a81b9ae16c24e09",
          "dweb:/ipfs/QmesLLmTeBLx5MCUKo82iLGPmfr3SxbKkwwAYV2HoZyk4b"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/OFTMock.sol": {
        "keccak256": "0x4418ffbf7cbcc3e98033fe9869ae2c6b74a3fc22d9d5d5b927a53787b6e8d4ea",
        "urls": [
          "bzz-raw://195f8028f158026b4be544c5c4dedd602b5114c43248060bead77b2b031a1aad",
          "dweb:/ipfs/QmbeMSV9NJSXAAfZVjkAqtKzr425MSTieJGn1DU28xMnM8"
        ],
        "license": "MIT"
      },
      "test/mocks/SpotBalancePrecompileMock.sol": {
        "keccak256": "0xee2a309124d7af6d6737a859a8806e179e98aa25be49943510ab85e0db3c7603",
        "urls": [
          "bzz-raw://6f17d83704dc9f9f817b5676a601420759e6d1d26318b8601c90f482901ccdb8",
          "dweb:/ipfs/QmWvc4Rup1fE6SsEGxiWEwpKuem8hVoRwevQoeoE42WUey"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/HyperLiquidComposer.t.sol",
    "id": 48981,
    "exportedSymbols": {
      "HyperLiquidComposer": [386],
      "HyperLiquidComposerCodec": [1582],
      "HyperLiquidComposerTest": [48980],
      "IERC20": [46722],
      "IHYPEPrecompile": [882],
      "IHyperAsset": [897],
      "IHyperLiquidWritePrecompile": [1291],
      "ILayerZeroEndpointV2": [1803],
      "OFTComposeMsgCodec": [5287],
      "OFTMock": [50775],
      "SpotBalancePrecompileMock": [50841],
      "Test": [18271],
      "console": [31038]
    },
    "nodeType": "SourceUnit",
    "src": "39:7612:76",
    "nodes": [
      {
        "id": 48329,
        "nodeType": "PragmaDirective",
        "src": "39:23:76",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".0"]
      },
      {
        "id": 48332,
        "nodeType": "ImportDirective",
        "src": "64:51:76",
        "nodes": [],
        "absolutePath": "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48981,
        "sourceUnit": 18272,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48330,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 18271,
              "src": "73:4:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48331,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31038,
              "src": "79:7:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48334,
        "nodeType": "ImportDirective",
        "src": "117:119:76",
        "nodes": [],
        "absolutePath": "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol",
        "file": "@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48981,
        "sourceUnit": 1804,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48333,
              "name": "ILayerZeroEndpointV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1803,
              "src": "126:20:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48336,
        "nodeType": "ImportDirective",
        "src": "237:98:76",
        "nodes": [],
        "absolutePath": "node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol",
        "file": "@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48981,
        "sourceUnit": 5288,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48335,
              "name": "OFTComposeMsgCodec",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5287,
              "src": "246:18:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48338,
        "nodeType": "ImportDirective",
        "src": "336:72:76",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48981,
        "sourceUnit": 46723,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48337,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46722,
              "src": "345:6:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48340,
        "nodeType": "ImportDirective",
        "src": "410:83:76",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IHyperLiquidComposerCore.sol",
        "file": "../contracts/interfaces/IHyperLiquidComposerCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48981,
        "sourceUnit": 996,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48339,
              "name": "IHyperAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 897,
              "src": "419:11:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48342,
        "nodeType": "ImportDirective",
        "src": "494:102:76",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IHyperLiquidWritePrecompile.sol",
        "file": "../contracts/interfaces/IHyperLiquidWritePrecompile.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48981,
        "sourceUnit": 1292,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48341,
              "name": "IHyperLiquidWritePrecompile",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1291,
              "src": "503:27:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48344,
        "nodeType": "ImportDirective",
        "src": "597:78:76",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IHYPEPrecompile.sol",
        "file": "../contracts/interfaces/IHYPEPrecompile.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48981,
        "sourceUnit": 883,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48343,
              "name": "IHYPEPrecompile",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 882,
              "src": "606:15:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48346,
        "nodeType": "ImportDirective",
        "src": "677:93:76",
        "nodes": [],
        "absolutePath": "contracts/library/HyperLiquidComposerCodec.sol",
        "file": "../contracts/library/HyperLiquidComposerCodec.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48981,
        "sourceUnit": 1583,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48345,
              "name": "HyperLiquidComposerCodec",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1582,
              "src": "686:24:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48348,
        "nodeType": "ImportDirective",
        "src": "772:75:76",
        "nodes": [],
        "absolutePath": "contracts/HyperLiquidComposer.sol",
        "file": "../contracts/HyperLiquidComposer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48981,
        "sourceUnit": 387,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48347,
              "name": "HyperLiquidComposer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 386,
              "src": "781:19:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48350,
        "nodeType": "ImportDirective",
        "src": "849:46:76",
        "nodes": [],
        "absolutePath": "test/mocks/OFTMock.sol",
        "file": "./mocks/OFTMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48981,
        "sourceUnit": 50776,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48349,
              "name": "OFTMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50775,
              "src": "858:7:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48352,
        "nodeType": "ImportDirective",
        "src": "896:82:76",
        "nodes": [],
        "absolutePath": "test/mocks/SpotBalancePrecompileMock.sol",
        "file": "./mocks/SpotBalancePrecompileMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48981,
        "sourceUnit": 50842,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48351,
              "name": "SpotBalancePrecompileMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50841,
              "src": "905:25:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48980,
        "nodeType": "ContractDefinition",
        "src": "980:6670:76",
        "nodes": [
          {
            "id": 48357,
            "nodeType": "VariableDeclaration",
            "src": "1027:24:76",
            "nodes": [],
            "constant": false,
            "functionSelector": "c33d080d",
            "mutability": "mutable",
            "name": "ALICE",
            "nameLocation": "1046:5:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
              "typeString": "struct IHyperAsset"
            },
            "typeName": {
              "id": 48356,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48355,
                "name": "IHyperAsset",
                "nameLocations": ["1027:11:76"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 897,
                "src": "1027:11:76"
              },
              "referencedDeclaration": 897,
              "src": "1027:11:76",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_IHyperAsset_$897_storage_ptr",
                "typeString": "struct IHyperAsset"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48360,
            "nodeType": "VariableDeclaration",
            "src": "1057:23:76",
            "nodes": [],
            "constant": false,
            "functionSelector": "76e86e72",
            "mutability": "mutable",
            "name": "HYPE",
            "nameLocation": "1076:4:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
              "typeString": "struct IHyperAsset"
            },
            "typeName": {
              "id": 48359,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48358,
                "name": "IHyperAsset",
                "nameLocations": ["1057:11:76"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 897,
                "src": "1057:11:76"
              },
              "referencedDeclaration": 897,
              "src": "1057:11:76",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_IHyperAsset_$897_storage_ptr",
                "typeString": "struct IHyperAsset"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48363,
            "nodeType": "VariableDeclaration",
            "src": "1086:86:76",
            "nodes": [],
            "constant": true,
            "functionSelector": "318f405a",
            "mutability": "constant",
            "name": "HL_LZ_ENDPOINT_V2",
            "nameLocation": "1110:17:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48361,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1086:7:76",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307866396531383135463135313032346244453442374331304241433130653842613946366235334531",
              "id": 48362,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1130:42:76",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xf9e1815F151024bDE4B7C10BAC10e8Ba9F6b53E1"
            },
            "visibility": "public"
          },
          {
            "id": 48366,
            "nodeType": "VariableDeclaration",
            "src": "1178:89:76",
            "nodes": [],
            "constant": true,
            "functionSelector": "dd850075",
            "mutability": "constant",
            "name": "HLP_PRECOMPILE_WRITE",
            "nameLocation": "1202:20:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48364,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1178:7:76",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307833333333333333333333333333333333333333333333333333333333333333333333333333333333",
              "id": 48365,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1225:42:76",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x3333333333333333333333333333333333333333"
            },
            "visibility": "public"
          },
          {
            "id": 48369,
            "nodeType": "VariableDeclaration",
            "src": "1273:101:76",
            "nodes": [],
            "constant": true,
            "functionSelector": "ba872679",
            "mutability": "constant",
            "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
            "nameLocation": "1297:32:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48367,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1273:7:76",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030383031",
              "id": 48368,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1332:42:76",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000000000801"
            },
            "visibility": "public"
          },
          {
            "id": 48372,
            "nodeType": "VariableDeclaration",
            "src": "1404:38:76",
            "nodes": [],
            "constant": true,
            "functionSelector": "c9279a74",
            "mutability": "constant",
            "name": "SRC_EID",
            "nameLocation": "1427:7:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 48370,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1404:6:76",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "3430313631",
              "id": 48371,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1437:5:76",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_40161_by_1",
                "typeString": "int_const 40161"
              },
              "value": "40161"
            },
            "visibility": "public"
          },
          {
            "id": 48374,
            "nodeType": "VariableDeclaration",
            "src": "1475:21:76",
            "nodes": [],
            "constant": false,
            "functionSelector": "176e619e",
            "mutability": "mutable",
            "name": "DST_EID",
            "nameLocation": "1489:7:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 48373,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1475:6:76",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48377,
            "nodeType": "VariableDeclaration",
            "src": "1503:18:76",
            "nodes": [],
            "constant": false,
            "functionSelector": "9b5215f6",
            "mutability": "mutable",
            "name": "oft",
            "nameLocation": "1518:3:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OFTMock_$50775",
              "typeString": "contract OFTMock"
            },
            "typeName": {
              "id": 48376,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48375,
                "name": "OFTMock",
                "nameLocations": ["1503:7:76"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50775,
                "src": "1503:7:76"
              },
              "referencedDeclaration": 50775,
              "src": "1503:7:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OFTMock_$50775",
                "typeString": "contract OFTMock"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48380,
            "nodeType": "VariableDeclaration",
            "src": "1527:46:76",
            "nodes": [],
            "constant": false,
            "functionSelector": "a09e7430",
            "mutability": "mutable",
            "name": "hyperLiquidComposer",
            "nameLocation": "1554:19:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
              "typeString": "contract HyperLiquidComposer"
            },
            "typeName": {
              "id": 48379,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48378,
                "name": "HyperLiquidComposer",
                "nameLocations": ["1527:19:76"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 386,
                "src": "1527:19:76"
              },
              "referencedDeclaration": 386,
              "src": "1527:19:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                "typeString": "contract HyperLiquidComposer"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48385,
            "nodeType": "VariableDeclaration",
            "src": "1580:40:76",
            "nodes": [],
            "constant": false,
            "functionSelector": "deb22e9a",
            "mutability": "mutable",
            "name": "userA",
            "nameLocation": "1595:5:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48381,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1580:7:76",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "7573657241",
                  "id": 48383,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1612:7:76",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_66d43f2462420055e331769cd264c0b96b6e11235c74b6eb509f25e8817571d1",
                    "typeString": "literal_string \"userA\""
                  },
                  "value": "userA"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_66d43f2462420055e331769cd264c0b96b6e11235c74b6eb509f25e8817571d1",
                    "typeString": "literal_string \"userA\""
                  }
                ],
                "id": 48382,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 10804,
                "src": "1603:8:76",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 48384,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1603:17:76",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48390,
            "nodeType": "VariableDeclaration",
            "src": "1626:40:76",
            "nodes": [],
            "constant": false,
            "functionSelector": "cb1a295f",
            "mutability": "mutable",
            "name": "userB",
            "nameLocation": "1641:5:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48386,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1626:7:76",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "7573657242",
                  "id": 48388,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1658:7:76",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_84287298a72e6b9c16d0138ccf1e0b316be8b2ed2966bcbc1af2c6453e13cfaf",
                    "typeString": "literal_string \"userB\""
                  },
                  "value": "userB"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_84287298a72e6b9c16d0138ccf1e0b316be8b2ed2966bcbc1af2c6453e13cfaf",
                    "typeString": "literal_string \"userB\""
                  }
                ],
                "id": 48387,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 10804,
                "src": "1649:8:76",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 48389,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1649:17:76",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48393,
            "nodeType": "VariableDeclaration",
            "src": "1673:44:76",
            "nodes": [],
            "constant": true,
            "functionSelector": "bb641b3e",
            "mutability": "constant",
            "name": "AMOUNT_TO_SEND",
            "nameLocation": "1696:14:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 48391,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1673:6:76",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 48392,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1713:4:76",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "id": 48396,
            "nodeType": "VariableDeclaration",
            "src": "1723:48:76",
            "nodes": [],
            "constant": true,
            "functionSelector": "9127ace2",
            "mutability": "constant",
            "name": "AMOUNT_TO_FUND",
            "nameLocation": "1746:14:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 48394,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1723:6:76",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 48395,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1763:8:76",
              "subdenomination": "gwei",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000_by_1",
                "typeString": "int_const 100000000000"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "id": 48399,
            "nodeType": "VariableDeclaration",
            "src": "1777:35:76",
            "nodes": [],
            "constant": true,
            "functionSelector": "4e0cd799",
            "mutability": "constant",
            "name": "DUST",
            "nameLocation": "1800:4:76",
            "scope": 48980,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 48397,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1777:6:76",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 48398,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1807:5:76",
              "subdenomination": "wei",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "id": 48519,
            "nodeType": "FunctionDefinition",
            "src": "1819:1311:76",
            "nodes": [],
            "body": {
              "id": 48518,
              "nodeType": "Block",
              "src": "1843:1287:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "68747470733a2f2f7270632e68797065726c69717569642d746573746e65742e78797a2f65766d",
                        "id": 48405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1873:41:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_553c8addd948e0c243d8c3bc74db5967a2a4edb7e156901968230a5e7b1d8b57",
                          "typeString": "literal_string \"https://rpc.hyperliquid-testnet.xyz/evm\""
                        },
                        "value": "https://rpc.hyperliquid-testnet.xyz/evm"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_553c8addd948e0c243d8c3bc74db5967a2a4edb7e156901968230a5e7b1d8b57",
                          "typeString": "literal_string \"https://rpc.hyperliquid-testnet.xyz/evm\""
                        }
                      ],
                      "expression": {
                        "id": 48402,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "1853:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1856:16:76",
                      "memberName": "createSelectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22087,
                      "src": "1853:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) external returns (uint256)"
                      }
                    },
                    "id": 48406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1853:62:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48407,
                  "nodeType": "ExpressionStatement",
                  "src": "1853:62:76"
                },
                {
                  "expression": {
                    "id": 48419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48408,
                      "name": "ALICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48357,
                      "src": "1926:5:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                        "typeString": "struct IHyperAsset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31323331",
                              "id": 48412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2029:4:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1231_by_1",
                                "typeString": "int_const 1231"
                              },
                              "value": "1231"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1231_by_1",
                                "typeString": "int_const 1231"
                              }
                            ],
                            "expression": {
                              "id": 48410,
                              "name": "HyperLiquidComposerCodec",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1582,
                              "src": "1980:24:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_HyperLiquidComposerCodec_$1582_$",
                                "typeString": "type(library HyperLiquidComposerCodec)"
                              }
                            },
                            "id": 48411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2005:23:76",
                            "memberName": "into_assetBridgeAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1347,
                            "src": "1980:48:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) pure returns (address)"
                            }
                          },
                          "id": 48413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1980:54:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "31323331",
                          "id": 48414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2061:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1231_by_1",
                            "typeString": "int_const 1231"
                          },
                          "value": "1231"
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_12_by_1",
                            "typeString": "int_const 12"
                          },
                          "id": 48417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3138",
                            "id": 48415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2092:2:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 48416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2097:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "2092:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_12_by_1",
                            "typeString": "int_const 12"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1231_by_1",
                            "typeString": "int_const 1231"
                          },
                          {
                            "typeIdentifier": "t_rational_12_by_1",
                            "typeString": "int_const 12"
                          }
                        ],
                        "id": 48409,
                        "name": "IHyperAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "1934:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_IHyperAsset_$897_storage_ptr_$",
                          "typeString": "type(struct IHyperAsset storage pointer)"
                        }
                      },
                      "id": 48418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "1960:18:76",
                        "2048:11:76",
                        "2079:11:76"
                      ],
                      "names": [
                        "assetBridgeAddress",
                        "coreIndexId",
                        "decimalDiff"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1934:175:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                        "typeString": "struct IHyperAsset memory"
                      }
                    },
                    "src": "1926:183:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                      "typeString": "struct IHyperAsset storage ref"
                    }
                  },
                  "id": 48420,
                  "nodeType": "ExpressionStatement",
                  "src": "1926:183:76"
                },
                {
                  "expression": {
                    "id": 48429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48421,
                      "name": "HYPE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48360,
                      "src": "2120:4:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                        "typeString": "struct IHyperAsset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307832323232323232323232323232323232323232323232323232323232323232323232323232323232",
                          "id": 48423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2173:42:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x2222222222222222222222222222222222222222"
                        },
                        {
                          "hexValue": "31313035",
                          "id": 48424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2242:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1105_by_1",
                            "typeString": "int_const 1105"
                          },
                          "value": "1105"
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "id": 48427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3138",
                            "id": 48425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2273:2:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 48426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2278:2:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "2273:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1105_by_1",
                            "typeString": "int_const 1105"
                          },
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        ],
                        "id": 48422,
                        "name": "IHyperAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "2127:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_IHyperAsset_$897_storage_ptr_$",
                          "typeString": "type(struct IHyperAsset storage pointer)"
                        }
                      },
                      "id": 48428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "2153:18:76",
                        "2229:11:76",
                        "2260:11:76"
                      ],
                      "names": [
                        "assetBridgeAddress",
                        "coreIndexId",
                        "decimalDiff"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2127:164:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                        "typeString": "struct IHyperAsset memory"
                      }
                    },
                    "src": "2120:171:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                      "typeString": "struct IHyperAsset storage ref"
                    }
                  },
                  "id": 48430,
                  "nodeType": "ExpressionStatement",
                  "src": "2120:171:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48434,
                        "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48369,
                        "src": "2310:32:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 48439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "2352:29:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SpotBalancePrecompileMock_$50841_$",
                                  "typeString": "function () returns (contract SpotBalancePrecompileMock)"
                                },
                                "typeName": {
                                  "id": 48438,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 48437,
                                    "name": "SpotBalancePrecompileMock",
                                    "nameLocations": ["2356:25:76"],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 50841,
                                    "src": "2356:25:76"
                                  },
                                  "referencedDeclaration": 50841,
                                  "src": "2356:25:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SpotBalancePrecompileMock_$50841",
                                    "typeString": "contract SpotBalancePrecompileMock"
                                  }
                                }
                              },
                              "id": 48440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2352:31:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SpotBalancePrecompileMock_$50841",
                                "typeString": "contract SpotBalancePrecompileMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SpotBalancePrecompileMock_$50841",
                                "typeString": "contract SpotBalancePrecompileMock"
                              }
                            ],
                            "id": 48436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2344:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48435,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2344:7:76",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2344:40:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2385:4:76",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "2344:45:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 48431,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "2302:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2305:4:76",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22147,
                      "src": "2302:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 48443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2302:88:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48444,
                  "nodeType": "ExpressionStatement",
                  "src": "2302:88:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48449,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48357,
                          "src": "2488:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48450,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2494:18:76",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "2488:24:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48451,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48357,
                          "src": "2526:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48452,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2532:11:76",
                        "memberName": "coreIndexId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 894,
                        "src": "2526:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2562:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 48454,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "2562:6:76",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              }
                            ],
                            "id": 48453,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2557:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 48456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2557:12:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint64",
                            "typeString": "type(uint64)"
                          }
                        },
                        "id": 48457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2570:3:76",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2557:16:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 48446,
                            "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48369,
                            "src": "2426:32:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48445,
                          "name": "SpotBalancePrecompileMock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50841,
                          "src": "2400:25:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SpotBalancePrecompileMock_$50841_$",
                            "typeString": "type(contract SpotBalancePrecompileMock)"
                          }
                        },
                        "id": 48447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2400:59:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpotBalancePrecompileMock_$50841",
                          "typeString": "contract SpotBalancePrecompileMock"
                        }
                      },
                      "id": 48448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2460:14:76",
                      "memberName": "setSpotBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50809,
                      "src": "2400:74:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint64,uint64) external"
                      }
                    },
                    "id": 48458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2400:183:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48459,
                  "nodeType": "ExpressionStatement",
                  "src": "2400:183:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48464,
                          "name": "HYPE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48360,
                          "src": "2682:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48465,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2687:18:76",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "2682:23:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48466,
                          "name": "HYPE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48360,
                          "src": "2719:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48467,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2724:11:76",
                        "memberName": "coreIndexId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 894,
                        "src": "2719:16:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2754:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 48469,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "2754:6:76",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              }
                            ],
                            "id": 48468,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2749:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 48471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2749:12:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint64",
                            "typeString": "type(uint64)"
                          }
                        },
                        "id": 48472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2762:3:76",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2749:16:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 48461,
                            "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48369,
                            "src": "2620:32:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48460,
                          "name": "SpotBalancePrecompileMock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50841,
                          "src": "2594:25:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SpotBalancePrecompileMock_$50841_$",
                            "typeString": "type(contract SpotBalancePrecompileMock)"
                          }
                        },
                        "id": 48462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2594:59:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpotBalancePrecompileMock_$50841",
                          "typeString": "contract SpotBalancePrecompileMock"
                        }
                      },
                      "id": 48463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2654:14:76",
                      "memberName": "setSpotBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50809,
                      "src": "2594:74:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint64,uint64) external"
                      }
                    },
                    "id": 48473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2594:181:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48474,
                  "nodeType": "ExpressionStatement",
                  "src": "2594:181:76"
                },
                {
                  "expression": {
                    "id": 48485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48475,
                      "name": "oft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48377,
                      "src": "2786:3:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OFTMock_$50775",
                        "typeString": "contract OFTMock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74657374",
                          "id": 48479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2804:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          },
                          "value": "test"
                        },
                        {
                          "hexValue": "74657374",
                          "id": 48480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2812:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          },
                          "value": "test"
                        },
                        {
                          "id": 48481,
                          "name": "HL_LZ_ENDPOINT_V2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48363,
                          "src": "2820:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 48482,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2839:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 48483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2843:6:76",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2839:10:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 48478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2792:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$returns$_t_contract$_OFTMock_$50775_$",
                          "typeString": "function (string memory,string memory,address,address) returns (contract OFTMock)"
                        },
                        "typeName": {
                          "id": 48477,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 48476,
                            "name": "OFTMock",
                            "nameLocations": ["2796:7:76"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 50775,
                            "src": "2796:7:76"
                          },
                          "referencedDeclaration": 50775,
                          "src": "2796:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OFTMock_$50775",
                            "typeString": "contract OFTMock"
                          }
                        }
                      },
                      "id": 48484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2792:58:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OFTMock_$50775",
                        "typeString": "contract OFTMock"
                      }
                    },
                    "src": "2786:64:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OFTMock_$50775",
                      "typeString": "contract OFTMock"
                    }
                  },
                  "id": 48486,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:64:76"
                },
                {
                  "expression": {
                    "id": 48501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48487,
                      "name": "hyperLiquidComposer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48380,
                      "src": "2861:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                        "typeString": "contract HyperLiquidComposer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48491,
                          "name": "HL_LZ_ENDPOINT_V2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48363,
                          "src": "2920:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 48494,
                              "name": "oft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48377,
                              "src": "2959:3:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OFTMock_$50775",
                                "typeString": "contract OFTMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OFTMock_$50775",
                                "typeString": "contract OFTMock"
                              }
                            ],
                            "id": 48493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2951:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48492,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2951:7:76",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2951:12:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 48496,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48357,
                            "src": "2977:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                              "typeString": "struct IHyperAsset storage ref"
                            }
                          },
                          "id": 48497,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2983:11:76",
                          "memberName": "coreIndexId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 894,
                          "src": "2977:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "expression": {
                            "id": 48498,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48357,
                            "src": "3008:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                              "typeString": "struct IHyperAsset storage ref"
                            }
                          },
                          "id": 48499,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3014:11:76",
                          "memberName": "decimalDiff",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 896,
                          "src": "3008:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 48490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2883:23:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_uint64_$_t_uint64_$returns$_t_contract$_HyperLiquidComposer_$386_$",
                          "typeString": "function (address,address,uint64,uint64) returns (contract HyperLiquidComposer)"
                        },
                        "typeName": {
                          "id": 48489,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 48488,
                            "name": "HyperLiquidComposer",
                            "nameLocations": ["2887:19:76"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 386,
                            "src": "2887:19:76"
                          },
                          "referencedDeclaration": 386,
                          "src": "2887:19:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                            "typeString": "contract HyperLiquidComposer"
                          }
                        }
                      },
                      "id": 48500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2883:152:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                        "typeString": "contract HyperLiquidComposer"
                      }
                    },
                    "src": "2861:174:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                      "typeString": "contract HyperLiquidComposer"
                    }
                  },
                  "id": 48502,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:174:76"
                },
                {
                  "expression": {
                    "id": 48509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48503,
                      "name": "DST_EID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48374,
                      "src": "3045:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 48504,
                              "name": "oft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48377,
                              "src": "3055:3:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OFTMock_$50775",
                                "typeString": "contract OFTMock"
                              }
                            },
                            "id": 48505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3059:8:76",
                            "memberName": "endpoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2987,
                            "src": "3055:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILayerZeroEndpointV2_$1803_$",
                              "typeString": "function () view external returns (contract ILayerZeroEndpointV2)"
                            }
                          },
                          "id": 48506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3055:14:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILayerZeroEndpointV2_$1803",
                            "typeString": "contract ILayerZeroEndpointV2"
                          }
                        },
                        "id": 48507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3070:3:76",
                        "memberName": "eid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2180,
                        "src": "3055:18:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
                          "typeString": "function () view external returns (uint32)"
                        }
                      },
                      "id": 48508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3055:20:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3045:30:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 48510,
                  "nodeType": "ExpressionStatement",
                  "src": "3045:30:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48514,
                        "name": "HL_LZ_ENDPOINT_V2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48363,
                        "src": "3094:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 48515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3113:9:76",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 48511,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "3086:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3089:4:76",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22115,
                      "src": "3086:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 48516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3086:37:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48517,
                  "nodeType": "ExpressionStatement",
                  "src": "3086:37:76"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1828:5:76",
            "parameters": {
              "id": 48400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1833:2:76"
            },
            "returnParameters": {
              "id": 48401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1843:0:76"
            },
            "scope": 48980,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48576,
            "nodeType": "FunctionDefinition",
            "src": "3136:570:76",
            "nodes": [],
            "body": {
              "id": 48575,
              "nodeType": "Block",
              "src": "3175:531:76",
              "nodes": [],
              "statements": [
                {
                  "assignments": [48524],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48524,
                      "mutability": "mutable",
                      "name": "hypeAsset",
                      "nameLocation": "3204:9:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 48575,
                      "src": "3185:28:76",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                        "typeString": "struct IHyperAsset"
                      },
                      "typeName": {
                        "id": 48523,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48522,
                          "name": "IHyperAsset",
                          "nameLocations": ["3185:11:76"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 897,
                          "src": "3185:11:76"
                        },
                        "referencedDeclaration": 897,
                        "src": "3185:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IHyperAsset_$897_storage_ptr",
                          "typeString": "struct IHyperAsset"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48528,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48525,
                        "name": "hyperLiquidComposer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48380,
                        "src": "3216:19:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                          "typeString": "contract HyperLiquidComposer"
                        }
                      },
                      "id": 48526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3236:12:76",
                      "memberName": "getHypeAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 872,
                      "src": "3216:32:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_IHyperAsset_$897_memory_ptr_$",
                        "typeString": "function () view external returns (struct IHyperAsset memory)"
                      }
                    },
                    "id": 48527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3216:34:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                      "typeString": "struct IHyperAsset memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3185:65:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48530,
                          "name": "hypeAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48524,
                          "src": "3269:9:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                            "typeString": "struct IHyperAsset memory"
                          }
                        },
                        "id": 48531,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3279:18:76",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "3269:28:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "307832323232323232323232323232323232323232323232323232323232323232323232323232323232",
                        "id": 48532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3299:42:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x2222222222222222222222222222222222222222"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48529,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5963,
                      "src": "3260:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) pure"
                      }
                    },
                    "id": 48533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3260:82:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48534,
                  "nodeType": "ExpressionStatement",
                  "src": "3260:82:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48536,
                          "name": "hypeAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48524,
                          "src": "3361:9:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                            "typeString": "struct IHyperAsset memory"
                          }
                        },
                        "id": 48537,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3371:11:76",
                        "memberName": "coreIndexId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 894,
                        "src": "3361:21:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "31313035",
                        "id": 48538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3384:4:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1105_by_1",
                          "typeString": "int_const 1105"
                        },
                        "value": "1105"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_1105_by_1",
                          "typeString": "int_const 1105"
                        }
                      ],
                      "id": 48535,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "3352:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 48539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3352:37:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48540,
                  "nodeType": "ExpressionStatement",
                  "src": "3352:37:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48542,
                          "name": "hypeAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48524,
                          "src": "3408:9:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                            "typeString": "struct IHyperAsset memory"
                          }
                        },
                        "id": 48543,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3418:11:76",
                        "memberName": "decimalDiff",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 896,
                        "src": "3408:21:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 48544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3431:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 48541,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "3399:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 48545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3399:35:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48546,
                  "nodeType": "ExpressionStatement",
                  "src": "3399:35:76"
                },
                {
                  "assignments": [48549],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48549,
                      "mutability": "mutable",
                      "name": "oftAsset",
                      "nameLocation": "3464:8:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 48575,
                      "src": "3445:27:76",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                        "typeString": "struct IHyperAsset"
                      },
                      "typeName": {
                        "id": 48548,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48547,
                          "name": "IHyperAsset",
                          "nameLocations": ["3445:11:76"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 897,
                          "src": "3445:11:76"
                        },
                        "referencedDeclaration": 897,
                        "src": "3445:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IHyperAsset_$897_storage_ptr",
                          "typeString": "struct IHyperAsset"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48553,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48550,
                        "name": "hyperLiquidComposer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48380,
                        "src": "3475:19:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                          "typeString": "contract HyperLiquidComposer"
                        }
                      },
                      "id": 48551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3495:11:76",
                      "memberName": "getOFTAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 863,
                      "src": "3475:31:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_IHyperAsset_$897_memory_ptr_$",
                        "typeString": "function () view external returns (struct IHyperAsset memory)"
                      }
                    },
                    "id": 48552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3475:33:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                      "typeString": "struct IHyperAsset memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3445:63:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48555,
                          "name": "oftAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48549,
                          "src": "3527:8:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                            "typeString": "struct IHyperAsset memory"
                          }
                        },
                        "id": 48556,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3536:18:76",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "3527:27:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48557,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48357,
                          "src": "3556:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48558,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3562:18:76",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "3556:24:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48554,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5963,
                      "src": "3518:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) pure"
                      }
                    },
                    "id": 48559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3518:63:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48560,
                  "nodeType": "ExpressionStatement",
                  "src": "3518:63:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48562,
                          "name": "oftAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48549,
                          "src": "3600:8:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                            "typeString": "struct IHyperAsset memory"
                          }
                        },
                        "id": 48563,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3609:11:76",
                        "memberName": "coreIndexId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 894,
                        "src": "3600:20:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 48564,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48357,
                          "src": "3622:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48565,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3628:11:76",
                        "memberName": "coreIndexId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 894,
                        "src": "3622:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 48561,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "3591:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 48566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3591:49:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48567,
                  "nodeType": "ExpressionStatement",
                  "src": "3591:49:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48569,
                          "name": "oftAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48549,
                          "src": "3659:8:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                            "typeString": "struct IHyperAsset memory"
                          }
                        },
                        "id": 48570,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3668:11:76",
                        "memberName": "decimalDiff",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 896,
                        "src": "3659:20:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 48571,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48357,
                          "src": "3681:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48572,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3687:11:76",
                        "memberName": "decimalDiff",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 896,
                        "src": "3681:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 48568,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "3650:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 48573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3650:49:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48574,
                  "nodeType": "ExpressionStatement",
                  "src": "3650:49:76"
                }
              ]
            },
            "functionSelector": "1015594a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_deployment",
            "nameLocation": "3145:15:76",
            "parameters": {
              "id": 48520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3160:2:76"
            },
            "returnParameters": {
              "id": 48521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3175:0:76"
            },
            "scope": 48980,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48738,
            "nodeType": "FunctionDefinition",
            "src": "3712:1435:76",
            "nodes": [],
            "body": {
              "id": 48737,
              "nodeType": "Block",
              "src": "3759:1388:76",
              "nodes": [],
              "statements": [
                {
                  "assignments": [48580],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48580,
                      "mutability": "mutable",
                      "name": "composeMsg",
                      "nameLocation": "3782:10:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 48737,
                      "src": "3769:23:76",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48579,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3769:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48585,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48583,
                        "name": "userB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48390,
                        "src": "3812:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48581,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3795:3:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 48582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3799:12:76",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "3795:16:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 48584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3795:23:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3769:49:76"
                },
                {
                  "assignments": [48587],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48587,
                      "mutability": "mutable",
                      "name": "composerMsg_",
                      "nameLocation": "3912:12:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 48737,
                      "src": "3899:25:76",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48586,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3899:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48603,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 48590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3966:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 48591,
                        "name": "SRC_EID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48372,
                        "src": "3981:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 48594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48592,
                          "name": "AMOUNT_TO_SEND",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48393,
                          "src": "4002:14:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 48593,
                          "name": "DUST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48399,
                          "src": "4019:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "4002:21:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48598,
                                "name": "userA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48385,
                                "src": "4071:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48597,
                              "name": "addressToBytes32",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48979,
                              "src": "4054:16:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function (address) pure returns (bytes32)"
                              }
                            },
                            "id": 48599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4054:23:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 48600,
                            "name": "composeMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48580,
                            "src": "4079:10:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 48595,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4037:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 48596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4041:12:76",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4037:16:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 48601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4037:53:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 48588,
                        "name": "OFTComposeMsgCodec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5287,
                        "src": "3927:18:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OFTComposeMsgCodec_$5287_$",
                          "typeString": "type(library OFTComposeMsgCodec)"
                        }
                      },
                      "id": 48589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3946:6:76",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5157,
                      "src": "3927:25:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint64,uint32,uint256,bytes memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 48602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3927:173:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3899:201:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48607,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48377,
                            "src": "4124:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 48606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4116:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48605,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4116:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4116:12:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 48611,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48380,
                            "src": "4138:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 48610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4130:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48609,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4130:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4130:28:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 48615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48613,
                          "name": "AMOUNT_TO_SEND",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48393,
                          "src": "4160:14:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 48614,
                          "name": "DUST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48399,
                          "src": "4177:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "4160:21:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 48604,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [11339, 11356, 11479],
                      "referencedDeclaration": 11356,
                      "src": "4111:4:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 48616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4111:71:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48617,
                  "nodeType": "ExpressionStatement",
                  "src": "4111:71:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48623,
                                "name": "hyperLiquidComposer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48380,
                                "src": "4224:19:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              ],
                              "id": 48622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4216:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48621,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4216:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4216:28:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 48619,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48377,
                            "src": "4202:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          },
                          "id": 48620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4206:9:76",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46230,
                          "src": "4202:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 48625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4202:43:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 48628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48626,
                          "name": "AMOUNT_TO_SEND",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48393,
                          "src": "4247:14:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 48627,
                          "name": "DUST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48399,
                          "src": "4264:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "4247:21:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 48618,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "4193:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 48629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4193:76:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48630,
                  "nodeType": "ExpressionStatement",
                  "src": "4193:76:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48636,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48377,
                            "src": "4353:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 48635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4345:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48634,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4345:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4345:12:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48631,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "4331:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4334:10:76",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22835,
                      "src": "4331:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4331:27:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48639,
                  "nodeType": "ExpressionStatement",
                  "src": "4331:27:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48645,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48380,
                            "src": "4397:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 48644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4389:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48643,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4389:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4389:28:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48647,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48357,
                          "src": "4419:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48648,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4425:18:76",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "4419:24:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48649,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48393,
                        "src": "4445:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "id": 48640,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46722,
                        "src": "4373:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$46722_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 48642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4380:8:76",
                      "memberName": "Transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46656,
                      "src": "4373:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 48650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4373:87:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48651,
                  "nodeType": "EmitStatement",
                  "src": "4368:92:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 48655,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48380,
                            "src": "4536:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          },
                          "id": 48656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4556:20:76",
                          "memberName": "HLP_PRECOMPILE_WRITE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 449,
                          "src": "4536:40:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 48657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4536:42:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48652,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "4522:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4525:10:76",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22835,
                      "src": "4522:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4522:57:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48659,
                  "nodeType": "ExpressionStatement",
                  "src": "4522:57:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48665,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48380,
                            "src": "4652:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 48664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4644:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48663,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4644:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4644:28:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48667,
                        "name": "userB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48390,
                        "src": "4686:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48668,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48357,
                          "src": "4705:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48669,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4711:11:76",
                        "memberName": "coreIndexId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 894,
                        "src": "4705:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 48677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 48672,
                              "name": "AMOUNT_TO_SEND",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48393,
                              "src": "4743:14:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 48676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 48673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4760:2:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "expression": {
                                  "id": 48674,
                                  "name": "ALICE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48357,
                                  "src": "4766:5:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                                    "typeString": "struct IHyperAsset storage ref"
                                  }
                                },
                                "id": 48675,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4772:11:76",
                                "memberName": "decimalDiff",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 896,
                                "src": "4766:17:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "4760:23:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4743:40:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 48671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4736:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 48670,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "4736:6:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4736:48:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "id": 48660,
                        "name": "IHyperLiquidWritePrecompile",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1291,
                        "src": "4594:27:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IHyperLiquidWritePrecompile_$1291_$",
                          "typeString": "type(contract IHyperLiquidWritePrecompile)"
                        }
                      },
                      "id": 48662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4622:8:76",
                      "memberName": "SpotSend",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1227,
                      "src": "4594:36:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (address,address,uint64,uint64)"
                      }
                    },
                    "id": 48679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4594:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48680,
                  "nodeType": "EmitStatement",
                  "src": "4589:205:76"
                },
                {
                  "assignments": [48682],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48682,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "4813:13:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 48737,
                      "src": "4805:21:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48681,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4805:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48687,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48685,
                        "name": "userB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48390,
                        "src": "4843:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48683,
                        "name": "oft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48377,
                        "src": "4829:3:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OFTMock_$50775",
                          "typeString": "contract OFTMock"
                        }
                      },
                      "id": 48684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4833:9:76",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46230,
                      "src": "4829:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 48686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4829:20:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4805:44:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48691,
                        "name": "HL_LZ_ENDPOINT_V2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48363,
                        "src": "4874:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48688,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "4860:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4863:10:76",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22529,
                      "src": "4860:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4860:32:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48693,
                  "nodeType": "ExpressionStatement",
                  "src": "4860:32:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48699,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48377,
                            "src": "4940:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 48698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4932:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48697,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4932:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4932:12:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 48703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4954:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 48702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4946:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 48701,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4946:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4946:10:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 48705,
                        "name": "composerMsg_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48587,
                        "src": "4958:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 48706,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4972:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4976:6:76",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4972:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 48708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4984:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 48694,
                        "name": "hyperLiquidComposer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48380,
                        "src": "4902:19:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                          "typeString": "contract HyperLiquidComposer"
                        }
                      },
                      "id": 48696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4922:9:76",
                      "memberName": "lzCompose",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 229,
                      "src": "4902:29:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory,address,bytes memory) payable external"
                      }
                    },
                    "id": 48709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4902:85:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48710,
                  "nodeType": "ExpressionStatement",
                  "src": "4902:85:76"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48711,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "4997:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5000:9:76",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22573,
                      "src": "4997:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 48714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4997:14:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48715,
                  "nodeType": "ExpressionStatement",
                  "src": "4997:14:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48721,
                                "name": "hyperLiquidComposer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48380,
                                "src": "5053:19:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              ],
                              "id": 48720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5045:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48719,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5045:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5045:28:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 48717,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48377,
                            "src": "5031:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          },
                          "id": 48718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5035:9:76",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46230,
                          "src": "5031:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 48723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5031:43:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 48724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5076:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 48716,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "5022:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 48725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5022:56:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48726,
                  "nodeType": "ExpressionStatement",
                  "src": "5022:56:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48730,
                            "name": "userB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48390,
                            "src": "5111:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 48728,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48377,
                            "src": "5097:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          },
                          "id": 48729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5101:9:76",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46230,
                          "src": "5097:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 48731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5097:20:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48732,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48682,
                          "src": "5119:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 48733,
                          "name": "DUST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48399,
                          "src": "5135:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "5119:20:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48727,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "5088:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 48735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5088:52:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48736,
                  "nodeType": "ExpressionStatement",
                  "src": "5088:52:76"
                }
              ]
            },
            "functionSelector": "a985a8ad",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SendSpot_no_FundAddress",
            "nameLocation": "3721:28:76",
            "parameters": {
              "id": 48577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3749:2:76"
            },
            "returnParameters": {
              "id": 48578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3759:0:76"
            },
            "scope": 48980,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48928,
            "nodeType": "FunctionDefinition",
            "src": "5153:1958:76",
            "nodes": [],
            "body": {
              "id": 48927,
              "nodeType": "Block",
              "src": "5201:1910:76",
              "nodes": [],
              "statements": [
                {
                  "assignments": [48742],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48742,
                      "mutability": "mutable",
                      "name": "composeMsg",
                      "nameLocation": "5224:10:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 48927,
                      "src": "5211:23:76",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48741,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5211:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48747,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48745,
                        "name": "userB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48390,
                        "src": "5254:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48743,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5237:3:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 48744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5241:12:76",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "5237:16:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 48746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5237:23:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5211:49:76"
                },
                {
                  "assignments": [48749],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48749,
                      "mutability": "mutable",
                      "name": "composerMsg_",
                      "nameLocation": "5354:12:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 48927,
                      "src": "5341:25:76",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48748,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5341:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48763,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 48752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5408:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 48753,
                        "name": "SRC_EID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48372,
                        "src": "5423:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 48754,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48393,
                        "src": "5444:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48758,
                                "name": "userA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48385,
                                "src": "5506:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48757,
                              "name": "addressToBytes32",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48979,
                              "src": "5489:16:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function (address) pure returns (bytes32)"
                              }
                            },
                            "id": 48759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5489:23:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 48760,
                            "name": "composeMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48742,
                            "src": "5514:10:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 48755,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5472:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 48756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5476:12:76",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5472:16:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 48761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5472:53:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 48750,
                        "name": "OFTComposeMsgCodec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5287,
                        "src": "5369:18:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OFTComposeMsgCodec_$5287_$",
                          "typeString": "type(library OFTComposeMsgCodec)"
                        }
                      },
                      "id": 48751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5388:6:76",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5157,
                      "src": "5369:25:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint64,uint32,uint256,bytes memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 48762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5369:166:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5341:194:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48767,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48377,
                            "src": "5559:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 48766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5551:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48765,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5551:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5551:12:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 48771,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48380,
                            "src": "5573:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 48770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5565:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48769,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5565:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5565:28:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48773,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48393,
                        "src": "5595:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 48764,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [11339, 11356, 11479],
                      "referencedDeclaration": 11356,
                      "src": "5546:4:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 48774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5546:64:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48775,
                  "nodeType": "ExpressionStatement",
                  "src": "5546:64:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48781,
                                "name": "hyperLiquidComposer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48380,
                                "src": "5651:19:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              ],
                              "id": 48780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5643:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48779,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5643:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5643:28:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 48777,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48377,
                            "src": "5629:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          },
                          "id": 48778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5633:9:76",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46230,
                          "src": "5629:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 48783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5629:43:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 48784,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48393,
                        "src": "5674:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 48776,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "5620:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 48785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5620:69:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48786,
                  "nodeType": "ExpressionStatement",
                  "src": "5620:69:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 48790,
                              "name": "hyperLiquidComposer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48380,
                              "src": "5799:19:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                "typeString": "contract HyperLiquidComposer"
                              }
                            },
                            "id": 48791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5819:12:76",
                            "memberName": "getHypeAsset",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 872,
                            "src": "5799:32:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_IHyperAsset_$897_memory_ptr_$",
                              "typeString": "function () view external returns (struct IHyperAsset memory)"
                            }
                          },
                          "id": 48792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5799:34:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                            "typeString": "struct IHyperAsset memory"
                          }
                        },
                        "id": 48793,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5834:18:76",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "5799:53:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48787,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "5785:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5788:10:76",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22835,
                      "src": "5785:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5785:68:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48795,
                  "nodeType": "ExpressionStatement",
                  "src": "5785:68:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48801,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48380,
                            "src": "5901:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 48800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5893:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48799,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5893:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5893:28:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48803,
                        "name": "AMOUNT_TO_FUND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48396,
                        "src": "5923:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "id": 48796,
                        "name": "IHYPEPrecompile",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "5868:15:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IHYPEPrecompile_$882_$",
                          "typeString": "type(contract IHYPEPrecompile)"
                        }
                      },
                      "id": 48798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5884:8:76",
                      "memberName": "Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 881,
                      "src": "5868:24:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 48804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5868:70:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48805,
                  "nodeType": "EmitStatement",
                  "src": "5863:75:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48811,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48377,
                            "src": "6022:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 48810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6014:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48809,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6014:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6014:12:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48806,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "6000:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6003:10:76",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22835,
                      "src": "6000:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6000:27:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48814,
                  "nodeType": "ExpressionStatement",
                  "src": "6000:27:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48820,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48380,
                            "src": "6066:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 48819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6058:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48818,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6058:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6058:28:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48822,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48357,
                          "src": "6088:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48823,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6094:18:76",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "6088:24:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48824,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48393,
                        "src": "6114:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "id": 48815,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46722,
                        "src": "6042:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$46722_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 48817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6049:8:76",
                      "memberName": "Transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46656,
                      "src": "6042:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 48825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6042:87:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48826,
                  "nodeType": "EmitStatement",
                  "src": "6037:92:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 48830,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48380,
                            "src": "6242:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          },
                          "id": 48831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6262:20:76",
                          "memberName": "HLP_PRECOMPILE_WRITE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 449,
                          "src": "6242:40:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 48832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6242:42:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48827,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "6228:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6231:10:76",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22835,
                      "src": "6228:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6228:57:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48834,
                  "nodeType": "ExpressionStatement",
                  "src": "6228:57:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48840,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48380,
                            "src": "6358:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 48839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6350:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48838,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6350:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6350:28:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48842,
                        "name": "userB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48390,
                        "src": "6392:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48843,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48357,
                          "src": "6411:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48844,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6417:11:76",
                        "memberName": "coreIndexId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 894,
                        "src": "6411:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 48852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 48847,
                              "name": "AMOUNT_TO_SEND",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48393,
                              "src": "6449:14:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 48851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 48848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6466:2:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "expression": {
                                  "id": 48849,
                                  "name": "ALICE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48357,
                                  "src": "6472:5:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                                    "typeString": "struct IHyperAsset storage ref"
                                  }
                                },
                                "id": 48850,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6478:11:76",
                                "memberName": "decimalDiff",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 896,
                                "src": "6472:17:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "6466:23:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6449:40:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 48846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6442:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 48845,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "6442:6:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6442:48:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "id": 48835,
                        "name": "IHyperLiquidWritePrecompile",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1291,
                        "src": "6300:27:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IHyperLiquidWritePrecompile_$1291_$",
                          "typeString": "type(contract IHyperLiquidWritePrecompile)"
                        }
                      },
                      "id": 48837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6328:8:76",
                      "memberName": "SpotSend",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1227,
                      "src": "6300:36:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (address,address,uint64,uint64)"
                      }
                    },
                    "id": 48854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6300:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48855,
                  "nodeType": "EmitStatement",
                  "src": "6295:205:76"
                },
                {
                  "assignments": [48857],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48857,
                      "mutability": "mutable",
                      "name": "balanceBeforeBridge",
                      "nameLocation": "6519:19:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 48927,
                      "src": "6511:27:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48856,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6511:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48861,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 48858,
                        "name": "HYPE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48360,
                        "src": "6541:4:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                          "typeString": "struct IHyperAsset storage ref"
                        }
                      },
                      "id": 48859,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6546:18:76",
                      "memberName": "assetBridgeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 892,
                      "src": "6541:23:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 48860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6565:7:76",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "6541:31:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6511:61:76"
                },
                {
                  "assignments": [48863],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48863,
                      "mutability": "mutable",
                      "name": "balanceBeforeUserB",
                      "nameLocation": "6590:18:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 48927,
                      "src": "6582:26:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48862,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6582:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48866,
                  "initialValue": {
                    "expression": {
                      "id": 48864,
                      "name": "userB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48390,
                      "src": "6611:5:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 48865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6617:7:76",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "6611:13:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6582:42:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48870,
                        "name": "HL_LZ_ENDPOINT_V2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48363,
                        "src": "6649:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48867,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "6635:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6638:10:76",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22529,
                      "src": "6635:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6635:32:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48872,
                  "nodeType": "ExpressionStatement",
                  "src": "6635:32:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48882,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48377,
                            "src": "6760:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 48881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6752:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48880,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6752:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6752:12:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 48886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6786:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 48885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6778:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 48884,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "6778:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6778:10:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 48888,
                        "name": "composerMsg_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48749,
                        "src": "6802:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 48889,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6828:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6832:6:76",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6828:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 48891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6852:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 48873,
                          "name": "hyperLiquidComposer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48380,
                          "src": "6677:19:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                            "typeString": "contract HyperLiquidComposer"
                          }
                        },
                        "id": 48875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6697:9:76",
                        "memberName": "lzCompose",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 229,
                        "src": "6677:29:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (address,bytes32,bytes memory,address,bytes memory) payable external"
                        }
                      },
                      "id": 48879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 48878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 48876,
                            "name": "AMOUNT_TO_FUND",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48396,
                            "src": "6715:14:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 48877,
                            "name": "DUST",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48399,
                            "src": "6732:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "6715:21:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "src": "6677:61:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (address,bytes32,bytes memory,address,bytes memory) payable external"
                      }
                    },
                    "id": 48892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6677:187:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48893,
                  "nodeType": "ExpressionStatement",
                  "src": "6677:187:76"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48894,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "6874:2:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6877:9:76",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22573,
                      "src": "6874:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 48897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6874:14:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48898,
                  "nodeType": "ExpressionStatement",
                  "src": "6874:14:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48904,
                                "name": "hyperLiquidComposer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48380,
                                "src": "6930:19:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              ],
                              "id": 48903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6922:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48902,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6922:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6922:28:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 48900,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48377,
                            "src": "6908:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          },
                          "id": 48901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6912:9:76",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46230,
                          "src": "6908:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 48906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6908:43:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 48907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6953:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 48899,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "6899:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 48908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6899:56:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48909,
                  "nodeType": "ExpressionStatement",
                  "src": "6899:56:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 48911,
                            "name": "HYPE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48360,
                            "src": "6974:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                              "typeString": "struct IHyperAsset storage ref"
                            }
                          },
                          "id": 48912,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6979:18:76",
                          "memberName": "assetBridgeAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 892,
                          "src": "6974:23:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6998:7:76",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "6974:31:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48914,
                          "name": "balanceBeforeBridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48857,
                          "src": "7007:19:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 48915,
                          "name": "AMOUNT_TO_FUND",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48396,
                          "src": "7029:14:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "7007:36:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48910,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "6965:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 48917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6965:79:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48918,
                  "nodeType": "ExpressionStatement",
                  "src": "6965:79:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48920,
                          "name": "userB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48390,
                          "src": "7063:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7069:7:76",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "7063:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48922,
                          "name": "balanceBeforeUserB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48863,
                          "src": "7078:18:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 48923,
                          "name": "DUST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48399,
                          "src": "7099:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "7078:25:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48919,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "7054:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 48925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7054:50:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48926,
                  "nodeType": "ExpressionStatement",
                  "src": "7054:50:76"
                }
              ]
            },
            "functionSelector": "e93bfee6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SendSpot_and_FundAddress",
            "nameLocation": "5162:29:76",
            "parameters": {
              "id": 48739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5191:2:76"
            },
            "returnParameters": {
              "id": 48740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5201:0:76"
            },
            "scope": 48980,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48960,
            "nodeType": "FunctionDefinition",
            "src": "7117:396:76",
            "nodes": [],
            "body": {
              "id": 48959,
              "nodeType": "Block",
              "src": "7177:336:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48937,
                          "name": "HYPE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48360,
                          "src": "7275:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48938,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7280:18:76",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "7275:23:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48939,
                          "name": "HYPE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48360,
                          "src": "7312:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48940,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7317:11:76",
                        "memberName": "coreIndexId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 894,
                        "src": "7312:16:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 48941,
                        "name": "_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48930,
                        "src": "7342:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 48934,
                            "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48369,
                            "src": "7213:32:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48933,
                          "name": "SpotBalancePrecompileMock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50841,
                          "src": "7187:25:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SpotBalancePrecompileMock_$50841_$",
                            "typeString": "type(contract SpotBalancePrecompileMock)"
                          }
                        },
                        "id": 48935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7187:59:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpotBalancePrecompileMock_$50841",
                          "typeString": "contract SpotBalancePrecompileMock"
                        }
                      },
                      "id": 48936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7247:14:76",
                      "memberName": "setSpotBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50809,
                      "src": "7187:74:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint64,uint64) external"
                      }
                    },
                    "id": 48942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7187:173:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48943,
                  "nodeType": "ExpressionStatement",
                  "src": "7187:173:76"
                },
                {
                  "assignments": [48945],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48945,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "7378:7:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 48959,
                      "src": "7371:14:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 48944,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "7371:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48953,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48948,
                          "name": "HYPE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48360,
                          "src": "7427:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48949,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7432:18:76",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "7427:23:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48950,
                          "name": "HYPE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48360,
                          "src": "7452:4:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 48951,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7457:11:76",
                        "memberName": "coreIndexId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 894,
                        "src": "7452:16:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "id": 48946,
                        "name": "hyperLiquidComposer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48380,
                        "src": "7388:19:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                          "typeString": "contract HyperLiquidComposer"
                        }
                      },
                      "id": 48947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7408:18:76",
                      "memberName": "balanceOfHyperCore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 634,
                      "src": "7388:38:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint64_$returns$_t_uint64_$",
                        "typeString": "function (address,uint64) view external returns (uint64)"
                      }
                    },
                    "id": 48952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7388:81:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7371:98:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48955,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48945,
                        "src": "7488:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 48956,
                        "name": "_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48930,
                        "src": "7497:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 48954,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "7479:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 48957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7479:27:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48958,
                  "nodeType": "ExpressionStatement",
                  "src": "7479:27:76"
                }
              ]
            },
            "functionSelector": "75258814",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getBalanceOfHyperCore",
            "nameLocation": "7126:26:76",
            "parameters": {
              "id": 48931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48930,
                  "mutability": "mutable",
                  "name": "_balance",
                  "nameLocation": "7160:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 48960,
                  "src": "7153:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 48929,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7153:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7152:17:76"
            },
            "returnParameters": {
              "id": 48932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7177:0:76"
            },
            "scope": 48980,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48979,
            "nodeType": "FunctionDefinition",
            "src": "7519:129:76",
            "nodes": [],
            "body": {
              "id": 48978,
              "nodeType": "Block",
              "src": "7592:56:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48973,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48962,
                                "src": "7633:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7625:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 48971,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "7625:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7625:14:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 48970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7617:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 48969,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7617:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7617:23:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7609:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 48967,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7609:7:76",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 48976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7609:32:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 48966,
                  "id": 48977,
                  "nodeType": "Return",
                  "src": "7602:39:76"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addressToBytes32",
            "nameLocation": "7528:16:76",
            "parameters": {
              "id": 48963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48962,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "7553:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 48979,
                  "src": "7545:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7545:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7544:15:76"
            },
            "returnParameters": {
              "id": 48966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48965,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48979,
                  "src": "7583:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48964,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7583:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7582:9:76"
            },
            "scope": 48980,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48353,
              "name": "Test",
              "nameLocations": ["1016:4:76"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18271,
              "src": "1016:4:76"
            },
            "id": 48354,
            "nodeType": "InheritanceSpecifier",
            "src": "1016:4:76"
          }
        ],
        "canonicalName": "HyperLiquidComposerTest",
        "contractDependencies": [386, 50775, 50841],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48980, 18271, 18219, 12197, 11837, 11042, 8982, 8137, 5507, 5504
        ],
        "name": "HyperLiquidComposerTest",
        "nameLocation": "989:23:76",
        "scope": 48981,
        "usedErrors": [],
        "usedEvents": [
          881, 1227, 5542, 5546, 5550, 5554, 5558, 5562, 5566, 5570, 5576, 5582,
          5590, 5598, 5604, 5610, 5616, 5622, 5627, 5632, 5637, 5644, 5651,
          5658, 13331, 13337, 46656
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 76
}
