{
  "abi": [
    {
      "type": "function",
      "name": "ALICE",
      "inputs": [],
      "outputs": [
        {
          "name": "assetBridgeAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "coreIndexId", "type": "uint64", "internalType": "uint64" },
        { "name": "decimalDiff", "type": "uint64", "internalType": "uint64" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "AMOUNT_TO_FUND",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "AMOUNT_TO_SEND",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "AMOUNT_TO_SEND_OVERFLOW",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "DST_EID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "HLP_PRECOMPILE_WRITE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "HL_LZ_ENDPOINT_V2",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "HYPE",
      "inputs": [],
      "outputs": [
        {
          "name": "assetBridgeAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "coreIndexId", "type": "uint64", "internalType": "uint64" },
        { "name": "decimalDiff", "type": "uint64", "internalType": "uint64" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "IS_TEST",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "SRC_EID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeArtifacts",
      "inputs": [],
      "outputs": [
        {
          "name": "excludedArtifacts_",
          "type": "string[]",
          "internalType": "string[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeContracts",
      "inputs": [],
      "outputs": [
        {
          "name": "excludedContracts_",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeSelectors",
      "inputs": [],
      "outputs": [
        {
          "name": "excludedSelectors_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            {
              "name": "selectors",
              "type": "bytes4[]",
              "internalType": "bytes4[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeSenders",
      "inputs": [],
      "outputs": [
        {
          "name": "excludedSenders_",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "failed",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getComposeMessage",
      "inputs": [
        { "name": "_composerMsg", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "hyperLiquidComposer",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract HyperLiquidComposer"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "oft",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract OFTMock" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setUp",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "targetArtifactSelectors",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
          "components": [
            { "name": "artifact", "type": "string", "internalType": "string" },
            {
              "name": "selectors",
              "type": "bytes4[]",
              "internalType": "bytes4[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetArtifacts",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedArtifacts_",
          "type": "string[]",
          "internalType": "string[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetContracts",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedContracts_",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetInterfaces",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedInterfaces_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            {
              "name": "artifacts",
              "type": "string[]",
              "internalType": "string[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetSelectors",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedSelectors_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            {
              "name": "selectors",
              "type": "bytes4[]",
              "internalType": "bytes4[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetSenders",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedSenders_",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "test_erc20_refund_receiver_excessive_amount",
      "inputs": [
        {
          "name": "_exceedAmountBy",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "test_erc20_refund_sender_malformed_receiver",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "test_malformed_payload",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "test_native_refund_receiver_excessive_amount_no_fallback",
      "inputs": [
        {
          "name": "_exceedAmountBy",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "test_non_evm_sender_malformed_receiver",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "userA",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "userB",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "ErrorMessage",
      "inputs": [
        {
          "name": "reason",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OverflowDetected",
      "inputs": [
        {
          "name": "amountCore",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        },
        {
          "name": "maxTransferableAmount",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SlotFound",
      "inputs": [
        {
          "name": "who",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "fsig",
          "type": "bytes4",
          "indexed": false,
          "internalType": "bytes4"
        },
        {
          "name": "keysHash",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "slot",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WARNING_UninitedSlot",
      "inputs": [
        {
          "name": "who",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "slot",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log",
      "inputs": [
        {
          "name": "",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_address",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_array",
      "inputs": [
        {
          "name": "val",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_array",
      "inputs": [
        {
          "name": "val",
          "type": "int256[]",
          "indexed": false,
          "internalType": "int256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_array",
      "inputs": [
        {
          "name": "val",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_bytes",
      "inputs": [
        {
          "name": "",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_bytes32",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_int",
      "inputs": [
        {
          "name": "",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_address",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_array",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_array",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "int256[]",
          "indexed": false,
          "internalType": "int256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_array",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_bytes",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_bytes32",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_decimal_int",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "decimals",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_decimal_uint",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "decimals",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_int",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_string",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_uint",
      "inputs": [
        {
          "name": "key",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "val",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_string",
      "inputs": [
        {
          "name": "",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_uint",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "logs",
      "inputs": [
        {
          "name": "",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x60806040526001600c5f6101000a81548160ff0219169083151502179055506001601f5f6101000a81548160ff0219169083151502179055506200007e6040518060400160405280600581526020017f75736572410000000000000000000000000000000000000000000000000000008152506200015560201b60201c565b60265f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001036040518060400160405280600581526020017f75736572420000000000000000000000000000000000000000000000000000008152506200015560201b60201c565b60275f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200014e575f80fd5b50620004cd565b5f62000167826200017160201b60201c565b5080915050919050565b5f808260405160200162000186919062000348565b604051602081830303815290604052805190602001205f1c90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663ffa18649826040518263ffffffff1660e01b8152600401620001fd91906200037a565b602060405180830381865afa15801562000219573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200023f9190620003fa565b91507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663c657c71883856040518363ffffffff1660e01b8152600401620002a09291906200049b565b5f604051808303815f87803b158015620002b8575f80fd5b505af1158015620002cb573d5f803e3d5ffd5b50505050915091565b5f81519050919050565b5f81905092915050565b5f5b8381101562000307578082015181840152602081019050620002ea565b5f8484015250505050565b5f6200031e82620002d4565b6200032a8185620002de565b93506200033c818560208601620002e8565b80840191505092915050565b5f62000355828462000312565b915081905092915050565b5f819050919050565b620003748162000360565b82525050565b5f6020820190506200038f5f83018462000369565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620003c48262000399565b9050919050565b620003d681620003b8565b8114620003e1575f80fd5b50565b5f81519050620003f481620003cb565b92915050565b5f6020828403121562000412576200041162000395565b5b5f6200042184828501620003e4565b91505092915050565b6200043581620003b8565b82525050565b5f82825260208201905092915050565b5f601f19601f8301169050919050565b5f6200046782620002d4565b6200047381856200043b565b935062000485818560208601620002e8565b62000490816200044b565b840191505092915050565b5f604082019050620004b05f8301856200042a565b8181036020830152620004c481846200045b565b90509392505050565b62011d1780620004dc5f395ff3fe608060405234801562000010575f80fd5b50600436106200022a575f3560e01c80639127ace21162000133578063bb641b3e11620000bb578063dd8500751162000085578063dd85007514620005b8578063deb22e9a14620005da578063e20c9f7114620005fc578063e970bd69146200061e578063fa7626d4146200062a576200022a565b8063bb641b3e146200052e578063c33d080d1462000550578063c9279a741462000574578063cb1a295f1462000596576200022a565b8063b0464fdc11620000fd578063b0464fdc14620004a6578063b5508aa914620004c8578063ba414fa614620004ea578063ba872679146200050c576200022a565b80639127ace2146200041e578063916a17c614620004405780639b5215f61462000462578063a09e74301462000484576200022a565b80633f7286f411620001b757806366d9a9a0116200018157806366d9a9a014620003aa57806376e86e7214620003cc57806376e9227314620003f057806385226c8114620003fc576200022a565b80633f7286f4146200031057806347d7694f14620003325780635c98ee4d146200036857806366165d9f1462000388576200022a565b80631ed7831c11620001f95780631ed7831c14620002885780632ade388014620002aa578063318f405a14620002cc5780633e5e3c2314620002ee576200022a565b80630a9254e4146200022e5780630df3918e146200023a57806312659341146200025a578063176e619e1462000266575b5f80fd5b620002386200064c565b005b620002586004803603810190620002529190620063a1565b62000e6e565b005b6200026462001755565b005b6200027062001f38565b6040516200027f9190620063f1565b60405180910390f35b6200029262001f4d565b604051620002a1919062006505565b60405180910390f35b620002b462001fda565b604051620002c391906200678b565b60405180910390f35b620002d66200216a565b604051620002e59190620067be565b60405180910390f35b620002f862002182565b60405162000307919062006505565b60405180910390f35b6200031a6200220f565b60405162000329919062006505565b60405180910390f35b6200035060048036038101906200034a919062006843565b6200229c565b6040516200035f9190620068f0565b60405180910390f35b620003866004803603810190620003809190620063a1565b620022b2565b005b6200039262002bde565b604051620003a1919062006923565b60405180910390f35b620003b462002be3565b604051620003c3919062006b3e565b60405180910390f35b620003d662002d71565b604051620003e79392919062006b60565b60405180910390f35b620003fa62002dcd565b005b62000406620032bf565b60405162000415919062006c2a565b60405180910390f35b620004286200339d565b60405162000437919062006923565b60405180910390f35b6200044a620033b4565b60405162000459919062006d53565b60405180910390f35b6200046c620034ff565b6040516200047b919062006ddc565b60405180910390f35b6200048e62003525565b6040516200049d919062006e2e565b60405180910390f35b620004b06200354a565b604051620004bf919062006d53565b60405180910390f35b620004d262003695565b604051620004e1919062006c2a565b60405180910390f35b620004f462003773565b60405162000503919062006e65565b60405180910390f35b620005166200388e565b604051620005259190620067be565b60405180910390f35b6200053862003894565b60405162000547919062006923565b60405180910390f35b6200055a620038a0565b6040516200056b9392919062006b60565b60405180910390f35b6200057e620038fc565b6040516200058d9190620063f1565b60405180910390f35b620005a062003902565b604051620005af9190620067be565b60405180910390f35b620005c262003927565b604051620005d19190620067be565b60405180910390f35b620005e46200393f565b604051620005f39190620067be565b60405180910390f35b6200060662003964565b60405162000615919062006505565b60405180910390f35b62000628620039f1565b005b6200063462004050565b60405162000643919062006e65565b60405180910390f35b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663986800346040518163ffffffff1660e01b8152600401620006a79062006f04565b6020604051808303815f875af1158015620006c4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620006ea919062006f5c565b506040518060600160405280620007036104cf62004062565b73ffffffffffffffffffffffffffffffffffffffff1681526020016104cf67ffffffffffffffff168152602001600c67ffffffffffffffff1681525060205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050604051806060016040528073222222222222222222222222222222222222222273ffffffffffffffffffffffffffffffffffffffff16815260200161045167ffffffffffffffff168152602001600867ffffffffffffffff1681525060225f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663b4d6c78261080160405162000934906200626e565b604051809103905ff0801580156200094e573d5f803e3d5ffd5b5073ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181525f908060200190933c6040518363ffffffff1660e01b81526004016200099f92919062006f8c565b5f604051808303815f87803b158015620009b7575f80fd5b505af1158015620009ca573d5f803e3d5ffd5b5050505061080173ffffffffffffffffffffffffffffffffffffffff1663312f619f60205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660205f0160149054906101000a900467ffffffffffffffff1667ffffffffffffffff6040518463ffffffff1660e01b815260040162000a529392919062006b60565b5f604051808303815f87803b15801562000a6a575f80fd5b505af115801562000a7d573d5f803e3d5ffd5b5050505061080173ffffffffffffffffffffffffffffffffffffffff1663312f619f60225f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660225f0160149054906101000a900467ffffffffffffffff1667ffffffffffffffff6040518463ffffffff1660e01b815260040162000b059392919062006b60565b5f604051808303815f87803b15801562000b1d575f80fd5b505af115801562000b30573d5f803e3d5ffd5b5050505073f9e1815f151024bde4b7c10bac10e8ba9f6b53e13360405162000b58906200627c565b62000b659291906200700c565b604051809103905ff08015801562000b7f573d5f803e3d5ffd5b50602460046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073f9e1815f151024bde4b7c10bac10e8ba9f6b53e1602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660205f0160149054906101000a900467ffffffffffffffff1660206001015f9054906101000a900467ffffffffffffffff1660405162000c38906200628a565b62000c47949392919062007061565b604051809103905ff08015801562000c61573d5f803e3d5ffd5b5060255f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635e280f116040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000d0d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000d339190620070ee565b73ffffffffffffffffffffffffffffffffffffffff1663416ecebf6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000d7c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000da291906200714d565b60245f6101000a81548163ffffffff021916908363ffffffff1602179055507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663c88a5e6d73f9e1815f151024bde4b7c10bac10e8ba9f6b53e168056bc75e2d631000006040518363ffffffff1660e01b815260040162000e3d929190620071be565b5f604051808303815f87803b15801562000e55575f80fd5b505af115801562000e68573d5f803e3d5ffd5b50505050565b62000eac8167ffffffffffffffff165f678ac7230489e8000067ffffffffffffffff62000e9c919062007216565b67ffffffffffffffff16620040a2565b90505f81670de0b6b3a764000062000ec5919062007258565b67ffffffffffffffff16905062000f21602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683620040fa565b5f60405162000f309062006298565b604051809103905ff08015801562000f4a573d5f803e3d5ffd5b5090505f60206001015f9054906101000a900467ffffffffffffffff16600a62000f759190620073ea565b905061080173ffffffffffffffffffffffffffffffffffffffff1663312f619f60205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660205f0160149054906101000a900467ffffffffffffffff1684670de0b6b3a764000067ffffffffffffffff1662000ff2919062007467565b6040518463ffffffff1660e01b8152600401620010129392919062006b60565b5f604051808303815f87803b1580156200102a575f80fd5b505af11580156200103d573d5f803e3d5ffd5b505050505f82604051602001620010559190620074eb565b60405160208183030381529060405290505f620010a45f619ce1876200107b886200410d565b866040516020016200108f92919062007574565b6040516020818303038152906040526200412e565b90505f8386620010b591906200759f565b86620010c29190620075d6565b9050670de0b6b3a764000067ffffffffffffffff16811115620011ea577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016200115d9190620067be565b5f604051808303815f87803b15801562001175575f80fd5b505af115801562001188573d5f803e3d5ffd5b505050507ff17459c2e89c2b011fa739accb3b853858d0a689d31382b9aa4f56a1ca00f9d38487620011bb919062007467565b85670de0b6b3a7640000620011d1919062007467565b604051620011e192919062007610565b60405180910390a15b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401620012699190620067be565b5f604051808303815f87803b15801562001281575f80fd5b505af115801562001294573d5f803e3d5ffd5b5050505060205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef670de0b6b3a764000060405162001343919062007673565b60405180910390a35f8767ffffffffffffffff161115620013e7578473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef89604051620013de919062007673565b60405180910390a35b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166306447d5673f9e1815f151024bde4b7c10bac10e8ba9f6b53e16040518263ffffffff1660e01b8152600401620014589190620067be565b5f604051808303815f87803b15801562001470575f80fd5b505af115801562001483573d5f803e3d5ffd5b505050505f3273ffffffffffffffffffffffffffffffffffffffff1631905060255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0a10260600164174876e800620014f3919062007258565b67ffffffffffffffff16602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f801b87336040518663ffffffff1660e01b8152600401620015469493929190620076c6565b5f604051808303818588803b1580156200155e575f80fd5b505af115801562001571573d5f803e3d5ffd5b5050505050620015b13273ffffffffffffffffffffffffffffffffffffffff1631600167ffffffffffffffff1683620015ab91906200772d565b62004162565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562001619575f80fd5b505af11580156200162c573d5f803e3d5ffd5b50505050620016e4602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b8152600401620016919190620067be565b602060405180830381865afa158015620016ad573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620016d3919062006f5c565b8967ffffffffffffffff1662004162565b6200172860255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16315f62004162565b6200174b8673ffffffffffffffffffffffffffffffffffffffff16315f62004162565b5050505050505050565b620017b7602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a764000067ffffffffffffffff16620040fa565b5f60275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051602001620017ec9190620077bf565b60405160208183030381529060405290505f6200186e5f619ce1670de0b6b3a764000067ffffffffffffffff166200184560265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200410d565b866040516020016200185992919062007574565b6040516020818303038152906040526200412e565b90505f3073ffffffffffffffffffffffffffffffffffffffff166347d7694f836040518263ffffffff1660e01b8152600401620018ac9190620068f0565b5f60405180830381865afa158015620018c7573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190620018f191906200791e565b90505f6309b3473160e01b828351604051602401620019129291906200797e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401620019f09190620067be565b5f604051808303815f87803b15801562001a08575f80fd5b505af115801562001a1b573d5f803e3d5ffd5b5050505060265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef670de0b6b3a764000060405162001ac8919062007673565b60405180910390a37f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162001b4e9190620067be565b5f604051808303815f87803b15801562001b66575f80fd5b505af115801562001b79573d5f803e3d5ffd5b505050507f612baef0082f9abcf6dc7b491d75346418381b75756830d7029939026d1b46b98160405162001bae9190620068f0565b60405180910390a17f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166306447d5673f9e1815f151024bde4b7c10bac10e8ba9f6b53e16040518263ffffffff1660e01b815260040162001c279190620067be565b5f604051808303815f87803b15801562001c3f575f80fd5b505af115801562001c52573d5f803e3d5ffd5b5050505060255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0a10260602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f801b86336040518563ffffffff1660e01b815260040162001cdc9493929190620076c6565b5f604051808303815f87803b15801562001cf4575f80fd5b505af115801562001d07573d5f803e3d5ffd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562001d73575f80fd5b505af115801562001d86573d5f803e3d5ffd5b5050505062001e55602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162001e0c9190620067be565b602060405180830381865afa15801562001e28573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001e4e919062006f5c565b5f62004162565b62001f32602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162001ed79190620067be565b602060405180830381865afa15801562001ef3573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001f19919062006f5c565b670de0b6b3a764000067ffffffffffffffff1662004162565b50505050565b60245f9054906101000a900463ffffffff1681565b6060601680548060200260200160405190810160405280929190818152602001828054801562001fd057602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162001f86575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020015f905b8282101562002161578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020015f905b8282101562002149578382905f5260205f20018054620020b790620079dd565b80601f0160208091040260200160405190810160405280929190818152602001828054620020e590620079dd565b8015620021345780601f106200210a5761010080835404028352916020019162002134565b820191905f5260205f20905b8154815290600101906020018083116200211657829003601f168201915b50505050508152602001906001019062002097565b50505050815250508152602001906001019062001ffd565b50505050905090565b73f9e1815f151024bde4b7c10bac10e8ba9f6b53e181565b606060188054806020026020016040519081016040528092919081815260200182805480156200220557602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620021bb575b5050505050905090565b606060178054806020026020016040519081016040528092919081815260200182805480156200229257602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162002248575b5050505050905090565b6060620022aa8383620041f3565b905092915050565b620022f08167ffffffffffffffff165f678ac7230489e8000067ffffffffffffffff620022e0919062007216565b67ffffffffffffffff16620040a2565b90505f81670de0b6b3a764000062002309919062007258565b67ffffffffffffffff16905062002365602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683620040fa565b5f60206001015f9054906101000a900467ffffffffffffffff16600a6200238d9190620073ea565b905061080173ffffffffffffffffffffffffffffffffffffffff1663312f619f60205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660205f0160149054906101000a900467ffffffffffffffff1684670de0b6b3a764000067ffffffffffffffff166200240a919062007467565b6040518463ffffffff1660e01b81526004016200242a9392919062006b60565b5f604051808303815f87803b15801562002442575f80fd5b505af115801562002455573d5f803e3d5ffd5b505050505f60275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516020016200248e9190620074eb565b60405160208183030381529060405290505f620024fe5f619ce186620024d560265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200410d565b86604051602001620024e992919062007574565b6040516020818303038152906040526200412e565b90505f83856200250f91906200759f565b856200251c9190620075d6565b9050670de0b6b3a764000067ffffffffffffffff1681111562002644577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401620025b79190620067be565b5f604051808303815f87803b158015620025cf575f80fd5b505af1158015620025e2573d5f803e3d5ffd5b505050507ff17459c2e89c2b011fa739accb3b853858d0a689d31382b9aa4f56a1ca00f9d3848662002615919062007467565b85670de0b6b3a76400006200262b919062007467565b6040516200263b92919062007610565b60405180910390a15b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401620026c39190620067be565b5f604051808303815f87803b158015620026db575f80fd5b505af1158015620026ee573d5f803e3d5ffd5b5050505060205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef670de0b6b3a76400006040516200279d919062007673565b60405180910390a35f8667ffffffffffffffff161115620028625760275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8860405162002859919062007673565b60405180910390a35b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166306447d5673f9e1815f151024bde4b7c10bac10e8ba9f6b53e16040518263ffffffff1660e01b8152600401620028d39190620067be565b5f604051808303815f87803b158015620028eb575f80fd5b505af1158015620028fe573d5f803e3d5ffd5b5050505060255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0a10260602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f801b85336040518563ffffffff1660e01b8152600401620029889493929190620076c6565b5f604051808303815f87803b158015620029a0575f80fd5b505af1158015620029b3573d5f803e3d5ffd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562002a1f575f80fd5b505af115801562002a32573d5f803e3d5ffd5b5050505062002b01602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162002ab89190620067be565b602060405180830381865afa15801562002ad4573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002afa919062006f5c565b5f62004162565b62002bd6602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162002b839190620067be565b602060405180830381865afa15801562002b9f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002bc5919062006f5c565b8767ffffffffffffffff1662004162565b505050505050565b600181565b6060601b805480602002602001604051908101604052809291908181526020015f905b8282101562002d68578382905f5260205f2090600202016040518060400160405290815f8201805462002c3990620079dd565b80601f016020809104026020016040519081016040528092919081815260200182805462002c6790620079dd565b801562002cb65780601f1062002c8c5761010080835404028352916020019162002cb6565b820191905f5260205f20905b81548152906001019060200180831162002c9857829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801562002d4f57602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162002cfb5790505b5050505050815250508152602001906001019062002c06565b50505050905090565b6022805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b62002e2f602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a764000067ffffffffffffffff16620040fa565b5f60405180602001604052805f81525090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663f28dceb362d4895a60e01b60405160240162002e979062007a35565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518263ffffffff1660e01b815260040162002f129190620068f0565b5f604051808303815f87803b15801562002f2a575f80fd5b505af115801562002f3d573d5f803e3d5ffd5b505050505f73f9e1815f151024bde4b7c10bac10e8ba9f6b53e173ffffffffffffffffffffffffffffffffffffffff163190507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166306447d5673f9e1815f151024bde4b7c10bac10e8ba9f6b53e16040518263ffffffff1660e01b815260040162002fe19190620067be565b5f604051808303815f87803b15801562002ff9575f80fd5b505af11580156200300c573d5f803e3d5ffd5b5050505060255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0a10260600164174876e80062003061919062007258565b67ffffffffffffffff16602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f801b86336040518663ffffffff1660e01b8152600401620030b49493929190620076c6565b5f604051808303818588803b158015620030cc575f80fd5b505af1158015620030df573d5f803e3d5ffd5b50505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156200314c575f80fd5b505af11580156200315f573d5f803e3d5ffd5b5050505062003240602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401620031e59190620067be565b602060405180830381865afa15801562003201573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062003227919062006f5c565b670de0b6b3a764000067ffffffffffffffff1662004162565b6200328460255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16315f62004162565b620032bb73f9e1815f151024bde4b7c10bac10e8ba9f6b53e173ffffffffffffffffffffffffffffffffffffffff16318262004162565b5050565b6060601a805480602002602001604051908101604052809291908181526020015f905b8282101562003394578382905f5260205f200180546200330290620079dd565b80601f01602080910402602001604051908101604052809291908181526020018280546200333090620079dd565b80156200337f5780601f1062003355576101008083540402835291602001916200337f565b820191905f5260205f20905b8154815290600101906020018083116200336157829003601f168201915b505050505081526020019060010190620032e2565b50505050905090565b600164174876e800620033b1919062007258565b81565b6060601d805480602002602001604051908101604052809291908181526020015f905b82821015620034f6578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020018280548015620034dd57602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620034895790505b50505050508152505081526020019060010190620033d7565b50505050905090565b602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060601c805480602002602001604051908101604052809291908181526020015f905b828210156200368c578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054806020026020016040519081016040528092919081815260200182805480156200367357602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116200361f5790505b505050505081525050815260200190600101906200356d565b50505050905090565b60606019805480602002602001604051908101604052809291908181526020015f905b828210156200376a578382905f5260205f20018054620036d890620079dd565b80601f01602080910402602001604051908101604052809291908181526020018280546200370690620079dd565b8015620037555780601f106200372b5761010080835404028352916020019162003755565b820191905f5260205f20905b8154815290600101906020018083116200373757829003601f168201915b505050505081526020019060010190620036b8565b50505050905090565b5f60085f9054906101000a900460ff1615620037a05760085f9054906101000a900460ff1690506200388b565b5f801b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d707f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c7f6661696c656400000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016200384492919062007a55565b602060405180830381865afa15801562003860573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062003886919062007aaf565b141590505b90565b61080181565b670de0b6b3a764000081565b6020805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b619ce181565b60275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73333333333333333333333333333333333333333381565b60265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606015805480602002602001604051908101604052809291908181526020018280548015620039e757602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200399d575b5050505050905090565b62003a53602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a764000067ffffffffffffffff16620040fa565b5f60275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405160200162003a889190620077bf565b60405160208183030381529060405290505f62003b285f619ce1670de0b6b3a764000067ffffffffffffffff1660265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405160200162003ae99190620074eb565b604051602081830303815290604052805190602001208660405160200162003b1392919062007574565b6040516020818303038152906040526200412e565b90505f3073ffffffffffffffffffffffffffffffffffffffff166347d7694f836040518263ffffffff1660e01b815260040162003b669190620068f0565b5f60405180830381865afa15801562003b81573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019062003bab91906200791e565b90505f6309b3473160e01b82835160405160240162003bcc9291906200797e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162003ca99190620067be565b5f604051808303815f87803b15801562003cc1575f80fd5b505af115801562003cd4573d5f803e3d5ffd5b505050507f612baef0082f9abcf6dc7b491d75346418381b75756830d7029939026d1b46b98160405162003d099190620068f0565b60405180910390a15f3273ffffffffffffffffffffffffffffffffffffffff163190507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166306447d5673f9e1815f151024bde4b7c10bac10e8ba9f6b53e16040518263ffffffff1660e01b815260040162003d9d9190620067be565b5f604051808303815f87803b15801562003db5575f80fd5b505af115801562003dc8573d5f803e3d5ffd5b5050505060255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0a10260600164174876e80062003e1d919062007258565b67ffffffffffffffff16602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f801b88336040518663ffffffff1660e01b815260040162003e709493929190620076c6565b5f604051808303818588803b15801562003e88575f80fd5b505af115801562003e9b573d5f803e3d5ffd5b50505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562003f08575f80fd5b505af115801562003f1b573d5f803e3d5ffd5b5050505062003f6c3273ffffffffffffffffffffffffffffffffffffffff1631600164174876e80062003f4f919062007258565b67ffffffffffffffff168362003f6691906200772d565b62004162565b62004049602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162003fee9190620067be565b602060405180830381865afa1580156200400a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062004030919062006f5c565b670de0b6b3a764000067ffffffffffffffff1662004162565b5050505050565b601f5f9054906101000a900460ff1681565b5f8173200000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166200409b91906200772d565b9050919050565b5f620040b084848462004257565b9050620040f36040518060400160405280600c81526020017f426f756e6420726573756c740000000000000000000000000000000000000000815250826200448f565b9392505050565b620041088383835f6200452f565b505050565b5f8173ffffffffffffffffffffffffffffffffffffffff165f1b9050919050565b60608484848460405160200162004149949392919062007b77565b6040516020818303038152906040529050949350505050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166398296c5483836040518363ffffffff1660e01b8152600401620041c192919062007bc8565b5f6040518083038186803b158015620041d8575f80fd5b505afa158015620041eb573d5f803e3d5ffd5b505050505050565b60608282604c60ff169080926200420d9392919062007bfb565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050905092915050565b5f818311156200429e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620042959062007caf565b60405180910390fd5b828410158015620042af5750818411155b15620042be5783905062004488565b5f60018484620042cf9190620075d6565b620042db91906200772d565b905060038511158015620042ee57508481115b156200430b5784846200430291906200772d565b91505062004488565b60037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6200433a9190620075d6565b8510158015620043765750847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff620043739190620075d6565b81115b15620043c057847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff620043aa9190620075d6565b83620043b79190620075d6565b91505062004488565b8285111562004425575f8386620043d89190620075d6565b90505f8282620043e991906200759f565b90505f8103620043ff5784935050505062004488565b600181876200440f91906200772d565b6200441b9190620075d6565b9350505062004486565b8385101562004485575f85856200443d9190620075d6565b90505f82826200444e91906200759f565b90505f8103620044645785935050505062004488565b60018186620044749190620075d6565b6200448091906200772d565b935050505b5b505b9392505050565b6200452b8282604051602401620044a892919062007d0f565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620047d4565b5050565b5f8473ffffffffffffffffffffffffffffffffffffffff166370a08231856040516024016200455f9190620067be565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620045af919062007d41565b5f60405180830381855afa9150503d805f8114620045e9576040519150601f19603f3d011682016040523d82523d5f602084013e620045ee565b606091505b509150505f8180602001905181019062004609919062006f5c565b905062004664846200465587620046466370a0823160e01b620046378c600d620047f290919063ffffffff16565b6200480790919063ffffffff16565b6200481c90919063ffffffff16565b6200483190919063ffffffff16565b8215620047cc575f8673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040516024016040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620046de919062007d41565b5f60405180830381855afa9150503d805f811462004718576040519150601f19603f3d011682016040523d82523d5f602084013e6200471d565b606091505b509150505f8180602001905181019062004738919062006f5c565b90508286101562004766578583620047519190620075d6565b816200475e9190620075d6565b905062004784565b8286620047749190620075d6565b816200478191906200772d565b90505b620047c981620047ba6318160ddd60e01b620047ab8c600d620047f290919063ffffffff16565b6200480790919063ffffffff16565b6200483190919063ffffffff16565b50505b505050505050565b620047ef81620047e76200484362004869565b63ffffffff16565b50565b5f620047ff838362004875565b905092915050565b5f620048148383620048c1565b905092915050565b5f620048298383620048ea565b905092915050565b6200483f82825f1b62004934565b5050565b5f815190505f6a636f6e736f6c652e6c6f679050602083015f808483855afa5050505050565b620062a5819050919050565b5f81836004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082905092915050565b5f81836002015f6101000a81548163ffffffff021916908360e01c021790555082905092915050565b5f826001018273ffffffffffffffffffffffffffffffffffffffff165f1b908060018154018082558091505060019003905f5260205f20015f909190919091505582905092915050565b5f826004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f836002015f9054906101000a900460e01b90505f846003015490505f620049838662004efe565b9050855f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f828460405160200162004a2692919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f206003015f9054906101000a900460ff1662004a6c5762004a6a865f6200501a565b505b5f865f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f838560405160200162004b0e92919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f2090505f8160020154826001015462004b4a91906200772d565b111562004c96575f8160020154826001015462004b6891906200772d565b61010062004b779190620075d6565b600262004b85919062007d84565b905080875f1c107f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff16636900a3ae836040518263ffffffff1660e01b815260040162004be9919062007dd4565b5f60405180830381865afa15801562004c04573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019062004c2e919062007ea0565b60405160200162004c40919062007fbf565b6040516020818303038152906040529062004c93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162004c8a919062007fe4565b60405180910390fd5b50505b5f7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d7087845f01545f1b6040518363ffffffff1660e01b815260040162004cfb92919062007a55565b602060405180830381865afa15801562004d17573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062004d3d919062007aaf565b90505f62004d5882895f1c8560010154866002015462005032565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb88855f01545f1b846040518463ffffffff1660e01b815260040162004dc09392919062008006565b5f604051808303815f87803b15801562004dd8575f80fd5b505af115801562004deb573d5f803e3d5ffd5b505050505f8062004dfc8b62005055565b9150915081158062004e0e5750898114155b1562004ee6577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb8a875f01545f1b876040518463ffffffff1660e01b815260040162004e7a9392919062008006565b5f604051808303815f87803b15801562004e92575f80fd5b505af115801562004ea5573d5f803e3d5ffd5b505050506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162004edd90620080b5565b60405180910390fd5b62004ef18b62005158565b5050505050505050505050565b60605f82600701805462004f1290620079dd565b90500362004f7f5762004f778260010180548060200260200160405190810160405280929190818152602001828054801562004f6c57602002820191905f5260205f20905b81548152602001906001019080831162004f57575b505050505062005166565b905062005015565b81600701805462004f9090620079dd565b80601f016020809104026020016040519081016040528092919081815260200182805462004fbe90620079dd565b80156200500d5780601f1062004fe3576101008083540402835291602001916200500d565b820191905f5260205f20905b81548152906001019060200180831162004fef57829003601f168201915b505050505090505b919050565b5f6200502783836200521c565b5f0154905092915050565b5f8184901b62005043848462005b88565b19865f1c16175f1b9050949350505050565b5f805f836002015f9054906101000a900460e01b620050748562004efe565b60405160200162005087929190620080f9565b60405160208183030381529060405290505f80856004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683604051620050e4919062007d41565b5f60405180830381855afa9150503d805f81146200511e576040519150601f19603f3d011682016040523d82523d5f602084013e62005123565b606091505b50915091505f62005147828860030154602062005141919062008124565b62005b9f565b905082819550955050505050915091565b620051638162005c49565b50565b60605f6020835162005179919062008124565b67ffffffffffffffff811115620051955762005194620077ec565b5b6040519080825280601f01601f191660200182016040528015620051c85781602001600182028036833780820191505090505b5090505f5b835181101562005212575f848281518110620051ee57620051ed6200816e565b5b602002602001015190508082602002602001840152508080600101915050620051cd565b5080915050919050565b5f80836004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f846002015f9054906101000a900460e01b90505f856003015490505f6200526c8762004efe565b9050865f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f82846040516020016200530f92919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f206003015f9054906101000a900460ff16156200542b5785156200535b576200535a8762005c49565b5b865f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f8284604051602001620053fc92919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f2094505050505062005b82565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663266cf1096040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562005493575f80fd5b505af1158015620054a6573d5f803e3d5ffd5b505050505f620054b68862005055565b9150505f7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166365bc9481876040518263ffffffff1660e01b8152600401620055179190620067be565b5f604051808303815f875af115801562005533573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906200555d91906200826e565b5090505f815103620055a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200559d9062008365565b60405180910390fd5b5f815190505b5f81620055b99062008385565b915081106200598b575f7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d70898585815181106200561857620056176200816e565b5b60200260200101516040518363ffffffff1660e01b81526004016200563f92919062007a55565b602060405180830381865afa1580156200565b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062005681919062007aaf565b90505f801b8103620056e8577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588848481518110620056c557620056c46200816e565b5b60200260200101515f1c604051620056df929190620083b1565b60405180910390a15b620057118b8484815181106200570357620057026200816e565b5b602002602001015162005cc4565b6200571d575062005985565b5f805f80915091508c6006015f9054906101000a900460ff161562005784575f620057668e8787815181106200575857620057576200816e565b5b602002602001015162005f67565b8094508195508293505050508062005782575050505062005985565b505b5f8162005792848462005b88565b855f1c16901c905080875f1c14620057ae575050505062005985565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620057e692919062007d59565b604051602081830303815290604052805190602001208989815181106200581257620058116200816e565b5b60200260200101515f1c6040516200582e9493929190620083ed565b60405180910390a160405180608001604052808787815181106200585757620058566200816e565b5b60200260200101515f1c8152602001848152602001838152602001600115158152508e5f015f8d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8c7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f8a8c6040516020016200591a92919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f205f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548160ff021916908315150217905550905050505050506200598b565b620055ac565b50885f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f848660405160200162005a2d92919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f206003015f9054906101000a900460ff1662005aa2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162005a9990620084ac565b60405180910390fd5b871562005ab55762005ab48962005c49565b5b885f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f848660405160200162005b5692919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f2096505050505050505b92915050565b5f600180848401610100031b03821b905092915050565b5f805f602085511162005bb457845162005bb7565b60205b90505f5b8181101562005c3d5760088162005bd3919062008124565b60ff60f81b87838862005be791906200772d565b8151811062005bfb5762005bfa6200816e565b5b602001015160f81c60f81b167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c83179250808060010191505062005bbb565b50819250505092915050565b806004015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055806002015f6101000a81549063ffffffff0219169055806001015f62005c969190620062b1565b806003015f9055806006015f6101000a81549060ff0219169055806007015f62005cc19190620062d1565b50565b5f807f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d70856004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b815260040162005d4892919062007a55565b602060405180830381865afa15801562005d64573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062005d8a919062007aaf565b90505f8062005d998662005055565b915091505f805f1b821462005db1575f801b62005dd5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5f1b5b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb886004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688846040518463ffffffff1660e01b815260040162005e5b9392919062008006565b5f604051808303815f87803b15801562005e73575f80fd5b505af115801562005e86573d5f803e3d5ffd5b505050505f62005e968862005055565b9150507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb896004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1689886040518463ffffffff1660e01b815260040162005f1d9392919062008006565b5f604051808303815f87803b15801562005f35575f80fd5b505af115801562005f48573d5f803e3d5ffd5b5050505083801562005f5a5750808314155b9550505050505092915050565b5f805f807f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d70876004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876040518363ffffffff1660e01b815260040162005fed92919062007a55565b602060405180830381865afa15801562006009573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200602f919062007aaf565b90505f8062006041888860016200612a565b915091505f80620060548a8a5f6200612a565b915091507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb8b6004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b886040518463ffffffff1660e01b8152600401620060dc9392919062008006565b5f604051808303815f87803b158015620060f4575f80fd5b505af115801562006107573d5f803e3d5ffd5b50505050838015620061165750815b838297509750975050505050509250925092565b5f805f5b6101008110156200625e575f846200614b57816001901b6200615f565b8160ff6200615a9190620075d6565b6001901b5b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb886004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688845f1b6040518463ffffffff1660e01b8152600401620061e79392919062008006565b5f604051808303815f87803b158015620061ff575f80fd5b505af115801562006212573d5f803e3d5ffd5b505050505f80620062238962005055565b915091508180156200623657505f815f1c115b156200624d57600184955095505050505062006266565b50505080806001019150506200612e565b505f80915091505b935093915050565b6104cd80620084fa83390190565b615cbe80620089c783390190565b613605806200e68583390190565b60588062011c8a83390190565b620062af620084cc565b565b5080545f8255905f5260205f2090810190620062ce919062006314565b50565b508054620062df90620079dd565b5f825580601f10620062f2575062006311565b601f0160209004905f5260205f209081019062006310919062006331565b5b50565b5b808211156200632d575f815f90555060010162006315565b5090565b5b808211156200634a575f815f90555060010162006332565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f67ffffffffffffffff82169050919050565b6200637d816200635f565b811462006388575f80fd5b50565b5f813590506200639b8162006372565b92915050565b5f60208284031215620063b957620063b862006357565b5b5f620063c8848285016200638b565b91505092915050565b5f63ffffffff82169050919050565b620063eb81620063d1565b82525050565b5f602082019050620064065f830184620063e0565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620064608262006435565b9050919050565b620064728162006454565b82525050565b5f62006485838362006467565b60208301905092915050565b5f602082019050919050565b5f620064a9826200640c565b620064b5818562006416565b9350620064c28362006426565b805f5b83811015620064f8578151620064dc888262006478565b9750620064e98362006491565b925050600181019050620064c5565b5085935050505092915050565b5f6020820190508181035f8301526200651f81846200649d565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015620065b257808201518184015260208101905062006595565b5f8484015250505050565b5f601f19601f8301169050919050565b5f620065d98262006579565b620065e5818562006583565b9350620065f781856020860162006593565b6200660281620065bd565b840191505092915050565b5f6200661a8383620065cd565b905092915050565b5f602082019050919050565b5f6200663a8262006550565b6200664681856200655a565b9350836020820285016200665a856200656a565b805f5b858110156200669b57848403895281516200667985826200660d565b9450620066868362006622565b925060208a019950506001810190506200665d565b50829750879550505050505092915050565b5f604083015f830151620066c45f86018262006467565b5060208301518482036020860152620066de82826200662e565b9150508091505092915050565b5f620066f88383620066ad565b905092915050565b5f602082019050919050565b5f620067188262006527565b62006724818562006531565b935083602082028501620067388562006541565b805f5b85811015620067795784840389528151620067578582620066eb565b9450620067648362006700565b925060208a019950506001810190506200673b565b50829750879550505050505092915050565b5f6020820190508181035f830152620067a581846200670c565b905092915050565b620067b88162006454565b82525050565b5f602082019050620067d35f830184620067ad565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112620067fd57620067fc620067d9565b5b8235905067ffffffffffffffff8111156200681d576200681c620067dd565b5b6020830191508360018202830111156200683c576200683b620067e1565b5b9250929050565b5f80602083850312156200685c576200685b62006357565b5b5f83013567ffffffffffffffff8111156200687c576200687b6200635b565b5b6200688a85828601620067e5565b92509250509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f620068bc8262006896565b620068c88185620068a0565b9350620068da81856020860162006593565b620068e581620065bd565b840191505092915050565b5f6020820190508181035f8301526200690a8184620068b0565b905092915050565b6200691d816200635f565b82525050565b5f602082019050620069385f83018462006912565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b620069c68162006990565b82525050565b5f620069d98383620069bb565b60208301905092915050565b5f602082019050919050565b5f620069fd8262006967565b62006a09818562006971565b935062006a168362006981565b805f5b8381101562006a4c57815162006a308882620069cc565b975062006a3d83620069e5565b92505060018101905062006a19565b5085935050505092915050565b5f604083015f8301518482035f86015262006a758282620065cd565b9150506020830151848203602086015262006a918282620069f1565b9150508091505092915050565b5f62006aab838362006a59565b905092915050565b5f602082019050919050565b5f62006acb826200693e565b62006ad7818562006948565b93508360208202850162006aeb8562006958565b805f5b8581101562006b2c578484038952815162006b0a858262006a9e565b945062006b178362006ab3565b925060208a0199505060018101905062006aee565b50829750879550505050505092915050565b5f6020820190508181035f83015262006b58818462006abf565b905092915050565b5f60608201905062006b755f830186620067ad565b62006b84602083018562006912565b62006b93604083018462006912565b949350505050565b5f82825260208201905092915050565b5f62006bb78262006550565b62006bc3818562006b9b565b93508360208202850162006bd7856200656a565b805f5b8581101562006c18578484038952815162006bf685826200660d565b945062006c038362006622565b925060208a0199505060018101905062006bda565b50829750879550505050505092915050565b5f6020820190508181035f83015262006c44818462006bab565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f604083015f83015162006c8c5f86018262006467565b506020830151848203602086015262006ca68282620069f1565b9150508091505092915050565b5f62006cc0838362006c75565b905092915050565b5f602082019050919050565b5f62006ce08262006c4c565b62006cec818562006c56565b93508360208202850162006d008562006c66565b805f5b8581101562006d41578484038952815162006d1f858262006cb3565b945062006d2c8362006cc8565b925060208a0199505060018101905062006d03565b50829750879550505050505092915050565b5f6020820190508181035f83015262006d6d818462006cd4565b905092915050565b5f819050919050565b5f62006d9e62006d9862006d928462006435565b62006d75565b62006435565b9050919050565b5f62006db18262006d7e565b9050919050565b5f62006dc48262006da5565b9050919050565b62006dd68162006db8565b82525050565b5f60208201905062006df15f83018462006dcb565b92915050565b5f62006e038262006d7e565b9050919050565b5f62006e168262006df7565b9050919050565b62006e288162006e0a565b82525050565b5f60208201905062006e435f83018462006e1d565b92915050565b5f8115159050919050565b62006e5f8162006e49565b82525050565b5f60208201905062006e7a5f83018462006e54565b92915050565b5f82825260208201905092915050565b7f68747470733a2f2f7270632e68797065726c69717569642d746573746e65742e5f8201527f78797a2f65766d00000000000000000000000000000000000000000000000000602082015250565b5f62006eec60278362006e80565b915062006ef98262006e90565b604082019050919050565b5f6020820190508181035f83015262006f1d8162006ede565b9050919050565b5f819050919050565b62006f388162006f24565b811462006f43575f80fd5b50565b5f8151905062006f568162006f2d565b92915050565b5f6020828403121562006f745762006f7362006357565b5b5f62006f838482850162006f46565b91505092915050565b5f60408201905062006fa15f830185620067ad565b818103602083015262006fb58184620068b0565b90509392505050565b7f74657374000000000000000000000000000000000000000000000000000000005f82015250565b5f62006ff460048362006e80565b9150620070018262006fbe565b602082019050919050565b5f6080820190508181035f830152620070258162006fe6565b905081810360208301526200703a8162006fe6565b90506200704b6040830185620067ad565b6200705a6060830184620067ad565b9392505050565b5f608082019050620070765f830187620067ad565b620070856020830186620067ad565b62007094604083018562006912565b620070a3606083018462006912565b95945050505050565b5f620070b88262006454565b9050919050565b620070ca81620070ac565b8114620070d5575f80fd5b50565b5f81519050620070e881620070bf565b92915050565b5f6020828403121562007106576200710562006357565b5b5f6200711584828501620070d8565b91505092915050565b6200712981620063d1565b811462007134575f80fd5b50565b5f8151905062007147816200711e565b92915050565b5f6020828403121562007165576200716462006357565b5b5f620071748482850162007137565b91505092915050565b5f819050919050565b5f620071a6620071a06200719a846200717d565b62006d75565b62006f24565b9050919050565b620071b88162007186565b82525050565b5f604082019050620071d35f830185620067ad565b620071e26020830184620071ad565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62007222826200635f565b91506200722f836200635f565b9250828203905067ffffffffffffffff811115620072525762007251620071e9565b5b92915050565b5f62007264826200635f565b915062007271836200635f565b9250828201905067ffffffffffffffff811115620072945762007293620071e9565b5b92915050565b5f8160011c9050919050565b5f808291508390505b6001851115620072f757808604811115620072cf57620072ce620071e9565b5b6001851615620072df5780820291505b8081029050620072ef856200729a565b9450620072af565b94509492505050565b5f82620073115760019050620073e3565b8162007320575f9050620073e3565b816001811462007339576002811462007344576200737a565b6001915050620073e3565b60ff841115620073595762007358620071e9565b5b8360020a915084821115620073735762007372620071e9565b5b50620073e3565b5060208310610133831016604e8410600b8410161715620073b45782820a905083811115620073ae57620073ad620071e9565b5b620073e3565b620073c38484846001620072a6565b92509050818404811115620073dd57620073dc620071e9565b5b81810290505b9392505050565b5f620073f68262006f24565b915062007403836200635f565b9250620074327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462007300565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f620074738262006f24565b9150620074808362006f24565b9250826200749357620074926200743a565b5b828204905092915050565b5f8160601b9050919050565b5f620074b6826200749e565b9050919050565b5f620074c982620074aa565b9050919050565b620074e5620074df8262006454565b620074bd565b82525050565b5f620074f88284620074d0565b60148201915081905092915050565b5f819050919050565b5f819050919050565b6200752e620075288262007507565b62007510565b82525050565b5f81905092915050565b5f6200754a8262006896565b62007556818562007534565b93506200756881856020860162006593565b80840191505092915050565b5f62007581828562007519565b6020820191506200759382846200753e565b91508190509392505050565b5f620075ab8262006f24565b9150620075b88362006f24565b925082620075cb57620075ca6200743a565b5b828206905092915050565b5f620075e28262006f24565b9150620075ef8362006f24565b92508282039050818111156200760a5762007609620071e9565b5b92915050565b5f604082019050620076255f83018562006912565b62007634602083018462006912565b9392505050565b5f6200765b620076556200764f846200635f565b62006d75565b62006f24565b9050919050565b6200766d816200763b565b82525050565b5f602082019050620076885f83018462007662565b92915050565b620076998162007507565b82525050565b50565b5f620076af5f83620068a0565b9150620076bc826200769f565b5f82019050919050565b5f60a082019050620076db5f830187620067ad565b620076ea60208301866200768e565b8181036040830152620076fe8185620068b0565b90506200770f6060830184620067ad565b81810360808301526200772281620076a2565b905095945050505050565b5f620077398262006f24565b9150620077468362006f24565b9250828201905080821115620077615762007760620071e9565b5b92915050565b5f81905092915050565b7f6572726f720000000000000000000000000000000000000000000000000000005f82015250565b5f620077a760058362007767565b9150620077b48262007771565b600582019050919050565b5f620077cc8284620074d0565b601482019150620077dd8262007799565b915081905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200782482620065bd565b810181811067ffffffffffffffff82111715620078465762007845620077ec565b5b80604052505050565b5f6200785a6200634e565b905062007868828262007819565b919050565b5f67ffffffffffffffff8211156200788a5762007889620077ec565b5b6200789582620065bd565b9050602081019050919050565b5f620078b8620078b2846200786d565b6200784f565b905082815260208101848484011115620078d757620078d6620077e8565b5b620078e484828562006593565b509392505050565b5f82601f830112620079035762007902620067d9565b5b815162007915848260208601620078a2565b91505092915050565b5f6020828403121562007936576200793562006357565b5b5f82015167ffffffffffffffff8111156200795657620079556200635b565b5b6200796484828501620078ec565b91505092915050565b620079788162006f24565b82525050565b5f6040820190508181035f830152620079988185620068b0565b9050620079a960208301846200796d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620079f557607f821691505b60208210810362007a0b5762007a0a620079b0565b5b50919050565b5f62007a1e5f8362006e80565b915062007a2b826200769f565b5f82019050919050565b5f6020820190508181035f83015262007a4e8162007a11565b9050919050565b5f60408201905062007a6a5f830185620067ad565b62007a7960208301846200768e565b9392505050565b62007a8b8162007507565b811462007a96575f80fd5b50565b5f8151905062007aa98162007a80565b92915050565b5f6020828403121562007ac75762007ac662006357565b5b5f62007ad68482850162007a99565b91505092915050565b5f8160c01b9050919050565b5f62007af78262007adf565b9050919050565b62007b1362007b0d826200635f565b62007aeb565b82525050565b5f8160e01b9050919050565b5f62007b318262007b19565b9050919050565b62007b4d62007b4782620063d1565b62007b25565b82525050565b5f819050919050565b62007b7162007b6b8262006f24565b62007b53565b82525050565b5f62007b84828762007afe565b60088201915062007b96828662007b38565b60048201915062007ba8828562007b5c565b60208201915062007bba82846200753e565b915081905095945050505050565b5f60408201905062007bdd5f8301856200796d565b62007bec60208301846200796d565b9392505050565b5f80fd5b5f80fd5b5f808585111562007c115762007c1062007bf3565b5b8386111562007c255762007c2462007bf7565b5b6001850283019150848603905094509492505050565b7f5374645574696c7320626f756e642875696e743235362c75696e743235362c755f8201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000602082015250565b5f62007c97603e8362006e80565b915062007ca48262007c3b565b604082019050919050565b5f6020820190508181035f83015262007cc88162007c89565b9050919050565b5f62007cdb8262006579565b62007ce7818562006e80565b935062007cf981856020860162006593565b62007d0481620065bd565b840191505092915050565b5f6040820190508181035f83015262007d29818562007ccf565b905062007d3a60208301846200796d565b9392505050565b5f62007d4e82846200753e565b915081905092915050565b5f62007d6682856200753e565b915062007d74828462007b5c565b6020820191508190509392505050565b5f62007d908262006f24565b915062007d9d8362006f24565b925062007dcc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462007300565b905092915050565b5f60208201905062007de95f8301846200796d565b92915050565b5f67ffffffffffffffff82111562007e0c5762007e0b620077ec565b5b62007e1782620065bd565b9050602081019050919050565b5f62007e3a62007e348462007def565b6200784f565b90508281526020810184848401111562007e595762007e58620077e8565b5b62007e6684828562006593565b509392505050565b5f82601f83011262007e855762007e84620067d9565b5b815162007e9784826020860162007e24565b91505092915050565b5f6020828403121562007eb85762007eb762006357565b5b5f82015167ffffffffffffffff81111562007ed85762007ed76200635b565b5b62007ee68482850162007e6e565b91505092915050565b7f73746453746f726167652066696e642853746453746f72616765293a205061635f8201527f6b656420736c6f742e2057652063616e2774206669742076616c75652067726560208201527f61746572207468616e2000000000000000000000000000000000000000000000604082015250565b5f62007f71604a8362007767565b915062007f7e8262007eef565b604a82019050919050565b5f62007f958262006579565b62007fa1818562007767565b935062007fb381856020860162006593565b80840191505092915050565b5f62007fcb8262007f63565b915062007fd9828462007f89565b915081905092915050565b5f6020820190508181035f83015262007ffe818462007ccf565b905092915050565b5f6060820190506200801b5f830186620067ad565b6200802a60208301856200768e565b6200803960408301846200768e565b949350505050565b7f73746453746f726167652066696e642853746453746f72616765293a204661695f8201527f6c656420746f2077726974652076616c75652e00000000000000000000000000602082015250565b5f6200809d60338362006e80565b9150620080aa8262008041565b604082019050919050565b5f6020820190508181035f830152620080ce816200808f565b9050919050565b5f819050919050565b620080f3620080ed8262006990565b620080d5565b82525050565b5f620081068285620080de565b6004820191506200811882846200753e565b91508190509392505050565b5f620081308262006f24565b91506200813d8362006f24565b92508282026200814d8162006f24565b91508282048414831517620081675762008166620071e9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f67ffffffffffffffff821115620081b857620081b7620077ec565b5b602082029050602081019050919050565b5f620081df620081d9846200819b565b6200784f565b90508083825260208201905060208402830185811115620082055762008204620067e1565b5b835b818110156200823257806200821d888262007a99565b84526020840193505060208101905062008207565b5050509392505050565b5f82601f830112620082535762008252620067d9565b5b815162008265848260208601620081c9565b91505092915050565b5f806040838503121562008287576200828662006357565b5b5f83015167ffffffffffffffff811115620082a757620082a66200635b565b5b620082b5858286016200823c565b925050602083015167ffffffffffffffff811115620082d957620082d86200635b565b5b620082e7858286016200823c565b9150509250929050565b7f73746453746f726167652066696e642853746453746f72616765293a204e6f205f8201527f73746f726167652075736520646574656374656420666f72207461726765742e602082015250565b5f6200834d60408362006e80565b91506200835a82620082f1565b604082019050919050565b5f6020820190508181035f8301526200837e816200833f565b9050919050565b5f620083918262006f24565b91505f8203620083a657620083a5620071e9565b5b600182039050919050565b5f604082019050620083c65f830185620067ad565b620083d560208301846200796d565b9392505050565b620083e78162006990565b82525050565b5f608082019050620084025f830187620067ad565b620084116020830186620083dc565b6200842060408301856200768e565b6200842f60608301846200796d565b95945050505050565b7f73746453746f726167652066696e642853746453746f72616765293a20536c6f5f8201527f74287329206e6f7420666f756e642e0000000000000000000000000000000000602082015250565b5f62008494602f8362006e80565b9150620084a18262008438565b604082019050919050565b5f6020820190508181035f830152620084c58162008486565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52605160045260245ffdfe608060405234801561000f575f80fd5b506104b08061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061002d575f3560e01c8063312f619f146100d45761002e565b5b5f3660605f80848481019061004391906102b3565b915091505f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8267ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f206040516020016100b691906103d6565b60405160208183030381529060405292505050915050805190602001f35b6100ee60048036038101906100e9919061042a565b6100f0565b005b60405180606001604052808267ffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff168152505f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8467ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506020820151815f0160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151815f0160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102458261021c565b9050919050565b6102558161023b565b811461025f575f80fd5b50565b5f813590506102708161024c565b92915050565b5f67ffffffffffffffff82169050919050565b61029281610276565b811461029c575f80fd5b50565b5f813590506102ad81610289565b92915050565b5f80604083850312156102c9576102c8610218565b5b5f6102d685828601610262565b92505060206102e78582860161029f565b9150509250929050565b5f815f1c9050919050565b5f67ffffffffffffffff82169050919050565b5f61032161031c836102f1565b6102fc565b9050919050565b61033181610276565b82525050565b5f8160401c9050919050565b5f61035561035083610337565b6102fc565b9050919050565b5f8160801c9050919050565b5f61037a6103758361035c565b6102fc565b9050919050565b606082015f8083015490506103958161030f565b6103a15f860182610328565b506103ab81610343565b6103b86020860182610328565b506103c281610368565b6103cf6040860182610328565b5050505050565b5f6060820190506103e95f830184610381565b92915050565b5f6103f98261021c565b9050919050565b610409816103ef565b8114610413575f80fd5b50565b5f8135905061042481610400565b92915050565b5f805f6060848603121561044157610440610218565b5b5f61044e86828701610416565b935050602061045f8682870161029f565b92505060406104708682870161029f565b915050925092509256fea2646970667358221220dbb79e72c88524d69893e0cb4a3f3e0ab2b92959b5db537fe6e5f0052a45904764736f6c6343000816003360c060405234801562000010575f80fd5b5060405162005cbe38038062005cbe833981810160405281019062000036919062000552565b8383838383836200004c6200029b60201b60201c565b8484818181818d5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000c6575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000bd919062000610565b60405180910390fd5b620000d781620002a360201b60201c565b508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000172576040517fb586360400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60805173ffffffffffffffffffffffffffffffffffffffff1663ca5eb5e1826040518263ffffffff1660e01b8152600401620001af919062000610565b5f604051808303815f87803b158015620001c7575f80fd5b505af1158015620001da573d5f803e3d5ffd5b5050505050505050620001f26200036460201b60201c565b60ff168360ff16101562000232576040517f1e9714b000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620002426200036460201b60201c565b836200024f919062000664565b600a6200025d9190620007f8565b60a08181525050505050816008908162000278919062000a76565b5080600990816200028a919062000a76565b505050505050505050505062000b5a565b5f6012905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6006905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620003cd8262000385565b810181811067ffffffffffffffff82111715620003ef57620003ee62000395565b5b80604052505050565b5f620004036200036c565b9050620004118282620003c2565b919050565b5f67ffffffffffffffff82111562000433576200043262000395565b5b6200043e8262000385565b9050602081019050919050565b5f5b838110156200046a5780820151818401526020810190506200044d565b5f8484015250505050565b5f6200048b620004858462000416565b620003f8565b905082815260208101848484011115620004aa57620004a962000381565b5b620004b78482856200044b565b509392505050565b5f82601f830112620004d657620004d56200037d565b5b8151620004e884826020860162000475565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200051c82620004f1565b9050919050565b6200052e8162000510565b811462000539575f80fd5b50565b5f815190506200054c8162000523565b92915050565b5f805f80608085870312156200056d576200056c62000375565b5b5f85015167ffffffffffffffff8111156200058d576200058c62000379565b5b6200059b87828801620004bf565b945050602085015167ffffffffffffffff811115620005bf57620005be62000379565b5b620005cd87828801620004bf565b9350506040620005e0878288016200053c565b9250506060620005f3878288016200053c565b91505092959194509250565b6200060a8162000510565b82525050565b5f602082019050620006255f830184620005ff565b92915050565b5f60ff82169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000670826200062b565b91506200067d836200062b565b9250828203905060ff81111562000699576200069862000637565b5b92915050565b5f8160011c9050919050565b5f808291508390505b6001851115620006fc57808604811115620006d457620006d362000637565b5b6001851615620006e45780820291505b8081029050620006f4856200069f565b9450620006b4565b94509492505050565b5f82620007165760019050620007e8565b8162000725575f9050620007e8565b81600181146200073e576002811462000749576200077f565b6001915050620007e8565b60ff8411156200075e576200075d62000637565b5b8360020a91508482111562000778576200077762000637565b5b50620007e8565b5060208310610133831016604e8410600b8410161715620007b95782820a905083811115620007b357620007b262000637565b5b620007e8565b620007c88484846001620006ab565b92509050818404811115620007e257620007e162000637565b5b81810290505b9392505050565b5f819050919050565b5f6200080482620007ef565b915062000811836200062b565b9250620008407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000705565b905092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200089757607f821691505b602082108103620008ad57620008ac62000852565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620009117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620008d4565b6200091d8683620008d4565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6200095e620009586200095284620007ef565b62000935565b620007ef565b9050919050565b5f819050919050565b62000979836200093e565b62000991620009888262000965565b848454620008e0565b825550505050565b5f90565b620009a762000999565b620009b48184846200096e565b505050565b5b81811015620009db57620009cf5f826200099d565b600181019050620009ba565b5050565b601f82111562000a2a57620009f481620008b3565b620009ff84620008c5565b8101602085101562000a0f578190505b62000a2762000a1e85620008c5565b830182620009b9565b50505b505050565b5f82821c905092915050565b5f62000a4c5f198460080262000a2f565b1980831691505092915050565b5f62000a66838362000a3b565b9150826002028217905092915050565b62000a818262000848565b67ffffffffffffffff81111562000a9d5762000a9c62000395565b5b62000aa982546200087f565b62000ab6828285620009df565b5f60209050601f83116001811462000aec575f841562000ad7578287015190505b62000ae3858262000a59565b86555062000b52565b601f19841662000afc86620008b3565b5f5b8281101562000b255784890151825560018201915060208501945060208101905062000afe565b8683101562000b45578489015162000b41601f89168262000a3b565b8355505b6001600288020188555050505b505050505050565b60805160a0516150f562000bc95f395f818161116d0152818161254a0152818161256b0152818161260f015261295e01525f8181610c8d01528181610f6e0152818161160f01528181611a5901528181611f5501528181612a5801528181612caa0152612da201526150f55ff3fe608060405260043610610250575f3560e01c80637d25a05e11610138578063bb0b6a53116100b5578063d045a0dc11610079578063d045a0dc146108e7578063d424388514610903578063dd62ed3e1461092b578063f2fde38b14610967578063fc0c546a1461098f578063ff7bd03d146109b957610250565b8063bb0b6a53146107fa578063bc70b35414610836578063bd815db014610872578063c7c7f5b31461088e578063ca5eb5e1146108bf57610250565b8063963efcaa116100fc578063963efcaa146107185780639f68b96414610742578063a9059cbb1461076c578063b731ea0a146107a8578063b98bd070146107d257610250565b80637d25a05e1461062257806382413eac1461065e578063857749b01461069a5780638da5cb5b146106c457806395d89b41146106ee57610250565b806323b872dd116101d15780635535d461116101955780635535d461146105065780635a0dfe4d146105425780635e280f111461057e5780636fc1b31e146105a857806370a08231146105d0578063715018a61461060c57610250565b806323b872dd14610412578063313ce5671461044e5780633400288b146104785780633b6f743b146104a057806352ae2879146104dc57610250565b8063134d4f2511610218578063134d4f251461033e578063156a0d0f1461036857806317442b701461039357806318160ddd146103be5780631f5e1334146103e857610250565b806306fdde0314610254578063095ea7b31461027e5780630d35b415146102ba578063111ecdad146102f857806313137d6514610322575b5f80fd5b34801561025f575f80fd5b506102686109f5565b6040516102759190613027565b60405180910390f35b348015610289575f80fd5b506102a4600480360381019061029f91906130e5565b610a85565b6040516102b1919061313d565b60405180910390f35b3480156102c5575f80fd5b506102e060048036038101906102db9190613178565b610aa7565b6040516102ef9392919061337d565b60405180910390f35b348015610303575f80fd5b5061030c610c4f565b60405161031991906133c8565b60405180910390f35b61033c60048036038101906103379190613493565b610c74565b005b348015610349575f80fd5b50610352610d94565b60405161035f9190613566565b60405180910390f35b348015610373575f80fd5b5061037c610d99565b60405161038a9291906135db565b60405180910390f35b34801561039e575f80fd5b506103a7610dc6565b6040516103b5929190613602565b60405180910390f35b3480156103c9575f80fd5b506103d2610dd4565b6040516103df9190613638565b60405180910390f35b3480156103f3575f80fd5b506103fc610ddd565b6040516104099190613566565b60405180910390f35b34801561041d575f80fd5b5061043860048036038101906104339190613651565b610de2565b604051610445919061313d565b60405180910390f35b348015610459575f80fd5b50610462610e10565b60405161046f91906136bc565b60405180910390f35b348015610483575f80fd5b5061049e6004803603810190610499919061370e565b610e18565b005b3480156104ab575f80fd5b506104c660048036038101906104c19190613776565b610e2e565b6040516104d391906137fd565b60405180910390f35b3480156104e7575f80fd5b506104f0610e96565b6040516104fd91906133c8565b60405180910390f35b348015610511575f80fd5b5061052c60048036038101906105279190613840565b610e9d565b60405161053991906138d0565b60405180910390f35b34801561054d575f80fd5b506105686004803603810190610563919061370e565b610f43565b604051610575919061313d565b60405180910390f35b348015610589575f80fd5b50610592610f6c565b60405161059f919061394b565b60405180910390f35b3480156105b3575f80fd5b506105ce60048036038101906105c99190613964565b610f90565b005b3480156105db575f80fd5b506105f660048036038101906105f19190613964565b611012565b6040516106039190613638565b60405180910390f35b348015610617575f80fd5b50610620611058565b005b34801561062d575f80fd5b506106486004803603810190610643919061370e565b61106b565b604051610655919061398f565b60405180910390f35b348015610669575f80fd5b50610684600480360381019061067f91906139a8565b611072565b604051610691919061313d565b60405180910390f35b3480156106a5575f80fd5b506106ae6110ac565b6040516106bb91906136bc565b60405180910390f35b3480156106cf575f80fd5b506106d86110b4565b6040516106e591906133c8565b60405180910390f35b3480156106f9575f80fd5b506107026110db565b60405161070f9190613027565b60405180910390f35b348015610723575f80fd5b5061072c61116b565b6040516107399190613638565b60405180910390f35b34801561074d575f80fd5b5061075661118f565b604051610763919061313d565b60405180910390f35b348015610777575f80fd5b50610792600480360381019061078d91906130e5565b611193565b60405161079f919061313d565b60405180910390f35b3480156107b3575f80fd5b506107bc6111b5565b6040516107c991906133c8565b60405180910390f35b3480156107dd575f80fd5b506107f860048036038101906107f39190613a6e565b6111da565b005b348015610805575f80fd5b50610820600480360381019061081b9190613ab9565b6111fb565b60405161082d9190613af3565b60405180910390f35b348015610841575f80fd5b5061085c60048036038101906108579190613b0c565b611210565b60405161086991906138d0565b60405180910390f35b61088c60048036038101906108879190613bd2565b611412565b005b6108a860048036038101906108a39190613c3b565b6115de565b6040516108b6929190613d32565b60405180910390f35b3480156108ca575f80fd5b506108e560048036038101906108e09190613964565b611605565b005b61090160048036038101906108fc9190613493565b611696565b005b34801561090e575f80fd5b5061092960048036038101906109249190613964565b611713565b005b348015610936575f80fd5b50610951600480360381019061094c9190613d59565b611795565b60405161095e9190613638565b60405180910390f35b348015610972575f80fd5b5061098d60048036038101906109889190613964565b611817565b005b34801561099a575f80fd5b506109a361189b565b6040516109b091906133c8565b60405180910390f35b3480156109c4575f80fd5b506109df60048036038101906109da9190613d97565b6118a2565b6040516109ec919061313d565b60405180910390f35b606060088054610a0490613def565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3090613def565b8015610a7b5780601f10610a5257610100808354040283529160200191610a7b565b820191905f5260205f20905b815481529060010190602001808311610a5e57829003601f168201915b5050505050905090565b5f80610a8f6118df565b9050610a9c8185856118e6565b600191505092915050565b610aaf612f0a565b6060610ab9612f22565b5f803073ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b04573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b289190613e33565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b70573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b949190613e72565b905060405180604001604052808381526020018281525094505f67ffffffffffffffff811115610bc757610bc6613e9d565b5b604051908082528060200260200182016040528015610c0057816020015b610bed612f3a565b815260200190600190039081610be55790505b5093505f80610c29886040013589606001358a5f016020810190610c249190613ab9565b6118f8565b915091506040518060400160405280838152602001828152509450505050509193909250565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610d0457336040517f91ac5e4f000000000000000000000000000000000000000000000000000000008152600401610cfb91906133c8565b60405180910390fd5b8660200135610d23885f016020810190610d1e9190613ab9565b611957565b14610d7c57865f016020810190610d3a9190613ab9565b87602001356040517fc26bebcc000000000000000000000000000000000000000000000000000000008152600401610d73929190613ed9565b60405180910390fd5b610d8b878787878787876119c8565b50505050505050565b600281565b5f807f02e49c2c000000000000000000000000000000000000000000000000000000006001915091509091565b5f8060016002915091509091565b5f600754905090565b600181565b5f80610dec6118df565b9050610df9858285611b52565b610e04858585611be4565b60019150509392505050565b5f6012905090565b610e20611cd4565b610e2a8282611d5b565b5050565b610e36612f53565b5f610e5b84604001358560600135865f016020810190610e569190613ab9565b6118f8565b9150505f80610e6a8684611dba565b91509150610e8b865f016020810190610e839190613ab9565b838388611f4b565b935050505092915050565b5f30905090565b6003602052815f5260405f20602052805f5260405f205f91509150508054610ec490613def565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef090613def565b8015610f3b5780601f10610f1257610100808354040283529160200191610f3b565b820191905f5260205f20905b815481529060010190602001808311610f1e57829003601f168201915b505050505081565b5f8160015f8563ffffffff1663ffffffff1681526020019081526020015f205414905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610f98611cd4565b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff0be4f1e87349231d80c36b33f9e8639658eeaf474014dee15a3e6a4d44141978160405161100791906133c8565b60405180910390a150565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b611060611cd4565b6110695f61202c565b565b5f92915050565b5f3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050949350505050565b5f6006905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600980546110ea90613def565b80601f016020809104026020016040519081016040528092919081815260200182805461111690613def565b80156111615780601f1061113857610100808354040283529160200191611161565b820191905f5260205f20905b81548152906001019060200180831161114457829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f90565b5f8061119d6118df565b90506111aa818585611be4565b600191505092915050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6111e2611cd4565b6111f78282906111f29190614131565b6120ed565b5050565b6001602052805f5260405f205f915090505481565b60605f60035f8763ffffffff1663ffffffff1681526020019081526020015f205f8661ffff1661ffff1681526020019081526020015f20805461125290613def565b80601f016020809104026020016040519081016040528092919081815260200182805461127e90613def565b80156112c95780601f106112a0576101008083540402835291602001916112c9565b820191905f5260205f20905b8154815290600101906020018083116112ac57829003601f168201915b505050505090505f8151036113245783838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505091505061140a565b5f8484905003611337578091505061140a565b600284849050106113cb5761138e84848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050612202565b80848460029080926113a29392919061414d565b6040516020016113b4939291906141e5565b60405160208183030381529060405291505061140a565b83836040517f9a6d49cd000000000000000000000000000000000000000000000000000000008152600401611401929190614236565b60405180910390fd5b949350505050565b5f5b82829050811015611531573683838381811061143357611432614258565b5b90506020028101906114459190614291565b905061146a815f015f01602081019061145e9190613ab9565b825f0160200135610f43565b6114745750611524565b3073ffffffffffffffffffffffffffffffffffffffff1663d045a0dc8260c00135835f018460a00135858061010001906114ae91906142b9565b8760e00160208101906114c19190613964565b888061012001906114d291906142b9565b6040518963ffffffff1660e01b81526004016114f497969594939291906143ee565b5f604051808303818588803b15801561150b575f80fd5b505af115801561151d573d5f803e3d5ffd5b5050505050505b8080600101915050611414565b503373ffffffffffffffffffffffffffffffffffffffff16638e9e70996040518163ffffffff1660e01b81526004015f60405180830381865afa15801561157a573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906115a291906144bf565b6040517f8351eea70000000000000000000000000000000000000000000000000000000081526004016115d591906138d0565b60405180910390fd5b6115e6612f6b565b6115ee612f22565b6115f985858561225b565b91509150935093915050565b61160d611cd4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ca5eb5e1826040518263ffffffff1660e01b815260040161166691906133c8565b5f604051808303815f87803b15801561167d575f80fd5b505af115801561168f573d5f803e3d5ffd5b5050505050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116fb576040517f14d4a4e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61170a87878787878787612360565b50505050505050565b61171b611cd4565b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd48d879cef83a1c0bdda516f27b13ddb1b3f8bbac1c9e1511bb2a659c24277608160405161178a91906133c8565b60405180910390a150565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61181f611cd4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361188f575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161188691906133c8565b60405180910390fd5b6118988161202c565b50565b5f30905090565b5f816020013560015f845f0160208101906118bd9190613ab9565b63ffffffff1663ffffffff1681526020019081526020015f2054149050919050565b5f33905090565b6118f38383836001612378565b505050565b5f8061190385612547565b91508190508381101561194f5780846040517f71c4efed000000000000000000000000000000000000000000000000000000008152600401611946929190614506565b60405180910390fd5b935093915050565b5f8060015f8463ffffffff1663ffffffff1681526020019081526020015f205490505f801b81036119bf57826040517ff6ff4fb70000000000000000000000000000000000000000000000000000000081526004016119b6919061452d565b60405180910390fd5b80915050919050565b5f6119db6119d687876125a6565b6125d0565b90505f611a0b826119f46119ef8a8a6125db565b61260c565b8b5f016020810190611a069190613ab9565b61264a565b9050611a178787612698565b15611ae5575f611a558a6040016020810190611a339190614546565b8b5f016020810190611a459190613ab9565b84611a508c8c6126ab565b61270d565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637cb59012848b5f856040518563ffffffff1660e01b8152600401611ab694939291906145aa565b5f604051808303815f87803b158015611acd575f80fd5b505af1158015611adf573d5f803e3d5ffd5b50505050505b8173ffffffffffffffffffffffffffffffffffffffff16887fefed6d3500546b29533b128a29e3a94d70788727f0507505ac12eaf2e578fd9c8b5f016020810190611b309190613ab9565b84604051611b3f9291906145f4565b60405180910390a3505050505050505050565b5f611b5d8484611795565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611bde5781811015611bcf578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611bc69392919061461b565b60405180910390fd5b611bdd84848484035f612378565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c54575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611c4b91906133c8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611cc4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611cbb91906133c8565b60405180910390fd5b611ccf83838361273f565b505050565b611cdc6118df565b73ffffffffffffffffffffffffffffffffffffffff16611cfa6110b4565b73ffffffffffffffffffffffffffffffffffffffff1614611d5957611d1d6118df565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611d5091906133c8565b60405180910390fd5b565b8060015f8463ffffffff1663ffffffff1681526020019081526020015f20819055507f238399d427b947898edb290f5ff0f9109849b1c3ba196a42e35f00c50a54b98b8282604051611dae929190613ed9565b60405180910390a15050565b6060805f611e268560200135611dcf8661295b565b878060a00190611ddf91906142b9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505061298f565b80925081945050505f81611e3b576001611e3e565b60025b9050611e6b865f016020810190611e559190613ab9565b82888060800190611e6691906142b9565b611210565b92505f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611f41578073ffffffffffffffffffffffffffffffffffffffff1663043a78eb86866040518363ffffffff1660e01b8152600401611f00929190614650565b602060405180830381865afa158015611f1b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f3f9190614699565b505b5050509250929050565b611f53612f53565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ddc28c586040518060a001604052808863ffffffff168152602001611faf89611957565b8152602001878152602001868152602001851515815250306040518363ffffffff1660e01b8152600401611fe4929190614795565b6040805180830381865afa158015611ffe573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120229190614810565b9050949350505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5b81518110156121c75761211f82828151811061210e5761210d614258565b5b602002602001015160400151612202565b81818151811061213257612131614258565b5b60200260200101516040015160035f84848151811061215457612153614258565b5b60200260200101515f015163ffffffff1663ffffffff1681526020019081526020015f205f84848151811061218c5761218b614258565b5b60200260200101516020015161ffff1661ffff1681526020019081526020015f2090816121b991906149cf565b5080806001019150506120ef565b507fbe4864a8e820971c0247f5992e2da559595f7bf076a21cb5928d443d2a13b674816040516121f79190614bb5565b60405180910390a150565b5f60028201519050600361ffff168161ffff161461225757816040517f9a6d49cd00000000000000000000000000000000000000000000000000000000815260040161224e91906138d0565b60405180910390fd5b5050565b612263612f6b565b61226b612f22565b5f8061229233886040013589606001358a5f01602081019061228d9190613ab9565b6129fd565b915091505f806122a28984611dba565b915091506122d4895f0160208101906122bb9190613ab9565b83838b8036038101906122ce9190614c22565b8b612a25565b955060405180604001604052808581526020018481525094503373ffffffffffffffffffffffffffffffffffffffff16865f01517f85496b760a4b7f8d66384b9df21b381f5d1b1e79f229a47aaf4c232edc2fe59a8b5f01602081019061233b9190613ab9565b878760405161234c93929190614c4d565b60405180910390a350505050935093915050565b61236f878787878787876119c8565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036123e8575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016123df91906133c8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612458575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161244f91906133c8565b60405180910390fd5b8160065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015612541578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516125389190613638565b60405180910390a35b50505050565b5f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000836125959190614cdc565b61259f9190614d0c565b9050919050565b5f82825f90602060ff16926125bd9392919061414d565b906125c89190614d57565b905092915050565b5f815f1c9050919050565b5f8282602060ff1690602860ff16926125f69392919061414d565b906126019190614de0565b60c01c905092915050565b5f7f00000000000000000000000000000000000000000000000000000000000000008267ffffffffffffffff166126439190614d0c565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036126845761dead93505b61268e8484612b3b565b8290509392505050565b5f602860ff168383905011905092915050565b60608282602860ff169080926126c39392919061414d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050905092915050565b6060848484846040516020016127269493929190614ec6565b6040516020818303038152906040529050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361278f578060075f8282546127839190614f0f565b9250508190555061285f565b5f60055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015612819578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016128109392919061461b565b60405180910390fd5b81810360055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036128a6578060075f82825403925050819055506128f1565b8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161294e9190613638565b60405180910390a3505050565b5f7f0000000000000000000000000000000000000000000000000000000000000000826129889190614cdc565b9050919050565b60605f808351119050806129c45784846040516020016129b0929190614f62565b6040516020818303038152906040526129f3565b84846129cf33612bba565b856040516020016129e39493929190614f8d565b6040516020818303038152906040525b9150935093915050565b5f80612a0a8585856118f8565b8092508193505050612a1c8683612bdb565b94509492505050565b612a2d612f6b565b5f612a3a845f0151612c5a565b90505f84602001511115612a5657612a558460200151612ca7565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632637a450826040518060a001604052808b63ffffffff168152602001612ab38c611957565b81526020018a81526020018981526020015f8960200151111515815250866040518463ffffffff1660e01b8152600401612aee929190614795565b60806040518083038185885af1158015612b0a573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190612b2f919061505f565b91505095945050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612bab575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401612ba291906133c8565b60405180910390fd5b612bb65f838361273f565b5050565b5f8173ffffffffffffffffffffffffffffffffffffffff165f1b9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612c4b575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401612c4291906133c8565b60405180910390fd5b612c56825f8361273f565b5050565b5f813414612c9f57346040517f9f704120000000000000000000000000000000000000000000000000000000008152600401612c969190613638565b60405180910390fd5b819050919050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e4fe1d946040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612d359190613e33565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612d9c576040517f5373352a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612de9337f0000000000000000000000000000000000000000000000000000000000000000848473ffffffffffffffffffffffffffffffffffffffff16612ded909392919063ffffffff16565b5050565b612e69848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401612e229392919061508a565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612e6f565b50505050565b5f8060205f8451602086015f885af180612e8e576040513d5f823e3d81fd5b3d92505f519150505f8214612ea7576001811415612ec2565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15612f0457836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401612efb91906133c8565b60405180910390fd5b50505050565b60405180604001604052805f81526020015f81525090565b60405180604001604052805f81526020015f81525090565b60405180604001604052805f8152602001606081525090565b60405180604001604052805f81526020015f81525090565b60405180606001604052805f80191681526020015f67ffffffffffffffff168152602001612f97612f53565b81525090565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612fd4578082015181840152602081019050612fb9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f612ff982612f9d565b6130038185612fa7565b9350613013818560208601612fb7565b61301c81612fdf565b840191505092915050565b5f6020820190508181035f83015261303f8184612fef565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61308182613058565b9050919050565b61309181613077565b811461309b575f80fd5b50565b5f813590506130ac81613088565b92915050565b5f819050919050565b6130c4816130b2565b81146130ce575f80fd5b50565b5f813590506130df816130bb565b92915050565b5f80604083850312156130fb576130fa613050565b5b5f6131088582860161309e565b9250506020613119858286016130d1565b9150509250929050565b5f8115159050919050565b61313781613123565b82525050565b5f6020820190506131505f83018461312e565b92915050565b5f80fd5b5f60e0828403121561316f5761316e613156565b5b81905092915050565b5f6020828403121561318d5761318c613050565b5b5f82013567ffffffffffffffff8111156131aa576131a9613054565b5b6131b68482850161315a565b91505092915050565b6131c8816130b2565b82525050565b604082015f8201516131e25f8501826131bf565b5060208201516131f560208501826131bf565b50505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b61323681613224565b82525050565b5f82825260208201905092915050565b5f61325682612f9d565b613260818561323c565b9350613270818560208601612fb7565b61327981612fdf565b840191505092915050565b5f604083015f8301516132995f86018261322d565b50602083015184820360208601526132b1828261324c565b9150508091505092915050565b5f6132c98383613284565b905092915050565b5f602082019050919050565b5f6132e7826131fb565b6132f18185613205565b93508360208202850161330385613215565b805f5b8581101561333e578484038952815161331f85826132be565b945061332a836132d1565b925060208a01995050600181019050613306565b50829750879550505050505092915050565b604082015f8201516133645f8501826131bf565b50602082015161337760208501826131bf565b50505050565b5f60a0820190506133905f8301866131ce565b81810360408301526133a281856132dd565b90506133b16060830184613350565b949350505050565b6133c281613077565b82525050565b5f6020820190506133db5f8301846133b9565b92915050565b5f606082840312156133f6576133f5613156565b5b81905092915050565b5f819050919050565b613411816133ff565b811461341b575f80fd5b50565b5f8135905061342c81613408565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261345357613452613432565b5b8235905067ffffffffffffffff8111156134705761346f613436565b5b60208301915083600182028301111561348c5761348b61343a565b5b9250929050565b5f805f805f805f60e0888a0312156134ae576134ad613050565b5b5f6134bb8a828b016133e1565b97505060606134cc8a828b0161341e565b965050608088013567ffffffffffffffff8111156134ed576134ec613054565b5b6134f98a828b0161343e565b955095505060a061350c8a828b0161309e565b93505060c088013567ffffffffffffffff81111561352d5761352c613054565b5b6135398a828b0161343e565b925092505092959891949750929550565b5f61ffff82169050919050565b6135608161354a565b82525050565b5f6020820190506135795f830184613557565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6135b38161357f565b82525050565b5f67ffffffffffffffff82169050919050565b6135d5816135b9565b82525050565b5f6040820190506135ee5f8301856135aa565b6135fb60208301846135cc565b9392505050565b5f6040820190506136155f8301856135cc565b61362260208301846135cc565b9392505050565b613632816130b2565b82525050565b5f60208201905061364b5f830184613629565b92915050565b5f805f6060848603121561366857613667613050565b5b5f6136758682870161309e565b93505060206136868682870161309e565b9250506040613697868287016130d1565b9150509250925092565b5f60ff82169050919050565b6136b6816136a1565b82525050565b5f6020820190506136cf5f8301846136ad565b92915050565b5f63ffffffff82169050919050565b6136ed816136d5565b81146136f7575f80fd5b50565b5f81359050613708816136e4565b92915050565b5f806040838503121561372457613723613050565b5b5f613731858286016136fa565b92505060206137428582860161341e565b9150509250929050565b61375581613123565b811461375f575f80fd5b50565b5f813590506137708161374c565b92915050565b5f806040838503121561378c5761378b613050565b5b5f83013567ffffffffffffffff8111156137a9576137a8613054565b5b6137b58582860161315a565b92505060206137c685828601613762565b9150509250929050565b604082015f8201516137e45f8501826131bf565b5060208201516137f760208501826131bf565b50505050565b5f6040820190506138105f8301846137d0565b92915050565b61381f8161354a565b8114613829575f80fd5b50565b5f8135905061383a81613816565b92915050565b5f806040838503121561385657613855613050565b5b5f613863858286016136fa565b92505060206138748582860161382c565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f6138a28261387e565b6138ac8185613888565b93506138bc818560208601612fb7565b6138c581612fdf565b840191505092915050565b5f6020820190508181035f8301526138e88184613898565b905092915050565b5f819050919050565b5f61391361390e61390984613058565b6138f0565b613058565b9050919050565b5f613924826138f9565b9050919050565b5f6139358261391a565b9050919050565b6139458161392b565b82525050565b5f60208201905061395e5f83018461393c565b92915050565b5f6020828403121561397957613978613050565b5b5f6139868482850161309e565b91505092915050565b5f6020820190506139a25f8301846135cc565b92915050565b5f805f8060a085870312156139c0576139bf613050565b5b5f6139cd878288016133e1565b945050606085013567ffffffffffffffff8111156139ee576139ed613054565b5b6139fa8782880161343e565b93509350506080613a0d8782880161309e565b91505092959194509250565b5f8083601f840112613a2e57613a2d613432565b5b8235905067ffffffffffffffff811115613a4b57613a4a613436565b5b602083019150836020820283011115613a6757613a6661343a565b5b9250929050565b5f8060208385031215613a8457613a83613050565b5b5f83013567ffffffffffffffff811115613aa157613aa0613054565b5b613aad85828601613a19565b92509250509250929050565b5f60208284031215613ace57613acd613050565b5b5f613adb848285016136fa565b91505092915050565b613aed816133ff565b82525050565b5f602082019050613b065f830184613ae4565b92915050565b5f805f8060608587031215613b2457613b23613050565b5b5f613b31878288016136fa565b9450506020613b428782880161382c565b935050604085013567ffffffffffffffff811115613b6357613b62613054565b5b613b6f8782880161343e565b925092505092959194509250565b5f8083601f840112613b9257613b91613432565b5b8235905067ffffffffffffffff811115613baf57613bae613436565b5b602083019150836020820283011115613bcb57613bca61343a565b5b9250929050565b5f8060208385031215613be857613be7613050565b5b5f83013567ffffffffffffffff811115613c0557613c04613054565b5b613c1185828601613b7d565b92509250509250929050565b5f60408284031215613c3257613c31613156565b5b81905092915050565b5f805f60808486031215613c5257613c51613050565b5b5f84013567ffffffffffffffff811115613c6f57613c6e613054565b5b613c7b8682870161315a565b9350506020613c8c86828701613c1d565b9250506060613c9d8682870161309e565b9150509250925092565b613cb0816133ff565b82525050565b613cbf816135b9565b82525050565b604082015f820151613cd95f8501826131bf565b506020820151613cec60208501826131bf565b50505050565b608082015f820151613d065f850182613ca7565b506020820151613d196020850182613cb6565b506040820151613d2c6040850182613cc5565b50505050565b5f60c082019050613d455f830185613cf2565b613d526080830184613350565b9392505050565b5f8060408385031215613d6f57613d6e613050565b5b5f613d7c8582860161309e565b9250506020613d8d8582860161309e565b9150509250929050565b5f60608284031215613dac57613dab613050565b5b5f613db9848285016133e1565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680613e0657607f821691505b602082108103613e1957613e18613dc2565b5b50919050565b5f81519050613e2d81613088565b92915050565b5f60208284031215613e4857613e47613050565b5b5f613e5584828501613e1f565b91505092915050565b5f81519050613e6c816130bb565b92915050565b5f60208284031215613e8757613e86613050565b5b5f613e9484828501613e5e565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b613ed3816136d5565b82525050565b5f604082019050613eec5f830185613eca565b613ef96020830184613ae4565b9392505050565b613f0982612fdf565b810181811067ffffffffffffffff82111715613f2857613f27613e9d565b5b80604052505050565b5f613f3a613047565b9050613f468282613f00565b919050565b5f67ffffffffffffffff821115613f6557613f64613e9d565b5b602082029050602081019050919050565b5f80fd5b5f80fd5b5f80fd5b5f67ffffffffffffffff821115613f9c57613f9b613e9d565b5b613fa582612fdf565b9050602081019050919050565b828183375f83830152505050565b5f613fd2613fcd84613f82565b613f31565b905082815260208101848484011115613fee57613fed613f7e565b5b613ff9848285613fb2565b509392505050565b5f82601f83011261401557614014613432565b5b8135614025848260208601613fc0565b91505092915050565b5f6060828403121561404357614042613f76565b5b61404d6060613f31565b90505f61405c848285016136fa565b5f83015250602061406f8482850161382c565b602083015250604082013567ffffffffffffffff81111561409357614092613f7a565b5b61409f84828501614001565b60408301525092915050565b5f6140bd6140b884613f4b565b613f31565b905080838252602082019050602084028301858111156140e0576140df61343a565b5b835b8181101561412757803567ffffffffffffffff81111561410557614104613432565b5b808601614112898261402e565b855260208501945050506020810190506140e2565b5050509392505050565b5f61413d3684846140ab565b905092915050565b5f80fd5b5f80fd5b5f80858511156141605761415f614145565b5b8386111561417157614170614149565b5b6001850283019150848603905094509492505050565b5f81905092915050565b5f61419b8261387e565b6141a58185614187565b93506141b5818560208601612fb7565b80840191505092915050565b5f6141cc8385614187565b93506141d9838584613fb2565b82840190509392505050565b5f6141f08286614191565b91506141fd8284866141c1565b9150819050949350505050565b5f6142158385613888565b9350614222838584613fb2565b61422b83612fdf565b840190509392505050565b5f6020820190508181035f83015261424f81848661420a565b90509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f80fd5b5f80fd5b5f80fd5b5f82356001610140038336030381126142ad576142ac614285565b5b80830191505092915050565b5f80833560016020038436030381126142d5576142d4614285565b5b80840192508235915067ffffffffffffffff8211156142f7576142f6614289565b5b6020830192506001820236038313156143135761431261428d565b5b509250929050565b5f61432960208401846136fa565b905092915050565b61433a816136d5565b82525050565b5f61434e602084018461341e565b905092915050565b61435f816135b9565b8114614369575f80fd5b50565b5f8135905061437a81614356565b92915050565b5f61438e602084018461436c565b905092915050565b606082016143a65f83018361431b565b6143b25f850182614331565b506143c06020830183614340565b6143cd6020850182613ca7565b506143db6040830183614380565b6143e86040850182613cb6565b50505050565b5f60e0820190506144015f83018a614396565b61440e6060830189613ae4565b818103608083015261442181878961420a565b905061443060a08301866133b9565b81810360c083015261444381848661420a565b905098975050505050505050565b5f61446361445e84613f82565b613f31565b90508281526020810184848401111561447f5761447e613f7e565b5b61448a848285612fb7565b509392505050565b5f82601f8301126144a6576144a5613432565b5b81516144b6848260208601614451565b91505092915050565b5f602082840312156144d4576144d3613050565b5b5f82015167ffffffffffffffff8111156144f1576144f0613054565b5b6144fd84828501614492565b91505092915050565b5f6040820190506145195f830185613629565b6145266020830184613629565b9392505050565b5f6020820190506145405f830184613eca565b92915050565b5f6020828403121561455b5761455a613050565b5b5f6145688482850161436c565b91505092915050565b5f819050919050565b5f61459461458f61458a84614571565b6138f0565b61354a565b9050919050565b6145a48161457a565b82525050565b5f6080820190506145bd5f8301876133b9565b6145ca6020830186613ae4565b6145d7604083018561459b565b81810360608301526145e98184613898565b905095945050505050565b5f6040820190506146075f830185613eca565b6146146020830184613629565b9392505050565b5f60608201905061462e5f8301866133b9565b61463b6020830185613629565b6146486040830184613629565b949350505050565b5f6040820190508181035f8301526146688185613898565b9050818103602083015261467c8184613898565b90509392505050565b5f815190506146938161374c565b92915050565b5f602082840312156146ae576146ad613050565b5b5f6146bb84828501614685565b91505092915050565b5f82825260208201905092915050565b5f6146de8261387e565b6146e881856146c4565b93506146f8818560208601612fb7565b61470181612fdf565b840191505092915050565b61471581613123565b82525050565b5f60a083015f8301516147305f860182614331565b5060208301516147436020860182613ca7565b506040830151848203604086015261475b82826146d4565b9150506060830151848203606086015261477582826146d4565b915050608083015161478a608086018261470c565b508091505092915050565b5f6040820190508181035f8301526147ad818561471b565b90506147bc60208301846133b9565b9392505050565b5f604082840312156147d8576147d7613f76565b5b6147e26040613f31565b90505f6147f184828501613e5e565b5f83015250602061480484828501613e5e565b60208301525092915050565b5f6040828403121561482557614824613050565b5b5f614832848285016147c3565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026148977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261485c565b6148a1868361485c565b95508019841693508086168417925050509392505050565b5f6148d36148ce6148c9846130b2565b6138f0565b6130b2565b9050919050565b5f819050919050565b6148ec836148b9565b6149006148f8826148da565b848454614868565b825550505050565b5f90565b614914614908565b61491f8184846148e3565b505050565b5b81811015614942576149375f8261490c565b600181019050614925565b5050565b601f821115614987576149588161483b565b6149618461484d565b81016020851015614970578190505b61498461497c8561484d565b830182614924565b50505b505050565b5f82821c905092915050565b5f6149a75f198460080261498c565b1980831691505092915050565b5f6149bf8383614998565b9150826002028217905092915050565b6149d88261387e565b67ffffffffffffffff8111156149f1576149f0613e9d565b5b6149fb8254613def565b614a06828285614946565b5f60209050601f831160018114614a37575f8415614a25578287015190505b614a2f85826149b4565b865550614a96565b601f198416614a458661483b565b5f5b82811015614a6c57848901518255600182019150602085019450602081019050614a47565b86831015614a895784890151614a85601f891682614998565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b614ad08161354a565b82525050565b5f606083015f830151614aeb5f860182614331565b506020830151614afe6020860182614ac7565b5060408301518482036040860152614b1682826146d4565b9150508091505092915050565b5f614b2e8383614ad6565b905092915050565b5f602082019050919050565b5f614b4c82614a9e565b614b568185614aa8565b935083602082028501614b6885614ab8565b805f5b85811015614ba35784840389528151614b848582614b23565b9450614b8f83614b36565b925060208a01995050600181019050614b6b565b50829750879550505050505092915050565b5f6020820190508181035f830152614bcd8184614b42565b905092915050565b5f60408284031215614bea57614be9613f76565b5b614bf46040613f31565b90505f614c03848285016130d1565b5f830152506020614c16848285016130d1565b60208301525092915050565b5f60408284031215614c3757614c36613050565b5b5f614c4484828501614bd5565b91505092915050565b5f606082019050614c605f830186613eca565b614c6d6020830185613629565b614c7a6040830184613629565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f614ce6826130b2565b9150614cf1836130b2565b925082614d0157614d00614c82565b5b828204905092915050565b5f614d16826130b2565b9150614d21836130b2565b9250828202614d2f816130b2565b91508282048414831517614d4657614d45614caf565b5b5092915050565b5f82905092915050565b5f614d628383614d4d565b82614d6d81356133ff565b92506020821015614dad57614da87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261485c565b831692505b505092915050565b5f7fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b5f614deb8383614d4d565b82614df68135614db5565b92506008821015614e3657614e317fffffffffffffffff0000000000000000000000000000000000000000000000008360080360080261485c565b831692505b505092915050565b5f8160c01b9050919050565b5f614e5482614e3e565b9050919050565b614e6c614e67826135b9565b614e4a565b82525050565b5f8160e01b9050919050565b5f614e8882614e72565b9050919050565b614ea0614e9b826136d5565b614e7e565b82525050565b5f819050919050565b614ec0614ebb826130b2565b614ea6565b82525050565b5f614ed18287614e5b565b600882019150614ee18286614e8f565b600482019150614ef18285614eaf565b602082019150614f018284614191565b915081905095945050505050565b5f614f19826130b2565b9150614f24836130b2565b9250828201905080821115614f3c57614f3b614caf565b5b92915050565b5f819050919050565b614f5c614f57826133ff565b614f42565b82525050565b5f614f6d8285614f4b565b602082019150614f7d8284614e5b565b6008820191508190509392505050565b5f614f988287614f4b565b602082019150614fa88286614e5b565b600882019150614fb88285614f4b565b602082019150614fc88284614191565b915081905095945050505050565b5f81519050614fe481613408565b92915050565b5f81519050614ff881614356565b92915050565b5f6080828403121561501357615012613f76565b5b61501d6060613f31565b90505f61502c84828501614fd6565b5f83015250602061503f84828501614fea565b6020830152506040615053848285016147c3565b60408301525092915050565b5f6080828403121561507457615073613050565b5b5f61508184828501614ffe565b91505092915050565b5f60608201905061509d5f8301866133b9565b6150aa60208301856133b9565b6150b76040830184613629565b94935050505056fea2646970667358221220ede3d0118fefb2e19a171ee13d3541fad18f5600279130d85295bf5cda7402b064736f6c6343000816003360e060405234801562000010575f80fd5b506040516200360538038062003605833981810160405281019062000036919062000438565b60405180606001604052806200005c8467ffffffffffffffff166200035160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1681526020018367ffffffffffffffff1681526020018267ffffffffffffffff168152505f80820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050604051806060016040528073222222222222222222222222222222222222222273ffffffffffffffffffffffffffffffffffffffff16815260200161045167ffffffffffffffff168152602001600a67ffffffffffffffff1681525060025f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505060a05173ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002ba573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620002e09190620004a7565b73ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050505062000547565b5f8173200000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166200038a91906200050d565b9050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620003c08262000395565b9050919050565b620003d281620003b4565b8114620003dd575f80fd5b50565b5f81519050620003f081620003c7565b92915050565b5f67ffffffffffffffff82169050919050565b6200041481620003f6565b81146200041f575f80fd5b50565b5f81519050620004328162000409565b92915050565b5f805f806080858703121562000453576200045262000391565b5b5f6200046287828801620003e0565b94505060206200047587828801620003e0565b9350506040620004888782880162000422565b92505060606200049b8782880162000422565b91505092959194509250565b5f60208284031215620004bf57620004be62000391565b5b5f620004ce84828501620003e0565b91505092915050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200051982620004d7565b91506200052683620004d7565b9250828201905080821115620005415762000540620004e0565b5b92915050565b60805160a05160c051613062620005a35f395f8181610dae015281816110fc015281816119600152611ac601525f818161086701528181610a2a0152610a6601525f81816106630152818161097801526109b401526130625ff3fe60806040526004361061010c575f3560e01c80639b5215f611610094578063dd85007511610063578063dd85007514610357578063ebaeefd614610381578063f6e6b2401461039d578063f9716faf146103c9578063fc0c546a1461040557610113565b80639b5215f6146102bd578063aae12e46146102e7578063ba87267914610311578063d0a102601461033b57610113565b8063765008a1116100db578063765008a1146101e5578063807d6c3f1461021157806381e8dcb41461023b5780638483bc00146102775780639278d99a1461029357610113565b80631b224831146101175780632d0e315c146101555780635241b4961461017f5780635e280f11146101bb57610113565b3661011357005b5f80fd5b348015610122575f80fd5b5061013d60048036038101906101389190611d5d565b61042f565b60405161014c93929190611e62565b60405180910390f35b348015610160575f80fd5b5061016961046d565b6040516101769190611f3f565b60405180910390f35b34801561018a575f80fd5b506101a560048036038101906101a091906120d4565b61053c565b6040516101b2919061214f565b60405180910390f35b3480156101c6575f80fd5b506101cf610661565b6040516101dc919061214f565b60405180910390f35b3480156101f0575f80fd5b506101f9610685565b60405161020893929190612177565b60405180910390f35b34801561021c575f80fd5b506102256106e0565b60405161023291906121ac565b60405180910390f35b348015610246575f80fd5b50610261600480360381019061025c9190612219565b6106e5565b60405161026e9190612257565b60405180910390f35b610291600480360381019061028c9190612270565b6106f8565b005b34801561029e575f80fd5b506102a7610860565b6040516102b491906121ac565b60405180910390f35b3480156102c8575f80fd5b506102d1610865565b6040516102de91906122f6565b60405180910390f35b3480156102f2575f80fd5b506102fb610889565b6040516103089190611f3f565b60405180910390f35b34801561031c575f80fd5b50610325610959565b604051610332919061214f565b60405180910390f35b6103556004803603810190610350919061230f565b61095f565b005b348015610362575f80fd5b5061036b610ce4565b604051610378919061214f565b60405180910390f35b61039b600480360381019061039691906123c6565b610cfc565b005b3480156103a8575f80fd5b506103b1610e4d565b6040516103c093929190612177565b60405180910390f35b3480156103d4575f80fd5b506103ef60048036038101906103ea9190612439565b610ea9565b6040516103fc91906124c6565b60405180910390f35b348015610410575f80fd5b506104196110fa565b60405161042691906124ff565b60405180910390f35b5f8060605f61043e868661111e565b90505f61044b878761114e565b90505f610458888861117c565b90508282829550955095505050509250925092565b610475611c7b565b5f6040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905090565b5f80610547846111de565b90505f61055386611215565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610655575f6309b3473160e01b8788516040516024016105a5929190612518565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506106198386836112699092919063ffffffff16565b6040517f4f95203300000000000000000000000000000000000000000000000000000000815260040161064c9190612546565b60405180910390fd5b80925050509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b601481565b5f6106f083836112c4565b905092915050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461076857336040517f5950c85e00000000000000000000000000000000000000000000000000000000815260040161075f919061214f565b60405180910390fd5b5f34111561085d575f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146107aa57816107ac565b325b90505f8173ffffffffffffffffffffffffffffffffffffffff16346040516107d390612593565b5f6040518083038185875af1925050503d805f811461080d576040519150601f19603f3d011682016040523d82523d5f602084013e610812565b606091505b505090508061085a5781346040517fc8ee485e0000000000000000000000000000000000000000000000000000000081526004016108519291906125a7565b60405180910390fd5b50505b50565b602081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610891611c7b565b60026040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905090565b61080181565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610a11577f0000000000000000000000000000000000000000000000000000000000000000336040517fefa9309d000000000000000000000000000000000000000000000000000000008152600401610a089291906125ce565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610ac3577f0000000000000000000000000000000000000000000000000000000000000000876040517f86fee0c0000000000000000000000000000000000000000000000000000000008152600401610aba9291906125ce565b60405180910390fd5b5f805f60603073ffffffffffffffffffffffffffffffffffffffff16631b2248318a8a6040518363ffffffff1660e01b8152600401610b03929190612621565b5f60405180830381865afa925050508015610b4057506040513d5f823e3d601f19601f82011682018060405250810190610b3d91906126d9565b60015b610bb0573d805f8114610b6e576040519150601f19603f3d011682016040523d82523d5f602084013e610b73565b606091505b50806040517ed4895a000000000000000000000000000000000000000000000000000000008152600401610ba79190612546565b60405180910390fd5b8295508194508093505050503073ffffffffffffffffffffffffffffffffffffffff16635241b4968284866040518463ffffffff1660e01b8152600401610bf993929190612745565b602060405180830381865afa925050508015610c3357506040513d601f19601f82011682018060405250810190610c309190612795565b60015b610cb5573d805f8114610c61576040519150601f19603f3d011682016040523d82523d5f602084013e610c66565b606091505b505f610c71826113bb565b90507f612baef0082f9abcf6dc7b491d75346418381b75756830d7029939026d1b46b981604051610ca29190612546565b60405180910390a1505050505050610cdb565b809450505f341115610ccc57610ccb8434611668565b5b610cd68484611950565b505050505b50505050505050565b73333333333333333333333333333333333333333381565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d6c57336040517f5950c85e000000000000000000000000000000000000000000000000000000008152600401610d63919061214f565b60405180910390fd5b5f81118015610da757505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15610e49577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610e079291906125a7565b6020604051808303815f875af1158015610e23573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e4791906127d4565b505b5050565b6002805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b610eb1611cc3565b610eb9611c7b565b5f8315610fce575f6040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150610fc75f80015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f800160149054906101000a900467ffffffffffffffff166112c4565b90506110db565b60026040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505091506110d860025f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f0160149054906101000a900467ffffffffffffffff166112c4565b90505b6110f0818387611b6a9092919063ffffffff16565b9250505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f8282600c60ff1690602c60ff169261113993929190612807565b906111449190612857565b5f1c905092915050565b5f8282602c60ff1690604c60ff169261116993929190612807565b906111749190612857565b905092915050565b60608282604c60ff1690809261119493929190612807565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050905092915050565b5f80825f1c905073ffffffffffffffffffffffffffffffffffffffff8016811161120b5780915050611210565b5f9150505b919050565b5f808251905060148103611238578261122d90612903565b60601c915050611264565b6020810361125f575f8361124b9061297d565b9050611256816111de565b92505050611264565b5f9150505b919050565b606060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001858152506040516020016112ac9190612a78565b60405160208183030381529060405290509392505050565b5f80606061080173ffffffffffffffffffffffffffffffffffffffff1685856040516020016112f4929190612a98565b6040516020818303038152906040526040516113109190612aef565b5f60405180830381855afa9150503d805f8114611348576040519150601f19603f3d011682016040523d82523d5f602084013e61134d565b606091505b5080925081935050508161139a5784846040517fa91ed721000000000000000000000000000000000000000000000000000000008152600401611391929190612a98565b60405180910390fd5b808060200190518101906113ae9190612b82565b5f01519250505092915050565b60605f8273__$583e42a4fcd29c5c863b44cd876f1d3349$__63a405952790916040518263ffffffff1660e01b81526004016113f79190612bf5565b5f60405180830381865af4158015611411573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906114399190612c15565b90505f818060200190518101906114509190612cd9565b90503073ffffffffffffffffffffffffffffffffffffffff1663ebaeefd6825f015183602001516040518363ffffffff1660e01b81526004016114949291906125a7565b5f604051808303815f87803b1580156114ab575f80fd5b505af19250505080156114bc575060015b611505577feb907f6e0de6862ca2ced78e890a55c5e8352dc4051697356bc835abf7cedcac815f015182602001516040516114f89291906125a7565b60405180910390a1611506565b5b3073ffffffffffffffffffffffffffffffffffffffff16638483bc0034835f01516040518363ffffffff1660e01b8152600401611543919061214f565b5f604051808303818588803b15801561155a575f80fd5b505af19350505050801561156c575060015b611659575f3273ffffffffffffffffffffffffffffffffffffffff163460405161159590612593565b5f6040518083038185875af1925050503d805f81146115cf576040519150601f19603f3d011682016040523d82523d5f602084013e6115d4565b606091505b5050905080611617577f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d577323460405161160e9291906125a7565b60405180910390a15b7f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d577825f01513460405161164b9291906125a7565b60405180910390a15061165a565b5b806040015192505050919050565b5f611673825f610ea9565b90505f60025f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16825f01516040516116c090612593565b5f6040518083038185875af1925050503d805f81146116fa576040519150601f19603f3d011682016040523d82523d5f602084013e6116ff565b606091505b505090508061174557826040517fb7e54a0700000000000000000000000000000000000000000000000000000000815260040161173c91906121ac565b60405180910390fd5b73333333333333333333333333333333333333333373ffffffffffffffffffffffffffffffffffffffff16630b0ac0ab8560025f0160149054906101000a900467ffffffffffffffff1685604001516040518463ffffffff1660e01b81526004016117b293929190612177565b5f604051808303815f87803b1580156117c9575f80fd5b505af11580156117db573d5f803e3d5ffd5b505050505f8260200151111561194a573073ffffffffffffffffffffffffffffffffffffffff16638483bc008360200151866040518363ffffffff1660e01b8152600401611829919061214f565b5f604051808303818588803b158015611840575f80fd5b505af193505050508015611852575060015b611948573273ffffffffffffffffffffffffffffffffffffffff16826020015160405161187e90612593565b5f6040518083038185875af1925050503d805f81146118b8576040519150601f19603f3d011682016040523d82523d5f602084013e6118bd565b606091505b50508091505080611906577f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d5773283602001516040516118fd9291906125a7565b60405180910390a15b7f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d57784836020015160405161193b9291906125a7565b60405180910390a1611949565b5b5b50505050565b5f61195c826001610ea9565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb5f80015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16835f01516040518363ffffffff1660e01b81526004016119de9291906125a7565b6020604051808303815f875af11580156119fa573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a1e91906127d4565b5073333333333333333333333333333333333333333373ffffffffffffffffffffffffffffffffffffffff16630b0ac0ab845f800160149054906101000a900467ffffffffffffffff1684604001516040518463ffffffff1660e01b8152600401611a8b93929190612177565b5f604051808303815f87803b158015611aa2575f80fd5b505af1158015611ab4573d5f803e3d5ffd5b505050505f81602001511115611b65577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8483602001516040518363ffffffff1660e01b8152600401611b239291906125a7565b6020604051808303815f875af1158015611b3f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b6391906127d4565b505b505050565b611b72611cc3565b5f8260400151600a611b849190612e7c565b90505f80828781611b9857611b97612ec6565b5b06915081870390505f8388611bad9190612ef3565b90508667ffffffffffffffff168167ffffffffffffffff161115611c49577ff17459c2e89c2b011fa739accb3b853858d0a689d31382b9aa4f56a1ca00f9d38188604051611bfc929190612f23565b60405180910390a15f848883611c129190612f4a565b67ffffffffffffffff16611c269190612f85565b90508791508083611c379190612fc6565b92508084611c459190612ff9565b9350505b60405180606001604052808381526020018481526020018267ffffffffffffffff168152509450505050509392505050565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff1681525090565b60405180606001604052805f81526020015f81526020015f67ffffffffffffffff1681525090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611d1d57611d1c611cfc565b5b8235905067ffffffffffffffff811115611d3a57611d39611d00565b5b602083019150836001820283011115611d5657611d55611d04565b5b9250929050565b5f8060208385031215611d7357611d72611cf4565b5b5f83013567ffffffffffffffff811115611d9057611d8f611cf8565b5b611d9c85828601611d08565b92509250509250929050565b5f819050919050565b611dba81611da8565b82525050565b5f819050919050565b611dd281611dc0565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611e0f578082015181840152602081019050611df4565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611e3482611dd8565b611e3e8185611de2565b9350611e4e818560208601611df2565b611e5781611e1a565b840191505092915050565b5f606082019050611e755f830186611db1565b611e826020830185611dc9565b8181036040830152611e948184611e2a565b9050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ec782611e9e565b9050919050565b611ed781611ebd565b82525050565b5f67ffffffffffffffff82169050919050565b611ef981611edd565b82525050565b606082015f820151611f135f850182611ece565b506020820151611f266020850182611ef0565b506040820151611f396040850182611ef0565b50505050565b5f606082019050611f525f830184611eff565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611f9282611e1a565b810181811067ffffffffffffffff82111715611fb157611fb0611f5c565b5b80604052505050565b5f611fc3611ceb565b9050611fcf8282611f89565b919050565b5f67ffffffffffffffff821115611fee57611fed611f5c565b5b611ff782611e1a565b9050602081019050919050565b828183375f83830152505050565b5f61202461201f84611fd4565b611fba565b9050828152602081018484840111156120405761203f611f58565b5b61204b848285612004565b509392505050565b5f82601f83011261206757612066611cfc565b5b8135612077848260208601612012565b91505092915050565b61208981611dc0565b8114612093575f80fd5b50565b5f813590506120a481612080565b92915050565b6120b381611da8565b81146120bd575f80fd5b50565b5f813590506120ce816120aa565b92915050565b5f805f606084860312156120eb576120ea611cf4565b5b5f84013567ffffffffffffffff81111561210857612107611cf8565b5b61211486828701612053565b935050602061212586828701612096565b9250506040612136868287016120c0565b9150509250925092565b61214981611ebd565b82525050565b5f6020820190506121625f830184612140565b92915050565b61217181611edd565b82525050565b5f60608201905061218a5f830186612140565b6121976020830185612168565b6121a46040830184612168565b949350505050565b5f6020820190506121bf5f830184611db1565b92915050565b6121ce81611ebd565b81146121d8575f80fd5b50565b5f813590506121e9816121c5565b92915050565b6121f881611edd565b8114612202575f80fd5b50565b5f81359050612213816121ef565b92915050565b5f806040838503121561222f5761222e611cf4565b5b5f61223c858286016121db565b925050602061224d85828601612205565b9150509250929050565b5f60208201905061226a5f830184612168565b92915050565b5f6020828403121561228557612284611cf4565b5b5f612292848285016121db565b91505092915050565b5f819050919050565b5f6122be6122b96122b484611e9e565b61229b565b611e9e565b9050919050565b5f6122cf826122a4565b9050919050565b5f6122e0826122c5565b9050919050565b6122f0816122d6565b82525050565b5f6020820190506123095f8301846122e7565b92915050565b5f805f805f805f60a0888a03121561232a57612329611cf4565b5b5f6123378a828b016121db565b97505060206123488a828b01612096565b965050604088013567ffffffffffffffff81111561236957612368611cf8565b5b6123758a828b01611d08565b955095505060606123888a828b016121db565b935050608088013567ffffffffffffffff8111156123a9576123a8611cf8565b5b6123b58a828b01611d08565b925092505092959891949750929550565b5f80604083850312156123dc576123db611cf4565b5b5f6123e9858286016121db565b92505060206123fa858286016120c0565b9150509250929050565b5f8115159050919050565b61241881612404565b8114612422575f80fd5b50565b5f813590506124338161240f565b92915050565b5f806040838503121561244f5761244e611cf4565b5b5f61245c858286016120c0565b925050602061246d85828601612425565b9150509250929050565b61248081611da8565b82525050565b606082015f82015161249a5f850182612477565b5060208201516124ad6020850182612477565b5060408201516124c06040850182611ef0565b50505050565b5f6060820190506124d95f830184612486565b92915050565b5f6124e9826122c5565b9050919050565b6124f9816124df565b82525050565b5f6020820190506125125f8301846124f0565b92915050565b5f6040820190508181035f8301526125308185611e2a565b905061253f6020830184611db1565b9392505050565b5f6020820190508181035f83015261255e8184611e2a565b905092915050565b5f81905092915050565b50565b5f61257e5f83612566565b915061258982612570565b5f82019050919050565b5f61259d82612573565b9150819050919050565b5f6040820190506125ba5f830185612140565b6125c76020830184611db1565b9392505050565b5f6040820190506125e15f830185612140565b6125ee6020830184612140565b9392505050565b5f6126008385611de2565b935061260d838584612004565b61261683611e1a565b840190509392505050565b5f6020820190508181035f83015261263a8184866125f5565b90509392505050565b5f81519050612651816120aa565b92915050565b5f8151905061266581612080565b92915050565b5f61267d61267884611fd4565b611fba565b90508281526020810184848401111561269957612698611f58565b5b6126a4848285611df2565b509392505050565b5f82601f8301126126c0576126bf611cfc565b5b81516126d084826020860161266b565b91505092915050565b5f805f606084860312156126f0576126ef611cf4565b5b5f6126fd86828701612643565b935050602061270e86828701612657565b925050604084015167ffffffffffffffff81111561272f5761272e611cf8565b5b61273b868287016126ac565b9150509250925092565b5f6060820190508181035f83015261275d8186611e2a565b905061276c6020830185611dc9565b6127796040830184611db1565b949350505050565b5f8151905061278f816121c5565b92915050565b5f602082840312156127aa576127a9611cf4565b5b5f6127b784828501612781565b91505092915050565b5f815190506127ce8161240f565b92915050565b5f602082840312156127e9576127e8611cf4565b5b5f6127f6848285016127c0565b91505092915050565b5f80fd5b5f80fd5b5f808585111561281a576128196127ff565b5b8386111561282b5761282a612803565b5b6001850283019150848603905094509492505050565b5f82905092915050565b5f82821b905092915050565b5f6128628383612841565b8261286d8135611dc0565b925060208210156128ad576128a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261284b565b831692505b505092915050565b5f819050602082019050919050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b5f6128fa82516128c4565b80915050919050565b5f61290d82611dd8565b82612917846128b5565b9050612922816128ef565b925060148210156129625761295d7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360140360080261284b565b831692505b5050919050565b5f6129748251611dc0565b80915050919050565b5f61298782611dd8565b82612991846128b5565b905061299c81612969565b925060208210156129dc576129d77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261284b565b831692505b5050919050565b5f82825260208201905092915050565b5f6129fd82611dd8565b612a0781856129e3565b9350612a17818560208601611df2565b612a2081611e1a565b840191505092915050565b5f606083015f830151612a405f860182611ece565b506020830151612a536020860182612477565b5060408301518482036040860152612a6b82826129f3565b9150508091505092915050565b5f6020820190508181035f830152612a908184612a2b565b905092915050565b5f604082019050612aab5f830185612140565b612ab86020830184612168565b9392505050565b5f612ac982611dd8565b612ad38185612566565b9350612ae3818560208601611df2565b80840191505092915050565b5f612afa8284612abf565b915081905092915050565b5f80fd5b5f80fd5b5f81519050612b1b816121ef565b92915050565b5f60608284031215612b3657612b35612b05565b5b612b406060611fba565b90505f612b4f84828501612b0d565b5f830152506020612b6284828501612b0d565b6020830152506040612b7684828501612b0d565b60408301525092915050565b5f60608284031215612b9757612b96611cf4565b5b5f612ba484828501612b21565b91505092915050565b5f82825260208201905092915050565b5f612bc782611dd8565b612bd18185612bad565b9350612be1818560208601611df2565b612bea81611e1a565b840191505092915050565b5f6020820190508181035f830152612c0d8184612bbd565b905092915050565b5f60208284031215612c2a57612c29611cf4565b5b5f82015167ffffffffffffffff811115612c4757612c46611cf8565b5b612c53848285016126ac565b91505092915050565b5f60608284031215612c7157612c70612b05565b5b612c7b6060611fba565b90505f612c8a84828501612781565b5f830152506020612c9d84828501612643565b602083015250604082015167ffffffffffffffff811115612cc157612cc0612b09565b5b612ccd848285016126ac565b60408301525092915050565b5f60208284031215612cee57612ced611cf4565b5b5f82015167ffffffffffffffff811115612d0b57612d0a611cf8565b5b612d1784828501612c5c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115612da257808604811115612d7e57612d7d612d20565b5b6001851615612d8d5780820291505b8081029050612d9b85612d4d565b9450612d62565b94509492505050565b5f82612dba5760019050612e75565b81612dc7575f9050612e75565b8160018114612ddd5760028114612de757612e16565b6001915050612e75565b60ff841115612df957612df8612d20565b5b8360020a915084821115612e1057612e0f612d20565b5b50612e75565b5060208310610133831016604e8410600b8410161715612e4b5782820a905083811115612e4657612e45612d20565b5b612e75565b612e588484846001612d59565b92509050818404811115612e6f57612e6e612d20565b5b81810290505b9392505050565b5f612e8682611da8565b9150612e9183611edd565b9250612ebe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612dab565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612efd82611da8565b9150612f0883611da8565b925082612f1857612f17612ec6565b5b828204905092915050565b5f604082019050612f365f830185612168565b612f436020830184612168565b9392505050565b5f612f5482611edd565b9150612f5f83611edd565b9250828203905067ffffffffffffffff811115612f7f57612f7e612d20565b5b92915050565b5f612f8f82611da8565b9150612f9a83611da8565b9250828202612fa881611da8565b91508282048414831517612fbf57612fbe612d20565b5b5092915050565b5f612fd082611da8565b9150612fdb83611da8565b9250828203905081811115612ff357612ff2612d20565b5b92915050565b5f61300382611da8565b915061300e83611da8565b925082820190508082111561302657613025612d20565b5b9291505056fea264697066735822122071985d961321e1bdce2201740af446e08456eb6ced8aecf3761c5b0de55378c264736f6c634300081600336080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220125f40cadb226d0e92b66f27ef28f3e0431920a037ea8c8d491651825c93a06e64736f6c63430008160033a26469706673582212208f3e73308ca674a0082038ff09690dcdc4b5409f22145a7cb5cc205c04108d6464736f6c63430008160033",
    "sourceMap": "977:10341:77:-:0;;;3166:4:40;3126:44;;;;;;;;;;;;;;;;;;;;1038:4:50;1016:26;;;;;;;;;;;;;;;;;;;;1607:17:77;;;;;;;;;;;;;;;;;;:8;;;:17;;:::i;:::-;1584:40;;;;;;;;;;;;;;;;;;;;1653:17;;;;;;;;;;;;;;;;;;:8;;;:17;;:::i;:::-;1630:40;;;;;;;;;;;;;;;;;;;;977:10341;;;;;;;;;;;;20454:125:41;20518:12;20552:20;20567:4;20552:14;;;:20;;:::i;:::-;20542:30;;;;;20454:125;;;:::o;20173:242::-;20243:12;20257:18;20335:4;20318:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;20308:33;;;;;;20300:42;;20287:55;;318:28;310:37;;20359:7;;;20367:10;20359:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20352:26;;318:28;310:37;;20388:8;;;20397:4;20403;20388:20;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20173:242;;;:::o;7:99:84:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:148::-;214:11;251:3;236:18;;112:148;;;;:::o;266:246::-;347:1;357:113;371:6;368:1;365:13;357:113;;;456:1;451:3;447:11;441:18;437:1;432:3;428:11;421:39;393:2;390:1;386:10;381:15;;357:113;;;504:1;495:6;490:3;486:16;479:27;328:184;266:246;;;:::o;518:390::-;624:3;652:39;685:5;652:39;:::i;:::-;707:89;789:6;784:3;707:89;:::i;:::-;700:96;;805:65;863:6;858:3;851:4;844:5;840:16;805:65;:::i;:::-;895:6;890:3;886:16;879:23;;628:280;518:390;;;;:::o;914:275::-;1046:3;1068:95;1159:3;1150:6;1068:95;:::i;:::-;1061:102;;1180:3;1173:10;;914:275;;;;:::o;1195:77::-;1232:7;1261:5;1250:16;;1195:77;;;:::o;1278:118::-;1365:24;1383:5;1365:24;:::i;:::-;1360:3;1353:37;1278:118;;:::o;1402:222::-;1495:4;1533:2;1522:9;1518:18;1510:26;;1546:71;1614:1;1603:9;1599:17;1590:6;1546:71;:::i;:::-;1402:222;;;;:::o;1711:117::-;1820:1;1817;1810:12;1957:126;1994:7;2034:42;2027:5;2023:54;2012:65;;1957:126;;;:::o;2089:96::-;2126:7;2155:24;2173:5;2155:24;:::i;:::-;2144:35;;2089:96;;;:::o;2191:122::-;2264:24;2282:5;2264:24;:::i;:::-;2257:5;2254:35;2244:63;;2303:1;2300;2293:12;2244:63;2191:122;:::o;2319:143::-;2376:5;2407:6;2401:13;2392:22;;2423:33;2450:5;2423:33;:::i;:::-;2319:143;;;;:::o;2468:351::-;2538:6;2587:2;2575:9;2566:7;2562:23;2558:32;2555:119;;;2593:79;;:::i;:::-;2555:119;2713:1;2738:64;2794:7;2785:6;2774:9;2770:22;2738:64;:::i;:::-;2728:74;;2684:128;2468:351;;;;:::o;2825:118::-;2912:24;2930:5;2912:24;:::i;:::-;2907:3;2900:37;2825:118;;:::o;2949:169::-;3033:11;3067:6;3062:3;3055:19;3107:4;3102:3;3098:14;3083:29;;2949:169;;;;:::o;3124:102::-;3165:6;3216:2;3212:7;3207:2;3200:5;3196:14;3192:28;3182:38;;3124:102;;;:::o;3232:377::-;3320:3;3348:39;3381:5;3348:39;:::i;:::-;3403:71;3467:6;3462:3;3403:71;:::i;:::-;3396:78;;3483:65;3541:6;3536:3;3529:4;3522:5;3518:16;3483:65;:::i;:::-;3573:29;3595:6;3573:29;:::i;:::-;3568:3;3564:39;3557:46;;3324:285;3232:377;;;;:::o;3615:423::-;3756:4;3794:2;3783:9;3779:18;3771:26;;3807:71;3875:1;3864:9;3860:17;3851:6;3807:71;:::i;:::-;3925:9;3919:4;3915:20;3910:2;3899:9;3895:18;3888:48;3953:78;4026:4;4017:6;3953:78;:::i;:::-;3945:86;;3615:423;;;;;:::o;977:10341:77:-;;;;;;;",
    "linkReferences": {
      "contracts/library/HyperLiquidComposerCodec.sol": {
        "HyperLiquidComposerCodec": [{ "start": 66757, "length": 20 }]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608060405234801562000010575f80fd5b50600436106200022a575f3560e01c80639127ace21162000133578063bb641b3e11620000bb578063dd8500751162000085578063dd85007514620005b8578063deb22e9a14620005da578063e20c9f7114620005fc578063e970bd69146200061e578063fa7626d4146200062a576200022a565b8063bb641b3e146200052e578063c33d080d1462000550578063c9279a741462000574578063cb1a295f1462000596576200022a565b8063b0464fdc11620000fd578063b0464fdc14620004a6578063b5508aa914620004c8578063ba414fa614620004ea578063ba872679146200050c576200022a565b80639127ace2146200041e578063916a17c614620004405780639b5215f61462000462578063a09e74301462000484576200022a565b80633f7286f411620001b757806366d9a9a0116200018157806366d9a9a014620003aa57806376e86e7214620003cc57806376e9227314620003f057806385226c8114620003fc576200022a565b80633f7286f4146200031057806347d7694f14620003325780635c98ee4d146200036857806366165d9f1462000388576200022a565b80631ed7831c11620001f95780631ed7831c14620002885780632ade388014620002aa578063318f405a14620002cc5780633e5e3c2314620002ee576200022a565b80630a9254e4146200022e5780630df3918e146200023a57806312659341146200025a578063176e619e1462000266575b5f80fd5b620002386200064c565b005b620002586004803603810190620002529190620063a1565b62000e6e565b005b6200026462001755565b005b6200027062001f38565b6040516200027f9190620063f1565b60405180910390f35b6200029262001f4d565b604051620002a1919062006505565b60405180910390f35b620002b462001fda565b604051620002c391906200678b565b60405180910390f35b620002d66200216a565b604051620002e59190620067be565b60405180910390f35b620002f862002182565b60405162000307919062006505565b60405180910390f35b6200031a6200220f565b60405162000329919062006505565b60405180910390f35b6200035060048036038101906200034a919062006843565b6200229c565b6040516200035f9190620068f0565b60405180910390f35b620003866004803603810190620003809190620063a1565b620022b2565b005b6200039262002bde565b604051620003a1919062006923565b60405180910390f35b620003b462002be3565b604051620003c3919062006b3e565b60405180910390f35b620003d662002d71565b604051620003e79392919062006b60565b60405180910390f35b620003fa62002dcd565b005b62000406620032bf565b60405162000415919062006c2a565b60405180910390f35b620004286200339d565b60405162000437919062006923565b60405180910390f35b6200044a620033b4565b60405162000459919062006d53565b60405180910390f35b6200046c620034ff565b6040516200047b919062006ddc565b60405180910390f35b6200048e62003525565b6040516200049d919062006e2e565b60405180910390f35b620004b06200354a565b604051620004bf919062006d53565b60405180910390f35b620004d262003695565b604051620004e1919062006c2a565b60405180910390f35b620004f462003773565b60405162000503919062006e65565b60405180910390f35b620005166200388e565b604051620005259190620067be565b60405180910390f35b6200053862003894565b60405162000547919062006923565b60405180910390f35b6200055a620038a0565b6040516200056b9392919062006b60565b60405180910390f35b6200057e620038fc565b6040516200058d9190620063f1565b60405180910390f35b620005a062003902565b604051620005af9190620067be565b60405180910390f35b620005c262003927565b604051620005d19190620067be565b60405180910390f35b620005e46200393f565b604051620005f39190620067be565b60405180910390f35b6200060662003964565b60405162000615919062006505565b60405180910390f35b62000628620039f1565b005b6200063462004050565b60405162000643919062006e65565b60405180910390f35b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663986800346040518163ffffffff1660e01b8152600401620006a79062006f04565b6020604051808303815f875af1158015620006c4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620006ea919062006f5c565b506040518060600160405280620007036104cf62004062565b73ffffffffffffffffffffffffffffffffffffffff1681526020016104cf67ffffffffffffffff168152602001600c67ffffffffffffffff1681525060205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050604051806060016040528073222222222222222222222222222222222222222273ffffffffffffffffffffffffffffffffffffffff16815260200161045167ffffffffffffffff168152602001600867ffffffffffffffff1681525060225f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663b4d6c78261080160405162000934906200626e565b604051809103905ff0801580156200094e573d5f803e3d5ffd5b5073ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181525f908060200190933c6040518363ffffffff1660e01b81526004016200099f92919062006f8c565b5f604051808303815f87803b158015620009b7575f80fd5b505af1158015620009ca573d5f803e3d5ffd5b5050505061080173ffffffffffffffffffffffffffffffffffffffff1663312f619f60205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660205f0160149054906101000a900467ffffffffffffffff1667ffffffffffffffff6040518463ffffffff1660e01b815260040162000a529392919062006b60565b5f604051808303815f87803b15801562000a6a575f80fd5b505af115801562000a7d573d5f803e3d5ffd5b5050505061080173ffffffffffffffffffffffffffffffffffffffff1663312f619f60225f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660225f0160149054906101000a900467ffffffffffffffff1667ffffffffffffffff6040518463ffffffff1660e01b815260040162000b059392919062006b60565b5f604051808303815f87803b15801562000b1d575f80fd5b505af115801562000b30573d5f803e3d5ffd5b5050505073f9e1815f151024bde4b7c10bac10e8ba9f6b53e13360405162000b58906200627c565b62000b659291906200700c565b604051809103905ff08015801562000b7f573d5f803e3d5ffd5b50602460046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073f9e1815f151024bde4b7c10bac10e8ba9f6b53e1602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660205f0160149054906101000a900467ffffffffffffffff1660206001015f9054906101000a900467ffffffffffffffff1660405162000c38906200628a565b62000c47949392919062007061565b604051809103905ff08015801562000c61573d5f803e3d5ffd5b5060255f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635e280f116040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000d0d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000d339190620070ee565b73ffffffffffffffffffffffffffffffffffffffff1663416ecebf6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000d7c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000da291906200714d565b60245f6101000a81548163ffffffff021916908363ffffffff1602179055507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663c88a5e6d73f9e1815f151024bde4b7c10bac10e8ba9f6b53e168056bc75e2d631000006040518363ffffffff1660e01b815260040162000e3d929190620071be565b5f604051808303815f87803b15801562000e55575f80fd5b505af115801562000e68573d5f803e3d5ffd5b50505050565b62000eac8167ffffffffffffffff165f678ac7230489e8000067ffffffffffffffff62000e9c919062007216565b67ffffffffffffffff16620040a2565b90505f81670de0b6b3a764000062000ec5919062007258565b67ffffffffffffffff16905062000f21602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683620040fa565b5f60405162000f309062006298565b604051809103905ff08015801562000f4a573d5f803e3d5ffd5b5090505f60206001015f9054906101000a900467ffffffffffffffff16600a62000f759190620073ea565b905061080173ffffffffffffffffffffffffffffffffffffffff1663312f619f60205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660205f0160149054906101000a900467ffffffffffffffff1684670de0b6b3a764000067ffffffffffffffff1662000ff2919062007467565b6040518463ffffffff1660e01b8152600401620010129392919062006b60565b5f604051808303815f87803b1580156200102a575f80fd5b505af11580156200103d573d5f803e3d5ffd5b505050505f82604051602001620010559190620074eb565b60405160208183030381529060405290505f620010a45f619ce1876200107b886200410d565b866040516020016200108f92919062007574565b6040516020818303038152906040526200412e565b90505f8386620010b591906200759f565b86620010c29190620075d6565b9050670de0b6b3a764000067ffffffffffffffff16811115620011ea577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016200115d9190620067be565b5f604051808303815f87803b15801562001175575f80fd5b505af115801562001188573d5f803e3d5ffd5b505050507ff17459c2e89c2b011fa739accb3b853858d0a689d31382b9aa4f56a1ca00f9d38487620011bb919062007467565b85670de0b6b3a7640000620011d1919062007467565b604051620011e192919062007610565b60405180910390a15b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401620012699190620067be565b5f604051808303815f87803b15801562001281575f80fd5b505af115801562001294573d5f803e3d5ffd5b5050505060205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef670de0b6b3a764000060405162001343919062007673565b60405180910390a35f8767ffffffffffffffff161115620013e7578473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef89604051620013de919062007673565b60405180910390a35b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166306447d5673f9e1815f151024bde4b7c10bac10e8ba9f6b53e16040518263ffffffff1660e01b8152600401620014589190620067be565b5f604051808303815f87803b15801562001470575f80fd5b505af115801562001483573d5f803e3d5ffd5b505050505f3273ffffffffffffffffffffffffffffffffffffffff1631905060255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0a10260600164174876e800620014f3919062007258565b67ffffffffffffffff16602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f801b87336040518663ffffffff1660e01b8152600401620015469493929190620076c6565b5f604051808303818588803b1580156200155e575f80fd5b505af115801562001571573d5f803e3d5ffd5b5050505050620015b13273ffffffffffffffffffffffffffffffffffffffff1631600167ffffffffffffffff1683620015ab91906200772d565b62004162565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562001619575f80fd5b505af11580156200162c573d5f803e3d5ffd5b50505050620016e4602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b8152600401620016919190620067be565b602060405180830381865afa158015620016ad573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620016d3919062006f5c565b8967ffffffffffffffff1662004162565b6200172860255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16315f62004162565b6200174b8673ffffffffffffffffffffffffffffffffffffffff16315f62004162565b5050505050505050565b620017b7602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a764000067ffffffffffffffff16620040fa565b5f60275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051602001620017ec9190620077bf565b60405160208183030381529060405290505f6200186e5f619ce1670de0b6b3a764000067ffffffffffffffff166200184560265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200410d565b866040516020016200185992919062007574565b6040516020818303038152906040526200412e565b90505f3073ffffffffffffffffffffffffffffffffffffffff166347d7694f836040518263ffffffff1660e01b8152600401620018ac9190620068f0565b5f60405180830381865afa158015620018c7573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190620018f191906200791e565b90505f6309b3473160e01b828351604051602401620019129291906200797e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401620019f09190620067be565b5f604051808303815f87803b15801562001a08575f80fd5b505af115801562001a1b573d5f803e3d5ffd5b5050505060265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef670de0b6b3a764000060405162001ac8919062007673565b60405180910390a37f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162001b4e9190620067be565b5f604051808303815f87803b15801562001b66575f80fd5b505af115801562001b79573d5f803e3d5ffd5b505050507f612baef0082f9abcf6dc7b491d75346418381b75756830d7029939026d1b46b98160405162001bae9190620068f0565b60405180910390a17f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166306447d5673f9e1815f151024bde4b7c10bac10e8ba9f6b53e16040518263ffffffff1660e01b815260040162001c279190620067be565b5f604051808303815f87803b15801562001c3f575f80fd5b505af115801562001c52573d5f803e3d5ffd5b5050505060255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0a10260602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f801b86336040518563ffffffff1660e01b815260040162001cdc9493929190620076c6565b5f604051808303815f87803b15801562001cf4575f80fd5b505af115801562001d07573d5f803e3d5ffd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562001d73575f80fd5b505af115801562001d86573d5f803e3d5ffd5b5050505062001e55602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162001e0c9190620067be565b602060405180830381865afa15801562001e28573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001e4e919062006f5c565b5f62004162565b62001f32602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162001ed79190620067be565b602060405180830381865afa15801562001ef3573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001f19919062006f5c565b670de0b6b3a764000067ffffffffffffffff1662004162565b50505050565b60245f9054906101000a900463ffffffff1681565b6060601680548060200260200160405190810160405280929190818152602001828054801562001fd057602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162001f86575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020015f905b8282101562002161578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020015f905b8282101562002149578382905f5260205f20018054620020b790620079dd565b80601f0160208091040260200160405190810160405280929190818152602001828054620020e590620079dd565b8015620021345780601f106200210a5761010080835404028352916020019162002134565b820191905f5260205f20905b8154815290600101906020018083116200211657829003601f168201915b50505050508152602001906001019062002097565b50505050815250508152602001906001019062001ffd565b50505050905090565b73f9e1815f151024bde4b7c10bac10e8ba9f6b53e181565b606060188054806020026020016040519081016040528092919081815260200182805480156200220557602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620021bb575b5050505050905090565b606060178054806020026020016040519081016040528092919081815260200182805480156200229257602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162002248575b5050505050905090565b6060620022aa8383620041f3565b905092915050565b620022f08167ffffffffffffffff165f678ac7230489e8000067ffffffffffffffff620022e0919062007216565b67ffffffffffffffff16620040a2565b90505f81670de0b6b3a764000062002309919062007258565b67ffffffffffffffff16905062002365602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683620040fa565b5f60206001015f9054906101000a900467ffffffffffffffff16600a6200238d9190620073ea565b905061080173ffffffffffffffffffffffffffffffffffffffff1663312f619f60205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660205f0160149054906101000a900467ffffffffffffffff1684670de0b6b3a764000067ffffffffffffffff166200240a919062007467565b6040518463ffffffff1660e01b81526004016200242a9392919062006b60565b5f604051808303815f87803b15801562002442575f80fd5b505af115801562002455573d5f803e3d5ffd5b505050505f60275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516020016200248e9190620074eb565b60405160208183030381529060405290505f620024fe5f619ce186620024d560265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200410d565b86604051602001620024e992919062007574565b6040516020818303038152906040526200412e565b90505f83856200250f91906200759f565b856200251c9190620075d6565b9050670de0b6b3a764000067ffffffffffffffff1681111562002644577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401620025b79190620067be565b5f604051808303815f87803b158015620025cf575f80fd5b505af1158015620025e2573d5f803e3d5ffd5b505050507ff17459c2e89c2b011fa739accb3b853858d0a689d31382b9aa4f56a1ca00f9d3848662002615919062007467565b85670de0b6b3a76400006200262b919062007467565b6040516200263b92919062007610565b60405180910390a15b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401620026c39190620067be565b5f604051808303815f87803b158015620026db575f80fd5b505af1158015620026ee573d5f803e3d5ffd5b5050505060205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef670de0b6b3a76400006040516200279d919062007673565b60405180910390a35f8667ffffffffffffffff161115620028625760275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8860405162002859919062007673565b60405180910390a35b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166306447d5673f9e1815f151024bde4b7c10bac10e8ba9f6b53e16040518263ffffffff1660e01b8152600401620028d39190620067be565b5f604051808303815f87803b158015620028eb575f80fd5b505af1158015620028fe573d5f803e3d5ffd5b5050505060255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0a10260602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f801b85336040518563ffffffff1660e01b8152600401620029889493929190620076c6565b5f604051808303815f87803b158015620029a0575f80fd5b505af1158015620029b3573d5f803e3d5ffd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562002a1f575f80fd5b505af115801562002a32573d5f803e3d5ffd5b5050505062002b01602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162002ab89190620067be565b602060405180830381865afa15801562002ad4573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002afa919062006f5c565b5f62004162565b62002bd6602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162002b839190620067be565b602060405180830381865afa15801562002b9f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002bc5919062006f5c565b8767ffffffffffffffff1662004162565b505050505050565b600181565b6060601b805480602002602001604051908101604052809291908181526020015f905b8282101562002d68578382905f5260205f2090600202016040518060400160405290815f8201805462002c3990620079dd565b80601f016020809104026020016040519081016040528092919081815260200182805462002c6790620079dd565b801562002cb65780601f1062002c8c5761010080835404028352916020019162002cb6565b820191905f5260205f20905b81548152906001019060200180831162002c9857829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801562002d4f57602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162002cfb5790505b5050505050815250508152602001906001019062002c06565b50505050905090565b6022805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b62002e2f602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a764000067ffffffffffffffff16620040fa565b5f60405180602001604052805f81525090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663f28dceb362d4895a60e01b60405160240162002e979062007a35565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518263ffffffff1660e01b815260040162002f129190620068f0565b5f604051808303815f87803b15801562002f2a575f80fd5b505af115801562002f3d573d5f803e3d5ffd5b505050505f73f9e1815f151024bde4b7c10bac10e8ba9f6b53e173ffffffffffffffffffffffffffffffffffffffff163190507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166306447d5673f9e1815f151024bde4b7c10bac10e8ba9f6b53e16040518263ffffffff1660e01b815260040162002fe19190620067be565b5f604051808303815f87803b15801562002ff9575f80fd5b505af11580156200300c573d5f803e3d5ffd5b5050505060255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0a10260600164174876e80062003061919062007258565b67ffffffffffffffff16602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f801b86336040518663ffffffff1660e01b8152600401620030b49493929190620076c6565b5f604051808303818588803b158015620030cc575f80fd5b505af1158015620030df573d5f803e3d5ffd5b50505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156200314c575f80fd5b505af11580156200315f573d5f803e3d5ffd5b5050505062003240602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401620031e59190620067be565b602060405180830381865afa15801562003201573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062003227919062006f5c565b670de0b6b3a764000067ffffffffffffffff1662004162565b6200328460255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16315f62004162565b620032bb73f9e1815f151024bde4b7c10bac10e8ba9f6b53e173ffffffffffffffffffffffffffffffffffffffff16318262004162565b5050565b6060601a805480602002602001604051908101604052809291908181526020015f905b8282101562003394578382905f5260205f200180546200330290620079dd565b80601f01602080910402602001604051908101604052809291908181526020018280546200333090620079dd565b80156200337f5780601f1062003355576101008083540402835291602001916200337f565b820191905f5260205f20905b8154815290600101906020018083116200336157829003601f168201915b505050505081526020019060010190620032e2565b50505050905090565b600164174876e800620033b1919062007258565b81565b6060601d805480602002602001604051908101604052809291908181526020015f905b82821015620034f6578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020018280548015620034dd57602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620034895790505b50505050508152505081526020019060010190620033d7565b50505050905090565b602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060601c805480602002602001604051908101604052809291908181526020015f905b828210156200368c578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054806020026020016040519081016040528092919081815260200182805480156200367357602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116200361f5790505b505050505081525050815260200190600101906200356d565b50505050905090565b60606019805480602002602001604051908101604052809291908181526020015f905b828210156200376a578382905f5260205f20018054620036d890620079dd565b80601f01602080910402602001604051908101604052809291908181526020018280546200370690620079dd565b8015620037555780601f106200372b5761010080835404028352916020019162003755565b820191905f5260205f20905b8154815290600101906020018083116200373757829003601f168201915b505050505081526020019060010190620036b8565b50505050905090565b5f60085f9054906101000a900460ff1615620037a05760085f9054906101000a900460ff1690506200388b565b5f801b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d707f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c7f6661696c656400000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016200384492919062007a55565b602060405180830381865afa15801562003860573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062003886919062007aaf565b141590505b90565b61080181565b670de0b6b3a764000081565b6020805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b619ce181565b60275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73333333333333333333333333333333333333333381565b60265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606015805480602002602001604051908101604052809291908181526020018280548015620039e757602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200399d575b5050505050905090565b62003a53602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a764000067ffffffffffffffff16620040fa565b5f60275f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405160200162003a889190620077bf565b60405160208183030381529060405290505f62003b285f619ce1670de0b6b3a764000067ffffffffffffffff1660265f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405160200162003ae99190620074eb565b604051602081830303815290604052805190602001208660405160200162003b1392919062007574565b6040516020818303038152906040526200412e565b90505f3073ffffffffffffffffffffffffffffffffffffffff166347d7694f836040518263ffffffff1660e01b815260040162003b669190620068f0565b5f60405180830381865afa15801562003b81573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019062003bab91906200791e565b90505f6309b3473160e01b82835160405160240162003bcc9291906200797e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166386b9620d60255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162003ca99190620067be565b5f604051808303815f87803b15801562003cc1575f80fd5b505af115801562003cd4573d5f803e3d5ffd5b505050507f612baef0082f9abcf6dc7b491d75346418381b75756830d7029939026d1b46b98160405162003d099190620068f0565b60405180910390a15f3273ffffffffffffffffffffffffffffffffffffffff163190507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166306447d5673f9e1815f151024bde4b7c10bac10e8ba9f6b53e16040518263ffffffff1660e01b815260040162003d9d9190620067be565b5f604051808303815f87803b15801562003db5575f80fd5b505af115801562003dc8573d5f803e3d5ffd5b5050505060255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0a10260600164174876e80062003e1d919062007258565b67ffffffffffffffff16602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f801b88336040518663ffffffff1660e01b815260040162003e709493929190620076c6565b5f604051808303818588803b15801562003e88575f80fd5b505af115801562003e9b573d5f803e3d5ffd5b50505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562003f08575f80fd5b505af115801562003f1b573d5f803e3d5ffd5b5050505062003f6c3273ffffffffffffffffffffffffffffffffffffffff1631600164174876e80062003f4f919062007258565b67ffffffffffffffff168362003f6691906200772d565b62004162565b62004049602460049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160255f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162003fee9190620067be565b602060405180830381865afa1580156200400a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062004030919062006f5c565b670de0b6b3a764000067ffffffffffffffff1662004162565b5050505050565b601f5f9054906101000a900460ff1681565b5f8173200000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166200409b91906200772d565b9050919050565b5f620040b084848462004257565b9050620040f36040518060400160405280600c81526020017f426f756e6420726573756c740000000000000000000000000000000000000000815250826200448f565b9392505050565b620041088383835f6200452f565b505050565b5f8173ffffffffffffffffffffffffffffffffffffffff165f1b9050919050565b60608484848460405160200162004149949392919062007b77565b6040516020818303038152906040529050949350505050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166398296c5483836040518363ffffffff1660e01b8152600401620041c192919062007bc8565b5f6040518083038186803b158015620041d8575f80fd5b505afa158015620041eb573d5f803e3d5ffd5b505050505050565b60608282604c60ff169080926200420d9392919062007bfb565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050905092915050565b5f818311156200429e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620042959062007caf565b60405180910390fd5b828410158015620042af5750818411155b15620042be5783905062004488565b5f60018484620042cf9190620075d6565b620042db91906200772d565b905060038511158015620042ee57508481115b156200430b5784846200430291906200772d565b91505062004488565b60037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6200433a9190620075d6565b8510158015620043765750847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff620043739190620075d6565b81115b15620043c057847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff620043aa9190620075d6565b83620043b79190620075d6565b91505062004488565b8285111562004425575f8386620043d89190620075d6565b90505f8282620043e991906200759f565b90505f8103620043ff5784935050505062004488565b600181876200440f91906200772d565b6200441b9190620075d6565b9350505062004486565b8385101562004485575f85856200443d9190620075d6565b90505f82826200444e91906200759f565b90505f8103620044645785935050505062004488565b60018186620044749190620075d6565b6200448091906200772d565b935050505b5b505b9392505050565b6200452b8282604051602401620044a892919062007d0f565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620047d4565b5050565b5f8473ffffffffffffffffffffffffffffffffffffffff166370a08231856040516024016200455f9190620067be565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620045af919062007d41565b5f60405180830381855afa9150503d805f8114620045e9576040519150601f19603f3d011682016040523d82523d5f602084013e620045ee565b606091505b509150505f8180602001905181019062004609919062006f5c565b905062004664846200465587620046466370a0823160e01b620046378c600d620047f290919063ffffffff16565b6200480790919063ffffffff16565b6200481c90919063ffffffff16565b6200483190919063ffffffff16565b8215620047cc575f8673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040516024016040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620046de919062007d41565b5f60405180830381855afa9150503d805f811462004718576040519150601f19603f3d011682016040523d82523d5f602084013e6200471d565b606091505b509150505f8180602001905181019062004738919062006f5c565b90508286101562004766578583620047519190620075d6565b816200475e9190620075d6565b905062004784565b8286620047749190620075d6565b816200478191906200772d565b90505b620047c981620047ba6318160ddd60e01b620047ab8c600d620047f290919063ffffffff16565b6200480790919063ffffffff16565b6200483190919063ffffffff16565b50505b505050505050565b620047ef81620047e76200484362004869565b63ffffffff16565b50565b5f620047ff838362004875565b905092915050565b5f620048148383620048c1565b905092915050565b5f620048298383620048ea565b905092915050565b6200483f82825f1b62004934565b5050565b5f815190505f6a636f6e736f6c652e6c6f679050602083015f808483855afa5050505050565b620062a5819050919050565b5f81836004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082905092915050565b5f81836002015f6101000a81548163ffffffff021916908360e01c021790555082905092915050565b5f826001018273ffffffffffffffffffffffffffffffffffffffff165f1b908060018154018082558091505060019003905f5260205f20015f909190919091505582905092915050565b5f826004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f836002015f9054906101000a900460e01b90505f846003015490505f620049838662004efe565b9050855f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f828460405160200162004a2692919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f206003015f9054906101000a900460ff1662004a6c5762004a6a865f6200501a565b505b5f865f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f838560405160200162004b0e92919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f2090505f8160020154826001015462004b4a91906200772d565b111562004c96575f8160020154826001015462004b6891906200772d565b61010062004b779190620075d6565b600262004b85919062007d84565b905080875f1c107f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff16636900a3ae836040518263ffffffff1660e01b815260040162004be9919062007dd4565b5f60405180830381865afa15801562004c04573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019062004c2e919062007ea0565b60405160200162004c40919062007fbf565b6040516020818303038152906040529062004c93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162004c8a919062007fe4565b60405180910390fd5b50505b5f7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d7087845f01545f1b6040518363ffffffff1660e01b815260040162004cfb92919062007a55565b602060405180830381865afa15801562004d17573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062004d3d919062007aaf565b90505f62004d5882895f1c8560010154866002015462005032565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb88855f01545f1b846040518463ffffffff1660e01b815260040162004dc09392919062008006565b5f604051808303815f87803b15801562004dd8575f80fd5b505af115801562004deb573d5f803e3d5ffd5b505050505f8062004dfc8b62005055565b9150915081158062004e0e5750898114155b1562004ee6577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb8a875f01545f1b876040518463ffffffff1660e01b815260040162004e7a9392919062008006565b5f604051808303815f87803b15801562004e92575f80fd5b505af115801562004ea5573d5f803e3d5ffd5b505050506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162004edd90620080b5565b60405180910390fd5b62004ef18b62005158565b5050505050505050505050565b60605f82600701805462004f1290620079dd565b90500362004f7f5762004f778260010180548060200260200160405190810160405280929190818152602001828054801562004f6c57602002820191905f5260205f20905b81548152602001906001019080831162004f57575b505050505062005166565b905062005015565b81600701805462004f9090620079dd565b80601f016020809104026020016040519081016040528092919081815260200182805462004fbe90620079dd565b80156200500d5780601f1062004fe3576101008083540402835291602001916200500d565b820191905f5260205f20905b81548152906001019060200180831162004fef57829003601f168201915b505050505090505b919050565b5f6200502783836200521c565b5f0154905092915050565b5f8184901b62005043848462005b88565b19865f1c16175f1b9050949350505050565b5f805f836002015f9054906101000a900460e01b620050748562004efe565b60405160200162005087929190620080f9565b60405160208183030381529060405290505f80856004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683604051620050e4919062007d41565b5f60405180830381855afa9150503d805f81146200511e576040519150601f19603f3d011682016040523d82523d5f602084013e62005123565b606091505b50915091505f62005147828860030154602062005141919062008124565b62005b9f565b905082819550955050505050915091565b620051638162005c49565b50565b60605f6020835162005179919062008124565b67ffffffffffffffff811115620051955762005194620077ec565b5b6040519080825280601f01601f191660200182016040528015620051c85781602001600182028036833780820191505090505b5090505f5b835181101562005212575f848281518110620051ee57620051ed6200816e565b5b602002602001015190508082602002602001840152508080600101915050620051cd565b5080915050919050565b5f80836004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f846002015f9054906101000a900460e01b90505f856003015490505f6200526c8762004efe565b9050865f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f82846040516020016200530f92919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f206003015f9054906101000a900460ff16156200542b5785156200535b576200535a8762005c49565b5b865f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f8284604051602001620053fc92919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f2094505050505062005b82565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663266cf1096040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562005493575f80fd5b505af1158015620054a6573d5f803e3d5ffd5b505050505f620054b68862005055565b9150505f7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166365bc9481876040518263ffffffff1660e01b8152600401620055179190620067be565b5f604051808303815f875af115801562005533573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906200555d91906200826e565b5090505f815103620055a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200559d9062008365565b60405180910390fd5b5f815190505b5f81620055b99062008385565b915081106200598b575f7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d70898585815181106200561857620056176200816e565b5b60200260200101516040518363ffffffff1660e01b81526004016200563f92919062007a55565b602060405180830381865afa1580156200565b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062005681919062007aaf565b90505f801b8103620056e8577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588848481518110620056c557620056c46200816e565b5b60200260200101515f1c604051620056df929190620083b1565b60405180910390a15b620057118b8484815181106200570357620057026200816e565b5b602002602001015162005cc4565b6200571d575062005985565b5f805f80915091508c6006015f9054906101000a900460ff161562005784575f620057668e8787815181106200575857620057576200816e565b5b602002602001015162005f67565b8094508195508293505050508062005782575050505062005985565b505b5f8162005792848462005b88565b855f1c16901c905080875f1c14620057ae575050505062005985565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620057e692919062007d59565b604051602081830303815290604052805190602001208989815181106200581257620058116200816e565b5b60200260200101515f1c6040516200582e9493929190620083ed565b60405180910390a160405180608001604052808787815181106200585757620058566200816e565b5b60200260200101515f1c8152602001848152602001838152602001600115158152508e5f015f8d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8c7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f8a8c6040516020016200591a92919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f205f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548160ff021916908315150217905550905050505050506200598b565b620055ac565b50885f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f848660405160200162005a2d92919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f206003015f9054906101000a900460ff1662005aa2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162005a9990620084ac565b60405180910390fd5b871562005ab55762005ab48962005c49565b5b885f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f848660405160200162005b5692919062007d59565b6040516020818303038152906040528051906020012081526020019081526020015f2096505050505050505b92915050565b5f600180848401610100031b03821b905092915050565b5f805f602085511162005bb457845162005bb7565b60205b90505f5b8181101562005c3d5760088162005bd3919062008124565b60ff60f81b87838862005be791906200772d565b8151811062005bfb5762005bfa6200816e565b5b602001015160f81c60f81b167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c83179250808060010191505062005bbb565b50819250505092915050565b806004015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055806002015f6101000a81549063ffffffff0219169055806001015f62005c969190620062b1565b806003015f9055806006015f6101000a81549060ff0219169055806007015f62005cc19190620062d1565b50565b5f807f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d70856004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b815260040162005d4892919062007a55565b602060405180830381865afa15801562005d64573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062005d8a919062007aaf565b90505f8062005d998662005055565b915091505f805f1b821462005db1575f801b62005dd5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5f1b5b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb886004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688846040518463ffffffff1660e01b815260040162005e5b9392919062008006565b5f604051808303815f87803b15801562005e73575f80fd5b505af115801562005e86573d5f803e3d5ffd5b505050505f62005e968862005055565b9150507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb896004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1689886040518463ffffffff1660e01b815260040162005f1d9392919062008006565b5f604051808303815f87803b15801562005f35575f80fd5b505af115801562005f48573d5f803e3d5ffd5b5050505083801562005f5a5750808314155b9550505050505092915050565b5f805f807f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d70876004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876040518363ffffffff1660e01b815260040162005fed92919062007a55565b602060405180830381865afa15801562006009573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200602f919062007aaf565b90505f8062006041888860016200612a565b915091505f80620060548a8a5f6200612a565b915091507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb8b6004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b886040518463ffffffff1660e01b8152600401620060dc9392919062008006565b5f604051808303815f87803b158015620060f4575f80fd5b505af115801562006107573d5f803e3d5ffd5b50505050838015620061165750815b838297509750975050505050509250925092565b5f805f5b6101008110156200625e575f846200614b57816001901b6200615f565b8160ff6200615a9190620075d6565b6001901b5b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166370ca10bb886004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688845f1b6040518463ffffffff1660e01b8152600401620061e79392919062008006565b5f604051808303815f87803b158015620061ff575f80fd5b505af115801562006212573d5f803e3d5ffd5b505050505f80620062238962005055565b915091508180156200623657505f815f1c115b156200624d57600184955095505050505062006266565b50505080806001019150506200612e565b505f80915091505b935093915050565b6104cd80620084fa83390190565b615cbe80620089c783390190565b613605806200e68583390190565b60588062011c8a83390190565b620062af620084cc565b565b5080545f8255905f5260205f2090810190620062ce919062006314565b50565b508054620062df90620079dd565b5f825580601f10620062f2575062006311565b601f0160209004905f5260205f209081019062006310919062006331565b5b50565b5b808211156200632d575f815f90555060010162006315565b5090565b5b808211156200634a575f815f90555060010162006332565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f67ffffffffffffffff82169050919050565b6200637d816200635f565b811462006388575f80fd5b50565b5f813590506200639b8162006372565b92915050565b5f60208284031215620063b957620063b862006357565b5b5f620063c8848285016200638b565b91505092915050565b5f63ffffffff82169050919050565b620063eb81620063d1565b82525050565b5f602082019050620064065f830184620063e0565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620064608262006435565b9050919050565b620064728162006454565b82525050565b5f62006485838362006467565b60208301905092915050565b5f602082019050919050565b5f620064a9826200640c565b620064b5818562006416565b9350620064c28362006426565b805f5b83811015620064f8578151620064dc888262006478565b9750620064e98362006491565b925050600181019050620064c5565b5085935050505092915050565b5f6020820190508181035f8301526200651f81846200649d565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015620065b257808201518184015260208101905062006595565b5f8484015250505050565b5f601f19601f8301169050919050565b5f620065d98262006579565b620065e5818562006583565b9350620065f781856020860162006593565b6200660281620065bd565b840191505092915050565b5f6200661a8383620065cd565b905092915050565b5f602082019050919050565b5f6200663a8262006550565b6200664681856200655a565b9350836020820285016200665a856200656a565b805f5b858110156200669b57848403895281516200667985826200660d565b9450620066868362006622565b925060208a019950506001810190506200665d565b50829750879550505050505092915050565b5f604083015f830151620066c45f86018262006467565b5060208301518482036020860152620066de82826200662e565b9150508091505092915050565b5f620066f88383620066ad565b905092915050565b5f602082019050919050565b5f620067188262006527565b62006724818562006531565b935083602082028501620067388562006541565b805f5b85811015620067795784840389528151620067578582620066eb565b9450620067648362006700565b925060208a019950506001810190506200673b565b50829750879550505050505092915050565b5f6020820190508181035f830152620067a581846200670c565b905092915050565b620067b88162006454565b82525050565b5f602082019050620067d35f830184620067ad565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112620067fd57620067fc620067d9565b5b8235905067ffffffffffffffff8111156200681d576200681c620067dd565b5b6020830191508360018202830111156200683c576200683b620067e1565b5b9250929050565b5f80602083850312156200685c576200685b62006357565b5b5f83013567ffffffffffffffff8111156200687c576200687b6200635b565b5b6200688a85828601620067e5565b92509250509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f620068bc8262006896565b620068c88185620068a0565b9350620068da81856020860162006593565b620068e581620065bd565b840191505092915050565b5f6020820190508181035f8301526200690a8184620068b0565b905092915050565b6200691d816200635f565b82525050565b5f602082019050620069385f83018462006912565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b620069c68162006990565b82525050565b5f620069d98383620069bb565b60208301905092915050565b5f602082019050919050565b5f620069fd8262006967565b62006a09818562006971565b935062006a168362006981565b805f5b8381101562006a4c57815162006a308882620069cc565b975062006a3d83620069e5565b92505060018101905062006a19565b5085935050505092915050565b5f604083015f8301518482035f86015262006a758282620065cd565b9150506020830151848203602086015262006a918282620069f1565b9150508091505092915050565b5f62006aab838362006a59565b905092915050565b5f602082019050919050565b5f62006acb826200693e565b62006ad7818562006948565b93508360208202850162006aeb8562006958565b805f5b8581101562006b2c578484038952815162006b0a858262006a9e565b945062006b178362006ab3565b925060208a0199505060018101905062006aee565b50829750879550505050505092915050565b5f6020820190508181035f83015262006b58818462006abf565b905092915050565b5f60608201905062006b755f830186620067ad565b62006b84602083018562006912565b62006b93604083018462006912565b949350505050565b5f82825260208201905092915050565b5f62006bb78262006550565b62006bc3818562006b9b565b93508360208202850162006bd7856200656a565b805f5b8581101562006c18578484038952815162006bf685826200660d565b945062006c038362006622565b925060208a0199505060018101905062006bda565b50829750879550505050505092915050565b5f6020820190508181035f83015262006c44818462006bab565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f604083015f83015162006c8c5f86018262006467565b506020830151848203602086015262006ca68282620069f1565b9150508091505092915050565b5f62006cc0838362006c75565b905092915050565b5f602082019050919050565b5f62006ce08262006c4c565b62006cec818562006c56565b93508360208202850162006d008562006c66565b805f5b8581101562006d41578484038952815162006d1f858262006cb3565b945062006d2c8362006cc8565b925060208a0199505060018101905062006d03565b50829750879550505050505092915050565b5f6020820190508181035f83015262006d6d818462006cd4565b905092915050565b5f819050919050565b5f62006d9e62006d9862006d928462006435565b62006d75565b62006435565b9050919050565b5f62006db18262006d7e565b9050919050565b5f62006dc48262006da5565b9050919050565b62006dd68162006db8565b82525050565b5f60208201905062006df15f83018462006dcb565b92915050565b5f62006e038262006d7e565b9050919050565b5f62006e168262006df7565b9050919050565b62006e288162006e0a565b82525050565b5f60208201905062006e435f83018462006e1d565b92915050565b5f8115159050919050565b62006e5f8162006e49565b82525050565b5f60208201905062006e7a5f83018462006e54565b92915050565b5f82825260208201905092915050565b7f68747470733a2f2f7270632e68797065726c69717569642d746573746e65742e5f8201527f78797a2f65766d00000000000000000000000000000000000000000000000000602082015250565b5f62006eec60278362006e80565b915062006ef98262006e90565b604082019050919050565b5f6020820190508181035f83015262006f1d8162006ede565b9050919050565b5f819050919050565b62006f388162006f24565b811462006f43575f80fd5b50565b5f8151905062006f568162006f2d565b92915050565b5f6020828403121562006f745762006f7362006357565b5b5f62006f838482850162006f46565b91505092915050565b5f60408201905062006fa15f830185620067ad565b818103602083015262006fb58184620068b0565b90509392505050565b7f74657374000000000000000000000000000000000000000000000000000000005f82015250565b5f62006ff460048362006e80565b9150620070018262006fbe565b602082019050919050565b5f6080820190508181035f830152620070258162006fe6565b905081810360208301526200703a8162006fe6565b90506200704b6040830185620067ad565b6200705a6060830184620067ad565b9392505050565b5f608082019050620070765f830187620067ad565b620070856020830186620067ad565b62007094604083018562006912565b620070a3606083018462006912565b95945050505050565b5f620070b88262006454565b9050919050565b620070ca81620070ac565b8114620070d5575f80fd5b50565b5f81519050620070e881620070bf565b92915050565b5f6020828403121562007106576200710562006357565b5b5f6200711584828501620070d8565b91505092915050565b6200712981620063d1565b811462007134575f80fd5b50565b5f8151905062007147816200711e565b92915050565b5f6020828403121562007165576200716462006357565b5b5f620071748482850162007137565b91505092915050565b5f819050919050565b5f620071a6620071a06200719a846200717d565b62006d75565b62006f24565b9050919050565b620071b88162007186565b82525050565b5f604082019050620071d35f830185620067ad565b620071e26020830184620071ad565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62007222826200635f565b91506200722f836200635f565b9250828203905067ffffffffffffffff811115620072525762007251620071e9565b5b92915050565b5f62007264826200635f565b915062007271836200635f565b9250828201905067ffffffffffffffff811115620072945762007293620071e9565b5b92915050565b5f8160011c9050919050565b5f808291508390505b6001851115620072f757808604811115620072cf57620072ce620071e9565b5b6001851615620072df5780820291505b8081029050620072ef856200729a565b9450620072af565b94509492505050565b5f82620073115760019050620073e3565b8162007320575f9050620073e3565b816001811462007339576002811462007344576200737a565b6001915050620073e3565b60ff841115620073595762007358620071e9565b5b8360020a915084821115620073735762007372620071e9565b5b50620073e3565b5060208310610133831016604e8410600b8410161715620073b45782820a905083811115620073ae57620073ad620071e9565b5b620073e3565b620073c38484846001620072a6565b92509050818404811115620073dd57620073dc620071e9565b5b81810290505b9392505050565b5f620073f68262006f24565b915062007403836200635f565b9250620074327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462007300565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f620074738262006f24565b9150620074808362006f24565b9250826200749357620074926200743a565b5b828204905092915050565b5f8160601b9050919050565b5f620074b6826200749e565b9050919050565b5f620074c982620074aa565b9050919050565b620074e5620074df8262006454565b620074bd565b82525050565b5f620074f88284620074d0565b60148201915081905092915050565b5f819050919050565b5f819050919050565b6200752e620075288262007507565b62007510565b82525050565b5f81905092915050565b5f6200754a8262006896565b62007556818562007534565b93506200756881856020860162006593565b80840191505092915050565b5f62007581828562007519565b6020820191506200759382846200753e565b91508190509392505050565b5f620075ab8262006f24565b9150620075b88362006f24565b925082620075cb57620075ca6200743a565b5b828206905092915050565b5f620075e28262006f24565b9150620075ef8362006f24565b92508282039050818111156200760a5762007609620071e9565b5b92915050565b5f604082019050620076255f83018562006912565b62007634602083018462006912565b9392505050565b5f6200765b620076556200764f846200635f565b62006d75565b62006f24565b9050919050565b6200766d816200763b565b82525050565b5f602082019050620076885f83018462007662565b92915050565b620076998162007507565b82525050565b50565b5f620076af5f83620068a0565b9150620076bc826200769f565b5f82019050919050565b5f60a082019050620076db5f830187620067ad565b620076ea60208301866200768e565b8181036040830152620076fe8185620068b0565b90506200770f6060830184620067ad565b81810360808301526200772281620076a2565b905095945050505050565b5f620077398262006f24565b9150620077468362006f24565b9250828201905080821115620077615762007760620071e9565b5b92915050565b5f81905092915050565b7f6572726f720000000000000000000000000000000000000000000000000000005f82015250565b5f620077a760058362007767565b9150620077b48262007771565b600582019050919050565b5f620077cc8284620074d0565b601482019150620077dd8262007799565b915081905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200782482620065bd565b810181811067ffffffffffffffff82111715620078465762007845620077ec565b5b80604052505050565b5f6200785a6200634e565b905062007868828262007819565b919050565b5f67ffffffffffffffff8211156200788a5762007889620077ec565b5b6200789582620065bd565b9050602081019050919050565b5f620078b8620078b2846200786d565b6200784f565b905082815260208101848484011115620078d757620078d6620077e8565b5b620078e484828562006593565b509392505050565b5f82601f830112620079035762007902620067d9565b5b815162007915848260208601620078a2565b91505092915050565b5f6020828403121562007936576200793562006357565b5b5f82015167ffffffffffffffff8111156200795657620079556200635b565b5b6200796484828501620078ec565b91505092915050565b620079788162006f24565b82525050565b5f6040820190508181035f830152620079988185620068b0565b9050620079a960208301846200796d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620079f557607f821691505b60208210810362007a0b5762007a0a620079b0565b5b50919050565b5f62007a1e5f8362006e80565b915062007a2b826200769f565b5f82019050919050565b5f6020820190508181035f83015262007a4e8162007a11565b9050919050565b5f60408201905062007a6a5f830185620067ad565b62007a7960208301846200768e565b9392505050565b62007a8b8162007507565b811462007a96575f80fd5b50565b5f8151905062007aa98162007a80565b92915050565b5f6020828403121562007ac75762007ac662006357565b5b5f62007ad68482850162007a99565b91505092915050565b5f8160c01b9050919050565b5f62007af78262007adf565b9050919050565b62007b1362007b0d826200635f565b62007aeb565b82525050565b5f8160e01b9050919050565b5f62007b318262007b19565b9050919050565b62007b4d62007b4782620063d1565b62007b25565b82525050565b5f819050919050565b62007b7162007b6b8262006f24565b62007b53565b82525050565b5f62007b84828762007afe565b60088201915062007b96828662007b38565b60048201915062007ba8828562007b5c565b60208201915062007bba82846200753e565b915081905095945050505050565b5f60408201905062007bdd5f8301856200796d565b62007bec60208301846200796d565b9392505050565b5f80fd5b5f80fd5b5f808585111562007c115762007c1062007bf3565b5b8386111562007c255762007c2462007bf7565b5b6001850283019150848603905094509492505050565b7f5374645574696c7320626f756e642875696e743235362c75696e743235362c755f8201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000602082015250565b5f62007c97603e8362006e80565b915062007ca48262007c3b565b604082019050919050565b5f6020820190508181035f83015262007cc88162007c89565b9050919050565b5f62007cdb8262006579565b62007ce7818562006e80565b935062007cf981856020860162006593565b62007d0481620065bd565b840191505092915050565b5f6040820190508181035f83015262007d29818562007ccf565b905062007d3a60208301846200796d565b9392505050565b5f62007d4e82846200753e565b915081905092915050565b5f62007d6682856200753e565b915062007d74828462007b5c565b6020820191508190509392505050565b5f62007d908262006f24565b915062007d9d8362006f24565b925062007dcc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462007300565b905092915050565b5f60208201905062007de95f8301846200796d565b92915050565b5f67ffffffffffffffff82111562007e0c5762007e0b620077ec565b5b62007e1782620065bd565b9050602081019050919050565b5f62007e3a62007e348462007def565b6200784f565b90508281526020810184848401111562007e595762007e58620077e8565b5b62007e6684828562006593565b509392505050565b5f82601f83011262007e855762007e84620067d9565b5b815162007e9784826020860162007e24565b91505092915050565b5f6020828403121562007eb85762007eb762006357565b5b5f82015167ffffffffffffffff81111562007ed85762007ed76200635b565b5b62007ee68482850162007e6e565b91505092915050565b7f73746453746f726167652066696e642853746453746f72616765293a205061635f8201527f6b656420736c6f742e2057652063616e2774206669742076616c75652067726560208201527f61746572207468616e2000000000000000000000000000000000000000000000604082015250565b5f62007f71604a8362007767565b915062007f7e8262007eef565b604a82019050919050565b5f62007f958262006579565b62007fa1818562007767565b935062007fb381856020860162006593565b80840191505092915050565b5f62007fcb8262007f63565b915062007fd9828462007f89565b915081905092915050565b5f6020820190508181035f83015262007ffe818462007ccf565b905092915050565b5f6060820190506200801b5f830186620067ad565b6200802a60208301856200768e565b6200803960408301846200768e565b949350505050565b7f73746453746f726167652066696e642853746453746f72616765293a204661695f8201527f6c656420746f2077726974652076616c75652e00000000000000000000000000602082015250565b5f6200809d60338362006e80565b9150620080aa8262008041565b604082019050919050565b5f6020820190508181035f830152620080ce816200808f565b9050919050565b5f819050919050565b620080f3620080ed8262006990565b620080d5565b82525050565b5f620081068285620080de565b6004820191506200811882846200753e565b91508190509392505050565b5f620081308262006f24565b91506200813d8362006f24565b92508282026200814d8162006f24565b91508282048414831517620081675762008166620071e9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f67ffffffffffffffff821115620081b857620081b7620077ec565b5b602082029050602081019050919050565b5f620081df620081d9846200819b565b6200784f565b90508083825260208201905060208402830185811115620082055762008204620067e1565b5b835b818110156200823257806200821d888262007a99565b84526020840193505060208101905062008207565b5050509392505050565b5f82601f830112620082535762008252620067d9565b5b815162008265848260208601620081c9565b91505092915050565b5f806040838503121562008287576200828662006357565b5b5f83015167ffffffffffffffff811115620082a757620082a66200635b565b5b620082b5858286016200823c565b925050602083015167ffffffffffffffff811115620082d957620082d86200635b565b5b620082e7858286016200823c565b9150509250929050565b7f73746453746f726167652066696e642853746453746f72616765293a204e6f205f8201527f73746f726167652075736520646574656374656420666f72207461726765742e602082015250565b5f6200834d60408362006e80565b91506200835a82620082f1565b604082019050919050565b5f6020820190508181035f8301526200837e816200833f565b9050919050565b5f620083918262006f24565b91505f8203620083a657620083a5620071e9565b5b600182039050919050565b5f604082019050620083c65f830185620067ad565b620083d560208301846200796d565b9392505050565b620083e78162006990565b82525050565b5f608082019050620084025f830187620067ad565b620084116020830186620083dc565b6200842060408301856200768e565b6200842f60608301846200796d565b95945050505050565b7f73746453746f726167652066696e642853746453746f72616765293a20536c6f5f8201527f74287329206e6f7420666f756e642e0000000000000000000000000000000000602082015250565b5f62008494602f8362006e80565b9150620084a18262008438565b604082019050919050565b5f6020820190508181035f830152620084c58162008486565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52605160045260245ffdfe608060405234801561000f575f80fd5b506104b08061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061002d575f3560e01c8063312f619f146100d45761002e565b5b5f3660605f80848481019061004391906102b3565b915091505f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8267ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f206040516020016100b691906103d6565b60405160208183030381529060405292505050915050805190602001f35b6100ee60048036038101906100e9919061042a565b6100f0565b005b60405180606001604052808267ffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff168152505f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8467ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506020820151815f0160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151815f0160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102458261021c565b9050919050565b6102558161023b565b811461025f575f80fd5b50565b5f813590506102708161024c565b92915050565b5f67ffffffffffffffff82169050919050565b61029281610276565b811461029c575f80fd5b50565b5f813590506102ad81610289565b92915050565b5f80604083850312156102c9576102c8610218565b5b5f6102d685828601610262565b92505060206102e78582860161029f565b9150509250929050565b5f815f1c9050919050565b5f67ffffffffffffffff82169050919050565b5f61032161031c836102f1565b6102fc565b9050919050565b61033181610276565b82525050565b5f8160401c9050919050565b5f61035561035083610337565b6102fc565b9050919050565b5f8160801c9050919050565b5f61037a6103758361035c565b6102fc565b9050919050565b606082015f8083015490506103958161030f565b6103a15f860182610328565b506103ab81610343565b6103b86020860182610328565b506103c281610368565b6103cf6040860182610328565b5050505050565b5f6060820190506103e95f830184610381565b92915050565b5f6103f98261021c565b9050919050565b610409816103ef565b8114610413575f80fd5b50565b5f8135905061042481610400565b92915050565b5f805f6060848603121561044157610440610218565b5b5f61044e86828701610416565b935050602061045f8682870161029f565b92505060406104708682870161029f565b915050925092509256fea2646970667358221220dbb79e72c88524d69893e0cb4a3f3e0ab2b92959b5db537fe6e5f0052a45904764736f6c6343000816003360c060405234801562000010575f80fd5b5060405162005cbe38038062005cbe833981810160405281019062000036919062000552565b8383838383836200004c6200029b60201b60201c565b8484818181818d5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000c6575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000bd919062000610565b60405180910390fd5b620000d781620002a360201b60201c565b508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000172576040517fb586360400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60805173ffffffffffffffffffffffffffffffffffffffff1663ca5eb5e1826040518263ffffffff1660e01b8152600401620001af919062000610565b5f604051808303815f87803b158015620001c7575f80fd5b505af1158015620001da573d5f803e3d5ffd5b5050505050505050620001f26200036460201b60201c565b60ff168360ff16101562000232576040517f1e9714b000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620002426200036460201b60201c565b836200024f919062000664565b600a6200025d9190620007f8565b60a08181525050505050816008908162000278919062000a76565b5080600990816200028a919062000a76565b505050505050505050505062000b5a565b5f6012905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6006905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620003cd8262000385565b810181811067ffffffffffffffff82111715620003ef57620003ee62000395565b5b80604052505050565b5f620004036200036c565b9050620004118282620003c2565b919050565b5f67ffffffffffffffff82111562000433576200043262000395565b5b6200043e8262000385565b9050602081019050919050565b5f5b838110156200046a5780820151818401526020810190506200044d565b5f8484015250505050565b5f6200048b620004858462000416565b620003f8565b905082815260208101848484011115620004aa57620004a962000381565b5b620004b78482856200044b565b509392505050565b5f82601f830112620004d657620004d56200037d565b5b8151620004e884826020860162000475565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200051c82620004f1565b9050919050565b6200052e8162000510565b811462000539575f80fd5b50565b5f815190506200054c8162000523565b92915050565b5f805f80608085870312156200056d576200056c62000375565b5b5f85015167ffffffffffffffff8111156200058d576200058c62000379565b5b6200059b87828801620004bf565b945050602085015167ffffffffffffffff811115620005bf57620005be62000379565b5b620005cd87828801620004bf565b9350506040620005e0878288016200053c565b9250506060620005f3878288016200053c565b91505092959194509250565b6200060a8162000510565b82525050565b5f602082019050620006255f830184620005ff565b92915050565b5f60ff82169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000670826200062b565b91506200067d836200062b565b9250828203905060ff81111562000699576200069862000637565b5b92915050565b5f8160011c9050919050565b5f808291508390505b6001851115620006fc57808604811115620006d457620006d362000637565b5b6001851615620006e45780820291505b8081029050620006f4856200069f565b9450620006b4565b94509492505050565b5f82620007165760019050620007e8565b8162000725575f9050620007e8565b81600181146200073e576002811462000749576200077f565b6001915050620007e8565b60ff8411156200075e576200075d62000637565b5b8360020a91508482111562000778576200077762000637565b5b50620007e8565b5060208310610133831016604e8410600b8410161715620007b95782820a905083811115620007b357620007b262000637565b5b620007e8565b620007c88484846001620006ab565b92509050818404811115620007e257620007e162000637565b5b81810290505b9392505050565b5f819050919050565b5f6200080482620007ef565b915062000811836200062b565b9250620008407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000705565b905092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200089757607f821691505b602082108103620008ad57620008ac62000852565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620009117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620008d4565b6200091d8683620008d4565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6200095e620009586200095284620007ef565b62000935565b620007ef565b9050919050565b5f819050919050565b62000979836200093e565b62000991620009888262000965565b848454620008e0565b825550505050565b5f90565b620009a762000999565b620009b48184846200096e565b505050565b5b81811015620009db57620009cf5f826200099d565b600181019050620009ba565b5050565b601f82111562000a2a57620009f481620008b3565b620009ff84620008c5565b8101602085101562000a0f578190505b62000a2762000a1e85620008c5565b830182620009b9565b50505b505050565b5f82821c905092915050565b5f62000a4c5f198460080262000a2f565b1980831691505092915050565b5f62000a66838362000a3b565b9150826002028217905092915050565b62000a818262000848565b67ffffffffffffffff81111562000a9d5762000a9c62000395565b5b62000aa982546200087f565b62000ab6828285620009df565b5f60209050601f83116001811462000aec575f841562000ad7578287015190505b62000ae3858262000a59565b86555062000b52565b601f19841662000afc86620008b3565b5f5b8281101562000b255784890151825560018201915060208501945060208101905062000afe565b8683101562000b45578489015162000b41601f89168262000a3b565b8355505b6001600288020188555050505b505050505050565b60805160a0516150f562000bc95f395f818161116d0152818161254a0152818161256b0152818161260f015261295e01525f8181610c8d01528181610f6e0152818161160f01528181611a5901528181611f5501528181612a5801528181612caa0152612da201526150f55ff3fe608060405260043610610250575f3560e01c80637d25a05e11610138578063bb0b6a53116100b5578063d045a0dc11610079578063d045a0dc146108e7578063d424388514610903578063dd62ed3e1461092b578063f2fde38b14610967578063fc0c546a1461098f578063ff7bd03d146109b957610250565b8063bb0b6a53146107fa578063bc70b35414610836578063bd815db014610872578063c7c7f5b31461088e578063ca5eb5e1146108bf57610250565b8063963efcaa116100fc578063963efcaa146107185780639f68b96414610742578063a9059cbb1461076c578063b731ea0a146107a8578063b98bd070146107d257610250565b80637d25a05e1461062257806382413eac1461065e578063857749b01461069a5780638da5cb5b146106c457806395d89b41146106ee57610250565b806323b872dd116101d15780635535d461116101955780635535d461146105065780635a0dfe4d146105425780635e280f111461057e5780636fc1b31e146105a857806370a08231146105d0578063715018a61461060c57610250565b806323b872dd14610412578063313ce5671461044e5780633400288b146104785780633b6f743b146104a057806352ae2879146104dc57610250565b8063134d4f2511610218578063134d4f251461033e578063156a0d0f1461036857806317442b701461039357806318160ddd146103be5780631f5e1334146103e857610250565b806306fdde0314610254578063095ea7b31461027e5780630d35b415146102ba578063111ecdad146102f857806313137d6514610322575b5f80fd5b34801561025f575f80fd5b506102686109f5565b6040516102759190613027565b60405180910390f35b348015610289575f80fd5b506102a4600480360381019061029f91906130e5565b610a85565b6040516102b1919061313d565b60405180910390f35b3480156102c5575f80fd5b506102e060048036038101906102db9190613178565b610aa7565b6040516102ef9392919061337d565b60405180910390f35b348015610303575f80fd5b5061030c610c4f565b60405161031991906133c8565b60405180910390f35b61033c60048036038101906103379190613493565b610c74565b005b348015610349575f80fd5b50610352610d94565b60405161035f9190613566565b60405180910390f35b348015610373575f80fd5b5061037c610d99565b60405161038a9291906135db565b60405180910390f35b34801561039e575f80fd5b506103a7610dc6565b6040516103b5929190613602565b60405180910390f35b3480156103c9575f80fd5b506103d2610dd4565b6040516103df9190613638565b60405180910390f35b3480156103f3575f80fd5b506103fc610ddd565b6040516104099190613566565b60405180910390f35b34801561041d575f80fd5b5061043860048036038101906104339190613651565b610de2565b604051610445919061313d565b60405180910390f35b348015610459575f80fd5b50610462610e10565b60405161046f91906136bc565b60405180910390f35b348015610483575f80fd5b5061049e6004803603810190610499919061370e565b610e18565b005b3480156104ab575f80fd5b506104c660048036038101906104c19190613776565b610e2e565b6040516104d391906137fd565b60405180910390f35b3480156104e7575f80fd5b506104f0610e96565b6040516104fd91906133c8565b60405180910390f35b348015610511575f80fd5b5061052c60048036038101906105279190613840565b610e9d565b60405161053991906138d0565b60405180910390f35b34801561054d575f80fd5b506105686004803603810190610563919061370e565b610f43565b604051610575919061313d565b60405180910390f35b348015610589575f80fd5b50610592610f6c565b60405161059f919061394b565b60405180910390f35b3480156105b3575f80fd5b506105ce60048036038101906105c99190613964565b610f90565b005b3480156105db575f80fd5b506105f660048036038101906105f19190613964565b611012565b6040516106039190613638565b60405180910390f35b348015610617575f80fd5b50610620611058565b005b34801561062d575f80fd5b506106486004803603810190610643919061370e565b61106b565b604051610655919061398f565b60405180910390f35b348015610669575f80fd5b50610684600480360381019061067f91906139a8565b611072565b604051610691919061313d565b60405180910390f35b3480156106a5575f80fd5b506106ae6110ac565b6040516106bb91906136bc565b60405180910390f35b3480156106cf575f80fd5b506106d86110b4565b6040516106e591906133c8565b60405180910390f35b3480156106f9575f80fd5b506107026110db565b60405161070f9190613027565b60405180910390f35b348015610723575f80fd5b5061072c61116b565b6040516107399190613638565b60405180910390f35b34801561074d575f80fd5b5061075661118f565b604051610763919061313d565b60405180910390f35b348015610777575f80fd5b50610792600480360381019061078d91906130e5565b611193565b60405161079f919061313d565b60405180910390f35b3480156107b3575f80fd5b506107bc6111b5565b6040516107c991906133c8565b60405180910390f35b3480156107dd575f80fd5b506107f860048036038101906107f39190613a6e565b6111da565b005b348015610805575f80fd5b50610820600480360381019061081b9190613ab9565b6111fb565b60405161082d9190613af3565b60405180910390f35b348015610841575f80fd5b5061085c60048036038101906108579190613b0c565b611210565b60405161086991906138d0565b60405180910390f35b61088c60048036038101906108879190613bd2565b611412565b005b6108a860048036038101906108a39190613c3b565b6115de565b6040516108b6929190613d32565b60405180910390f35b3480156108ca575f80fd5b506108e560048036038101906108e09190613964565b611605565b005b61090160048036038101906108fc9190613493565b611696565b005b34801561090e575f80fd5b5061092960048036038101906109249190613964565b611713565b005b348015610936575f80fd5b50610951600480360381019061094c9190613d59565b611795565b60405161095e9190613638565b60405180910390f35b348015610972575f80fd5b5061098d60048036038101906109889190613964565b611817565b005b34801561099a575f80fd5b506109a361189b565b6040516109b091906133c8565b60405180910390f35b3480156109c4575f80fd5b506109df60048036038101906109da9190613d97565b6118a2565b6040516109ec919061313d565b60405180910390f35b606060088054610a0490613def565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3090613def565b8015610a7b5780601f10610a5257610100808354040283529160200191610a7b565b820191905f5260205f20905b815481529060010190602001808311610a5e57829003601f168201915b5050505050905090565b5f80610a8f6118df565b9050610a9c8185856118e6565b600191505092915050565b610aaf612f0a565b6060610ab9612f22565b5f803073ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b04573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b289190613e33565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b70573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b949190613e72565b905060405180604001604052808381526020018281525094505f67ffffffffffffffff811115610bc757610bc6613e9d565b5b604051908082528060200260200182016040528015610c0057816020015b610bed612f3a565b815260200190600190039081610be55790505b5093505f80610c29886040013589606001358a5f016020810190610c249190613ab9565b6118f8565b915091506040518060400160405280838152602001828152509450505050509193909250565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610d0457336040517f91ac5e4f000000000000000000000000000000000000000000000000000000008152600401610cfb91906133c8565b60405180910390fd5b8660200135610d23885f016020810190610d1e9190613ab9565b611957565b14610d7c57865f016020810190610d3a9190613ab9565b87602001356040517fc26bebcc000000000000000000000000000000000000000000000000000000008152600401610d73929190613ed9565b60405180910390fd5b610d8b878787878787876119c8565b50505050505050565b600281565b5f807f02e49c2c000000000000000000000000000000000000000000000000000000006001915091509091565b5f8060016002915091509091565b5f600754905090565b600181565b5f80610dec6118df565b9050610df9858285611b52565b610e04858585611be4565b60019150509392505050565b5f6012905090565b610e20611cd4565b610e2a8282611d5b565b5050565b610e36612f53565b5f610e5b84604001358560600135865f016020810190610e569190613ab9565b6118f8565b9150505f80610e6a8684611dba565b91509150610e8b865f016020810190610e839190613ab9565b838388611f4b565b935050505092915050565b5f30905090565b6003602052815f5260405f20602052805f5260405f205f91509150508054610ec490613def565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef090613def565b8015610f3b5780601f10610f1257610100808354040283529160200191610f3b565b820191905f5260205f20905b815481529060010190602001808311610f1e57829003601f168201915b505050505081565b5f8160015f8563ffffffff1663ffffffff1681526020019081526020015f205414905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610f98611cd4565b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff0be4f1e87349231d80c36b33f9e8639658eeaf474014dee15a3e6a4d44141978160405161100791906133c8565b60405180910390a150565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b611060611cd4565b6110695f61202c565b565b5f92915050565b5f3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050949350505050565b5f6006905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600980546110ea90613def565b80601f016020809104026020016040519081016040528092919081815260200182805461111690613def565b80156111615780601f1061113857610100808354040283529160200191611161565b820191905f5260205f20905b81548152906001019060200180831161114457829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f90565b5f8061119d6118df565b90506111aa818585611be4565b600191505092915050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6111e2611cd4565b6111f78282906111f29190614131565b6120ed565b5050565b6001602052805f5260405f205f915090505481565b60605f60035f8763ffffffff1663ffffffff1681526020019081526020015f205f8661ffff1661ffff1681526020019081526020015f20805461125290613def565b80601f016020809104026020016040519081016040528092919081815260200182805461127e90613def565b80156112c95780601f106112a0576101008083540402835291602001916112c9565b820191905f5260205f20905b8154815290600101906020018083116112ac57829003601f168201915b505050505090505f8151036113245783838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505091505061140a565b5f8484905003611337578091505061140a565b600284849050106113cb5761138e84848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050612202565b80848460029080926113a29392919061414d565b6040516020016113b4939291906141e5565b60405160208183030381529060405291505061140a565b83836040517f9a6d49cd000000000000000000000000000000000000000000000000000000008152600401611401929190614236565b60405180910390fd5b949350505050565b5f5b82829050811015611531573683838381811061143357611432614258565b5b90506020028101906114459190614291565b905061146a815f015f01602081019061145e9190613ab9565b825f0160200135610f43565b6114745750611524565b3073ffffffffffffffffffffffffffffffffffffffff1663d045a0dc8260c00135835f018460a00135858061010001906114ae91906142b9565b8760e00160208101906114c19190613964565b888061012001906114d291906142b9565b6040518963ffffffff1660e01b81526004016114f497969594939291906143ee565b5f604051808303818588803b15801561150b575f80fd5b505af115801561151d573d5f803e3d5ffd5b5050505050505b8080600101915050611414565b503373ffffffffffffffffffffffffffffffffffffffff16638e9e70996040518163ffffffff1660e01b81526004015f60405180830381865afa15801561157a573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906115a291906144bf565b6040517f8351eea70000000000000000000000000000000000000000000000000000000081526004016115d591906138d0565b60405180910390fd5b6115e6612f6b565b6115ee612f22565b6115f985858561225b565b91509150935093915050565b61160d611cd4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ca5eb5e1826040518263ffffffff1660e01b815260040161166691906133c8565b5f604051808303815f87803b15801561167d575f80fd5b505af115801561168f573d5f803e3d5ffd5b5050505050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116fb576040517f14d4a4e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61170a87878787878787612360565b50505050505050565b61171b611cd4565b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd48d879cef83a1c0bdda516f27b13ddb1b3f8bbac1c9e1511bb2a659c24277608160405161178a91906133c8565b60405180910390a150565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61181f611cd4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361188f575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161188691906133c8565b60405180910390fd5b6118988161202c565b50565b5f30905090565b5f816020013560015f845f0160208101906118bd9190613ab9565b63ffffffff1663ffffffff1681526020019081526020015f2054149050919050565b5f33905090565b6118f38383836001612378565b505050565b5f8061190385612547565b91508190508381101561194f5780846040517f71c4efed000000000000000000000000000000000000000000000000000000008152600401611946929190614506565b60405180910390fd5b935093915050565b5f8060015f8463ffffffff1663ffffffff1681526020019081526020015f205490505f801b81036119bf57826040517ff6ff4fb70000000000000000000000000000000000000000000000000000000081526004016119b6919061452d565b60405180910390fd5b80915050919050565b5f6119db6119d687876125a6565b6125d0565b90505f611a0b826119f46119ef8a8a6125db565b61260c565b8b5f016020810190611a069190613ab9565b61264a565b9050611a178787612698565b15611ae5575f611a558a6040016020810190611a339190614546565b8b5f016020810190611a459190613ab9565b84611a508c8c6126ab565b61270d565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637cb59012848b5f856040518563ffffffff1660e01b8152600401611ab694939291906145aa565b5f604051808303815f87803b158015611acd575f80fd5b505af1158015611adf573d5f803e3d5ffd5b50505050505b8173ffffffffffffffffffffffffffffffffffffffff16887fefed6d3500546b29533b128a29e3a94d70788727f0507505ac12eaf2e578fd9c8b5f016020810190611b309190613ab9565b84604051611b3f9291906145f4565b60405180910390a3505050505050505050565b5f611b5d8484611795565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611bde5781811015611bcf578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611bc69392919061461b565b60405180910390fd5b611bdd84848484035f612378565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c54575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611c4b91906133c8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611cc4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611cbb91906133c8565b60405180910390fd5b611ccf83838361273f565b505050565b611cdc6118df565b73ffffffffffffffffffffffffffffffffffffffff16611cfa6110b4565b73ffffffffffffffffffffffffffffffffffffffff1614611d5957611d1d6118df565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611d5091906133c8565b60405180910390fd5b565b8060015f8463ffffffff1663ffffffff1681526020019081526020015f20819055507f238399d427b947898edb290f5ff0f9109849b1c3ba196a42e35f00c50a54b98b8282604051611dae929190613ed9565b60405180910390a15050565b6060805f611e268560200135611dcf8661295b565b878060a00190611ddf91906142b9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505061298f565b80925081945050505f81611e3b576001611e3e565b60025b9050611e6b865f016020810190611e559190613ab9565b82888060800190611e6691906142b9565b611210565b92505f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611f41578073ffffffffffffffffffffffffffffffffffffffff1663043a78eb86866040518363ffffffff1660e01b8152600401611f00929190614650565b602060405180830381865afa158015611f1b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f3f9190614699565b505b5050509250929050565b611f53612f53565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ddc28c586040518060a001604052808863ffffffff168152602001611faf89611957565b8152602001878152602001868152602001851515815250306040518363ffffffff1660e01b8152600401611fe4929190614795565b6040805180830381865afa158015611ffe573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120229190614810565b9050949350505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5b81518110156121c75761211f82828151811061210e5761210d614258565b5b602002602001015160400151612202565b81818151811061213257612131614258565b5b60200260200101516040015160035f84848151811061215457612153614258565b5b60200260200101515f015163ffffffff1663ffffffff1681526020019081526020015f205f84848151811061218c5761218b614258565b5b60200260200101516020015161ffff1661ffff1681526020019081526020015f2090816121b991906149cf565b5080806001019150506120ef565b507fbe4864a8e820971c0247f5992e2da559595f7bf076a21cb5928d443d2a13b674816040516121f79190614bb5565b60405180910390a150565b5f60028201519050600361ffff168161ffff161461225757816040517f9a6d49cd00000000000000000000000000000000000000000000000000000000815260040161224e91906138d0565b60405180910390fd5b5050565b612263612f6b565b61226b612f22565b5f8061229233886040013589606001358a5f01602081019061228d9190613ab9565b6129fd565b915091505f806122a28984611dba565b915091506122d4895f0160208101906122bb9190613ab9565b83838b8036038101906122ce9190614c22565b8b612a25565b955060405180604001604052808581526020018481525094503373ffffffffffffffffffffffffffffffffffffffff16865f01517f85496b760a4b7f8d66384b9df21b381f5d1b1e79f229a47aaf4c232edc2fe59a8b5f01602081019061233b9190613ab9565b878760405161234c93929190614c4d565b60405180910390a350505050935093915050565b61236f878787878787876119c8565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036123e8575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016123df91906133c8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612458575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161244f91906133c8565b60405180910390fd5b8160065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015612541578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516125389190613638565b60405180910390a35b50505050565b5f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000836125959190614cdc565b61259f9190614d0c565b9050919050565b5f82825f90602060ff16926125bd9392919061414d565b906125c89190614d57565b905092915050565b5f815f1c9050919050565b5f8282602060ff1690602860ff16926125f69392919061414d565b906126019190614de0565b60c01c905092915050565b5f7f00000000000000000000000000000000000000000000000000000000000000008267ffffffffffffffff166126439190614d0c565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036126845761dead93505b61268e8484612b3b565b8290509392505050565b5f602860ff168383905011905092915050565b60608282602860ff169080926126c39392919061414d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050905092915050565b6060848484846040516020016127269493929190614ec6565b6040516020818303038152906040529050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361278f578060075f8282546127839190614f0f565b9250508190555061285f565b5f60055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015612819578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016128109392919061461b565b60405180910390fd5b81810360055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036128a6578060075f82825403925050819055506128f1565b8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161294e9190613638565b60405180910390a3505050565b5f7f0000000000000000000000000000000000000000000000000000000000000000826129889190614cdc565b9050919050565b60605f808351119050806129c45784846040516020016129b0929190614f62565b6040516020818303038152906040526129f3565b84846129cf33612bba565b856040516020016129e39493929190614f8d565b6040516020818303038152906040525b9150935093915050565b5f80612a0a8585856118f8565b8092508193505050612a1c8683612bdb565b94509492505050565b612a2d612f6b565b5f612a3a845f0151612c5a565b90505f84602001511115612a5657612a558460200151612ca7565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632637a450826040518060a001604052808b63ffffffff168152602001612ab38c611957565b81526020018a81526020018981526020015f8960200151111515815250866040518463ffffffff1660e01b8152600401612aee929190614795565b60806040518083038185885af1158015612b0a573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190612b2f919061505f565b91505095945050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612bab575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401612ba291906133c8565b60405180910390fd5b612bb65f838361273f565b5050565b5f8173ffffffffffffffffffffffffffffffffffffffff165f1b9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612c4b575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401612c4291906133c8565b60405180910390fd5b612c56825f8361273f565b5050565b5f813414612c9f57346040517f9f704120000000000000000000000000000000000000000000000000000000008152600401612c969190613638565b60405180910390fd5b819050919050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e4fe1d946040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612d359190613e33565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612d9c576040517f5373352a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612de9337f0000000000000000000000000000000000000000000000000000000000000000848473ffffffffffffffffffffffffffffffffffffffff16612ded909392919063ffffffff16565b5050565b612e69848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401612e229392919061508a565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612e6f565b50505050565b5f8060205f8451602086015f885af180612e8e576040513d5f823e3d81fd5b3d92505f519150505f8214612ea7576001811415612ec2565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15612f0457836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401612efb91906133c8565b60405180910390fd5b50505050565b60405180604001604052805f81526020015f81525090565b60405180604001604052805f81526020015f81525090565b60405180604001604052805f8152602001606081525090565b60405180604001604052805f81526020015f81525090565b60405180606001604052805f80191681526020015f67ffffffffffffffff168152602001612f97612f53565b81525090565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612fd4578082015181840152602081019050612fb9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f612ff982612f9d565b6130038185612fa7565b9350613013818560208601612fb7565b61301c81612fdf565b840191505092915050565b5f6020820190508181035f83015261303f8184612fef565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61308182613058565b9050919050565b61309181613077565b811461309b575f80fd5b50565b5f813590506130ac81613088565b92915050565b5f819050919050565b6130c4816130b2565b81146130ce575f80fd5b50565b5f813590506130df816130bb565b92915050565b5f80604083850312156130fb576130fa613050565b5b5f6131088582860161309e565b9250506020613119858286016130d1565b9150509250929050565b5f8115159050919050565b61313781613123565b82525050565b5f6020820190506131505f83018461312e565b92915050565b5f80fd5b5f60e0828403121561316f5761316e613156565b5b81905092915050565b5f6020828403121561318d5761318c613050565b5b5f82013567ffffffffffffffff8111156131aa576131a9613054565b5b6131b68482850161315a565b91505092915050565b6131c8816130b2565b82525050565b604082015f8201516131e25f8501826131bf565b5060208201516131f560208501826131bf565b50505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b61323681613224565b82525050565b5f82825260208201905092915050565b5f61325682612f9d565b613260818561323c565b9350613270818560208601612fb7565b61327981612fdf565b840191505092915050565b5f604083015f8301516132995f86018261322d565b50602083015184820360208601526132b1828261324c565b9150508091505092915050565b5f6132c98383613284565b905092915050565b5f602082019050919050565b5f6132e7826131fb565b6132f18185613205565b93508360208202850161330385613215565b805f5b8581101561333e578484038952815161331f85826132be565b945061332a836132d1565b925060208a01995050600181019050613306565b50829750879550505050505092915050565b604082015f8201516133645f8501826131bf565b50602082015161337760208501826131bf565b50505050565b5f60a0820190506133905f8301866131ce565b81810360408301526133a281856132dd565b90506133b16060830184613350565b949350505050565b6133c281613077565b82525050565b5f6020820190506133db5f8301846133b9565b92915050565b5f606082840312156133f6576133f5613156565b5b81905092915050565b5f819050919050565b613411816133ff565b811461341b575f80fd5b50565b5f8135905061342c81613408565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261345357613452613432565b5b8235905067ffffffffffffffff8111156134705761346f613436565b5b60208301915083600182028301111561348c5761348b61343a565b5b9250929050565b5f805f805f805f60e0888a0312156134ae576134ad613050565b5b5f6134bb8a828b016133e1565b97505060606134cc8a828b0161341e565b965050608088013567ffffffffffffffff8111156134ed576134ec613054565b5b6134f98a828b0161343e565b955095505060a061350c8a828b0161309e565b93505060c088013567ffffffffffffffff81111561352d5761352c613054565b5b6135398a828b0161343e565b925092505092959891949750929550565b5f61ffff82169050919050565b6135608161354a565b82525050565b5f6020820190506135795f830184613557565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6135b38161357f565b82525050565b5f67ffffffffffffffff82169050919050565b6135d5816135b9565b82525050565b5f6040820190506135ee5f8301856135aa565b6135fb60208301846135cc565b9392505050565b5f6040820190506136155f8301856135cc565b61362260208301846135cc565b9392505050565b613632816130b2565b82525050565b5f60208201905061364b5f830184613629565b92915050565b5f805f6060848603121561366857613667613050565b5b5f6136758682870161309e565b93505060206136868682870161309e565b9250506040613697868287016130d1565b9150509250925092565b5f60ff82169050919050565b6136b6816136a1565b82525050565b5f6020820190506136cf5f8301846136ad565b92915050565b5f63ffffffff82169050919050565b6136ed816136d5565b81146136f7575f80fd5b50565b5f81359050613708816136e4565b92915050565b5f806040838503121561372457613723613050565b5b5f613731858286016136fa565b92505060206137428582860161341e565b9150509250929050565b61375581613123565b811461375f575f80fd5b50565b5f813590506137708161374c565b92915050565b5f806040838503121561378c5761378b613050565b5b5f83013567ffffffffffffffff8111156137a9576137a8613054565b5b6137b58582860161315a565b92505060206137c685828601613762565b9150509250929050565b604082015f8201516137e45f8501826131bf565b5060208201516137f760208501826131bf565b50505050565b5f6040820190506138105f8301846137d0565b92915050565b61381f8161354a565b8114613829575f80fd5b50565b5f8135905061383a81613816565b92915050565b5f806040838503121561385657613855613050565b5b5f613863858286016136fa565b92505060206138748582860161382c565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f6138a28261387e565b6138ac8185613888565b93506138bc818560208601612fb7565b6138c581612fdf565b840191505092915050565b5f6020820190508181035f8301526138e88184613898565b905092915050565b5f819050919050565b5f61391361390e61390984613058565b6138f0565b613058565b9050919050565b5f613924826138f9565b9050919050565b5f6139358261391a565b9050919050565b6139458161392b565b82525050565b5f60208201905061395e5f83018461393c565b92915050565b5f6020828403121561397957613978613050565b5b5f6139868482850161309e565b91505092915050565b5f6020820190506139a25f8301846135cc565b92915050565b5f805f8060a085870312156139c0576139bf613050565b5b5f6139cd878288016133e1565b945050606085013567ffffffffffffffff8111156139ee576139ed613054565b5b6139fa8782880161343e565b93509350506080613a0d8782880161309e565b91505092959194509250565b5f8083601f840112613a2e57613a2d613432565b5b8235905067ffffffffffffffff811115613a4b57613a4a613436565b5b602083019150836020820283011115613a6757613a6661343a565b5b9250929050565b5f8060208385031215613a8457613a83613050565b5b5f83013567ffffffffffffffff811115613aa157613aa0613054565b5b613aad85828601613a19565b92509250509250929050565b5f60208284031215613ace57613acd613050565b5b5f613adb848285016136fa565b91505092915050565b613aed816133ff565b82525050565b5f602082019050613b065f830184613ae4565b92915050565b5f805f8060608587031215613b2457613b23613050565b5b5f613b31878288016136fa565b9450506020613b428782880161382c565b935050604085013567ffffffffffffffff811115613b6357613b62613054565b5b613b6f8782880161343e565b925092505092959194509250565b5f8083601f840112613b9257613b91613432565b5b8235905067ffffffffffffffff811115613baf57613bae613436565b5b602083019150836020820283011115613bcb57613bca61343a565b5b9250929050565b5f8060208385031215613be857613be7613050565b5b5f83013567ffffffffffffffff811115613c0557613c04613054565b5b613c1185828601613b7d565b92509250509250929050565b5f60408284031215613c3257613c31613156565b5b81905092915050565b5f805f60808486031215613c5257613c51613050565b5b5f84013567ffffffffffffffff811115613c6f57613c6e613054565b5b613c7b8682870161315a565b9350506020613c8c86828701613c1d565b9250506060613c9d8682870161309e565b9150509250925092565b613cb0816133ff565b82525050565b613cbf816135b9565b82525050565b604082015f820151613cd95f8501826131bf565b506020820151613cec60208501826131bf565b50505050565b608082015f820151613d065f850182613ca7565b506020820151613d196020850182613cb6565b506040820151613d2c6040850182613cc5565b50505050565b5f60c082019050613d455f830185613cf2565b613d526080830184613350565b9392505050565b5f8060408385031215613d6f57613d6e613050565b5b5f613d7c8582860161309e565b9250506020613d8d8582860161309e565b9150509250929050565b5f60608284031215613dac57613dab613050565b5b5f613db9848285016133e1565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680613e0657607f821691505b602082108103613e1957613e18613dc2565b5b50919050565b5f81519050613e2d81613088565b92915050565b5f60208284031215613e4857613e47613050565b5b5f613e5584828501613e1f565b91505092915050565b5f81519050613e6c816130bb565b92915050565b5f60208284031215613e8757613e86613050565b5b5f613e9484828501613e5e565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b613ed3816136d5565b82525050565b5f604082019050613eec5f830185613eca565b613ef96020830184613ae4565b9392505050565b613f0982612fdf565b810181811067ffffffffffffffff82111715613f2857613f27613e9d565b5b80604052505050565b5f613f3a613047565b9050613f468282613f00565b919050565b5f67ffffffffffffffff821115613f6557613f64613e9d565b5b602082029050602081019050919050565b5f80fd5b5f80fd5b5f80fd5b5f67ffffffffffffffff821115613f9c57613f9b613e9d565b5b613fa582612fdf565b9050602081019050919050565b828183375f83830152505050565b5f613fd2613fcd84613f82565b613f31565b905082815260208101848484011115613fee57613fed613f7e565b5b613ff9848285613fb2565b509392505050565b5f82601f83011261401557614014613432565b5b8135614025848260208601613fc0565b91505092915050565b5f6060828403121561404357614042613f76565b5b61404d6060613f31565b90505f61405c848285016136fa565b5f83015250602061406f8482850161382c565b602083015250604082013567ffffffffffffffff81111561409357614092613f7a565b5b61409f84828501614001565b60408301525092915050565b5f6140bd6140b884613f4b565b613f31565b905080838252602082019050602084028301858111156140e0576140df61343a565b5b835b8181101561412757803567ffffffffffffffff81111561410557614104613432565b5b808601614112898261402e565b855260208501945050506020810190506140e2565b5050509392505050565b5f61413d3684846140ab565b905092915050565b5f80fd5b5f80fd5b5f80858511156141605761415f614145565b5b8386111561417157614170614149565b5b6001850283019150848603905094509492505050565b5f81905092915050565b5f61419b8261387e565b6141a58185614187565b93506141b5818560208601612fb7565b80840191505092915050565b5f6141cc8385614187565b93506141d9838584613fb2565b82840190509392505050565b5f6141f08286614191565b91506141fd8284866141c1565b9150819050949350505050565b5f6142158385613888565b9350614222838584613fb2565b61422b83612fdf565b840190509392505050565b5f6020820190508181035f83015261424f81848661420a565b90509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f80fd5b5f80fd5b5f80fd5b5f82356001610140038336030381126142ad576142ac614285565b5b80830191505092915050565b5f80833560016020038436030381126142d5576142d4614285565b5b80840192508235915067ffffffffffffffff8211156142f7576142f6614289565b5b6020830192506001820236038313156143135761431261428d565b5b509250929050565b5f61432960208401846136fa565b905092915050565b61433a816136d5565b82525050565b5f61434e602084018461341e565b905092915050565b61435f816135b9565b8114614369575f80fd5b50565b5f8135905061437a81614356565b92915050565b5f61438e602084018461436c565b905092915050565b606082016143a65f83018361431b565b6143b25f850182614331565b506143c06020830183614340565b6143cd6020850182613ca7565b506143db6040830183614380565b6143e86040850182613cb6565b50505050565b5f60e0820190506144015f83018a614396565b61440e6060830189613ae4565b818103608083015261442181878961420a565b905061443060a08301866133b9565b81810360c083015261444381848661420a565b905098975050505050505050565b5f61446361445e84613f82565b613f31565b90508281526020810184848401111561447f5761447e613f7e565b5b61448a848285612fb7565b509392505050565b5f82601f8301126144a6576144a5613432565b5b81516144b6848260208601614451565b91505092915050565b5f602082840312156144d4576144d3613050565b5b5f82015167ffffffffffffffff8111156144f1576144f0613054565b5b6144fd84828501614492565b91505092915050565b5f6040820190506145195f830185613629565b6145266020830184613629565b9392505050565b5f6020820190506145405f830184613eca565b92915050565b5f6020828403121561455b5761455a613050565b5b5f6145688482850161436c565b91505092915050565b5f819050919050565b5f61459461458f61458a84614571565b6138f0565b61354a565b9050919050565b6145a48161457a565b82525050565b5f6080820190506145bd5f8301876133b9565b6145ca6020830186613ae4565b6145d7604083018561459b565b81810360608301526145e98184613898565b905095945050505050565b5f6040820190506146075f830185613eca565b6146146020830184613629565b9392505050565b5f60608201905061462e5f8301866133b9565b61463b6020830185613629565b6146486040830184613629565b949350505050565b5f6040820190508181035f8301526146688185613898565b9050818103602083015261467c8184613898565b90509392505050565b5f815190506146938161374c565b92915050565b5f602082840312156146ae576146ad613050565b5b5f6146bb84828501614685565b91505092915050565b5f82825260208201905092915050565b5f6146de8261387e565b6146e881856146c4565b93506146f8818560208601612fb7565b61470181612fdf565b840191505092915050565b61471581613123565b82525050565b5f60a083015f8301516147305f860182614331565b5060208301516147436020860182613ca7565b506040830151848203604086015261475b82826146d4565b9150506060830151848203606086015261477582826146d4565b915050608083015161478a608086018261470c565b508091505092915050565b5f6040820190508181035f8301526147ad818561471b565b90506147bc60208301846133b9565b9392505050565b5f604082840312156147d8576147d7613f76565b5b6147e26040613f31565b90505f6147f184828501613e5e565b5f83015250602061480484828501613e5e565b60208301525092915050565b5f6040828403121561482557614824613050565b5b5f614832848285016147c3565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026148977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261485c565b6148a1868361485c565b95508019841693508086168417925050509392505050565b5f6148d36148ce6148c9846130b2565b6138f0565b6130b2565b9050919050565b5f819050919050565b6148ec836148b9565b6149006148f8826148da565b848454614868565b825550505050565b5f90565b614914614908565b61491f8184846148e3565b505050565b5b81811015614942576149375f8261490c565b600181019050614925565b5050565b601f821115614987576149588161483b565b6149618461484d565b81016020851015614970578190505b61498461497c8561484d565b830182614924565b50505b505050565b5f82821c905092915050565b5f6149a75f198460080261498c565b1980831691505092915050565b5f6149bf8383614998565b9150826002028217905092915050565b6149d88261387e565b67ffffffffffffffff8111156149f1576149f0613e9d565b5b6149fb8254613def565b614a06828285614946565b5f60209050601f831160018114614a37575f8415614a25578287015190505b614a2f85826149b4565b865550614a96565b601f198416614a458661483b565b5f5b82811015614a6c57848901518255600182019150602085019450602081019050614a47565b86831015614a895784890151614a85601f891682614998565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b614ad08161354a565b82525050565b5f606083015f830151614aeb5f860182614331565b506020830151614afe6020860182614ac7565b5060408301518482036040860152614b1682826146d4565b9150508091505092915050565b5f614b2e8383614ad6565b905092915050565b5f602082019050919050565b5f614b4c82614a9e565b614b568185614aa8565b935083602082028501614b6885614ab8565b805f5b85811015614ba35784840389528151614b848582614b23565b9450614b8f83614b36565b925060208a01995050600181019050614b6b565b50829750879550505050505092915050565b5f6020820190508181035f830152614bcd8184614b42565b905092915050565b5f60408284031215614bea57614be9613f76565b5b614bf46040613f31565b90505f614c03848285016130d1565b5f830152506020614c16848285016130d1565b60208301525092915050565b5f60408284031215614c3757614c36613050565b5b5f614c4484828501614bd5565b91505092915050565b5f606082019050614c605f830186613eca565b614c6d6020830185613629565b614c7a6040830184613629565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f614ce6826130b2565b9150614cf1836130b2565b925082614d0157614d00614c82565b5b828204905092915050565b5f614d16826130b2565b9150614d21836130b2565b9250828202614d2f816130b2565b91508282048414831517614d4657614d45614caf565b5b5092915050565b5f82905092915050565b5f614d628383614d4d565b82614d6d81356133ff565b92506020821015614dad57614da87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261485c565b831692505b505092915050565b5f7fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b5f614deb8383614d4d565b82614df68135614db5565b92506008821015614e3657614e317fffffffffffffffff0000000000000000000000000000000000000000000000008360080360080261485c565b831692505b505092915050565b5f8160c01b9050919050565b5f614e5482614e3e565b9050919050565b614e6c614e67826135b9565b614e4a565b82525050565b5f8160e01b9050919050565b5f614e8882614e72565b9050919050565b614ea0614e9b826136d5565b614e7e565b82525050565b5f819050919050565b614ec0614ebb826130b2565b614ea6565b82525050565b5f614ed18287614e5b565b600882019150614ee18286614e8f565b600482019150614ef18285614eaf565b602082019150614f018284614191565b915081905095945050505050565b5f614f19826130b2565b9150614f24836130b2565b9250828201905080821115614f3c57614f3b614caf565b5b92915050565b5f819050919050565b614f5c614f57826133ff565b614f42565b82525050565b5f614f6d8285614f4b565b602082019150614f7d8284614e5b565b6008820191508190509392505050565b5f614f988287614f4b565b602082019150614fa88286614e5b565b600882019150614fb88285614f4b565b602082019150614fc88284614191565b915081905095945050505050565b5f81519050614fe481613408565b92915050565b5f81519050614ff881614356565b92915050565b5f6080828403121561501357615012613f76565b5b61501d6060613f31565b90505f61502c84828501614fd6565b5f83015250602061503f84828501614fea565b6020830152506040615053848285016147c3565b60408301525092915050565b5f6080828403121561507457615073613050565b5b5f61508184828501614ffe565b91505092915050565b5f60608201905061509d5f8301866133b9565b6150aa60208301856133b9565b6150b76040830184613629565b94935050505056fea2646970667358221220ede3d0118fefb2e19a171ee13d3541fad18f5600279130d85295bf5cda7402b064736f6c6343000816003360e060405234801562000010575f80fd5b506040516200360538038062003605833981810160405281019062000036919062000438565b60405180606001604052806200005c8467ffffffffffffffff166200035160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1681526020018367ffffffffffffffff1681526020018267ffffffffffffffff168152505f80820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050604051806060016040528073222222222222222222222222222222222222222273ffffffffffffffffffffffffffffffffffffffff16815260200161045167ffffffffffffffff168152602001600a67ffffffffffffffff1681525060025f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505060a05173ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002ba573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620002e09190620004a7565b73ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050505062000547565b5f8173200000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166200038a91906200050d565b9050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620003c08262000395565b9050919050565b620003d281620003b4565b8114620003dd575f80fd5b50565b5f81519050620003f081620003c7565b92915050565b5f67ffffffffffffffff82169050919050565b6200041481620003f6565b81146200041f575f80fd5b50565b5f81519050620004328162000409565b92915050565b5f805f806080858703121562000453576200045262000391565b5b5f6200046287828801620003e0565b94505060206200047587828801620003e0565b9350506040620004888782880162000422565b92505060606200049b8782880162000422565b91505092959194509250565b5f60208284031215620004bf57620004be62000391565b5b5f620004ce84828501620003e0565b91505092915050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200051982620004d7565b91506200052683620004d7565b9250828201905080821115620005415762000540620004e0565b5b92915050565b60805160a05160c051613062620005a35f395f8181610dae015281816110fc015281816119600152611ac601525f818161086701528181610a2a0152610a6601525f81816106630152818161097801526109b401526130625ff3fe60806040526004361061010c575f3560e01c80639b5215f611610094578063dd85007511610063578063dd85007514610357578063ebaeefd614610381578063f6e6b2401461039d578063f9716faf146103c9578063fc0c546a1461040557610113565b80639b5215f6146102bd578063aae12e46146102e7578063ba87267914610311578063d0a102601461033b57610113565b8063765008a1116100db578063765008a1146101e5578063807d6c3f1461021157806381e8dcb41461023b5780638483bc00146102775780639278d99a1461029357610113565b80631b224831146101175780632d0e315c146101555780635241b4961461017f5780635e280f11146101bb57610113565b3661011357005b5f80fd5b348015610122575f80fd5b5061013d60048036038101906101389190611d5d565b61042f565b60405161014c93929190611e62565b60405180910390f35b348015610160575f80fd5b5061016961046d565b6040516101769190611f3f565b60405180910390f35b34801561018a575f80fd5b506101a560048036038101906101a091906120d4565b61053c565b6040516101b2919061214f565b60405180910390f35b3480156101c6575f80fd5b506101cf610661565b6040516101dc919061214f565b60405180910390f35b3480156101f0575f80fd5b506101f9610685565b60405161020893929190612177565b60405180910390f35b34801561021c575f80fd5b506102256106e0565b60405161023291906121ac565b60405180910390f35b348015610246575f80fd5b50610261600480360381019061025c9190612219565b6106e5565b60405161026e9190612257565b60405180910390f35b610291600480360381019061028c9190612270565b6106f8565b005b34801561029e575f80fd5b506102a7610860565b6040516102b491906121ac565b60405180910390f35b3480156102c8575f80fd5b506102d1610865565b6040516102de91906122f6565b60405180910390f35b3480156102f2575f80fd5b506102fb610889565b6040516103089190611f3f565b60405180910390f35b34801561031c575f80fd5b50610325610959565b604051610332919061214f565b60405180910390f35b6103556004803603810190610350919061230f565b61095f565b005b348015610362575f80fd5b5061036b610ce4565b604051610378919061214f565b60405180910390f35b61039b600480360381019061039691906123c6565b610cfc565b005b3480156103a8575f80fd5b506103b1610e4d565b6040516103c093929190612177565b60405180910390f35b3480156103d4575f80fd5b506103ef60048036038101906103ea9190612439565b610ea9565b6040516103fc91906124c6565b60405180910390f35b348015610410575f80fd5b506104196110fa565b60405161042691906124ff565b60405180910390f35b5f8060605f61043e868661111e565b90505f61044b878761114e565b90505f610458888861117c565b90508282829550955095505050509250925092565b610475611c7b565b5f6040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905090565b5f80610547846111de565b90505f61055386611215565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610655575f6309b3473160e01b8788516040516024016105a5929190612518565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506106198386836112699092919063ffffffff16565b6040517f4f95203300000000000000000000000000000000000000000000000000000000815260040161064c9190612546565b60405180910390fd5b80925050509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b601481565b5f6106f083836112c4565b905092915050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461076857336040517f5950c85e00000000000000000000000000000000000000000000000000000000815260040161075f919061214f565b60405180910390fd5b5f34111561085d575f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146107aa57816107ac565b325b90505f8173ffffffffffffffffffffffffffffffffffffffff16346040516107d390612593565b5f6040518083038185875af1925050503d805f811461080d576040519150601f19603f3d011682016040523d82523d5f602084013e610812565b606091505b505090508061085a5781346040517fc8ee485e0000000000000000000000000000000000000000000000000000000081526004016108519291906125a7565b60405180910390fd5b50505b50565b602081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610891611c7b565b60026040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905090565b61080181565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610a11577f0000000000000000000000000000000000000000000000000000000000000000336040517fefa9309d000000000000000000000000000000000000000000000000000000008152600401610a089291906125ce565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610ac3577f0000000000000000000000000000000000000000000000000000000000000000876040517f86fee0c0000000000000000000000000000000000000000000000000000000008152600401610aba9291906125ce565b60405180910390fd5b5f805f60603073ffffffffffffffffffffffffffffffffffffffff16631b2248318a8a6040518363ffffffff1660e01b8152600401610b03929190612621565b5f60405180830381865afa925050508015610b4057506040513d5f823e3d601f19601f82011682018060405250810190610b3d91906126d9565b60015b610bb0573d805f8114610b6e576040519150601f19603f3d011682016040523d82523d5f602084013e610b73565b606091505b50806040517ed4895a000000000000000000000000000000000000000000000000000000008152600401610ba79190612546565b60405180910390fd5b8295508194508093505050503073ffffffffffffffffffffffffffffffffffffffff16635241b4968284866040518463ffffffff1660e01b8152600401610bf993929190612745565b602060405180830381865afa925050508015610c3357506040513d601f19601f82011682018060405250810190610c309190612795565b60015b610cb5573d805f8114610c61576040519150601f19603f3d011682016040523d82523d5f602084013e610c66565b606091505b505f610c71826113bb565b90507f612baef0082f9abcf6dc7b491d75346418381b75756830d7029939026d1b46b981604051610ca29190612546565b60405180910390a1505050505050610cdb565b809450505f341115610ccc57610ccb8434611668565b5b610cd68484611950565b505050505b50505050505050565b73333333333333333333333333333333333333333381565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d6c57336040517f5950c85e000000000000000000000000000000000000000000000000000000008152600401610d63919061214f565b60405180910390fd5b5f81118015610da757505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15610e49577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610e079291906125a7565b6020604051808303815f875af1158015610e23573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e4791906127d4565b505b5050565b6002805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900467ffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905083565b610eb1611cc3565b610eb9611c7b565b5f8315610fce575f6040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150610fc75f80015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f800160149054906101000a900467ffffffffffffffff166112c4565b90506110db565b60026040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505091506110d860025f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f0160149054906101000a900467ffffffffffffffff166112c4565b90505b6110f0818387611b6a9092919063ffffffff16565b9250505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f8282600c60ff1690602c60ff169261113993929190612807565b906111449190612857565b5f1c905092915050565b5f8282602c60ff1690604c60ff169261116993929190612807565b906111749190612857565b905092915050565b60608282604c60ff1690809261119493929190612807565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050905092915050565b5f80825f1c905073ffffffffffffffffffffffffffffffffffffffff8016811161120b5780915050611210565b5f9150505b919050565b5f808251905060148103611238578261122d90612903565b60601c915050611264565b6020810361125f575f8361124b9061297d565b9050611256816111de565b92505050611264565b5f9150505b919050565b606060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001858152506040516020016112ac9190612a78565b60405160208183030381529060405290509392505050565b5f80606061080173ffffffffffffffffffffffffffffffffffffffff1685856040516020016112f4929190612a98565b6040516020818303038152906040526040516113109190612aef565b5f60405180830381855afa9150503d805f8114611348576040519150601f19603f3d011682016040523d82523d5f602084013e61134d565b606091505b5080925081935050508161139a5784846040517fa91ed721000000000000000000000000000000000000000000000000000000008152600401611391929190612a98565b60405180910390fd5b808060200190518101906113ae9190612b82565b5f01519250505092915050565b60605f8273__$583e42a4fcd29c5c863b44cd876f1d3349$__63a405952790916040518263ffffffff1660e01b81526004016113f79190612bf5565b5f60405180830381865af4158015611411573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906114399190612c15565b90505f818060200190518101906114509190612cd9565b90503073ffffffffffffffffffffffffffffffffffffffff1663ebaeefd6825f015183602001516040518363ffffffff1660e01b81526004016114949291906125a7565b5f604051808303815f87803b1580156114ab575f80fd5b505af19250505080156114bc575060015b611505577feb907f6e0de6862ca2ced78e890a55c5e8352dc4051697356bc835abf7cedcac815f015182602001516040516114f89291906125a7565b60405180910390a1611506565b5b3073ffffffffffffffffffffffffffffffffffffffff16638483bc0034835f01516040518363ffffffff1660e01b8152600401611543919061214f565b5f604051808303818588803b15801561155a575f80fd5b505af19350505050801561156c575060015b611659575f3273ffffffffffffffffffffffffffffffffffffffff163460405161159590612593565b5f6040518083038185875af1925050503d805f81146115cf576040519150601f19603f3d011682016040523d82523d5f602084013e6115d4565b606091505b5050905080611617577f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d577323460405161160e9291906125a7565b60405180910390a15b7f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d577825f01513460405161164b9291906125a7565b60405180910390a15061165a565b5b806040015192505050919050565b5f611673825f610ea9565b90505f60025f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16825f01516040516116c090612593565b5f6040518083038185875af1925050503d805f81146116fa576040519150601f19603f3d011682016040523d82523d5f602084013e6116ff565b606091505b505090508061174557826040517fb7e54a0700000000000000000000000000000000000000000000000000000000815260040161173c91906121ac565b60405180910390fd5b73333333333333333333333333333333333333333373ffffffffffffffffffffffffffffffffffffffff16630b0ac0ab8560025f0160149054906101000a900467ffffffffffffffff1685604001516040518463ffffffff1660e01b81526004016117b293929190612177565b5f604051808303815f87803b1580156117c9575f80fd5b505af11580156117db573d5f803e3d5ffd5b505050505f8260200151111561194a573073ffffffffffffffffffffffffffffffffffffffff16638483bc008360200151866040518363ffffffff1660e01b8152600401611829919061214f565b5f604051808303818588803b158015611840575f80fd5b505af193505050508015611852575060015b611948573273ffffffffffffffffffffffffffffffffffffffff16826020015160405161187e90612593565b5f6040518083038185875af1925050503d805f81146118b8576040519150601f19603f3d011682016040523d82523d5f602084013e6118bd565b606091505b50508091505080611906577f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d5773283602001516040516118fd9291906125a7565b60405180910390a15b7f0b0fd82e76ce2ddfcaf289bd460de0980c71a02674dbe00c04e45dfc44e9d57784836020015160405161193b9291906125a7565b60405180910390a1611949565b5b5b50505050565b5f61195c826001610ea9565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb5f80015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16835f01516040518363ffffffff1660e01b81526004016119de9291906125a7565b6020604051808303815f875af11580156119fa573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a1e91906127d4565b5073333333333333333333333333333333333333333373ffffffffffffffffffffffffffffffffffffffff16630b0ac0ab845f800160149054906101000a900467ffffffffffffffff1684604001516040518463ffffffff1660e01b8152600401611a8b93929190612177565b5f604051808303815f87803b158015611aa2575f80fd5b505af1158015611ab4573d5f803e3d5ffd5b505050505f81602001511115611b65577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8483602001516040518363ffffffff1660e01b8152600401611b239291906125a7565b6020604051808303815f875af1158015611b3f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b6391906127d4565b505b505050565b611b72611cc3565b5f8260400151600a611b849190612e7c565b90505f80828781611b9857611b97612ec6565b5b06915081870390505f8388611bad9190612ef3565b90508667ffffffffffffffff168167ffffffffffffffff161115611c49577ff17459c2e89c2b011fa739accb3b853858d0a689d31382b9aa4f56a1ca00f9d38188604051611bfc929190612f23565b60405180910390a15f848883611c129190612f4a565b67ffffffffffffffff16611c269190612f85565b90508791508083611c379190612fc6565b92508084611c459190612ff9565b9350505b60405180606001604052808381526020018481526020018267ffffffffffffffff168152509450505050509392505050565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff1681525090565b60405180606001604052805f81526020015f81526020015f67ffffffffffffffff1681525090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611d1d57611d1c611cfc565b5b8235905067ffffffffffffffff811115611d3a57611d39611d00565b5b602083019150836001820283011115611d5657611d55611d04565b5b9250929050565b5f8060208385031215611d7357611d72611cf4565b5b5f83013567ffffffffffffffff811115611d9057611d8f611cf8565b5b611d9c85828601611d08565b92509250509250929050565b5f819050919050565b611dba81611da8565b82525050565b5f819050919050565b611dd281611dc0565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611e0f578082015181840152602081019050611df4565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611e3482611dd8565b611e3e8185611de2565b9350611e4e818560208601611df2565b611e5781611e1a565b840191505092915050565b5f606082019050611e755f830186611db1565b611e826020830185611dc9565b8181036040830152611e948184611e2a565b9050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ec782611e9e565b9050919050565b611ed781611ebd565b82525050565b5f67ffffffffffffffff82169050919050565b611ef981611edd565b82525050565b606082015f820151611f135f850182611ece565b506020820151611f266020850182611ef0565b506040820151611f396040850182611ef0565b50505050565b5f606082019050611f525f830184611eff565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611f9282611e1a565b810181811067ffffffffffffffff82111715611fb157611fb0611f5c565b5b80604052505050565b5f611fc3611ceb565b9050611fcf8282611f89565b919050565b5f67ffffffffffffffff821115611fee57611fed611f5c565b5b611ff782611e1a565b9050602081019050919050565b828183375f83830152505050565b5f61202461201f84611fd4565b611fba565b9050828152602081018484840111156120405761203f611f58565b5b61204b848285612004565b509392505050565b5f82601f83011261206757612066611cfc565b5b8135612077848260208601612012565b91505092915050565b61208981611dc0565b8114612093575f80fd5b50565b5f813590506120a481612080565b92915050565b6120b381611da8565b81146120bd575f80fd5b50565b5f813590506120ce816120aa565b92915050565b5f805f606084860312156120eb576120ea611cf4565b5b5f84013567ffffffffffffffff81111561210857612107611cf8565b5b61211486828701612053565b935050602061212586828701612096565b9250506040612136868287016120c0565b9150509250925092565b61214981611ebd565b82525050565b5f6020820190506121625f830184612140565b92915050565b61217181611edd565b82525050565b5f60608201905061218a5f830186612140565b6121976020830185612168565b6121a46040830184612168565b949350505050565b5f6020820190506121bf5f830184611db1565b92915050565b6121ce81611ebd565b81146121d8575f80fd5b50565b5f813590506121e9816121c5565b92915050565b6121f881611edd565b8114612202575f80fd5b50565b5f81359050612213816121ef565b92915050565b5f806040838503121561222f5761222e611cf4565b5b5f61223c858286016121db565b925050602061224d85828601612205565b9150509250929050565b5f60208201905061226a5f830184612168565b92915050565b5f6020828403121561228557612284611cf4565b5b5f612292848285016121db565b91505092915050565b5f819050919050565b5f6122be6122b96122b484611e9e565b61229b565b611e9e565b9050919050565b5f6122cf826122a4565b9050919050565b5f6122e0826122c5565b9050919050565b6122f0816122d6565b82525050565b5f6020820190506123095f8301846122e7565b92915050565b5f805f805f805f60a0888a03121561232a57612329611cf4565b5b5f6123378a828b016121db565b97505060206123488a828b01612096565b965050604088013567ffffffffffffffff81111561236957612368611cf8565b5b6123758a828b01611d08565b955095505060606123888a828b016121db565b935050608088013567ffffffffffffffff8111156123a9576123a8611cf8565b5b6123b58a828b01611d08565b925092505092959891949750929550565b5f80604083850312156123dc576123db611cf4565b5b5f6123e9858286016121db565b92505060206123fa858286016120c0565b9150509250929050565b5f8115159050919050565b61241881612404565b8114612422575f80fd5b50565b5f813590506124338161240f565b92915050565b5f806040838503121561244f5761244e611cf4565b5b5f61245c858286016120c0565b925050602061246d85828601612425565b9150509250929050565b61248081611da8565b82525050565b606082015f82015161249a5f850182612477565b5060208201516124ad6020850182612477565b5060408201516124c06040850182611ef0565b50505050565b5f6060820190506124d95f830184612486565b92915050565b5f6124e9826122c5565b9050919050565b6124f9816124df565b82525050565b5f6020820190506125125f8301846124f0565b92915050565b5f6040820190508181035f8301526125308185611e2a565b905061253f6020830184611db1565b9392505050565b5f6020820190508181035f83015261255e8184611e2a565b905092915050565b5f81905092915050565b50565b5f61257e5f83612566565b915061258982612570565b5f82019050919050565b5f61259d82612573565b9150819050919050565b5f6040820190506125ba5f830185612140565b6125c76020830184611db1565b9392505050565b5f6040820190506125e15f830185612140565b6125ee6020830184612140565b9392505050565b5f6126008385611de2565b935061260d838584612004565b61261683611e1a565b840190509392505050565b5f6020820190508181035f83015261263a8184866125f5565b90509392505050565b5f81519050612651816120aa565b92915050565b5f8151905061266581612080565b92915050565b5f61267d61267884611fd4565b611fba565b90508281526020810184848401111561269957612698611f58565b5b6126a4848285611df2565b509392505050565b5f82601f8301126126c0576126bf611cfc565b5b81516126d084826020860161266b565b91505092915050565b5f805f606084860312156126f0576126ef611cf4565b5b5f6126fd86828701612643565b935050602061270e86828701612657565b925050604084015167ffffffffffffffff81111561272f5761272e611cf8565b5b61273b868287016126ac565b9150509250925092565b5f6060820190508181035f83015261275d8186611e2a565b905061276c6020830185611dc9565b6127796040830184611db1565b949350505050565b5f8151905061278f816121c5565b92915050565b5f602082840312156127aa576127a9611cf4565b5b5f6127b784828501612781565b91505092915050565b5f815190506127ce8161240f565b92915050565b5f602082840312156127e9576127e8611cf4565b5b5f6127f6848285016127c0565b91505092915050565b5f80fd5b5f80fd5b5f808585111561281a576128196127ff565b5b8386111561282b5761282a612803565b5b6001850283019150848603905094509492505050565b5f82905092915050565b5f82821b905092915050565b5f6128628383612841565b8261286d8135611dc0565b925060208210156128ad576128a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261284b565b831692505b505092915050565b5f819050602082019050919050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b5f6128fa82516128c4565b80915050919050565b5f61290d82611dd8565b82612917846128b5565b9050612922816128ef565b925060148210156129625761295d7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360140360080261284b565b831692505b5050919050565b5f6129748251611dc0565b80915050919050565b5f61298782611dd8565b82612991846128b5565b905061299c81612969565b925060208210156129dc576129d77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261284b565b831692505b5050919050565b5f82825260208201905092915050565b5f6129fd82611dd8565b612a0781856129e3565b9350612a17818560208601611df2565b612a2081611e1a565b840191505092915050565b5f606083015f830151612a405f860182611ece565b506020830151612a536020860182612477565b5060408301518482036040860152612a6b82826129f3565b9150508091505092915050565b5f6020820190508181035f830152612a908184612a2b565b905092915050565b5f604082019050612aab5f830185612140565b612ab86020830184612168565b9392505050565b5f612ac982611dd8565b612ad38185612566565b9350612ae3818560208601611df2565b80840191505092915050565b5f612afa8284612abf565b915081905092915050565b5f80fd5b5f80fd5b5f81519050612b1b816121ef565b92915050565b5f60608284031215612b3657612b35612b05565b5b612b406060611fba565b90505f612b4f84828501612b0d565b5f830152506020612b6284828501612b0d565b6020830152506040612b7684828501612b0d565b60408301525092915050565b5f60608284031215612b9757612b96611cf4565b5b5f612ba484828501612b21565b91505092915050565b5f82825260208201905092915050565b5f612bc782611dd8565b612bd18185612bad565b9350612be1818560208601611df2565b612bea81611e1a565b840191505092915050565b5f6020820190508181035f830152612c0d8184612bbd565b905092915050565b5f60208284031215612c2a57612c29611cf4565b5b5f82015167ffffffffffffffff811115612c4757612c46611cf8565b5b612c53848285016126ac565b91505092915050565b5f60608284031215612c7157612c70612b05565b5b612c7b6060611fba565b90505f612c8a84828501612781565b5f830152506020612c9d84828501612643565b602083015250604082015167ffffffffffffffff811115612cc157612cc0612b09565b5b612ccd848285016126ac565b60408301525092915050565b5f60208284031215612cee57612ced611cf4565b5b5f82015167ffffffffffffffff811115612d0b57612d0a611cf8565b5b612d1784828501612c5c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115612da257808604811115612d7e57612d7d612d20565b5b6001851615612d8d5780820291505b8081029050612d9b85612d4d565b9450612d62565b94509492505050565b5f82612dba5760019050612e75565b81612dc7575f9050612e75565b8160018114612ddd5760028114612de757612e16565b6001915050612e75565b60ff841115612df957612df8612d20565b5b8360020a915084821115612e1057612e0f612d20565b5b50612e75565b5060208310610133831016604e8410600b8410161715612e4b5782820a905083811115612e4657612e45612d20565b5b612e75565b612e588484846001612d59565b92509050818404811115612e6f57612e6e612d20565b5b81810290505b9392505050565b5f612e8682611da8565b9150612e9183611edd565b9250612ebe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612dab565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612efd82611da8565b9150612f0883611da8565b925082612f1857612f17612ec6565b5b828204905092915050565b5f604082019050612f365f830185612168565b612f436020830184612168565b9392505050565b5f612f5482611edd565b9150612f5f83611edd565b9250828203905067ffffffffffffffff811115612f7f57612f7e612d20565b5b92915050565b5f612f8f82611da8565b9150612f9a83611da8565b9250828202612fa881611da8565b91508282048414831517612fbf57612fbe612d20565b5b5092915050565b5f612fd082611da8565b9150612fdb83611da8565b9250828203905081811115612ff357612ff2612d20565b5b92915050565b5f61300382611da8565b915061300e83611da8565b925082820190508082111561302657613025612d20565b5b9291505056fea264697066735822122071985d961321e1bdce2201740af446e08456eb6ced8aecf3761c5b0de55378c264736f6c634300081600336080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220125f40cadb226d0e92b66f27ef28f3e0431920a037ea8c8d491651825c93a06e64736f6c63430008160033a26469706673582212208f3e73308ca674a0082038ff09690dcdc4b5409f22145a7cb5cc205c04108d6464736f6c63430008160033",
    "sourceMap": "977:10341:77:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:1311;;;:::i;:::-;;8793:2222;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5416:1341;;;:::i;:::-;;1479:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2907:134:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3823:151;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1089:86:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3684:133:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3385:141;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11156:160:77;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6809:1932;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1727:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3193:186:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1060:23:77;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3184:880;;;:::i;:::-;;3047:140:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1787:74:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:146:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1507:18:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1531:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2754:147:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2459:141;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1243:204:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1276:101:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1677:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1030:24;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1408:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1630:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1181:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1584:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2606:142:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4070:1340:77;;;:::i;:::-;;1016:26:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1867:1311:77;317:28:38;309:37;;1901:19:77;;;:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1982:175;;;;;;;;2028:54;2077:4;2028:48;:54::i;:::-;1982:175;;;;;;2109:4;1982:175;;;;;;2140:6;1982:175;;;;;1974:5;:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2175:164;;;;;;;;2221:42;2175:164;;;;;;2290:4;2175:164;;;;;;2321:7;2175:164;;;;;2168:4;:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:38;309:37;;2350:7:77;;;1335:42;2400:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2392:45;;;;;;;;;;;;;;;;;;;;;;;;;2350:88;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1335:42;2448:74;;;2536:5;:24;;;;;;;;;;;;2574:5;:17;;;;;;;;;;;;2605:16;2448:183;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1335:42;2642:74;;;2730:4;:23;;;;;;;;;;;;2767:4;:16;;;;;;;;;;;;2797;2642:181;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1133:42;2887:10;2840:58;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2834:3;;:64;;;;;;;;;;;;;;;;;;1133:42;3007:3;;;;;;;;;;;3025:5;:17;;;;;;;;;;;;3056:5;:17;;;;;;;;;;;;2931:152;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2909:19;;:174;;;;;;;;;;;;;;;;;;3103:3;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3093:7;;:30;;;;;;;;;;;;;;;;;;317:28:38;309:37;;3134:7:77;;;1133:42;3161:9;3134:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:1311::o;8793:2222::-;8925:54;8931:15;8925:54;;8948:1;8970:8;8951:16;:27;;;;:::i;:::-;8925:54;;:5;:54::i;:::-;8900:80;;8991:27;9038:15;1717:4;9021:32;;;;:::i;:::-;8991:62;;;;9063:69;9076:3;;;;;;;;;;;9090:19;;;;;;;;;;;9112;9063:4;:69::i;:::-;9143:18;9172:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;9143:46;;9199:29;9237:5;:17;;;;;;;;;;;;9231:2;:23;;;;:::i;:::-;9199:55;;1335:42;9265:74;;;9353:5;:24;;;;;;;;;;;;9391:5;:17;;;;;;;;;;;;9446:21;1717:4;9429:38;;;;;;:::i;:::-;9265:213;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9489:23;9532:10;9515:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;9489:54;;9553:25;9581:176;9620:1;1441:5;9656:19;9706:28;9723:10;9706:16;:28::i;:::-;9736:10;9689:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9581:25;:176::i;:::-;9553:204;;9768:37;9853:21;9831:19;:43;;;;:::i;:::-;9808:19;:67;;;;:::i;:::-;9768:107;;1717:4;9889:46;;:29;:46;9885:320;;;317:28:38;309:37;;9951:13:77;;;9973:19;;;;;;;;;;;9951:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10013:181;10101:21;10079:19;:43;;;;:::i;:::-;10158:21;10148:7;:31;;;;:::i;:::-;10013:181;;;;;;;:::i;:::-;;;;;;;;9885:320;317:28:38;309:37;;10215:13:77;;;10237:3;;;;;;;;;;;10215:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10303:5;:24;;;;;;;;;;;;10257:87;;10281:19;;;;;;;;;;;10257:87;;;1717:4;10257:87;;;;;;:::i;:::-;;;;;;;;10410:1;10392:15;:19;;;10388:129;;;10478:10;10432:74;;10456:19;;;;;;;;;;;10432:74;;;10490:15;10432:74;;;;;;:::i;:::-;;;;;;;;10388:129;317:28:38;309:37;;10527:13:77;;;1133:42;10527:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10569:27;10599:9;:17;;;10569:47;;10626:19;;;;;;;;;;;:29;;;1776:5;1827:8;:34;;;;:::i;:::-;10626:110;;10689:3;;;;;;;;;;;10703:1;10695:10;;10707:12;10721:10;10626:110;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10746:74;10755:9;:17;;;1776:5;10774:45;;:19;:45;;;;:::i;:::-;10746:8;:74::i;:::-;317:28:38;309:37;;10830:12:77;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10855:52;10864:3;;;;;;;;;;;:13;;;10878:10;10864:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10891:15;10855:52;;:8;:52::i;:::-;10918:49;10935:19;;;;;;;;;;;10927:36;;;10965:1;10918:8;:49::i;:::-;10977:31;10986:10;:18;;;11006:1;10977:8;:31::i;:::-;8890:2125;;;;;;;8793:2222;:::o;5416:1341::-;5574:64;5587:3;;;;;;;;;;;5601:19;;;;;;;;;;;1717:4;5574:64;;:4;:64::i;:::-;5649:23;5692:5;;;;;;;;;;;5675:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;5649:58;;5718:25;5746:166;5785:1;1441:5;1717:4;5746:166;;5866:23;5883:5;;;;;;;;;;;5866:16;:23::i;:::-;5891:10;5849:53;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5746:25;:166::i;:::-;5718:194;;5923:20;5946:4;:22;;;5969:12;5946:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5923:59;;5992:33;6064:93;;;6171:7;6192;:14;6028:188;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5992:224;;317:28:38;309:37;;6227:13:77;;;6249:3;;;;;;;;;;;6227:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6315:5;;;;;;;;;;;6269:68;;6293:19;;;;;;;;;;;6269:68;;;1717:4;6269:68;;;;;;:::i;:::-;;;;;;;;317:28:38;309:37;;6348:13:77;;;6370:19;;;;;;;;;;;6348:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6406:59;6444:20;6406:59;;;;;;:::i;:::-;;;;;;;;317:28:38;309:37;;6476:13:77;;;1133:42;6476:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6518:19;;;;;;;;;;;:29;;;6556:3;;;;;;;;;;;6570:1;6562:10;;6574:12;6588:10;6518:85;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:38;309:37;;6613:12:77;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6638:56;6647:3;;;;;;;;;;;:13;;;6669:19;;;;;;;;;;;6647:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6692:1;6638:8;:56::i;:::-;6704:46;6713:3;;;;;;;;;;;:13;;;6727:5;;;;;;;;;;;6713:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:4;6704:46;;:8;:46::i;:::-;5478:1279;;;;5416:1341::o;1479:21::-;;;;;;;;;;;;;:::o;2907:134:43:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;3823:151::-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;1089:86:77:-;1133:42;1089:86;:::o;3684:133:43:-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;3385:141::-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;11156:160:77:-;11235:12;11266:43;11296:12;;11266:29;:43::i;:::-;11259:50;;11156:160;;;;:::o;6809:1932::-;6928:54;6934:15;6928:54;;6951:1;6973:8;6954:16;:27;;;;:::i;:::-;6928:54;;:5;:54::i;:::-;6903:80;;6994:27;7041:15;1717:4;7024:32;;;;:::i;:::-;6994:62;;;;7066:69;7079:3;;;;;;;;;;;7093:19;;;;;;;;;;;7115;7066:4;:69::i;:::-;7146:29;7184:5;:17;;;;;;;;;;;;7178:2;:23;;;;:::i;:::-;7146:55;;1335:42;7212:74;;;7300:5;:24;;;;;;;;;;;;7338:5;:17;;;;;;;;;;;;7393:21;1717:4;7376:38;;;;;;:::i;:::-;7212:213;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7436:23;7479:5;;;;;;;;;;;7462:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;7436:49;;7495:25;7523:171;7562:1;1441:5;7598:19;7648:23;7665:5;;;;;;;;;;;7648:16;:23::i;:::-;7673:10;7631:53;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7523:25;:171::i;:::-;7495:199;;7705:37;7790:21;7768:19;:43;;;;:::i;:::-;7745:19;:67;;;;:::i;:::-;7705:107;;1717:4;7826:46;;:29;:46;7822:320;;;317:28:38;309:37;;7888:13:77;;;7910:19;;;;;;;;;;;7888:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7950:181;8038:21;8016:19;:43;;;;:::i;:::-;8095:21;8085:7;:31;;;;:::i;:::-;7950:181;;;;;;;:::i;:::-;;;;;;;;7822:320;317:28:38;309:37;;8152:13:77;;;8174:3;;;;;;;;;;;8152:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8240:5;:24;;;;;;;;;;;;8194:87;;8218:19;;;;;;;;;;;8194:87;;;1717:4;8194:87;;;;;;:::i;:::-;;;;;;;;8347:1;8329:15;:19;;;8325:124;;;8415:5;;;;;;;;;;;8369:69;;8393:19;;;;;;;;;;;8369:69;;;8422:15;8369:69;;;;;;:::i;:::-;;;;;;;;8325:124;317:28:38;309:37;;8459:13:77;;;1133:42;8459:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8501:19;;;;;;;;;;;:29;;;8539:3;;;;;;;;;;;8553:1;8545:10;;8557:12;8571:10;8501:85;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:38;309:37;;8596:12:77;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8621:56;8630:3;;;;;;;;;;;:13;;;8652:19;;;;;;;;;;;8630:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8675:1;8621:8;:56::i;:::-;8687:47;8696:3;;;;;;;;;;;:13;;;8710:5;;;;;;;;;;;8696:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8718:15;8687:47;;:8;:47::i;:::-;6893:1848;;;;;6809:1932;:::o;1727:54::-;1776:5;1727:54;:::o;3193:186:43:-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3193:186;:::o;1060:23:77:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3184:880::-;3321:64;3334:3;;;;;;;;;;;3348:19;;;;;;;;;;;1717:4;3321:64;;:4;:64::i;:::-;3396:25;:30;;;;;;;;;;;;;;317:28:38;309:37;;3437:15:77;;;3489:77;;;3466:105;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3437:144;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3592:27;1133:42;3622:34;;;3592:64;;317:28:38;309:37;;3667:13:77;;;1133:42;3667:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3709:19;;;;;;;;;;;:29;;;1776:5;1827:8;:34;;;;:::i;:::-;3709:110;;3772:3;;;;;;;;;;;3786:1;3778:10;;3790:12;3804:10;3709:110;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:38;309:37;;3829:12:77;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3854:69;3863:3;;;;;;;;;;;:13;;;3885:19;;;;;;;;;;;3863:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:4;3854:69;;:8;:69::i;:::-;3933:49;3950:19;;;;;;;;;;;3942:36;;;3980:1;3933:8;:49::i;:::-;3992:65;1133:42;4001:34;;;4037:19;3992:8;:65::i;:::-;3225:839;;3184:880::o;3047:140:43:-;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:140;:::o;1787:74:77:-;1776:5;1827:8;:34;;;;:::i;:::-;1787:74;:::o;3532:146:43:-;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:146;:::o;1507:18:77:-;;;;;;;;;;;;;:::o;1531:46::-;;;;;;;;;;;;;:::o;2754:147:43:-;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:147;:::o;2459:141::-;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;:::o;1243:204:39:-;1282:4;1302:7;;;;;;;;;;;1298:143;;;1332:7;;;;;;;;;;;1325:14;;;;1298:143;1428:1;1420:10;;219:28;211:37;;1377:7;;;219:28;211:37;;1398:17;1377:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;;:::o;1276:101:77:-;1335:42;1276:101;:::o;1677:44::-;1717:4;1677:44;:::o;1030:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1408:38::-;1441:5;1408:38;:::o;1630:40::-;;;;;;;;;;;;;:::o;1181:89::-;1228:42;1181:89;:::o;1584:40::-;;;;;;;;;;;;;:::o;2606:142:43:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;4070:1340:77:-;4223:64;4236:3;;;;;;;;;;;4250:19;;;;;;;;;;;1717:4;4223:64;;:4;:64::i;:::-;4298:23;4341:5;;;;;;;;;;;4324:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;4298:58;;4367:25;4395:177;4434:1;1441:5;1717:4;4395:177;;4542:5;;;;;;;;;;;4525:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;4515:34;;;;;;4551:10;4498:64;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4395:25;:177::i;:::-;4367:205;;4583:20;4606:4;:22;;;4629:12;4606:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4583:59;;4652:33;4724:93;;;4831:7;4852;:14;4688:188;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4652:224;;317:28:38;309:37;;4887:13:77;;;4909:19;;;;;;;;;;;4887:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4945:59;4983:20;4945:59;;;;;;:::i;:::-;;;;;;;;5014:27;5044:9;:17;;;5014:47;;317:28:38;309:37;;5072:13:77;;;1133:42;5072:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5114:19;;;;;;;;;;;:29;;;1776:5;1827:8;:34;;;;:::i;:::-;5114:110;;5177:3;;;;;;;;;;;5191:1;5183:10;;5195:12;5209:10;5114:110;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:38;309:37;;5234:12:77;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5259:65;5268:9;:17;;;1776:5;1827:8;:34;;;;:::i;:::-;5287:36;;:19;:36;;;;:::i;:::-;5259:8;:65::i;:::-;5334:69;5343:3;;;;;;;;;;;:13;;;5365:19;;;;;;;;;;;5343:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:4;5334:69;;:8;:69::i;:::-;4127:1283;;;;;4070:1340::o;1016:26:50:-;;;;;;;;;;;;;:::o;1797:177:7:-;1875:7;1953:12;1283:42;1391:43;;1917:48;;;;:::i;:::-;1894:73;;1797:177;;;:::o;2915:199:49:-;2998:14;3033:19;3040:1;3043:3;3048;3033:6;:19::i;:::-;3024:28;;3062:45;;;;;;;;;;;;;;;;;;3100:6;3062:21;:45::i;:::-;2915:199;;;;;:::o;26964:117:41:-;27046:28;27051:5;27058:2;27062:4;27068:5;27046:4;:28::i;:::-;26964:117;;;:::o;11021:129:77:-;11085:7;11135:5;11119:23;;11111:32;;11104:39;;11021:129;;;:::o;640:284:36:-;824:17;877:6;885:7;894:9;905:11;860:57;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;853:64;;640:284;;;;;;:::o;2270:110:39:-;219:28;211:37;;2349:11;;;2361:4;2367:5;2349:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2270:110;;:::o;2273:128:36:-;2337:12;2368:4;;335:2;2368:26;;;;;;;;;;;:::i;:::-;2361:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2273:128;;;;:::o;1646:1263:49:-;1730:14;1771:3;1764;:10;;1756:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2075:3;2070:1;:8;;:20;;;;;2087:3;2082:1;:8;;2070:20;2066:34;;;2099:1;2092:8;;;;2066:34;2111:12;2138:1;2132:3;2126;:9;;;;:::i;:::-;:13;;;;:::i;:::-;2111:28;;2334:1;2329;:6;;:18;;;;;2346:1;2339:4;:8;2329:18;2325:38;;;2362:1;2356:3;:7;;;;:::i;:::-;2349:14;;;;;2325:38;2396:1;1142:78;2382:15;;;;:::i;:::-;2377:1;:20;;:46;;;;;2422:1;1142:78;2408:15;;;;:::i;:::-;2401:4;:22;2377:46;2373:82;;;2453:1;1142:78;2439:15;;;;:::i;:::-;2432:3;:23;;;;:::i;:::-;2425:30;;;;;2373:82;2559:3;2555:1;:7;2551:352;;;2578:12;2597:3;2593:1;:7;;;;:::i;:::-;2578:22;;2614:11;2635:4;2628;:11;;;;:::i;:::-;2614:25;;2664:1;2657:3;:8;2653:24;;2674:3;2667:10;;;;;;;2653:24;2712:1;2706:3;2700;:9;;;;:::i;:::-;:13;;;;:::i;:::-;2691:22;;2564:160;;2551:352;;;2738:3;2734:1;:7;2730:173;;;2757:12;2778:1;2772:3;:7;;;;:::i;:::-;2757:22;;2793:11;2814:4;2807;:11;;;;:::i;:::-;2793:25;;2843:1;2836:3;:8;2832:24;;2853:3;2846:10;;;;;;;2832:24;2891:1;2885:3;2879;:9;;;;:::i;:::-;:13;;;;:::i;:::-;2870:22;;2743:160;;2730:173;2551:352;1746:1163;1646:1263;;;;;;:::o;10318:162::-;10402:71;10465:2;10469;10418:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10402:15;:71::i;:::-;10318:162;;:::o;27360:837:41:-;27489:20;27513:5;:16;;27553:10;27565:2;27530:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27513:56;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27486:83;;;27579:15;27608:7;27597:30;;;;;;;;;;;;:::i;:::-;27579:48;;27664:71;27730:4;27664:51;27712:2;27664:38;27691:10;27664:38;;:22;27680:5;27664:8;:15;;:22;;;;:::i;:::-;:26;;:38;;;;:::i;:::-;:47;;:51;;;;:::i;:::-;:65;;:71;;;;:::i;:::-;27781:6;27777:414;;;27806:23;27833:5;:16;;27873:10;27850:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27833:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27803:82;;;27899:14;27927:10;27916:33;;;;;;;;;;;;:::i;:::-;27899:50;;27974:7;27967:4;:14;27963:144;;;28022:4;28012:7;:14;;;;:::i;:::-;28001:26;;;;;:::i;:::-;;;27963:144;;;28084:7;28077:4;:14;;;;:::i;:::-;28066:26;;;;;:::i;:::-;;;27963:144;28120:60;28173:6;28120:38;28147:10;28120:38;;:22;28136:5;28120:8;:15;;:22;;;;:::i;:::-;:26;;:38;;;;:::i;:::-;:52;;:60;;;;:::i;:::-;27789:402;;27777:414;27445:752;;27360:837;;;;:::o;9648:133:49:-;9719:55;9766:7;9719:46;9745:19;9719:25;:46::i;:::-;:55;;:::i;:::-;9648:133;:::o;13258:156:46:-;13334:18;13371:36;13393:4;13399:7;13371:21;:36::i;:::-;13364:43;;13258:156;;;;:::o;13420:143::-;13489:18;13526:30;13545:4;13551;13526:18;:30::i;:::-;13519:37;;13420:143;;;;:::o;13725:152::-;13799:18;13836:34;13860:4;13866:3;13836:23;:34::i;:::-;13829:41;;13725:152;;;;:::o;14946:120::-;15026:33;15040:4;15054:3;15046:12;;15026:13;:33::i;:::-;14946:120;;:::o;9787:381:49:-;9861:21;9885:7;:14;9861:38;;9909:22;779:42;9909:41;;10059:2;10050:7;10046:16;10150:1;10147;10132:13;10118:12;10102:14;10095:5;10084:68;10012:150;;;;9787:381;:::o;9407:235::-;9532:42;9622:4;9613:13;;9407:235;;;:::o;6747:156:46:-;6823:18;6868:7;6853:4;:12;;;:22;;;;;;;;;;;;;;;;;;6892:4;6885:11;;6747:156;;;;:::o;6909:143::-;6978:18;7020:4;7008;:9;;;:16;;;;;;;;;;;;;;;;;;7041:4;7034:11;;6909:143;;;;:::o;7400:179::-;7474:18;7504:4;:10;;7544:3;7528:21;;7520:30;;7504:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7568:4;7561:11;;7400:179;;;;:::o;15438:1484::-;15518:11;15532:4;:12;;;;;;;;;;;;15518:26;;15554:11;15568:4;:9;;;;;;;;;;;;15554:23;;15587:19;15609:4;:11;;;15587:33;;15630:19;15652:34;15681:4;15652:28;:34::i;:::-;15630:56;;15702:4;:10;;:15;15713:3;15702:15;;;;;;;;;;;;;;;:21;15718:4;15702:21;;;;;;;;;;;;;;;;;:71;15751:6;15759:11;15734:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15724:48;;;;;;15702:71;;;;;;;;;;;:77;;;;;;;;;;;;15697:126;;15795:17;15800:4;15806:5;15795:4;:17::i;:::-;;15697:126;15832:21;15856:4;:10;;:15;15867:3;15856:15;;;;;;;;;;;;;;;:21;15872:4;15856:21;;;;;;;;;;;;;;;;;:71;15905:6;15913:11;15888:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15878:48;;;;;;15856:71;;;;;;;;;;;15832:95;;15980:1;15960:4;:16;;;15942:4;:15;;;:34;;;;:::i;:::-;15941:40;15937:460;;;15997:14;16045:4;:16;;;16027:4;:15;;;:34;;;;:::i;:::-;16020:3;:42;;;;:::i;:::-;16014:1;:49;;;;:::i;:::-;15997:66;;16117:6;16110:3;16102:12;;:21;12836:28;12828:37;;16313:11;;;16325:6;16313:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16169:185;;;;;;;;:::i;:::-;;;;;;;;;;;;;16077:309;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;15983:414;15937:460;16406:14;12836:28;12828:37;;16423:7;;;16431:3;16444:4;:9;;;16436:18;;16423:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16406:49;;16465:16;16484:91;16519:6;16535:3;16527:12;;16541:4;:15;;;16558:4;:16;;;16484:34;:91::i;:::-;16465:110;;12836:28;12828:37;;16586:8;;;16595:3;16608:4;:9;;;16600:18;;16620:8;16586:43;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16641:12;16655:18;16677:31;16703:4;16677:25;:31::i;:::-;16640:68;;;;16724:7;16723:8;:29;;;;16749:3;16735:10;:17;;16723:29;16719:176;;;12836:28;12828:37;;16768:8;;;16777:3;16790:4;:9;;;16782:18;;16802:6;16768:41;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16823:61;;;;;;;;;;:::i;:::-;;;;;;;;16719:176;16904:11;16910:4;16904:5;:11::i;:::-;15508:1414;;;;;;;;;15438:1484;;:::o;953:236::-;1024:12;1077:1;1052:4;:14;;:21;;;;;:::i;:::-;;;:26;1048:135;;1101:19;1109:4;:10;;1101:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:19::i;:::-;1094:26;;;;1048:135;1158:4;:14;;1151:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:236;;;;:::o;13111:141::-;13181:7;13207:33;13227:4;13233:6;13207:19;:33::i;:::-;:38;;;13200:45;;13111:141;;;;:::o;12455:300::-;12608:16;12735:11;12723:8;:23;;12677:41;12694:10;12706:11;12677:16;:41::i;:::-;12676:42;12664:8;12656:17;;:62;12655:92;12647:101;;12640:108;;12455:300;;;;;;:::o;1251:343::-;1319:4;1325:7;1344:17;1381:4;:9;;;;;;;;;;;;1392:19;1406:4;1392:13;:19::i;:::-;1364:48;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1344:68;;1423:12;1437:17;1458:4;:12;;;;;;;;;;;;:23;;1482:4;1458:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:65;;;;1497:14;1514:38;1529:4;1540;:11;;;1535:2;:16;;;;:::i;:::-;1514:14;:38::i;:::-;1497:55;;1571:7;1580:6;1563:24;;;;;;;;1251:343;;;:::o;14704:92::-;14763:26;14784:4;14763:20;:26::i;:::-;14704:92;:::o;11186:393::-;11245:12;11269:19;11312:2;11301:1;:8;:13;;;;:::i;:::-;11291:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11269:46;;11330:9;11325:224;11349:1;:8;11345:1;:12;11325:224;;;11378:9;11390:1;11392;11390:4;;;;;;;;:::i;:::-;;;;;;;;11378:16;;11523:1;11517;11513:2;11509:10;11505:2;11501:19;11493:6;11489:32;11482:43;11464:75;11359:3;;;;;;;11325:224;;;;11566:6;11559:13;;;11186:393;;;:::o;4249:2492::-;4319:16;4347:11;4361:4;:12;;;;;;;;;;;;4347:26;;4383:11;4397:4;:9;;;;;;;;;;;;4383:23;;4416:19;4438:4;:11;;;4416:33;;4459:19;4481;4495:4;4481:13;:19::i;:::-;4459:41;;4551:4;:10;;:15;4562:3;4551:15;;;;;;;;;;;;;;;:21;4567:4;4551:21;;;;;;;;;;;;;;;;;:71;4600:6;4608:11;4583:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4573:48;;;;;;4551:71;;;;;;;;;;;:77;;;;;;;;;;;;4547:255;;;4648:6;4644:56;;;4674:11;4680:4;4674:5;:11::i;:::-;4644:56;4720:4;:10;;:15;4731:3;4720:15;;;;;;;;;;;;;;;:21;4736:4;4720:21;;;;;;;;;;;;;;;;;:71;4769:6;4777:11;4752:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4742:48;;;;;;4720:71;;;;;;;;;;;4713:78;;;;;;;;4547:255;670:28;662:37;;4811:9;;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:18;4857:16;4868:4;4857:10;:16::i;:::-;4832:41;;;4884:22;670:28;662:37;;4911:11;;;4931:3;4911:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4883:53;;;4967:1;4951:5;:12;:17;4947:1460;;4984:74;;;;;;;;;;:::i;:::-;;;;;;;;4947:1460;5094:9;5106:5;:12;5094:24;;5089:1308;5127:1;5120:3;;;;:::i;:::-;;;;:8;5089:1308;;5149:12;670:28;662:37;;5164:7;;;5172:3;5177:5;5183:1;5177:8;;;;;;;;:::i;:::-;;;;;;;;5164:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5149:37;;5224:1;5216:10;;5208:4;:18;5204:114;;5255:44;5276:3;5289:5;5295:1;5289:8;;;;;;;;:::i;:::-;;;;;;;;5281:17;;5255:44;;;;;;;:::i;:::-;;;;;;;;5204:114;5341:36;5362:4;5368:5;5374:1;5368:8;;;;;;;;:::i;:::-;;;;;;;;5341:20;:36::i;:::-;5336:92;;5401:8;;;5336:92;5447:18;5467:19;5491:1;5494;5446:50;;;;5519:4;:25;;;;;;;;;;;;5515:256;;;5568:10;5635:27;5647:4;5653:5;5659:1;5653:8;;;;;;;;:::i;:::-;;;;;;;;5635:11;:27::i;:::-;5600:62;;;;;;;;;;;;5689:5;5684:69;;5722:8;;;;;;5684:69;5546:225;5515:256;5883:14;5963:11;5917:41;5934:10;5946:11;5917:16;:41::i;:::-;5909:4;5901:13;;:57;5900:74;;5883:91;;6020:6;6005:10;5997:19;;:29;5993:84;;6050:8;;;;;;5993:84;6100:89;6110:3;6115:4;6148:6;6156:11;6131:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6121:48;;;;;;6179:5;6185:1;6179:8;;;;;;;;:::i;:::-;;;;;;;;6171:17;;6100:89;;;;;;;;;:::i;:::-;;;;;;;;6301:58;;;;;;;;6318:5;6324:1;6318:8;;;;;;;;:::i;:::-;;;;;;;;6310:17;;6301:58;;;;6329:10;6301:58;;;;6341:11;6301:58;;;;6354:4;6301:58;;;;;6207:4;:10;;:15;6218:3;6207:15;;;;;;;;;;;;;;;:21;6223:4;6207:21;;;;;;;;;;;;;;;;;:71;6256:6;6264:11;6239:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6229:48;;;;;;6207:71;;;;;;;;;;;:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6377:5;;;;;;5089:1308;;;;;6438:4;:10;;:15;6449:3;6438:15;;;;;;;;;;;;;;;:21;6454:4;6438:21;;;;;;;;;;;;;;;;;:71;6487:6;6495:11;6470:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6460:48;;;;;;6438:71;;;;;;;;;;;:77;;;;;;;;;;;;6417:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;6603:6;6599:48;;;6625:11;6631:4;6625:5;:11::i;:::-;6599:48;6663:4;:10;;:15;6674:3;6663:15;;;;;;;;;;;;;;;:21;6679:4;6663:21;;;;;;;;;;;;;;;;;:71;6712:6;6720:11;6695:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6685:48;;;;;;6663:71;;;;;;;;;;;6656:78;;;;;;;;4249:2492;;;;;:::o;12017:376::-;12107:12;12374:1;12370;12356:10;12343:11;12339:28;12334:3;12330:38;12326:46;12322:54;12309:11;12305:72;12297:80;;12017:376;;;;:::o;10876:304::-;10954:7;10973:11;10995;11020:2;11009:1;:8;:13;:29;;11030:1;:8;11009:29;;;11025:2;11009:29;10995:43;;11053:9;11048:106;11072:3;11068:1;:7;11048:106;;;11141:1;11137;:5;;;;:::i;:::-;11127:4;11111:20;;:1;11122;11113:6;:10;;;;:::i;:::-;11111:13;;;;;;;;:::i;:::-;;;;;;;;;;:20;11103:29;;;:40;;11096:47;;;;11077:3;;;;;;;11048:106;;;;11170:3;11163:10;;;;10876:304;;;;:::o;11585:239::-;11651:4;:12;;;11644:19;;;;;;;;;;;11680:4;:9;;;11673:16;;;;;;;;;;;11706:4;:10;;;11699:17;;;;:::i;:::-;11733:4;:11;;11726:18;;;11761:4;:25;;;11754:32;;;;;;;;;;;11803:4;:14;;;11796:21;;;;:::i;:::-;11585:239;:::o;1851:546::-;1938:4;1954:21;670:28;662:37;;1978:7;;;1986:4;:12;;;;;;;;;;;;2000:4;1978:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1954:51;;2016:12;2030:23;2057:16;2068:4;2057:10;:16::i;:::-;2015:58;;;;2084:15;2129:1;2121:10;;2102:15;:29;:65;;2165:1;2157:10;;2102:65;;;739:78;2134:20;;2102:65;2084:83;;670:28;662:37;;2177:8;;;2186:4;:12;;;;;;;;;;;;2200:4;2206:7;2177:37;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:22;2254:16;2265:4;2254:10;:16::i;:::-;2225:45;;;670:28;662:37;;2281:8;;;2290:4;:12;;;;;;;;;;;;2304:4;2310:13;2281:43;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:7;:46;;;;;2374:14;2355:15;:33;;2343:46;2335:55;;;;;;;1851:546;;;;:::o;3080:534::-;3158:4;3164:7;3173;3192:21;670:28;662:37;;3216:7;;;3224:4;:12;;;;;;;;;;;;3238:4;3216:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3192:51;;3255:14;3271:18;3293:28;3304:4;3310;3316;3293:10;:28::i;:::-;3254:67;;;;3332:15;3349:19;3372:29;3383:4;3389;3395:5;3372:10;:29::i;:::-;3331:70;;;;670:28;662:37;;3497:8;;;3506:4;:12;;;;;;;;;;;;3520:4;3526:13;3497:43;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:9;:23;;;;;3571:10;3558:23;3583:10;3595:11;3550:57;;;;;;;;;;;3080:534;;;;;:::o;2560:514::-;2648:4;2654:7;2678:14;2673:368;2707:3;2698:6;:12;2673:368;;;2736:18;2757:4;:44;;2794:6;2789:1;:11;;2757:44;;;2777:6;2771:3;:12;;;;:::i;:::-;2765:1;:19;;2757:44;2736:65;;670:28;662:37;;2815:8;;;2824:4;:12;;;;;;;;;;;;2838:4;2852:10;2844:19;;2815:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2880:12;2894;2910:16;2921:4;2910:10;:16::i;:::-;2879:47;;;;2945:7;:30;;;;;2973:1;2965:4;2957:13;;:17;2945:30;2941:90;;;3003:4;3009:6;2995:21;;;;;;;;;;2941:90;2722:319;;;2712:8;;;;;;;2673:368;;;;3058:5;3065:1;3050:17;;;;2560:514;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:84:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:101;370:7;410:18;403:5;399:30;388:41;;334:101;;;:::o;441:120::-;513:23;530:5;513:23;:::i;:::-;506:5;503:34;493:62;;551:1;548;541:12;493:62;441:120;:::o;567:137::-;612:5;650:6;637:20;628:29;;666:32;692:5;666:32;:::i;:::-;567:137;;;;:::o;710:327::-;768:6;817:2;805:9;796:7;792:23;788:32;785:119;;;823:79;;:::i;:::-;785:119;943:1;968:52;1012:7;1003:6;992:9;988:22;968:52;:::i;:::-;958:62;;914:116;710:327;;;;:::o;1043:93::-;1079:7;1119:10;1112:5;1108:22;1097:33;;1043:93;;;:::o;1142:115::-;1227:23;1244:5;1227:23;:::i;:::-;1222:3;1215:36;1142:115;;:::o;1263:218::-;1354:4;1392:2;1381:9;1377:18;1369:26;;1405:69;1471:1;1460:9;1456:17;1447:6;1405:69;:::i;:::-;1263:218;;;;:::o;1487:114::-;1554:6;1588:5;1582:12;1572:22;;1487:114;;;:::o;1607:184::-;1706:11;1740:6;1735:3;1728:19;1780:4;1775:3;1771:14;1756:29;;1607:184;;;;:::o;1797:132::-;1864:4;1887:3;1879:11;;1917:4;1912:3;1908:14;1900:22;;1797:132;;;:::o;1935:126::-;1972:7;2012:42;2005:5;2001:54;1990:65;;1935:126;;;:::o;2067:96::-;2104:7;2133:24;2151:5;2133:24;:::i;:::-;2122:35;;2067:96;;;:::o;2169:108::-;2246:24;2264:5;2246:24;:::i;:::-;2241:3;2234:37;2169:108;;:::o;2283:179::-;2352:10;2373:46;2415:3;2407:6;2373:46;:::i;:::-;2451:4;2446:3;2442:14;2428:28;;2283:179;;;;:::o;2468:113::-;2538:4;2570;2565:3;2561:14;2553:22;;2468:113;;;:::o;2617:732::-;2736:3;2765:54;2813:5;2765:54;:::i;:::-;2835:86;2914:6;2909:3;2835:86;:::i;:::-;2828:93;;2945:56;2995:5;2945:56;:::i;:::-;3024:7;3055:1;3040:284;3065:6;3062:1;3059:13;3040:284;;;3141:6;3135:13;3168:63;3227:3;3212:13;3168:63;:::i;:::-;3161:70;;3254:60;3307:6;3254:60;:::i;:::-;3244:70;;3100:224;3087:1;3084;3080:9;3075:14;;3040:284;;;3044:14;3340:3;3333:10;;2741:608;;;2617:732;;;;:::o;3355:373::-;3498:4;3536:2;3525:9;3521:18;3513:26;;3585:9;3579:4;3575:20;3571:1;3560:9;3556:17;3549:47;3613:108;3716:4;3707:6;3613:108;:::i;:::-;3605:116;;3355:373;;;;:::o;3734:146::-;3833:6;3867:5;3861:12;3851:22;;3734:146;;;:::o;3886:216::-;4017:11;4051:6;4046:3;4039:19;4091:4;4086:3;4082:14;4067:29;;3886:216;;;;:::o;4108:164::-;4207:4;4230:3;4222:11;;4260:4;4255:3;4251:14;4243:22;;4108:164;;;:::o;4278:124::-;4355:6;4389:5;4383:12;4373:22;;4278:124;;;:::o;4408:184::-;4507:11;4541:6;4536:3;4529:19;4581:4;4576:3;4572:14;4557:29;;4408:184;;;;:::o;4598:142::-;4675:4;4698:3;4690:11;;4728:4;4723:3;4719:14;4711:22;;4598:142;;;:::o;4746:99::-;4798:6;4832:5;4826:12;4816:22;;4746:99;;;:::o;4851:159::-;4925:11;4959:6;4954:3;4947:19;4999:4;4994:3;4990:14;4975:29;;4851:159;;;;:::o;5016:246::-;5097:1;5107:113;5121:6;5118:1;5115:13;5107:113;;;5206:1;5201:3;5197:11;5191:18;5187:1;5182:3;5178:11;5171:39;5143:2;5140:1;5136:10;5131:15;;5107:113;;;5254:1;5245:6;5240:3;5236:16;5229:27;5078:184;5016:246;;;:::o;5268:102::-;5309:6;5360:2;5356:7;5351:2;5344:5;5340:14;5336:28;5326:38;;5268:102;;;:::o;5376:357::-;5454:3;5482:39;5515:5;5482:39;:::i;:::-;5537:61;5591:6;5586:3;5537:61;:::i;:::-;5530:68;;5607:65;5665:6;5660:3;5653:4;5646:5;5642:16;5607:65;:::i;:::-;5697:29;5719:6;5697:29;:::i;:::-;5692:3;5688:39;5681:46;;5458:275;5376:357;;;;:::o;5739:196::-;5828:10;5863:66;5925:3;5917:6;5863:66;:::i;:::-;5849:80;;5739:196;;;;:::o;5941:123::-;6021:4;6053;6048:3;6044:14;6036:22;;5941:123;;;:::o;6098:971::-;6227:3;6256:64;6314:5;6256:64;:::i;:::-;6336:86;6415:6;6410:3;6336:86;:::i;:::-;6329:93;;6448:3;6493:4;6485:6;6481:17;6476:3;6472:27;6523:66;6583:5;6523:66;:::i;:::-;6612:7;6643:1;6628:396;6653:6;6650:1;6647:13;6628:396;;;6724:9;6718:4;6714:20;6709:3;6702:33;6775:6;6769:13;6803:84;6882:4;6867:13;6803:84;:::i;:::-;6795:92;;6910:70;6973:6;6910:70;:::i;:::-;6900:80;;7009:4;7004:3;7000:14;6993:21;;6688:336;6675:1;6672;6668:9;6663:14;;6628:396;;;6632:14;7040:4;7033:11;;7060:3;7053:10;;6232:837;;;;;6098:971;;;;:::o;7153:665::-;7276:3;7312:4;7307:3;7303:14;7399:4;7392:5;7388:16;7382:23;7418:63;7475:4;7470:3;7466:14;7452:12;7418:63;:::i;:::-;7327:164;7578:4;7571:5;7567:16;7561:23;7631:3;7625:4;7621:14;7614:4;7609:3;7605:14;7598:38;7657:123;7775:4;7761:12;7657:123;:::i;:::-;7649:131;;7501:290;7808:4;7801:11;;7281:537;7153:665;;;;:::o;7824:284::-;7957:10;7992:110;8098:3;8090:6;7992:110;:::i;:::-;7978:124;;7824:284;;;;:::o;8114:145::-;8216:4;8248;8243:3;8239:14;8231:22;;8114:145;;;:::o;8347:1167::-;8530:3;8559:86;8639:5;8559:86;:::i;:::-;8661:118;8772:6;8767:3;8661:118;:::i;:::-;8654:125;;8805:3;8850:4;8842:6;8838:17;8833:3;8829:27;8880:88;8962:5;8880:88;:::i;:::-;8991:7;9022:1;9007:462;9032:6;9029:1;9026:13;9007:462;;;9103:9;9097:4;9093:20;9088:3;9081:33;9154:6;9148:13;9182:128;9305:4;9290:13;9182:128;:::i;:::-;9174:136;;9333:92;9418:6;9333:92;:::i;:::-;9323:102;;9454:4;9449:3;9445:14;9438:21;;9067:402;9054:1;9051;9047:9;9042:14;;9007:462;;;9011:14;9485:4;9478:11;;9505:3;9498:10;;8535:979;;;;;8347:1167;;;;:::o;9520:501::-;9727:4;9765:2;9754:9;9750:18;9742:26;;9814:9;9808:4;9804:20;9800:1;9789:9;9785:17;9778:47;9842:172;10009:4;10000:6;9842:172;:::i;:::-;9834:180;;9520:501;;;;:::o;10027:118::-;10114:24;10132:5;10114:24;:::i;:::-;10109:3;10102:37;10027:118;;:::o;10151:222::-;10244:4;10282:2;10271:9;10267:18;10259:26;;10295:71;10363:1;10352:9;10348:17;10339:6;10295:71;:::i;:::-;10151:222;;;;:::o;10379:117::-;10488:1;10485;10478:12;10502:117;10611:1;10608;10601:12;10625:117;10734:1;10731;10724:12;10761:552;10818:8;10828:6;10878:3;10871:4;10863:6;10859:17;10855:27;10845:122;;10886:79;;:::i;:::-;10845:122;10999:6;10986:20;10976:30;;11029:18;11021:6;11018:30;11015:117;;;11051:79;;:::i;:::-;11015:117;11165:4;11157:6;11153:17;11141:29;;11219:3;11211:4;11203:6;11199:17;11189:8;11185:32;11182:41;11179:128;;;11226:79;;:::i;:::-;11179:128;10761:552;;;;;:::o;11319:527::-;11389:6;11397;11446:2;11434:9;11425:7;11421:23;11417:32;11414:119;;;11452:79;;:::i;:::-;11414:119;11600:1;11589:9;11585:17;11572:31;11630:18;11622:6;11619:30;11616:117;;;11652:79;;:::i;:::-;11616:117;11765:64;11821:7;11812:6;11801:9;11797:22;11765:64;:::i;:::-;11747:82;;;;11543:296;11319:527;;;;;:::o;11852:98::-;11903:6;11937:5;11931:12;11921:22;;11852:98;;;:::o;11956:168::-;12039:11;12073:6;12068:3;12061:19;12113:4;12108:3;12104:14;12089:29;;11956:168;;;;:::o;12130:373::-;12216:3;12244:38;12276:5;12244:38;:::i;:::-;12298:70;12361:6;12356:3;12298:70;:::i;:::-;12291:77;;12377:65;12435:6;12430:3;12423:4;12416:5;12412:16;12377:65;:::i;:::-;12467:29;12489:6;12467:29;:::i;:::-;12462:3;12458:39;12451:46;;12220:283;12130:373;;;;:::o;12509:309::-;12620:4;12658:2;12647:9;12643:18;12635:26;;12707:9;12701:4;12697:20;12693:1;12682:9;12678:17;12671:47;12735:76;12806:4;12797:6;12735:76;:::i;:::-;12727:84;;12509:309;;;;:::o;12824:115::-;12909:23;12926:5;12909:23;:::i;:::-;12904:3;12897:36;12824:115;;:::o;12945:218::-;13036:4;13074:2;13063:9;13059:18;13051:26;;13087:69;13153:1;13142:9;13138:17;13129:6;13087:69;:::i;:::-;12945:218;;;;:::o;13169:153::-;13275:6;13309:5;13303:12;13293:22;;13169:153;;;:::o;13328:223::-;13466:11;13500:6;13495:3;13488:19;13540:4;13535:3;13531:14;13516:29;;13328:223;;;;:::o;13557:171::-;13663:4;13686:3;13678:11;;13716:4;13711:3;13707:14;13699:22;;13557:171;;;:::o;13734:113::-;13800:6;13834:5;13828:12;13818:22;;13734:113;;;:::o;13853:173::-;13941:11;13975:6;13970:3;13963:19;14015:4;14010:3;14006:14;13991:29;;13853:173;;;;:::o;14032:131::-;14098:4;14121:3;14113:11;;14151:4;14146:3;14142:14;14134:22;;14032:131;;;:::o;14169:149::-;14205:7;14245:66;14238:5;14234:78;14223:89;;14169:149;;;:::o;14324:105::-;14399:23;14416:5;14399:23;:::i;:::-;14394:3;14387:36;14324:105;;:::o;14435:175::-;14502:10;14523:44;14563:3;14555:6;14523:44;:::i;:::-;14599:4;14594:3;14590:14;14576:28;;14435:175;;;;:::o;14616:112::-;14685:4;14717;14712:3;14708:14;14700:22;;14616:112;;;:::o;14762:704::-;14869:3;14898:53;14945:5;14898:53;:::i;:::-;14967:75;15035:6;15030:3;14967:75;:::i;:::-;14960:82;;15066:55;15115:5;15066:55;:::i;:::-;15144:7;15175:1;15160:281;15185:6;15182:1;15179:13;15160:281;;;15261:6;15255:13;15288:61;15345:3;15330:13;15288:61;:::i;:::-;15281:68;;15372:59;15424:6;15372:59;:::i;:::-;15362:69;;15220:221;15207:1;15204;15200:9;15195:14;;15160:281;;;15164:14;15457:3;15450:10;;14874:592;;;14762:704;;;;:::o;15564:732::-;15701:3;15737:4;15732:3;15728:14;15828:4;15821:5;15817:16;15811:23;15881:3;15875:4;15871:14;15864:4;15859:3;15855:14;15848:38;15907:73;15975:4;15961:12;15907:73;:::i;:::-;15899:81;;15752:239;16078:4;16071:5;16067:16;16061:23;16131:3;16125:4;16121:14;16114:4;16109:3;16105:14;16098:38;16157:101;16253:4;16239:12;16157:101;:::i;:::-;16149:109;;16001:268;16286:4;16279:11;;15706:590;15564:732;;;;:::o;16302:312::-;16449:10;16484:124;16604:3;16596:6;16484:124;:::i;:::-;16470:138;;16302:312;;;;:::o;16620:152::-;16729:4;16761;16756:3;16752:14;16744:22;;16620:152;;;:::o;16874:1223::-;17071:3;17100:93;17187:5;17100:93;:::i;:::-;17209:125;17327:6;17322:3;17209:125;:::i;:::-;17202:132;;17360:3;17405:4;17397:6;17393:17;17388:3;17384:27;17435:95;17524:5;17435:95;:::i;:::-;17553:7;17584:1;17569:483;17594:6;17591:1;17588:13;17569:483;;;17665:9;17659:4;17655:20;17650:3;17643:33;17716:6;17710:13;17744:142;17881:4;17866:13;17744:142;:::i;:::-;17736:150;;17909:99;18001:6;17909:99;:::i;:::-;17899:109;;18037:4;18032:3;18028:14;18021:21;;17629:423;17616:1;17613;17609:9;17604:14;;17569:483;;;17573:14;18068:4;18061:11;;18088:3;18081:10;;17076:1021;;;;;16874:1223;;;;:::o;18103:529::-;18324:4;18362:2;18351:9;18347:18;18339:26;;18411:9;18405:4;18401:20;18397:1;18386:9;18382:17;18375:47;18439:186;18620:4;18611:6;18439:186;:::i;:::-;18431:194;;18103:529;;;;:::o;18638:434::-;18783:4;18821:2;18810:9;18806:18;18798:26;;18834:71;18902:1;18891:9;18887:17;18878:6;18834:71;:::i;:::-;18915:70;18981:2;18970:9;18966:18;18957:6;18915:70;:::i;:::-;18995;19061:2;19050:9;19046:18;19037:6;18995:70;:::i;:::-;18638:434;;;;;;:::o;19078:194::-;19187:11;19221:6;19216:3;19209:19;19261:4;19256:3;19252:14;19237:29;;19078:194;;;;:::o;19306:991::-;19445:3;19474:64;19532:5;19474:64;:::i;:::-;19554:96;19643:6;19638:3;19554:96;:::i;:::-;19547:103;;19676:3;19721:4;19713:6;19709:17;19704:3;19700:27;19751:66;19811:5;19751:66;:::i;:::-;19840:7;19871:1;19856:396;19881:6;19878:1;19875:13;19856:396;;;19952:9;19946:4;19942:20;19937:3;19930:33;20003:6;19997:13;20031:84;20110:4;20095:13;20031:84;:::i;:::-;20023:92;;20138:70;20201:6;20138:70;:::i;:::-;20128:80;;20237:4;20232:3;20228:14;20221:21;;19916:336;19903:1;19900;19896:9;19891:14;;19856:396;;;19860:14;20268:4;20261:11;;20288:3;20281:10;;19450:847;;;;;19306:991;;;;:::o;20303:413::-;20466:4;20504:2;20493:9;20489:18;20481:26;;20553:9;20547:4;20543:20;20539:1;20528:9;20524:17;20517:47;20581:128;20704:4;20695:6;20581:128;:::i;:::-;20573:136;;20303:413;;;;:::o;20722:145::-;20820:6;20854:5;20848:12;20838:22;;20722:145;;;:::o;20873:215::-;21003:11;21037:6;21032:3;21025:19;21077:4;21072:3;21068:14;21053:29;;20873:215;;;;:::o;21094:163::-;21192:4;21215:3;21207:11;;21245:4;21240:3;21236:14;21228:22;;21094:163;;;:::o;21339:641::-;21460:3;21496:4;21491:3;21487:14;21583:4;21576:5;21572:16;21566:23;21602:63;21659:4;21654:3;21650:14;21636:12;21602:63;:::i;:::-;21511:164;21762:4;21755:5;21751:16;21745:23;21815:3;21809:4;21805:14;21798:4;21793:3;21789:14;21782:38;21841:101;21937:4;21923:12;21841:101;:::i;:::-;21833:109;;21685:268;21970:4;21963:11;;21465:515;21339:641;;;;:::o;21986:280::-;22117:10;22152:108;22256:3;22248:6;22152:108;:::i;:::-;22138:122;;21986:280;;;;:::o;22272:144::-;22373:4;22405;22400:3;22396:14;22388:22;;22272:144;;;:::o;22502:1159::-;22683:3;22712:85;22791:5;22712:85;:::i;:::-;22813:117;22923:6;22918:3;22813:117;:::i;:::-;22806:124;;22956:3;23001:4;22993:6;22989:17;22984:3;22980:27;23031:87;23112:5;23031:87;:::i;:::-;23141:7;23172:1;23157:459;23182:6;23179:1;23176:13;23157:459;;;23253:9;23247:4;23243:20;23238:3;23231:33;23304:6;23298:13;23332:126;23453:4;23438:13;23332:126;:::i;:::-;23324:134;;23481:91;23565:6;23481:91;:::i;:::-;23471:101;;23601:4;23596:3;23592:14;23585:21;;23217:399;23204:1;23201;23197:9;23192:14;;23157:459;;;23161:14;23632:4;23625:11;;23652:3;23645:10;;22688:973;;;;;22502:1159;;;;:::o;23667:497::-;23872:4;23910:2;23899:9;23895:18;23887:26;;23959:9;23953:4;23949:20;23945:1;23934:9;23930:17;23923:47;23987:170;24152:4;24143:6;23987:170;:::i;:::-;23979:178;;23667:497;;;;:::o;24170:60::-;24198:3;24219:5;24212:12;;24170:60;;;:::o;24236:142::-;24286:9;24319:53;24337:34;24346:24;24364:5;24346:24;:::i;:::-;24337:34;:::i;:::-;24319:53;:::i;:::-;24306:66;;24236:142;;;:::o;24384:126::-;24434:9;24467:37;24498:5;24467:37;:::i;:::-;24454:50;;24384:126;;;:::o;24516:143::-;24583:9;24616:37;24647:5;24616:37;:::i;:::-;24603:50;;24516:143;;;:::o;24665:165::-;24769:54;24817:5;24769:54;:::i;:::-;24764:3;24757:67;24665:165;;:::o;24836:256::-;24946:4;24984:2;24973:9;24969:18;24961:26;;24997:88;25082:1;25071:9;25067:17;25058:6;24997:88;:::i;:::-;24836:256;;;;:::o;25098:134::-;25156:9;25189:37;25220:5;25189:37;:::i;:::-;25176:50;;25098:134;;;:::o;25238:169::-;25323:9;25356:45;25395:5;25356:45;:::i;:::-;25343:58;;25238:169;;;:::o;25413:201::-;25535:72;25601:5;25535:72;:::i;:::-;25530:3;25523:85;25413:201;;:::o;25620:292::-;25748:4;25786:2;25775:9;25771:18;25763:26;;25799:106;25902:1;25891:9;25887:17;25878:6;25799:106;:::i;:::-;25620:292;;;;:::o;25918:90::-;25952:7;25995:5;25988:13;25981:21;25970:32;;25918:90;;;:::o;26014:109::-;26095:21;26110:5;26095:21;:::i;:::-;26090:3;26083:34;26014:109;;:::o;26129:210::-;26216:4;26254:2;26243:9;26239:18;26231:26;;26267:65;26329:1;26318:9;26314:17;26305:6;26267:65;:::i;:::-;26129:210;;;;:::o;26345:169::-;26429:11;26463:6;26458:3;26451:19;26503:4;26498:3;26494:14;26479:29;;26345:169;;;;:::o;26520:234::-;26660:34;26656:1;26648:6;26644:14;26637:58;26733:9;26728:2;26720:6;26716:15;26709:34;26520:234;:::o;26764:382::-;26906:3;26931:67;26995:2;26990:3;26931:67;:::i;:::-;26924:74;;27011:93;27100:3;27011:93;:::i;:::-;27133:2;27128:3;27124:12;27117:19;;26764:382;;;:::o;27156:435::-;27322:4;27364:2;27353:9;27349:18;27341:26;;27417:9;27411:4;27407:20;27403:1;27392:9;27388:17;27381:47;27449:131;27575:4;27449:131;:::i;:::-;27441:139;;27156:435;;;:::o;27601:85::-;27638:7;27671:5;27660:16;;27601:85;;;:::o;27696:130::-;27773:24;27791:5;27773:24;:::i;:::-;27766:5;27763:35;27753:63;;27812:1;27809;27802:12;27753:63;27696:130;:::o;27836:155::-;27893:5;27928:6;27922:13;27913:22;;27948:33;27975:5;27948:33;:::i;:::-;27836:155;;;;:::o;28001:375::-;28071:6;28124:2;28112:9;28103:7;28099:23;28095:32;28092:119;;;28130:79;;:::i;:::-;28092:119;28258:1;28287:64;28343:7;28334:6;28323:9;28319:22;28287:64;:::i;:::-;28277:74;;28225:140;28001:375;;;;:::o;28386:439::-;28525:4;28567:2;28556:9;28552:18;28544:26;;28584:71;28652:1;28641:9;28637:17;28628:6;28584:71;:::i;:::-;28706:9;28700:4;28696:20;28691:2;28680:9;28676:18;28669:48;28738:76;28809:4;28800:6;28738:76;:::i;:::-;28730:84;;28386:439;;;;;:::o;28835:162::-;28979:6;28975:1;28967:6;28963:14;28956:30;28835:162;:::o;29007:381::-;29149:3;29174:66;29238:1;29233:3;29174:66;:::i;:::-;29167:73;;29253:93;29342:3;29253:93;:::i;:::-;29375:2;29370:3;29366:12;29359:19;;29007:381;;;:::o;29398:979::-;29721:4;29763:3;29752:9;29748:19;29740:27;;29817:9;29811:4;29807:20;29803:1;29792:9;29788:17;29781:47;29849:131;29975:4;29849:131;:::i;:::-;29841:139;;30031:9;30025:4;30021:20;30016:2;30005:9;30001:18;29994:48;30063:131;30189:4;30063:131;:::i;:::-;30055:139;;30208:72;30276:2;30265:9;30261:18;30252:6;30208:72;:::i;:::-;30294;30362:2;30351:9;30347:18;30338:6;30294:72;:::i;:::-;29398:979;;;;;:::o;30387:569::-;30560:4;30602:3;30591:9;30587:19;30579:27;;30620:71;30688:1;30677:9;30673:17;30664:6;30620:71;:::i;:::-;30705:72;30773:2;30762:9;30758:18;30749:6;30705:72;:::i;:::-;30791:70;30857:2;30846:9;30842:18;30833:6;30791:70;:::i;:::-;30875;30941:2;30930:9;30926:18;30917:6;30875:70;:::i;:::-;30387:569;;;;;;;:::o;30966:133::-;31032:7;31065:24;31083:5;31065:24;:::i;:::-;31054:35;;30966:133;;;:::o;31109:188::-;31215:53;31262:5;31215:53;:::i;:::-;31208:5;31205:64;31195:92;;31283:1;31280;31273:12;31195:92;31109:188;:::o;31307:213::-;31393:5;31428:6;31422:13;31413:22;;31448:62;31504:5;31448:62;:::i;:::-;31307:213;;;;:::o;31530:433::-;31629:6;31682:2;31670:9;31661:7;31657:23;31653:32;31650:119;;;31688:79;;:::i;:::-;31650:119;31816:1;31845:93;31930:7;31921:6;31910:9;31906:22;31845:93;:::i;:::-;31835:103;;31783:169;31530:433;;;;:::o;31973:128::-;32049:23;32066:5;32049:23;:::i;:::-;32042:5;32039:34;32029:62;;32087:1;32084;32077:12;32029:62;31973:128;:::o;32111:153::-;32167:5;32202:6;32196:13;32187:22;;32222:32;32248:5;32222:32;:::i;:::-;32111:153;;;;:::o;32274:373::-;32343:6;32396:2;32384:9;32375:7;32371:23;32367:32;32364:119;;;32402:79;;:::i;:::-;32364:119;32530:1;32559:63;32614:7;32605:6;32594:9;32590:22;32559:63;:::i;:::-;32549:73;;32497:139;32274:373;;;;:::o;32657:113::-;32722:7;32755:5;32744:16;;32657:113;;;:::o;32780:206::-;32858:9;32895:81;32913:62;32922:52;32968:5;32922:52;:::i;:::-;32913:62;:::i;:::-;32895:81;:::i;:::-;32882:94;;32780:206;;;:::o;32996:195::-;33115:65;33174:5;33115:65;:::i;:::-;33110:3;33103:78;32996:195;;:::o;33201:404::-;33350:4;33392:2;33381:9;33377:18;33369:26;;33409:71;33477:1;33466:9;33462:17;33453:6;33409:71;:::i;:::-;33494:100;33590:2;33579:9;33575:18;33566:6;33494:100;:::i;:::-;33201:404;;;;;:::o;33615:196::-;33667:77;33664:1;33657:88;33768:4;33765:1;33758:15;33796:4;33793:1;33786:15;33821:228;33860:4;33884:19;33901:1;33884:19;:::i;:::-;33879:24;;33921:19;33938:1;33921:19;:::i;:::-;33916:24;;33968:1;33965;33961:9;33953:17;;33996:18;33990:4;33987:28;33984:54;;;34018:18;;:::i;:::-;33984:54;33821:228;;;;:::o;34059:225::-;34098:3;34121:19;34138:1;34121:19;:::i;:::-;34116:24;;34158:19;34175:1;34158:19;:::i;:::-;34153:24;;34204:1;34201;34197:9;34190:16;;34231:18;34226:3;34223:27;34220:53;;;34253:18;;:::i;:::-;34220:53;34059:225;;;;:::o;34294:114::-;34336:8;34391:5;34388:1;34384:13;34359:38;;34294:114;;;:::o;34418:924::-;34479:5;34486:4;34514:6;34505:15;;34542:5;34533:14;;34560:772;34581:1;34571:8;34568:15;34560:772;;;34688:4;34683:3;34679:14;34673:4;34670:24;34667:50;;;34697:18;;:::i;:::-;34667:50;34751:1;34741:8;34737:16;34734:483;;;35194:4;35187:5;35183:16;35174:25;;34734:483;35252:4;35246;35242:15;35234:23;;35286:32;35309:8;35286:32;:::i;:::-;35274:44;;34560:772;;;34418:924;;;;;;;:::o;35352:1189::-;35406:5;35613:8;35603:40;;35634:1;35625:10;;35636:5;;35603:40;35666:4;35656:36;;35683:1;35674:10;;35685:5;;35656:36;35760:4;35816:1;35811:27;;;;35856:1;35851:215;;;;35753:313;;35811:27;35829:1;35820:10;;35831:5;;;35851:215;35904:3;35894:8;35891:17;35888:43;;;35911:18;;:::i;:::-;35888:43;35964:8;35961:1;35957:16;35948:25;;36003:3;35996:5;35993:14;35990:40;;;36010:18;;:::i;:::-;35990:40;36047:5;;;35753:313;;36187:2;36177:8;36174:16;36168:3;36162:4;36159:13;36155:36;36133:2;36123:8;36120:16;36115:2;36109:4;36106:12;36102:35;36082:123;36079:278;;;36255:8;36249:4;36245:19;36236:28;;36294:3;36287:5;36284:14;36281:40;;;36301:18;;:::i;:::-;36281:40;36338:5;;36079:278;36386:42;36424:3;36414:8;36408:4;36405:1;36386:42;:::i;:::-;36371:57;;;;36464:4;36459:3;36455:14;36448:5;36445:25;36442:51;;;36473:18;;:::i;:::-;36442:51;36526:4;36519:5;36515:16;36506:25;;35352:1189;;;;;;:::o;36551:299::-;36610:5;36638:23;36656:4;36638:23;:::i;:::-;36630:31;;36686:26;36703:8;36686:26;:::i;:::-;36674:38;;36735:104;36772:66;36762:8;36756:4;36735:104;:::i;:::-;36726:113;;36551:299;;;;:::o;36860:196::-;36912:77;36909:1;36902:88;37013:4;37010:1;37003:15;37041:4;37038:1;37031:15;37066:205;37106:1;37127:20;37145:1;37127:20;:::i;:::-;37122:25;;37165:20;37183:1;37165:20;:::i;:::-;37160:25;;37208:1;37198:35;;37213:18;;:::i;:::-;37198:35;37259:1;37256;37252:9;37247:14;;37066:205;;;;:::o;37281:106::-;37314:8;37370:5;37366:2;37362:14;37337:39;;37281:106;;;:::o;37397:102::-;37436:7;37469:20;37483:5;37469:20;:::i;:::-;37458:31;;37397:102;;;:::o;37509:108::-;37548:7;37581:26;37601:5;37581:26;:::i;:::-;37570:37;;37509:108;;;:::o;37627:165::-;37736:45;37756:24;37774:5;37756:24;:::i;:::-;37736:45;:::i;:::-;37731:3;37724:58;37627:165;;:::o;37802:272::-;37914:3;37933:75;38004:3;37995:6;37933:75;:::i;:::-;38037:2;38032:3;38028:12;38021:19;;38061:3;38054:10;;37802:272;;;;:::o;38084:85::-;38121:7;38154:5;38143:16;;38084:85;;;:::o;38179:87::-;38218:7;38251:5;38240:16;;38179:87;;;:::o;38276:165::-;38385:45;38405:24;38423:5;38405:24;:::i;:::-;38385:45;:::i;:::-;38380:3;38373:58;38276:165;;:::o;38451:155::-;38552:11;38593:3;38578:18;;38451:155;;;;:::o;38616:406::-;38720:3;38752:38;38784:5;38752:38;:::i;:::-;38810:88;38891:6;38886:3;38810:88;:::i;:::-;38803:95;;38911:65;38969:6;38964:3;38957:4;38950:5;38946:16;38911:65;:::i;:::-;39005:6;39000:3;38996:16;38989:23;;38724:298;38616:406;;;;:::o;39032:432::-;39190:3;39209:75;39280:3;39271:6;39209:75;:::i;:::-;39313:2;39308:3;39304:12;39297:19;;39337:93;39426:3;39417:6;39337:93;:::i;:::-;39330:100;;39451:3;39444:10;;39032:432;;;;;:::o;39474:196::-;39506:1;39527:20;39545:1;39527:20;:::i;:::-;39522:25;;39565:20;39583:1;39565:20;:::i;:::-;39560:25;;39608:1;39598:35;;39613:18;;:::i;:::-;39598:35;39658:1;39655;39651:9;39646:14;;39474:196;;;;:::o;39680:214::-;39720:4;39744:20;39762:1;39744:20;:::i;:::-;39739:25;;39782:20;39800:1;39782:20;:::i;:::-;39777:25;;39830:1;39827;39823:9;39815:17;;39858:1;39852:4;39849:11;39846:37;;;39863:18;;:::i;:::-;39846:37;39680:214;;;;:::o;39904:340::-;40021:4;40063:2;40052:9;40048:18;40040:26;;40080:69;40146:1;40135:9;40131:17;40122:6;40080:69;:::i;:::-;40163:70;40229:2;40218:9;40214:18;40205:6;40163:70;:::i;:::-;39904:340;;;;;:::o;40254:148::-;40303:9;40340:52;40358:33;40367:23;40384:5;40367:23;:::i;:::-;40358:33;:::i;:::-;40340:52;:::i;:::-;40327:65;;40254:148;;;:::o;40412:137::-;40502:36;40532:5;40502:36;:::i;:::-;40497:3;40490:49;40412:137;;:::o;40559:232::-;40651:4;40693:2;40682:9;40678:18;40670:26;;40710:70;40777:1;40766:9;40762:17;40753:6;40710:70;:::i;:::-;40559:232;;;;:::o;40801:126::-;40892:24;40910:5;40892:24;:::i;:::-;40887:3;40880:37;40801:126;;:::o;40937:118::-;;:::o;41065:378::-;41206:3;41231:65;41294:1;41289:3;41231:65;:::i;:::-;41224:72;;41309:93;41398:3;41309:93;:::i;:::-;41431:1;41426:3;41422:11;41415:18;;41065:378;;;:::o;41453:982::-;41748:4;41790:3;41779:9;41775:19;41767:27;;41808:71;41876:1;41865:9;41861:17;41852:6;41808:71;:::i;:::-;41893:72;41961:2;41950:9;41946:18;41937:6;41893:72;:::i;:::-;42016:9;42010:4;42006:20;42001:2;41990:9;41986:18;41979:48;42048:76;42119:4;42110:6;42048:76;:::i;:::-;42040:84;;42138:72;42206:2;42195:9;42191:18;42182:6;42138:72;:::i;:::-;42262:9;42256:4;42252:20;42246:3;42235:9;42231:19;42224:49;42294:130;42419:4;42294:130;:::i;:::-;42286:138;;41453:982;;;;;;;:::o;42445:211::-;42485:3;42508:20;42526:1;42508:20;:::i;:::-;42503:25;;42546:20;42564:1;42546:20;:::i;:::-;42541:25;;42593:1;42590;42586:9;42579:16;;42618:3;42615:1;42612:10;42609:36;;;42625:18;;:::i;:::-;42609:36;42445:211;;;;:::o;42666:156::-;42768:11;42809:3;42794:18;;42666:156;;;;:::o;42832:163::-;42976:7;42972:1;42964:6;42960:14;42953:31;42832:163;:::o;43005:416::-;43165:3;43190:84;43272:1;43267:3;43190:84;:::i;:::-;43183:91;;43287:93;43376:3;43287:93;:::i;:::-;43409:1;43404:3;43400:11;43393:18;;43005:416;;;:::o;43431:542::-;43644:3;43663:75;43734:3;43725:6;43663:75;:::i;:::-;43767:2;43762:3;43758:12;43751:19;;43791:148;43935:3;43791:148;:::i;:::-;43784:155;;43960:3;43953:10;;43431:542;;;;:::o;43983:125::-;44096:1;44093;44086:12;44118:196;44170:77;44167:1;44160:88;44271:4;44268:1;44261:15;44299:4;44296:1;44289:15;44324:301;44411:27;44433:4;44411:27;:::i;:::-;44403:6;44399:40;44549:6;44537:10;44534:22;44513:18;44501:10;44498:34;44495:62;44492:88;;;44560:18;;:::i;:::-;44492:88;44604:10;44600:2;44593:22;44367:258;44324:301;;:::o;44635:141::-;44669:6;44700:20;;:::i;:::-;44690:30;;44733:33;44761:4;44753:6;44733:33;:::i;:::-;44635:141;;;:::o;44786:331::-;44847:4;44945:18;44937:6;44934:30;44931:56;;;44967:18;;:::i;:::-;44931:56;45009:29;45031:6;45009:29;:::i;:::-;45001:37;;45101:4;45095;45091:15;45083:23;;44786:331;;;:::o;45127:456::-;45215:5;45244:65;45260:48;45301:6;45260:48;:::i;:::-;45244:65;:::i;:::-;45235:74;;45336:6;45329:5;45322:21;45378:4;45371:5;45367:16;45420:3;45411:6;45406:3;45402:16;45399:25;45396:112;;;45427:79;;:::i;:::-;45396:112;45521:52;45566:6;45561:3;45556;45521:52;:::i;:::-;45221:362;45127:456;;;;;:::o;45610:369::-;45676:5;45729:3;45722:4;45714:6;45710:17;45706:27;45696:122;;45737:79;;:::i;:::-;45696:122;45851:6;45845:13;45880:89;45965:3;45957:6;45950:4;45942:6;45938:17;45880:89;:::i;:::-;45871:98;;45682:297;45610:369;;;;:::o;45989:550::-;46068:6;46121:2;46109:9;46100:7;46096:23;46092:32;46089:119;;;46127:79;;:::i;:::-;46089:119;46276:1;46265:9;46261:17;46255:24;46310:18;46302:6;46299:30;46296:117;;;46332:79;;:::i;:::-;46296:117;46441:73;46506:7;46497:6;46486:9;46482:22;46441:73;:::i;:::-;46431:83;;46222:306;45989:550;;;;:::o;46549:126::-;46640:24;46658:5;46640:24;:::i;:::-;46635:3;46628:37;46549:126;;:::o;46685:439::-;46824:4;46866:2;46855:9;46851:18;46843:26;;46919:9;46913:4;46909:20;46905:1;46894:9;46890:17;46883:47;46951:76;47022:4;47013:6;46951:76;:::i;:::-;46943:84;;47041:72;47109:2;47098:9;47094:18;47085:6;47041:72;:::i;:::-;46685:439;;;;;:::o;47134:196::-;47186:77;47183:1;47176:88;47287:4;47284:1;47277:15;47315:4;47312:1;47305:15;47340:356;47384:6;47425:1;47419:4;47415:12;47405:22;;47476:1;47470:4;47466:12;47501:18;47491:89;;47561:4;47553:6;47549:17;47539:27;;47491:89;47631:2;47623:6;47620:14;47600:18;47597:38;47594:92;;47654:18;;:::i;:::-;47594:92;47391:305;47340:356;;;:::o;47706:380::-;47848:3;47873:66;47937:1;47932:3;47873:66;:::i;:::-;47866:73;;47952:93;48041:3;47952:93;:::i;:::-;48074:1;48069:3;48065:11;48058:18;;47706:380;;;:::o;48096:435::-;48262:4;48304:2;48293:9;48289:18;48281:26;;48357:9;48351:4;48347:20;48343:1;48332:9;48328:17;48321:47;48389:131;48515:4;48389:131;:::i;:::-;48381:139;;48096:435;;;:::o;48541:348::-;48662:4;48704:2;48693:9;48689:18;48681:26;;48721:71;48789:1;48778:9;48774:17;48765:6;48721:71;:::i;:::-;48806:72;48874:2;48863:9;48859:18;48850:6;48806:72;:::i;:::-;48541:348;;;;;:::o;48899:130::-;48976:24;48994:5;48976:24;:::i;:::-;48969:5;48966:35;48956:63;;49015:1;49012;49005:12;48956:63;48899:130;:::o;49039:155::-;49096:5;49131:6;49125:13;49116:22;;49151:33;49178:5;49151:33;:::i;:::-;49039:155;;;;:::o;49204:375::-;49274:6;49327:2;49315:9;49306:7;49302:23;49298:32;49295:119;;;49333:79;;:::i;:::-;49295:119;49461:1;49490:64;49546:7;49537:6;49526:9;49522:22;49490:64;:::i;:::-;49480:74;;49428:140;49204:375;;;;:::o;49589:108::-;49623:8;49680:5;49675:3;49671:15;49646:40;;49589:108;;;:::o;49707:102::-;49745:7;49778:21;49793:5;49778:21;:::i;:::-;49767:32;;49707:102;;;:::o;49819:161::-;49926:43;49945:23;49962:5;49945:23;:::i;:::-;49926:43;:::i;:::-;49921:3;49914:56;49819:161;;:::o;49990:108::-;50024:8;50081:5;50076:3;50072:15;50047:40;;49990:108;;;:::o;50108:102::-;50146:7;50179:21;50194:5;50179:21;:::i;:::-;50168:32;;50108:102;;;:::o;50220:161::-;50327:43;50346:23;50363:5;50346:23;:::i;:::-;50327:43;:::i;:::-;50322:3;50315:56;50220:161;;:::o;50391:87::-;50430:7;50463:5;50452:16;;50391:87;;;:::o;50488:165::-;50597:45;50617:24;50635:5;50617:24;:::i;:::-;50597:45;:::i;:::-;50592:3;50585:58;50488:165;;:::o;50663:720::-;50873:3;50892:73;50961:3;50952:6;50892:73;:::i;:::-;50994:1;50989:3;50985:11;50978:18;;51010:73;51079:3;51070:6;51010:73;:::i;:::-;51112:1;51107:3;51103:11;51096:18;;51128:75;51199:3;51190:6;51128:75;:::i;:::-;51232:2;51227:3;51223:12;51216:19;;51256:93;51345:3;51336:6;51256:93;:::i;:::-;51249:100;;51370:3;51363:10;;50663:720;;;;;;;:::o;51393:348::-;51514:4;51556:2;51545:9;51541:18;51533:26;;51573:71;51641:1;51630:9;51626:17;51617:6;51573:71;:::i;:::-;51658:72;51726:2;51715:9;51711:18;51702:6;51658:72;:::i;:::-;51393:348;;;;;:::o;51751:125::-;51864:1;51861;51854:12;51886:125;51999:1;51996;51989:12;52021:489;52126:9;52137;52179:8;52167:10;52164:24;52161:111;;;52191:79;;:::i;:::-;52161:111;52301:6;52291:8;52288:20;52285:107;;;52311:79;;:::i;:::-;52285:107;52446:1;52434:10;52430:18;52422:6;52418:31;52405:44;;52489:10;52479:8;52475:25;52462:38;;52021:489;;;;;;;:::o;52520:261::-;52664:34;52660:1;52652:6;52648:14;52641:58;52737:32;52732:2;52724:6;52720:15;52713:57;52520:261;:::o;52791:382::-;52933:3;52958:67;53022:2;53017:3;52958:67;:::i;:::-;52951:74;;53038:93;53127:3;53038:93;:::i;:::-;53160:2;53155:3;53151:12;53144:19;;52791:382;;;:::o;53183:435::-;53349:4;53391:2;53380:9;53376:18;53368:26;;53444:9;53438:4;53434:20;53430:1;53419:9;53415:17;53408:47;53476:131;53602:4;53476:131;:::i;:::-;53468:139;;53183:435;;;:::o;53628:397::-;53716:3;53748:39;53781:5;53748:39;:::i;:::-;53807:71;53871:6;53866:3;53807:71;:::i;:::-;53800:78;;53891:65;53949:6;53944:3;53937:4;53930:5;53926:16;53891:65;:::i;:::-;53985:29;54007:6;53985:29;:::i;:::-;53980:3;53976:39;53969:46;;53720:305;53628:397;;;;:::o;54035:443::-;54176:4;54218:2;54207:9;54203:18;54195:26;;54271:9;54265:4;54261:20;54257:1;54246:9;54242:17;54235:47;54303:78;54376:4;54367:6;54303:78;:::i;:::-;54295:86;;54395:72;54463:2;54452:9;54448:18;54439:6;54395:72;:::i;:::-;54035:443;;;;;:::o;54488:283::-;54618:3;54644:93;54733:3;54724:6;54644:93;:::i;:::-;54637:100;;54758:3;54751:10;;54488:283;;;;:::o;54781:432::-;54939:3;54965:93;55054:3;55045:6;54965:93;:::i;:::-;54958:100;;55072:75;55143:3;55134:6;55072:75;:::i;:::-;55176:2;55171:3;55167:12;55160:19;;55200:3;55193:10;;54781:432;;;;;:::o;55223:301::-;55283:5;55311:23;55329:4;55311:23;:::i;:::-;55303:31;;55359:27;55377:8;55359:27;:::i;:::-;55347:39;;55409:104;55446:66;55436:8;55430:4;55409:104;:::i;:::-;55400:113;;55223:301;;;;:::o;55534:234::-;55627:4;55669:2;55658:9;55654:18;55646:26;;55686:71;55754:1;55743:9;55739:17;55730:6;55686:71;:::i;:::-;55534:234;;;;:::o;55778:332::-;55840:4;55938:18;55930:6;55927:30;55924:56;;;55960:18;;:::i;:::-;55924:56;56002:29;56024:6;56002:29;:::i;:::-;55994:37;;56094:4;56088;56084:15;56076:23;;55778:332;;;:::o;56120:458::-;56209:5;56238:66;56254:49;56296:6;56254:49;:::i;:::-;56238:66;:::i;:::-;56229:75;;56331:6;56324:5;56317:21;56373:4;56366:5;56362:16;56415:3;56406:6;56401:3;56397:16;56394:25;56391:112;;;56422:79;;:::i;:::-;56391:112;56516:52;56561:6;56556:3;56551;56516:52;:::i;:::-;56215:363;56120:458;;;;;:::o;56606:371::-;56673:5;56726:3;56719:4;56711:6;56707:17;56703:27;56693:122;;56734:79;;:::i;:::-;56693:122;56848:6;56842:13;56877:90;56963:3;56955:6;56948:4;56940:6;56936:17;56877:90;:::i;:::-;56868:99;;56679:298;56606:371;;;;:::o;56987:552::-;57067:6;57120:2;57108:9;57099:7;57095:23;57091:32;57088:119;;;57126:79;;:::i;:::-;57088:119;57275:1;57264:9;57260:17;57254:24;57309:18;57301:6;57298:30;57295:117;;;57331:79;;:::i;:::-;57295:117;57440:74;57506:7;57497:6;57486:9;57482:22;57440:74;:::i;:::-;57430:84;;57221:307;56987:552;;;;:::o;57549:314::-;57693:34;57689:1;57681:6;57677:14;57670:58;57766:34;57761:2;57753:6;57749:15;57742:59;57839:12;57834:2;57826:6;57822:15;57815:37;57549:314;:::o;57873:418::-;58033:3;58058:85;58140:2;58135:3;58058:85;:::i;:::-;58051:92;;58156:93;58245:3;58156:93;:::i;:::-;58278:2;58273:3;58269:12;58262:19;;57873:418;;;:::o;58301:410::-;58407:3;58439:39;58472:5;58439:39;:::i;:::-;58498:89;58580:6;58575:3;58498:89;:::i;:::-;58491:96;;58600:65;58658:6;58653:3;58646:4;58639:5;58635:16;58600:65;:::i;:::-;58694:6;58689:3;58685:16;58678:23;;58411:300;58301:410;;;;:::o;58721:557::-;58954:3;58980:148;59124:3;58980:148;:::i;:::-;58973:155;;59149:95;59240:3;59231:6;59149:95;:::i;:::-;59142:102;;59265:3;59258:10;;58721:557;;;;:::o;59288:329::-;59401:4;59443:2;59432:9;59428:18;59420:26;;59496:9;59490:4;59486:20;59482:1;59471:9;59467:17;59460:47;59528:78;59601:4;59592:6;59528:78;:::i;:::-;59520:86;;59288:329;;;;:::o;59627:462::-;59776:4;59818:2;59807:9;59803:18;59795:26;;59835:71;59903:1;59892:9;59888:17;59879:6;59835:71;:::i;:::-;59920:72;59988:2;59977:9;59973:18;59964:6;59920:72;:::i;:::-;60006;60074:2;60063:9;60059:18;60050:6;60006:72;:::i;:::-;59627:462;;;;;;:::o;60099:250::-;60243:34;60239:1;60231:6;60227:14;60220:58;60316:21;60311:2;60303:6;60299:15;60292:46;60099:250;:::o;60359:382::-;60501:3;60526:67;60590:2;60585:3;60526:67;:::i;:::-;60519:74;;60606:93;60695:3;60606:93;:::i;:::-;60728:2;60723:3;60719:12;60712:19;;60359:382;;;:::o;60751:435::-;60917:4;60959:2;60948:9;60944:18;60936:26;;61012:9;61006:4;61002:20;60998:1;60987:9;60983:17;60976:47;61044:131;61170:4;61044:131;:::i;:::-;61036:139;;60751:435;;;:::o;61196:86::-;61234:7;61267:5;61256:16;;61196:86;;;:::o;61292:161::-;61399:43;61418:23;61435:5;61418:23;:::i;:::-;61399:43;:::i;:::-;61394:3;61387:56;61292:161;;:::o;61463:427::-;61619:3;61638:73;61707:3;61698:6;61638:73;:::i;:::-;61740:1;61735:3;61731:11;61724:18;;61763:93;61852:3;61843:6;61763:93;:::i;:::-;61756:100;;61877:3;61870:10;;61463:427;;;;;:::o;61900:458::-;61940:7;61967:20;61985:1;61967:20;:::i;:::-;61962:25;;62005:20;62023:1;62005:20;:::i;:::-;62000:25;;62064:1;62061;62057:9;62090:30;62108:11;62090:30;:::i;:::-;62079:41;;62289:1;62280:7;62276:15;62273:1;62270:22;62246:1;62239:9;62215:95;62188:159;;62327:18;;:::i;:::-;62188:159;61948:410;61900:458;;;;:::o;62368:196::-;62420:77;62417:1;62410:88;62521:4;62518:1;62511:15;62549:4;62546:1;62539:15;62574:335;62651:4;62749:18;62741:6;62738:30;62735:56;;;62771:18;;:::i;:::-;62735:56;62825:4;62817:6;62813:17;62805:25;;62893:4;62887;62883:15;62875:23;;62574:335;;;:::o;62940:792::-;63047:5;63076:81;63092:64;63149:6;63092:64;:::i;:::-;63076:81;:::i;:::-;63067:90;;63181:5;63214:6;63207:5;63200:21;63252:4;63245:5;63241:16;63234:23;;63309:4;63301:6;63297:17;63289:6;63285:30;63342:3;63334:6;63331:15;63328:130;;;63365:79;;:::i;:::-;63328:130;63488:6;63471:251;63505:6;63500:3;63497:15;63471:251;;;63588:3;63621:48;63665:3;63653:10;63621:48;:::i;:::-;63616:3;63609:61;63703:4;63698:3;63694:14;63687:21;;63551:171;63531:4;63526:3;63522:14;63515:21;;63471:251;;;63475:21;63053:679;;62940:792;;;;;:::o;63763:401::-;63845:5;63898:3;63891:4;63883:6;63879:17;63875:27;63865:122;;63906:79;;:::i;:::-;63865:122;64020:6;64014:13;64049:105;64150:3;64142:6;64135:4;64127:6;64123:17;64049:105;:::i;:::-;64040:114;;63851:313;63763:401;;;;:::o;64174:961::-;64303:6;64311;64364:2;64352:9;64343:7;64339:23;64335:32;64332:119;;;64370:79;;:::i;:::-;64332:119;64519:1;64508:9;64504:17;64498:24;64553:18;64545:6;64542:30;64539:117;;;64575:79;;:::i;:::-;64539:117;64684:89;64765:7;64756:6;64745:9;64741:22;64684:89;:::i;:::-;64674:99;;64465:322;64855:2;64844:9;64840:18;64834:25;64890:18;64882:6;64879:30;64876:117;;;64912:79;;:::i;:::-;64876:117;65021:89;65102:7;65093:6;65082:9;65078:22;65021:89;:::i;:::-;65011:99;;64801:323;64174:961;;;;;:::o;65145:263::-;65289:34;65285:1;65277:6;65273:14;65266:58;65362:34;65357:2;65349:6;65345:15;65338:59;65145:263;:::o;65418:382::-;65560:3;65585:67;65649:2;65644:3;65585:67;:::i;:::-;65578:74;;65665:93;65754:3;65665:93;:::i;:::-;65787:2;65782:3;65778:12;65771:19;;65418:382;;;:::o;65810:435::-;65976:4;66018:2;66007:9;66003:18;65995:26;;66071:9;66065:4;66061:20;66057:1;66046:9;66042:17;66035:47;66103:131;66229:4;66103:131;:::i;:::-;66095:139;;65810:435;;;:::o;66255:187::-;66294:3;66321:24;66339:5;66321:24;:::i;:::-;66312:33;;66371:4;66364:5;66361:15;66358:41;;66379:18;;:::i;:::-;66358:41;66430:1;66423:5;66419:13;66412:20;;66255:187;;;:::o;66452:348::-;66573:4;66615:2;66604:9;66600:18;66592:26;;66632:71;66700:1;66689:9;66685:17;66676:6;66632:71;:::i;:::-;66717:72;66785:2;66774:9;66770:18;66761:6;66717:72;:::i;:::-;66452:348;;;;;:::o;66810:123::-;66899:23;66916:5;66899:23;:::i;:::-;66894:3;66887:36;66810:123;;:::o;66943:573::-;67118:4;67160:3;67149:9;67145:19;67137:27;;67178:71;67246:1;67235:9;67231:17;67222:6;67178:71;:::i;:::-;67263:70;67329:2;67318:9;67314:18;67305:6;67263:70;:::i;:::-;67347:72;67415:2;67404:9;67400:18;67391:6;67347:72;:::i;:::-;67433;67501:2;67490:9;67486:18;67477:6;67433:72;:::i;:::-;66943:573;;;;;;;:::o;67526:246::-;67670:34;67666:1;67658:6;67654:14;67647:58;67743:17;67738:2;67730:6;67726:15;67719:42;67526:246;:::o;67782:382::-;67924:3;67949:67;68013:2;68008:3;67949:67;:::i;:::-;67942:74;;68029:93;68118:3;68029:93;:::i;:::-;68151:2;68146:3;68142:12;68135:19;;67782:382;;;:::o;68174:435::-;68340:4;68382:2;68371:9;68367:18;68359:26;;68435:9;68429:4;68425:20;68421:1;68410:9;68406:17;68399:47;68467:131;68593:4;68467:131;:::i;:::-;68459:139;;68174:435;;;:::o;68619:196::-;68671:77;68668:1;68661:88;68772:4;68769:1;68762:15;68800:4;68797:1;68790:15",
    "linkReferences": {
      "contracts/library/HyperLiquidComposerCodec.sol": {
        "HyperLiquidComposerCodec": [{ "start": 65513, "length": 20 }]
      }
    }
  },
  "methodIdentifiers": {
    "ALICE()": "c33d080d",
    "AMOUNT_TO_FUND()": "9127ace2",
    "AMOUNT_TO_SEND()": "bb641b3e",
    "AMOUNT_TO_SEND_OVERFLOW()": "66165d9f",
    "DST_EID()": "176e619e",
    "HLP_PRECOMPILE_READ_SPOT_BALANCE()": "ba872679",
    "HLP_PRECOMPILE_WRITE()": "dd850075",
    "HL_LZ_ENDPOINT_V2()": "318f405a",
    "HYPE()": "76e86e72",
    "IS_TEST()": "fa7626d4",
    "SRC_EID()": "c9279a74",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSelectors()": "b0464fdc",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getComposeMessage(bytes)": "47d7694f",
    "hyperLiquidComposer()": "a09e7430",
    "oft()": "9b5215f6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_erc20_refund_receiver_excessive_amount(uint64)": "5c98ee4d",
    "test_erc20_refund_sender_malformed_receiver()": "12659341",
    "test_malformed_payload()": "76e92273",
    "test_native_refund_receiver_excessive_amount_no_fallback(uint64)": "0df3918e",
    "test_non_evm_sender_malformed_receiver()": "e970bd69",
    "userA()": "deb22e9a",
    "userB()": "cb1a295f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"ErrorMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"amountCore\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"maxTransferableAmount\",\"type\":\"uint64\"}],\"name\":\"OverflowDetected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ALICE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetBridgeAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"coreIndexId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"decimalDiff\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AMOUNT_TO_FUND\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AMOUNT_TO_SEND\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AMOUNT_TO_SEND_OVERFLOW\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DST_EID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HLP_PRECOMPILE_READ_SPOT_BALANCE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HLP_PRECOMPILE_WRITE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HL_LZ_ENDPOINT_V2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HYPE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetBridgeAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"coreIndexId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"decimalDiff\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SRC_EID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_composerMsg\",\"type\":\"bytes\"}],\"name\":\"getComposeMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hyperLiquidComposer\",\"outputs\":[{\"internalType\":\"contract HyperLiquidComposer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oft\",\"outputs\":[{\"internalType\":\"contract OFTMock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_exceedAmountBy\",\"type\":\"uint64\"}],\"name\":\"test_erc20_refund_receiver_excessive_amount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_erc20_refund_sender_malformed_receiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_malformed_payload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_exceedAmountBy\",\"type\":\"uint64\"}],\"name\":\"test_native_refund_receiver_excessive_amount_no_fallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_non_evm_sender_malformed_receiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"test_erc20_refund_receiver_excessive_amount(uint64)\":{\"notice\":\"forge-config: default.fuzz.runs = 128\"},\"test_native_refund_receiver_excessive_amount_no_fallback(uint64)\":{\"notice\":\"forge-config: default.fuzz.runs = 128\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/HyperLiquidComposerRefund.t.sol\":\"HyperLiquidComposerRefundTest\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=node_modules/@layerzerolabs/toolbox-foundry/lib/ds-test/\",\":forge-std/=node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/contracts/=node_modules/@layerzerolabs/toolbox-foundry/lib/solidity-bytes-utils/\"]},\"sources\":{\"contracts/HyperLiquidComposer.sol\":{\"keccak256\":\"0xe62cddcc0b667d7ed1114d773a076bbf20c409fb30d5a2d8b23f11bb505ce149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14836d07edb91500455fed30b6917f8ed17b0e2d74ae4ac3f7ec9822b4b10fb4\",\"dweb:/ipfs/QmfHCstiYLFTVZ97gf7LGSJNAEWyUHiYrRQanajY9dSLJH\"]},\"contracts/HyperLiquidComposerCore.sol\":{\"keccak256\":\"0x3e434f92a67cf8ebe665165b67c61a9a4f44ff100c8d758e469149e44705644d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a0893f8b064c38db25dee123fac75c2f1fe8f4e734a565fb7cf89a8295cb674\",\"dweb:/ipfs/QmeyR1opq8nCj3bkPxvaKmaatcxQWVg6Vm728gZRkDzMg4\"]},\"contracts/interfaces/IHyperLiquidComposerCore.sol\":{\"keccak256\":\"0x18674ea2cf84642166ab12a717c341503f7c5d490ec52b14d4d20924f5ff17aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cdd6b1cc2428ce607117df50ede9cc12307cda7c332a1fd20143dbc3ea18274\",\"dweb:/ipfs/QmbmWTNbbf2jj3JFFQL8EwcaY4L9tXLPdrkGJYgPop9zda\"]},\"contracts/interfaces/IHyperLiquidComposerErrors.sol\":{\"keccak256\":\"0xb2444c6b5070d989f610d8dafff535ece8af031a78464f27f56af1cc74e06f69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a636fa5beff36bde5c49fa5433df8c6dc94a47b220d984eb8caf1004f2ea22c\",\"dweb:/ipfs/QmaZLvXPUnN2VxzsyG5EASRXVQCwG3JhExJF58Wa5ScoPy\"]},\"contracts/interfaces/IHyperLiquidReadPrecompile.sol\":{\"keccak256\":\"0x3a6df8d89dca4f7547bbdc912c92315020f88b50c648c55f04fcb3ecb47d9ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://836bc90fe0705ca588329e218253e375bc76752d762b76e31c5f568be1b9409f\",\"dweb:/ipfs/QmYMRCYqsKho9fHZcC8f4JBPSxx9p6a4zLL7nX8CDoZsXc\"]},\"contracts/interfaces/IHyperLiquidWritePrecompile.sol\":{\"keccak256\":\"0xbfa7d38d7675898af0def60823f15550730af3bacb64068a09e1746b21c2cf4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5cba8210ee21bd186dfddbaa2b3f1ceaeb597763cac1e6271c9ae6e8ff4b53f\",\"dweb:/ipfs/QmVV8BtvpwQQ3jqUdTEFs2nnT9Q7gxTajRqgJPmKQuforV\"]},\"contracts/library/HyperLiquidComposerCodec.sol\":{\"keccak256\":\"0x26e2d98f264344ec7d44110b294b72c84bda78eb89d43e7e8164b0e2972aa52d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eac0654e9b43c8fdba761bff402d3909bd7a65c1684c4794a975abb07895864d\",\"dweb:/ipfs/QmPa5guHnQoke2ToDfmu9ovwQdTRbjA6c3rh1T7QqjMEQs\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol\":{\"keccak256\":\"0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f254bc60ac26687b5320a43a556e30777b0745abf7cd64d5f4720d9b1d1f7fdf\",\"dweb:/ipfs/QmRSJEZVgxaC3L2DdE6s8P5qkYfM3V5JMeseeFJJqGR4xz\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bacc29fd3866af71e59cb0bdc1cf82c882a4a7f4e2652fd413c9f12649762083\",\"dweb:/ipfs/QmZh2toLnrQDWaNYhS5K4NoW7Vxd2GdZx9KA77vKEDLAqs\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":{\"keccak256\":\"0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77415ae0820859e0faf3fabdce683cce9fa03ea026ae0f6fe081ef1c9205f933\",\"dweb:/ipfs/QmXd7APqoCunQ2jYy73AHvi5gsZofLpm3SzM6FPo7zRPfL\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLib.sol\":{\"keccak256\":\"0x5cf5f24751b4e3ea1c9c5ded07cedfdfd62566b6daaffcc0144733859c9dba0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cae7e35007a714f007ea08045ef7c0cfa6c91fd2425b5028b2d49abad357a5f0\",\"dweb:/ipfs/QmcDBs5tsiyB35b8cwzWQWNnpkawb3uuHRaqE77Hxm2tve\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8ff6a8a89297fa127f86b54e0db3eba1d6a6eeb4f6398d3c84d569665ac8f1b\",\"dweb:/ipfs/QmVSwhw6xFDrLRAX4RXaCM47yBaBtac4wf36DYEq6KCTvT\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e1b245d58221d16d8b5e0f01ef3e289a24a7df1ace3b94239e4d5b954ad5927\",\"dweb:/ipfs/Qmappsgp7PCY9rSSNE9Cdn4BTRX591WfCSEgq2HxhA3z6S\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b18b23a1643fc6636c4ad9d9023e2e6ca2d3c2a4a046482d4655bff09950598d\",\"dweb:/ipfs/Qma6G5SqiovwrMPfgqTrRngK1HWW373Wkf9c6YP2NhXpPk\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5173fc9143bea314b159ca5a9adb5626659ef763bc598e27de5fa46efe3291a6\",\"dweb:/ipfs/QmSLFeMFPmVeGxT4sxRPW28ictjAS22M8rLeYRu9TXkA6D\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ISendLib.sol\":{\"keccak256\":\"0xf1c07bc61e7b1dce195ed12d50f87980fbf2d63cac1326fd28287f55fe0ba625\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://060f10ff7afc33c1c2f2b4b5ba29231fd3c943146488084d0e4ab99fce991d97\",\"dweb:/ipfs/QmaSsefAqqEqtf8FgFUmDYMwTsAty3X1pqDb6SiFvry6B3\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/libs/AddressCast.sol\":{\"keccak256\":\"0x2ebbcaaab3554edcd41b581f1a72ac1806afbfb8047d0d47ff098f9af30d6deb\",\"license\":\"LZBL-1.2\",\"urls\":[\"bzz-raw://2d4b2cf5c3b16dc76c6767f285b57c0af917972327b2be3f7cba5825402f5fc1\",\"dweb:/ipfs/QmQQWiHE2jKEDbjzGutSoZwtApSXYfLqZt5CxEpFj8xyvT\"]},\"node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/messagelib/libs/PacketV1Codec.sol\":{\"keccak256\":\"0xc84cf1bf785977fe1fbe7566eef902c2db68d0e163813ebe6c34921754802680\",\"license\":\"LZBL-1.2\",\"urls\":[\"bzz-raw://de686666fc16fa432d4208d85cec87dc952faf3e481b683b9adf4b4610db4b09\",\"dweb:/ipfs/QmdmQeopzmxqRzi9DNB4EJDrYUXFfD7fUhnGhSni4QejUW\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol\":{\"keccak256\":\"0xac362c4c291fad2f1511a968424b2e78a5ad502d1c867bd31da04be742aca8c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1f8cf9f20a2b683a53c3883972aa0676af97a24c678f461fae08e1fb056df28\",\"dweb:/ipfs/QmPpKNqda3rgxDwnq3XiRTtT3NfWeqrCJT6LwmhYd2AoT2\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://606515dd9193551bd2c94ac8c304f3776fafcc70e544ebf441f334658b2fd5f0\",\"dweb:/ipfs/QmZ88ey7DdZqV5taAoebabvszX5kdPMSrQCAmTteVdDtcH\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol\":{\"keccak256\":\"0x0174e9f1ec4cefe4b5adc26c392269c699b9ff75965364e5b7264426a462c70b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd12bb4fe5802c53911b9a0081a2ea10639b1f99925d1e5c1b1421d1bdc17075\",\"dweb:/ipfs/QmZonarwbKiEwQ8qoASKur2bbMjusdy9pqK9RCR4P1YPtc\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\":{\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d42b471418efadcc3577ef3fa9f8f504e8bed7db90c3b0c862038d8b29529eb2\",\"dweb:/ipfs/QmZETDQiJN4U92fmLKo8T9ZbdDf7BNBUUvo9H7M7GqAyFU\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol\":{\"keccak256\":\"0xe5014c411acb2b59dd74ae74a1bab02cf32d94a41a548a5ab553d64aeeb55dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dfb7bc121002fc7e7931c34eb17af0ae0f0127dcc3199511c83a58a917160d\",\"dweb:/ipfs/QmPdq1wcRRBdUP169LHCLoLuPRunN9eR71TQN42FjGpowx\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a1deb2a6a3eb1fb83936c9578469142bff470295f403d7d07d955a76be3adbd\",\"dweb:/ipfs/QmS9bjSfBaE4YhQ1PCQ1TknbEPbNfRXzBK9E7SaPGyiZEv\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppMsgInspector.sol\":{\"keccak256\":\"0x339654e699043c400cad92de209aa23855ce10211c31cf4114042cc5224d3b7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5222afde59bf086f67b39e0288ad36343f4f5ed683d250533f256a5db956f37e\",\"dweb:/ipfs/QmbEG9EMYsK3Y6Cz7QbNtkW4kHGzMuhp2y2seSoL8v1A5b\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppOptionsType3.sol\":{\"keccak256\":\"0x9fc08a51e9d7c9c710c4eb26f84fe77228305ad7da63fa486ff24ebf2f3bc461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e2eea8a93bb9fc3f629767118b362e9b4bda2443ff95eae21c6a894f3e334cc\",\"dweb:/ipfs/QmPRRNjAB4U19ke4gr3U7ZJGtdcVBxdXVBZ2BmB1riFkP7\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol\":{\"keccak256\":\"0xd26135185e19b3732746d4a9e2923e896f28dec8664bab161faea2ee26fcdc3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c236dfe386b508be33c3a1a74ae1d4fd64b8c77ae207767e9dbed0f2429518a2\",\"dweb:/ipfs/QmXVbZJjfryTRti98uN3BMh5qh4K7NuEs1RSCoBjRoYd4q\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol\":{\"keccak256\":\"0x5275636cd47e660a2fdf6c7fe9d41ff3cc866b785cc8a9d88c1b8ca983509f01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a59dd6e3cfcc332f45a13d44585eb228588c4b9d470cbb19852df5753a4571af\",\"dweb:/ipfs/QmQJF1QU3MKhvmw42eq61u9z3bzKJJKMsEdQVYyPyYgTVS\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol\":{\"keccak256\":\"0x205a0abfd8b3c9af2740769f251381b84999b8e9347f3cd50de3ef8290a17750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9778d7d5da941af2029410b6ac212f915ea1785573ae2865b0ed8f779fcca82\",\"dweb:/ipfs/QmNkVEkfecvgubgnMuaT5fEfSExd95vz8DQHhpZtMrVRjH\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/precrime/interfaces/IOAppPreCrimeSimulator.sol\":{\"keccak256\":\"0x5d24db150949ea8e6437178e65a942e8c8b7f332e5daf32750f56b23b35b5bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b1dcea0267234654126f926a1b405743606d7b5e49185b621afb7bd94d18b9a\",\"dweb:/ipfs/QmZ9BXQmbWJcrhHKuBs4yhNtbCV5WUpUY3AXSX7rkWwX6y\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/precrime/interfaces/IPreCrime.sol\":{\"keccak256\":\"0xc8d869f27ef8ceb2e13fdf6a70682fd4dee3f90c4924eb8e125bc1e66cb6af84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66bf49d59c14832ea0ddddcd12d512d4f9bd0fd254a1368442587bf3e77fe73e\",\"dweb:/ipfs/QmYUAvsyuUPiSYjbL4zVo6ZtiRSLCUPDvCesqgdZWbSGDg\"]},\"node_modules/@layerzerolabs/oapp-evm/contracts/precrime/libs/Packet.sol\":{\"keccak256\":\"0xcb2fb1c5b2eb3731de78b479b9c2ab3bba326fe0b0b3a008590f18e881e457a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f70724c61d226743c2bd8ba6c09758805e4339780978949ce5b333c106be4edc\",\"dweb:/ipfs/QmX5rV9K1N7RgTz9xtf8CDG8SrYiitGAzFh9ec2tbnEec4\"]},\"node_modules/@layerzerolabs/oft-evm/contracts/OFT.sol\":{\"keccak256\":\"0xdc3582e4a20e02a79050c17058a1f1f42a4335d1a70be06c0a52a3fb05d4c89a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83c4bd42e68528246860a952a92a79e51e3a789dac79a0b62576ab2f609de9c7\",\"dweb:/ipfs/QmVj1x655j1cFTnPT8uBaM71TCSrhFVwPdoFkAkWhhadns\"]},\"node_modules/@layerzerolabs/oft-evm/contracts/OFTCore.sol\":{\"keccak256\":\"0x4c5a5412cf671bb70d84c9e783312eddf864ef56566f7bf86401c5661015e228\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cac6c48bbc05456b0fccd0782b1a8c2560b0420d425dcba109526af8188893e\",\"dweb:/ipfs/QmRoCZX37UNgBeVKXTsfBvR7DgibZGL1tfrPqfvyGafHor\"]},\"node_modules/@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol\":{\"keccak256\":\"0x7ba6bb62fba7ee83451cfb0e727ddeef0e96b4388bd4e9ff0fc6ce103e1101c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfbd447f2e8a730bd46a14c3c3e6a0b2bf7446145579603a9793ba5ac1dd38b4\",\"dweb:/ipfs/QmZ4nx4iGrFmBHvYFgki5TXFdCHz4Co38hgdgwpRaM7NLs\"]},\"node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol\":{\"keccak256\":\"0xaae73d6eb8b9561c43f1802f3c416c00ccd35f172b711f9781ccdf1b25a40db5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7beda2d895ae9e15269dd261a492ce0a29b498e5bebf088ed6f2ae6a5185719e\",\"dweb:/ipfs/QmScog2tW1YVyEPLVcUVqGGc85ub46sA28nUKNzFEZcFdK\"]},\"node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTMsgCodec.sol\":{\"keccak256\":\"0x5358948017669c03e157f871d8c38e988f9004dbd0801ad3119d2487f0d40b0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7d0f1bf32a80af9b99cd93fefa373dac5c27463351cc35f62b9c2439d5b9258\",\"dweb:/ipfs/Qmb81qoxzMwV3PkPANRvnXf4fJTsZ5sjJ8r2df9V2vhh6q\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdChains.sol\":{\"keccak256\":\"0x7dd11ac4db798fa196e00a0cfa288ce984acac881f1f34de03fe3187deed58de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c15fb03d5545e2d8d3948661596410edec5ec278a73988914b14a05d0d54557\",\"dweb:/ipfs/QmWGjkLgp4wSrTrFxF8cmhghaXQp5VyXYQvWE1DUTPL4rG\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdCheats.sol\":{\"keccak256\":\"0x28473c688050ed5cfdf6a47bfd59cdc7209e6a3eab8b438eb92055ea4066a49b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d7e6391ced7256389f496fa35962d4ecdd6a066c5a54bdbef58abe6287c732b\",\"dweb:/ipfs/QmTuTqyapx9XraMX3mUjNjs3YHzBiQSfAQ38can96WWohM\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdJson.sol\":{\"keccak256\":\"0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974\",\"dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdStorage.sol\":{\"keccak256\":\"0xb91ab24383a5872b894fc93325eef1add6cbbf981628f18e860068bf88bb7dcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2651e33b9ac8fc5803ed0a43078c1bf4fa90a0b0347aafd95776b02daccdcc57\",\"dweb:/ipfs/QmbdRyPuGJdZgnCuMnp7c1WsBo1Spf7j1KMmws1Z5rd4BQ\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdToml.sol\":{\"keccak256\":\"0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3\",\"dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Vm.sol\":{\"keccak256\":\"0xfe4466244a3c783594443a2f96e4b2d14e62e3eca310260f1b4c9107e9aafb53\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://3890f26c3e2c2d96f4b11f269e679c0a6f47ca995d761530a36c42382ddf7359\",\"dweb:/ipfs/QmWpcGEYqLxtfjouqwa3RP77uX2jnFGYnHjnzT4PPyRdbr\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/safeconsole.sol\":{\"keccak256\":\"0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab\",\"dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"test/HyperLiquidComposerRefund.t.sol\":{\"keccak256\":\"0x144051edcc332c85611f363520135b68b9f03b5ac6a21f39965b41bf2662316c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://48a4d9e008005a452cd5d7869b857e7448f8f732e40dfec4317c68a4830b2ca9\",\"dweb:/ipfs/Qmf93SegQmZNcqLT257hbSx3nk6YrCJ1vkrx6C2nPpqdmQ\"]},\"test/mocks/NoFallback.sol\":{\"keccak256\":\"0xe5aed033223936862b6ebe5ee5a74bc01b2e2bbb6884a5ba09870679a9895b2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3434fd84186945118cd6d7490c4a1d65394e619bd4f2966b9333222c674d4dc\",\"dweb:/ipfs/QmUNQQw7uAfJwG2adFZSZJTuRUK4P2a4JXXJYVHrvoTSfQ\"]},\"test/mocks/OFTMock.sol\":{\"keccak256\":\"0x4418ffbf7cbcc3e98033fe9869ae2c6b74a3fc22d9d5d5b927a53787b6e8d4ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://195f8028f158026b4be544c5c4dedd602b5114c43248060bead77b2b031a1aad\",\"dweb:/ipfs/QmbeMSV9NJSXAAfZVjkAqtKzr425MSTieJGn1DU28xMnM8\"]},\"test/mocks/SpotBalancePrecompileMock.sol\":{\"keccak256\":\"0xee2a309124d7af6d6737a859a8806e179e98aa25be49943510ab85e0db3c7603\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6f17d83704dc9f9f817b5676a601420759e6d1d26318b8601c90f482901ccdb8\",\"dweb:/ipfs/QmWvc4Rup1fE6SsEGxiWEwpKuem8hVoRwevQoeoE42WUey\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.22+commit.4fc1097e" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "reason",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ErrorMessage",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "amountCore",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "maxTransferableAmount",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OverflowDetected",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "fsig",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "keysHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlotFound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_UninitedSlot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ALICE",
          "outputs": [
            {
              "internalType": "address",
              "name": "assetBridgeAddress",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "coreIndexId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "decimalDiff",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_TO_FUND",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_TO_SEND",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_TO_SEND_OVERFLOW",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DST_EID",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HLP_PRECOMPILE_WRITE",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HL_LZ_ENDPOINT_V2",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HYPE",
          "outputs": [
            {
              "internalType": "address",
              "name": "assetBridgeAddress",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "coreIndexId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "decimalDiff",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SRC_EID",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "excludedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "_composerMsg", "type": "bytes" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getComposeMessage",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hyperLiquidComposer",
          "outputs": [
            {
              "internalType": "contract HyperLiquidComposer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oft",
          "outputs": [
            {
              "internalType": "contract OFTMock",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "artifact",
                  "type": "string"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "_exceedAmountBy",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_erc20_refund_receiver_excessive_amount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_erc20_refund_sender_malformed_receiver"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_malformed_payload"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "_exceedAmountBy",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_native_refund_receiver_excessive_amount_no_fallback"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_non_evm_sender_malformed_receiver"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "userA",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "userB",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        }
      ],
      "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
      "userdoc": {
        "kind": "user",
        "methods": {
          "test_erc20_refund_receiver_excessive_amount(uint64)": {
            "notice": "forge-config: default.fuzz.runs = 128"
          },
          "test_native_refund_receiver_excessive_amount_no_fallback(uint64)": {
            "notice": "forge-config: default.fuzz.runs = 128"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@layerzerolabs/=node_modules/@layerzerolabs/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=node_modules/@layerzerolabs/toolbox-foundry/lib/ds-test/",
        "forge-std/=node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/",
        "hardhat/=node_modules/hardhat/",
        "solidity-bytes-utils/contracts/=node_modules/@layerzerolabs/toolbox-foundry/lib/solidity-bytes-utils/"
      ],
      "optimizer": { "enabled": false, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "test/HyperLiquidComposerRefund.t.sol": "HyperLiquidComposerRefundTest"
      },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "contracts/HyperLiquidComposer.sol": {
        "keccak256": "0xe62cddcc0b667d7ed1114d773a076bbf20c409fb30d5a2d8b23f11bb505ce149",
        "urls": [
          "bzz-raw://14836d07edb91500455fed30b6917f8ed17b0e2d74ae4ac3f7ec9822b4b10fb4",
          "dweb:/ipfs/QmfHCstiYLFTVZ97gf7LGSJNAEWyUHiYrRQanajY9dSLJH"
        ],
        "license": "MIT"
      },
      "contracts/HyperLiquidComposerCore.sol": {
        "keccak256": "0x3e434f92a67cf8ebe665165b67c61a9a4f44ff100c8d758e469149e44705644d",
        "urls": [
          "bzz-raw://5a0893f8b064c38db25dee123fac75c2f1fe8f4e734a565fb7cf89a8295cb674",
          "dweb:/ipfs/QmeyR1opq8nCj3bkPxvaKmaatcxQWVg6Vm728gZRkDzMg4"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHyperLiquidComposerCore.sol": {
        "keccak256": "0x18674ea2cf84642166ab12a717c341503f7c5d490ec52b14d4d20924f5ff17aa",
        "urls": [
          "bzz-raw://5cdd6b1cc2428ce607117df50ede9cc12307cda7c332a1fd20143dbc3ea18274",
          "dweb:/ipfs/QmbmWTNbbf2jj3JFFQL8EwcaY4L9tXLPdrkGJYgPop9zda"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHyperLiquidComposerErrors.sol": {
        "keccak256": "0xb2444c6b5070d989f610d8dafff535ece8af031a78464f27f56af1cc74e06f69",
        "urls": [
          "bzz-raw://0a636fa5beff36bde5c49fa5433df8c6dc94a47b220d984eb8caf1004f2ea22c",
          "dweb:/ipfs/QmaZLvXPUnN2VxzsyG5EASRXVQCwG3JhExJF58Wa5ScoPy"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHyperLiquidReadPrecompile.sol": {
        "keccak256": "0x3a6df8d89dca4f7547bbdc912c92315020f88b50c648c55f04fcb3ecb47d9ae0",
        "urls": [
          "bzz-raw://836bc90fe0705ca588329e218253e375bc76752d762b76e31c5f568be1b9409f",
          "dweb:/ipfs/QmYMRCYqsKho9fHZcC8f4JBPSxx9p6a4zLL7nX8CDoZsXc"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHyperLiquidWritePrecompile.sol": {
        "keccak256": "0xbfa7d38d7675898af0def60823f15550730af3bacb64068a09e1746b21c2cf4b",
        "urls": [
          "bzz-raw://a5cba8210ee21bd186dfddbaa2b3f1ceaeb597763cac1e6271c9ae6e8ff4b53f",
          "dweb:/ipfs/QmVV8BtvpwQQ3jqUdTEFs2nnT9Q7gxTajRqgJPmKQuforV"
        ],
        "license": "MIT"
      },
      "contracts/library/HyperLiquidComposerCodec.sol": {
        "keccak256": "0x26e2d98f264344ec7d44110b294b72c84bda78eb89d43e7e8164b0e2972aa52d",
        "urls": [
          "bzz-raw://eac0654e9b43c8fdba761bff402d3909bd7a65c1684c4794a975abb07895864d",
          "dweb:/ipfs/QmPa5guHnQoke2ToDfmu9ovwQdTRbjA6c3rh1T7QqjMEQs"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroComposer.sol": {
        "keccak256": "0xfaca7205d4211ee9208a7e59171e2301731f3d2a20c49b4a839821871f5fdd49",
        "urls": [
          "bzz-raw://f254bc60ac26687b5320a43a556e30777b0745abf7cd64d5f4720d9b1d1f7fdf",
          "dweb:/ipfs/QmRSJEZVgxaC3L2DdE6s8P5qkYfM3V5JMeseeFJJqGR4xz"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol": {
        "keccak256": "0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3",
        "urls": [
          "bzz-raw://bacc29fd3866af71e59cb0bdc1cf82c882a4a7f4e2652fd413c9f12649762083",
          "dweb:/ipfs/QmZh2toLnrQDWaNYhS5K4NoW7Vxd2GdZx9KA77vKEDLAqs"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol": {
        "keccak256": "0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0",
        "urls": [
          "bzz-raw://77415ae0820859e0faf3fabdce683cce9fa03ea026ae0f6fe081ef1c9205f933",
          "dweb:/ipfs/QmXd7APqoCunQ2jYy73AHvi5gsZofLpm3SzM6FPo7zRPfL"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLib.sol": {
        "keccak256": "0x5cf5f24751b4e3ea1c9c5ded07cedfdfd62566b6daaffcc0144733859c9dba0c",
        "urls": [
          "bzz-raw://cae7e35007a714f007ea08045ef7c0cfa6c91fd2425b5028b2d49abad357a5f0",
          "dweb:/ipfs/QmcDBs5tsiyB35b8cwzWQWNnpkawb3uuHRaqE77Hxm2tve"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol": {
        "keccak256": "0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc",
        "urls": [
          "bzz-raw://d8ff6a8a89297fa127f86b54e0db3eba1d6a6eeb4f6398d3c84d569665ac8f1b",
          "dweb:/ipfs/QmVSwhw6xFDrLRAX4RXaCM47yBaBtac4wf36DYEq6KCTvT"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol": {
        "keccak256": "0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972",
        "urls": [
          "bzz-raw://7e1b245d58221d16d8b5e0f01ef3e289a24a7df1ace3b94239e4d5b954ad5927",
          "dweb:/ipfs/Qmappsgp7PCY9rSSNE9Cdn4BTRX591WfCSEgq2HxhA3z6S"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol": {
        "keccak256": "0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901",
        "urls": [
          "bzz-raw://b18b23a1643fc6636c4ad9d9023e2e6ca2d3c2a4a046482d4655bff09950598d",
          "dweb:/ipfs/Qma6G5SqiovwrMPfgqTrRngK1HWW373Wkf9c6YP2NhXpPk"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol": {
        "keccak256": "0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e",
        "urls": [
          "bzz-raw://5173fc9143bea314b159ca5a9adb5626659ef763bc598e27de5fa46efe3291a6",
          "dweb:/ipfs/QmSLFeMFPmVeGxT4sxRPW28ictjAS22M8rLeYRu9TXkA6D"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ISendLib.sol": {
        "keccak256": "0xf1c07bc61e7b1dce195ed12d50f87980fbf2d63cac1326fd28287f55fe0ba625",
        "urls": [
          "bzz-raw://060f10ff7afc33c1c2f2b4b5ba29231fd3c943146488084d0e4ab99fce991d97",
          "dweb:/ipfs/QmaSsefAqqEqtf8FgFUmDYMwTsAty3X1pqDb6SiFvry6B3"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/libs/AddressCast.sol": {
        "keccak256": "0x2ebbcaaab3554edcd41b581f1a72ac1806afbfb8047d0d47ff098f9af30d6deb",
        "urls": [
          "bzz-raw://2d4b2cf5c3b16dc76c6767f285b57c0af917972327b2be3f7cba5825402f5fc1",
          "dweb:/ipfs/QmQQWiHE2jKEDbjzGutSoZwtApSXYfLqZt5CxEpFj8xyvT"
        ],
        "license": "LZBL-1.2"
      },
      "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/messagelib/libs/PacketV1Codec.sol": {
        "keccak256": "0xc84cf1bf785977fe1fbe7566eef902c2db68d0e163813ebe6c34921754802680",
        "urls": [
          "bzz-raw://de686666fc16fa432d4208d85cec87dc952faf3e481b683b9adf4b4610db4b09",
          "dweb:/ipfs/QmdmQeopzmxqRzi9DNB4EJDrYUXFfD7fUhnGhSni4QejUW"
        ],
        "license": "LZBL-1.2"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol": {
        "keccak256": "0xac362c4c291fad2f1511a968424b2e78a5ad502d1c867bd31da04be742aca8c5",
        "urls": [
          "bzz-raw://e1f8cf9f20a2b683a53c3883972aa0676af97a24c678f461fae08e1fb056df28",
          "dweb:/ipfs/QmPpKNqda3rgxDwnq3XiRTtT3NfWeqrCJT6LwmhYd2AoT2"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol": {
        "keccak256": "0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc",
        "urls": [
          "bzz-raw://606515dd9193551bd2c94ac8c304f3776fafcc70e544ebf441f334658b2fd5f0",
          "dweb:/ipfs/QmZ88ey7DdZqV5taAoebabvszX5kdPMSrQCAmTteVdDtcH"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol": {
        "keccak256": "0x0174e9f1ec4cefe4b5adc26c392269c699b9ff75965364e5b7264426a462c70b",
        "urls": [
          "bzz-raw://cd12bb4fe5802c53911b9a0081a2ea10639b1f99925d1e5c1b1421d1bdc17075",
          "dweb:/ipfs/QmZonarwbKiEwQ8qoASKur2bbMjusdy9pqK9RCR4P1YPtc"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol": {
        "keccak256": "0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20",
        "urls": [
          "bzz-raw://d42b471418efadcc3577ef3fa9f8f504e8bed7db90c3b0c862038d8b29529eb2",
          "dweb:/ipfs/QmZETDQiJN4U92fmLKo8T9ZbdDf7BNBUUvo9H7M7GqAyFU"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppComposer.sol": {
        "keccak256": "0xe5014c411acb2b59dd74ae74a1bab02cf32d94a41a548a5ab553d64aeeb55dae",
        "urls": [
          "bzz-raw://29dfb7bc121002fc7e7931c34eb17af0ae0f0127dcc3199511c83a58a917160d",
          "dweb:/ipfs/QmPdq1wcRRBdUP169LHCLoLuPRunN9eR71TQN42FjGpowx"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol": {
        "keccak256": "0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58",
        "urls": [
          "bzz-raw://4a1deb2a6a3eb1fb83936c9578469142bff470295f403d7d07d955a76be3adbd",
          "dweb:/ipfs/QmS9bjSfBaE4YhQ1PCQ1TknbEPbNfRXzBK9E7SaPGyiZEv"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppMsgInspector.sol": {
        "keccak256": "0x339654e699043c400cad92de209aa23855ce10211c31cf4114042cc5224d3b7c",
        "urls": [
          "bzz-raw://5222afde59bf086f67b39e0288ad36343f4f5ed683d250533f256a5db956f37e",
          "dweb:/ipfs/QmbEG9EMYsK3Y6Cz7QbNtkW4kHGzMuhp2y2seSoL8v1A5b"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppOptionsType3.sol": {
        "keccak256": "0x9fc08a51e9d7c9c710c4eb26f84fe77228305ad7da63fa486ff24ebf2f3bc461",
        "urls": [
          "bzz-raw://2e2eea8a93bb9fc3f629767118b362e9b4bda2443ff95eae21c6a894f3e334cc",
          "dweb:/ipfs/QmPRRNjAB4U19ke4gr3U7ZJGtdcVBxdXVBZ2BmB1riFkP7"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol": {
        "keccak256": "0xd26135185e19b3732746d4a9e2923e896f28dec8664bab161faea2ee26fcdc3d",
        "urls": [
          "bzz-raw://c236dfe386b508be33c3a1a74ae1d4fd64b8c77ae207767e9dbed0f2429518a2",
          "dweb:/ipfs/QmXVbZJjfryTRti98uN3BMh5qh4K7NuEs1RSCoBjRoYd4q"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol": {
        "keccak256": "0x5275636cd47e660a2fdf6c7fe9d41ff3cc866b785cc8a9d88c1b8ca983509f01",
        "urls": [
          "bzz-raw://a59dd6e3cfcc332f45a13d44585eb228588c4b9d470cbb19852df5753a4571af",
          "dweb:/ipfs/QmQJF1QU3MKhvmw42eq61u9z3bzKJJKMsEdQVYyPyYgTVS"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol": {
        "keccak256": "0x205a0abfd8b3c9af2740769f251381b84999b8e9347f3cd50de3ef8290a17750",
        "urls": [
          "bzz-raw://d9778d7d5da941af2029410b6ac212f915ea1785573ae2865b0ed8f779fcca82",
          "dweb:/ipfs/QmNkVEkfecvgubgnMuaT5fEfSExd95vz8DQHhpZtMrVRjH"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/precrime/interfaces/IOAppPreCrimeSimulator.sol": {
        "keccak256": "0x5d24db150949ea8e6437178e65a942e8c8b7f332e5daf32750f56b23b35b5bb2",
        "urls": [
          "bzz-raw://1b1dcea0267234654126f926a1b405743606d7b5e49185b621afb7bd94d18b9a",
          "dweb:/ipfs/QmZ9BXQmbWJcrhHKuBs4yhNtbCV5WUpUY3AXSX7rkWwX6y"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/precrime/interfaces/IPreCrime.sol": {
        "keccak256": "0xc8d869f27ef8ceb2e13fdf6a70682fd4dee3f90c4924eb8e125bc1e66cb6af84",
        "urls": [
          "bzz-raw://66bf49d59c14832ea0ddddcd12d512d4f9bd0fd254a1368442587bf3e77fe73e",
          "dweb:/ipfs/QmYUAvsyuUPiSYjbL4zVo6ZtiRSLCUPDvCesqgdZWbSGDg"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oapp-evm/contracts/precrime/libs/Packet.sol": {
        "keccak256": "0xcb2fb1c5b2eb3731de78b479b9c2ab3bba326fe0b0b3a008590f18e881e457a6",
        "urls": [
          "bzz-raw://f70724c61d226743c2bd8ba6c09758805e4339780978949ce5b333c106be4edc",
          "dweb:/ipfs/QmX5rV9K1N7RgTz9xtf8CDG8SrYiitGAzFh9ec2tbnEec4"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oft-evm/contracts/OFT.sol": {
        "keccak256": "0xdc3582e4a20e02a79050c17058a1f1f42a4335d1a70be06c0a52a3fb05d4c89a",
        "urls": [
          "bzz-raw://83c4bd42e68528246860a952a92a79e51e3a789dac79a0b62576ab2f609de9c7",
          "dweb:/ipfs/QmVj1x655j1cFTnPT8uBaM71TCSrhFVwPdoFkAkWhhadns"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oft-evm/contracts/OFTCore.sol": {
        "keccak256": "0x4c5a5412cf671bb70d84c9e783312eddf864ef56566f7bf86401c5661015e228",
        "urls": [
          "bzz-raw://0cac6c48bbc05456b0fccd0782b1a8c2560b0420d425dcba109526af8188893e",
          "dweb:/ipfs/QmRoCZX37UNgBeVKXTsfBvR7DgibZGL1tfrPqfvyGafHor"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oft-evm/contracts/interfaces/IOFT.sol": {
        "keccak256": "0x7ba6bb62fba7ee83451cfb0e727ddeef0e96b4388bd4e9ff0fc6ce103e1101c8",
        "urls": [
          "bzz-raw://cfbd447f2e8a730bd46a14c3c3e6a0b2bf7446145579603a9793ba5ac1dd38b4",
          "dweb:/ipfs/QmZ4nx4iGrFmBHvYFgki5TXFdCHz4Co38hgdgwpRaM7NLs"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol": {
        "keccak256": "0xaae73d6eb8b9561c43f1802f3c416c00ccd35f172b711f9781ccdf1b25a40db5",
        "urls": [
          "bzz-raw://7beda2d895ae9e15269dd261a492ce0a29b498e5bebf088ed6f2ae6a5185719e",
          "dweb:/ipfs/QmScog2tW1YVyEPLVcUVqGGc85ub46sA28nUKNzFEZcFdK"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTMsgCodec.sol": {
        "keccak256": "0x5358948017669c03e157f871d8c38e988f9004dbd0801ad3119d2487f0d40b0b",
        "urls": [
          "bzz-raw://c7d0f1bf32a80af9b99cd93fefa373dac5c27463351cc35f62b9c2439d5b9258",
          "dweb:/ipfs/Qmb81qoxzMwV3PkPANRvnXf4fJTsZ5sjJ8r2df9V2vhh6q"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdAssertions.sol": {
        "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
        "urls": [
          "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
          "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdChains.sol": {
        "keccak256": "0x7dd11ac4db798fa196e00a0cfa288ce984acac881f1f34de03fe3187deed58de",
        "urls": [
          "bzz-raw://2c15fb03d5545e2d8d3948661596410edec5ec278a73988914b14a05d0d54557",
          "dweb:/ipfs/QmWGjkLgp4wSrTrFxF8cmhghaXQp5VyXYQvWE1DUTPL4rG"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdCheats.sol": {
        "keccak256": "0x28473c688050ed5cfdf6a47bfd59cdc7209e6a3eab8b438eb92055ea4066a49b",
        "urls": [
          "bzz-raw://2d7e6391ced7256389f496fa35962d4ecdd6a066c5a54bdbef58abe6287c732b",
          "dweb:/ipfs/QmTuTqyapx9XraMX3mUjNjs3YHzBiQSfAQ38can96WWohM"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdInvariant.sol": {
        "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
        "urls": [
          "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
          "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdJson.sol": {
        "keccak256": "0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500",
        "urls": [
          "bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974",
          "dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdStorage.sol": {
        "keccak256": "0xb91ab24383a5872b894fc93325eef1add6cbbf981628f18e860068bf88bb7dcc",
        "urls": [
          "bzz-raw://2651e33b9ac8fc5803ed0a43078c1bf4fa90a0b0347aafd95776b02daccdcc57",
          "dweb:/ipfs/QmbdRyPuGJdZgnCuMnp7c1WsBo1Spf7j1KMmws1Z5rd4BQ"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdToml.sol": {
        "keccak256": "0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861",
        "urls": [
          "bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3",
          "dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/StdUtils.sol": {
        "keccak256": "0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410",
        "urls": [
          "bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa",
          "dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Test.sol": {
        "keccak256": "0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe",
        "urls": [
          "bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e",
          "dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Vm.sol": {
        "keccak256": "0xfe4466244a3c783594443a2f96e4b2d14e62e3eca310260f1b4c9107e9aafb53",
        "urls": [
          "bzz-raw://3890f26c3e2c2d96f4b11f269e679c0a6f47ca995d761530a36c42382ddf7359",
          "dweb:/ipfs/QmWpcGEYqLxtfjouqwa3RP77uX2jnFGYnHjnzT4PPyRdbr"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/console.sol": {
        "keccak256": "0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5",
        "urls": [
          "bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57",
          "dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/console2.sol": {
        "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
        "urls": [
          "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
          "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/mocks/MockERC721.sol": {
        "keccak256": "0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9",
        "urls": [
          "bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87",
          "dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv"
        ],
        "license": "MIT"
      },
      "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/safeconsole.sol": {
        "keccak256": "0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11",
        "urls": [
          "bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab",
          "dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
        "urls": [
          "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
          "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31",
        "urls": [
          "bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09",
          "dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
        "urls": [
          "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
          "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310",
        "urls": [
          "bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862",
          "dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5",
        "urls": [
          "bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23",
          "dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "test/HyperLiquidComposerRefund.t.sol": {
        "keccak256": "0x144051edcc332c85611f363520135b68b9f03b5ac6a21f39965b41bf2662316c",
        "urls": [
          "bzz-raw://48a4d9e008005a452cd5d7869b857e7448f8f732e40dfec4317c68a4830b2ca9",
          "dweb:/ipfs/Qmf93SegQmZNcqLT257hbSx3nk6YrCJ1vkrx6C2nPpqdmQ"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/NoFallback.sol": {
        "keccak256": "0xe5aed033223936862b6ebe5ee5a74bc01b2e2bbb6884a5ba09870679a9895b2a",
        "urls": [
          "bzz-raw://c3434fd84186945118cd6d7490c4a1d65394e619bd4f2966b9333222c674d4dc",
          "dweb:/ipfs/QmUNQQw7uAfJwG2adFZSZJTuRUK4P2a4JXXJYVHrvoTSfQ"
        ],
        "license": "MIT"
      },
      "test/mocks/OFTMock.sol": {
        "keccak256": "0x4418ffbf7cbcc3e98033fe9869ae2c6b74a3fc22d9d5d5b927a53787b6e8d4ea",
        "urls": [
          "bzz-raw://195f8028f158026b4be544c5c4dedd602b5114c43248060bead77b2b031a1aad",
          "dweb:/ipfs/QmbeMSV9NJSXAAfZVjkAqtKzr425MSTieJGn1DU28xMnM8"
        ],
        "license": "MIT"
      },
      "test/mocks/SpotBalancePrecompileMock.sol": {
        "keccak256": "0xee2a309124d7af6d6737a859a8806e179e98aa25be49943510ab85e0db3c7603",
        "urls": [
          "bzz-raw://6f17d83704dc9f9f817b5676a601420759e6d1d26318b8601c90f482901ccdb8",
          "dweb:/ipfs/QmWvc4Rup1fE6SsEGxiWEwpKuem8hVoRwevQoeoE42WUey"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/HyperLiquidComposerRefund.t.sol",
    "id": 50037,
    "exportedSymbols": {
      "HyperLiquidComposer": [386],
      "HyperLiquidComposerCodec": [1582],
      "HyperLiquidComposerRefundTest": [50036],
      "IERC20": [46722],
      "IHyperAsset": [897],
      "IHyperLiquidComposerCore": [995],
      "IHyperLiquidComposerErrors": [1051],
      "ILayerZeroEndpointV2": [1803],
      "NoFallback": [50745],
      "OFTComposeMsgCodec": [5287],
      "OFTMock": [50775],
      "SpotBalancePrecompileMock": [50841],
      "Test": [18271],
      "console": [31038]
    },
    "nodeType": "SourceUnit",
    "src": "39:11280:77",
    "nodes": [
      {
        "id": 48982,
        "nodeType": "PragmaDirective",
        "src": "39:23:77",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".0"]
      },
      {
        "id": 48985,
        "nodeType": "ImportDirective",
        "src": "64:51:77",
        "nodes": [],
        "absolutePath": "node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50037,
        "sourceUnit": 18272,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48983,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 18271,
              "src": "73:4:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48984,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31038,
              "src": "79:7:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48987,
        "nodeType": "ImportDirective",
        "src": "117:119:77",
        "nodes": [],
        "absolutePath": "node_modules/@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol",
        "file": "@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50037,
        "sourceUnit": 1804,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48986,
              "name": "ILayerZeroEndpointV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1803,
              "src": "126:20:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48989,
        "nodeType": "ImportDirective",
        "src": "237:98:77",
        "nodes": [],
        "absolutePath": "node_modules/@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol",
        "file": "@layerzerolabs/oft-evm/contracts/libs/OFTComposeMsgCodec.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50037,
        "sourceUnit": 5288,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48988,
              "name": "OFTComposeMsgCodec",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5287,
              "src": "246:18:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48991,
        "nodeType": "ImportDirective",
        "src": "336:72:77",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50037,
        "sourceUnit": 46723,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48990,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46722,
              "src": "345:6:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48993,
        "nodeType": "ImportDirective",
        "src": "410:100:77",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IHyperLiquidComposerErrors.sol",
        "file": "../contracts/interfaces/IHyperLiquidComposerErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50037,
        "sourceUnit": 1052,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48992,
              "name": "IHyperLiquidComposerErrors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1051,
              "src": "419:26:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48996,
        "nodeType": "ImportDirective",
        "src": "511:109:77",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IHyperLiquidComposerCore.sol",
        "file": "../contracts/interfaces/IHyperLiquidComposerCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50037,
        "sourceUnit": 996,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48994,
              "name": "IHyperAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 897,
              "src": "520:11:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48995,
              "name": "IHyperLiquidComposerCore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 995,
              "src": "533:24:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48998,
        "nodeType": "ImportDirective",
        "src": "622:93:77",
        "nodes": [],
        "absolutePath": "contracts/library/HyperLiquidComposerCodec.sol",
        "file": "../contracts/library/HyperLiquidComposerCodec.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50037,
        "sourceUnit": 1583,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48997,
              "name": "HyperLiquidComposerCodec",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1582,
              "src": "631:24:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49000,
        "nodeType": "ImportDirective",
        "src": "716:75:77",
        "nodes": [],
        "absolutePath": "contracts/HyperLiquidComposer.sol",
        "file": "../contracts/HyperLiquidComposer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50037,
        "sourceUnit": 387,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48999,
              "name": "HyperLiquidComposer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 386,
              "src": "725:19:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49002,
        "nodeType": "ImportDirective",
        "src": "793:52:77",
        "nodes": [],
        "absolutePath": "test/mocks/NoFallback.sol",
        "file": "./mocks/NoFallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50037,
        "sourceUnit": 50746,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49001,
              "name": "NoFallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50745,
              "src": "802:10:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49004,
        "nodeType": "ImportDirective",
        "src": "846:46:77",
        "nodes": [],
        "absolutePath": "test/mocks/OFTMock.sol",
        "file": "./mocks/OFTMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50037,
        "sourceUnit": 50776,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49003,
              "name": "OFTMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50775,
              "src": "855:7:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49006,
        "nodeType": "ImportDirective",
        "src": "893:82:77",
        "nodes": [],
        "absolutePath": "test/mocks/SpotBalancePrecompileMock.sol",
        "file": "./mocks/SpotBalancePrecompileMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50037,
        "sourceUnit": 50842,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49005,
              "name": "SpotBalancePrecompileMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50841,
              "src": "902:25:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50036,
        "nodeType": "ContractDefinition",
        "src": "977:10341:77",
        "nodes": [
          {
            "id": 49011,
            "nodeType": "VariableDeclaration",
            "src": "1030:24:77",
            "nodes": [],
            "constant": false,
            "functionSelector": "c33d080d",
            "mutability": "mutable",
            "name": "ALICE",
            "nameLocation": "1049:5:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
              "typeString": "struct IHyperAsset"
            },
            "typeName": {
              "id": 49010,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49009,
                "name": "IHyperAsset",
                "nameLocations": ["1030:11:77"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 897,
                "src": "1030:11:77"
              },
              "referencedDeclaration": 897,
              "src": "1030:11:77",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_IHyperAsset_$897_storage_ptr",
                "typeString": "struct IHyperAsset"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49014,
            "nodeType": "VariableDeclaration",
            "src": "1060:23:77",
            "nodes": [],
            "constant": false,
            "functionSelector": "76e86e72",
            "mutability": "mutable",
            "name": "HYPE",
            "nameLocation": "1079:4:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
              "typeString": "struct IHyperAsset"
            },
            "typeName": {
              "id": 49013,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49012,
                "name": "IHyperAsset",
                "nameLocations": ["1060:11:77"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 897,
                "src": "1060:11:77"
              },
              "referencedDeclaration": 897,
              "src": "1060:11:77",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_IHyperAsset_$897_storage_ptr",
                "typeString": "struct IHyperAsset"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49017,
            "nodeType": "VariableDeclaration",
            "src": "1089:86:77",
            "nodes": [],
            "constant": true,
            "functionSelector": "318f405a",
            "mutability": "constant",
            "name": "HL_LZ_ENDPOINT_V2",
            "nameLocation": "1113:17:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49015,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1089:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307866396531383135463135313032346244453442374331304241433130653842613946366235334531",
              "id": 49016,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1133:42:77",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xf9e1815F151024bDE4B7C10BAC10e8Ba9F6b53E1"
            },
            "visibility": "public"
          },
          {
            "id": 49020,
            "nodeType": "VariableDeclaration",
            "src": "1181:89:77",
            "nodes": [],
            "constant": true,
            "functionSelector": "dd850075",
            "mutability": "constant",
            "name": "HLP_PRECOMPILE_WRITE",
            "nameLocation": "1205:20:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49018,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1181:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307833333333333333333333333333333333333333333333333333333333333333333333333333333333",
              "id": 49019,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1228:42:77",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x3333333333333333333333333333333333333333"
            },
            "visibility": "public"
          },
          {
            "id": 49023,
            "nodeType": "VariableDeclaration",
            "src": "1276:101:77",
            "nodes": [],
            "constant": true,
            "functionSelector": "ba872679",
            "mutability": "constant",
            "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
            "nameLocation": "1300:32:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49021,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1276:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030383031",
              "id": 49022,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1335:42:77",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000000000801"
            },
            "visibility": "public"
          },
          {
            "id": 49026,
            "nodeType": "VariableDeclaration",
            "src": "1408:38:77",
            "nodes": [],
            "constant": true,
            "functionSelector": "c9279a74",
            "mutability": "constant",
            "name": "SRC_EID",
            "nameLocation": "1431:7:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 49024,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1408:6:77",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "3430313631",
              "id": 49025,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1441:5:77",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_40161_by_1",
                "typeString": "int_const 40161"
              },
              "value": "40161"
            },
            "visibility": "public"
          },
          {
            "id": 49028,
            "nodeType": "VariableDeclaration",
            "src": "1479:21:77",
            "nodes": [],
            "constant": false,
            "functionSelector": "176e619e",
            "mutability": "mutable",
            "name": "DST_EID",
            "nameLocation": "1493:7:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 49027,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1479:6:77",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49031,
            "nodeType": "VariableDeclaration",
            "src": "1507:18:77",
            "nodes": [],
            "constant": false,
            "functionSelector": "9b5215f6",
            "mutability": "mutable",
            "name": "oft",
            "nameLocation": "1522:3:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OFTMock_$50775",
              "typeString": "contract OFTMock"
            },
            "typeName": {
              "id": 49030,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49029,
                "name": "OFTMock",
                "nameLocations": ["1507:7:77"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50775,
                "src": "1507:7:77"
              },
              "referencedDeclaration": 50775,
              "src": "1507:7:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OFTMock_$50775",
                "typeString": "contract OFTMock"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49034,
            "nodeType": "VariableDeclaration",
            "src": "1531:46:77",
            "nodes": [],
            "constant": false,
            "functionSelector": "a09e7430",
            "mutability": "mutable",
            "name": "hyperLiquidComposer",
            "nameLocation": "1558:19:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
              "typeString": "contract HyperLiquidComposer"
            },
            "typeName": {
              "id": 49033,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49032,
                "name": "HyperLiquidComposer",
                "nameLocations": ["1531:19:77"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 386,
                "src": "1531:19:77"
              },
              "referencedDeclaration": 386,
              "src": "1531:19:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                "typeString": "contract HyperLiquidComposer"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49039,
            "nodeType": "VariableDeclaration",
            "src": "1584:40:77",
            "nodes": [],
            "constant": false,
            "functionSelector": "deb22e9a",
            "mutability": "mutable",
            "name": "userA",
            "nameLocation": "1599:5:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49035,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1584:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "7573657241",
                  "id": 49037,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1616:7:77",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_66d43f2462420055e331769cd264c0b96b6e11235c74b6eb509f25e8817571d1",
                    "typeString": "literal_string \"userA\""
                  },
                  "value": "userA"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_66d43f2462420055e331769cd264c0b96b6e11235c74b6eb509f25e8817571d1",
                    "typeString": "literal_string \"userA\""
                  }
                ],
                "id": 49036,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 10804,
                "src": "1607:8:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 49038,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1607:17:77",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49044,
            "nodeType": "VariableDeclaration",
            "src": "1630:40:77",
            "nodes": [],
            "constant": false,
            "functionSelector": "cb1a295f",
            "mutability": "mutable",
            "name": "userB",
            "nameLocation": "1645:5:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49040,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1630:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "7573657242",
                  "id": 49042,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1662:7:77",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_84287298a72e6b9c16d0138ccf1e0b316be8b2ed2966bcbc1af2c6453e13cfaf",
                    "typeString": "literal_string \"userB\""
                  },
                  "value": "userB"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_84287298a72e6b9c16d0138ccf1e0b316be8b2ed2966bcbc1af2c6453e13cfaf",
                    "typeString": "literal_string \"userB\""
                  }
                ],
                "id": 49041,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 10804,
                "src": "1653:8:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 49043,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1653:17:77",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49047,
            "nodeType": "VariableDeclaration",
            "src": "1677:44:77",
            "nodes": [],
            "constant": true,
            "functionSelector": "bb641b3e",
            "mutability": "constant",
            "name": "AMOUNT_TO_SEND",
            "nameLocation": "1700:14:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 49045,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1677:6:77",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 49046,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1717:4:77",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "id": 49050,
            "nodeType": "VariableDeclaration",
            "src": "1727:54:77",
            "nodes": [],
            "constant": true,
            "functionSelector": "66165d9f",
            "mutability": "constant",
            "name": "AMOUNT_TO_SEND_OVERFLOW",
            "nameLocation": "1750:23:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 49048,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1727:6:77",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 49049,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1776:5:77",
              "subdenomination": "wei",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "id": 49055,
            "nodeType": "VariableDeclaration",
            "src": "1787:74:77",
            "nodes": [],
            "constant": true,
            "functionSelector": "9127ace2",
            "mutability": "constant",
            "name": "AMOUNT_TO_FUND",
            "nameLocation": "1810:14:77",
            "scope": 50036,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 49051,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1787:6:77",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              },
              "id": 49054,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "313030",
                "id": 49052,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1827:8:77",
                "subdenomination": "gwei",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000000_by_1",
                  "typeString": "int_const 100000000000"
                },
                "value": "100"
              },
              "nodeType": "BinaryOperation",
              "operator": "+",
              "rightExpression": {
                "id": 49053,
                "name": "AMOUNT_TO_SEND_OVERFLOW",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 49050,
                "src": "1838:23:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "src": "1827:34:77",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49175,
            "nodeType": "FunctionDefinition",
            "src": "1867:1311:77",
            "nodes": [],
            "body": {
              "id": 49174,
              "nodeType": "Block",
              "src": "1891:1287:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "68747470733a2f2f7270632e68797065726c69717569642d746573746e65742e78797a2f65766d",
                        "id": 49061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1921:41:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_553c8addd948e0c243d8c3bc74db5967a2a4edb7e156901968230a5e7b1d8b57",
                          "typeString": "literal_string \"https://rpc.hyperliquid-testnet.xyz/evm\""
                        },
                        "value": "https://rpc.hyperliquid-testnet.xyz/evm"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_553c8addd948e0c243d8c3bc74db5967a2a4edb7e156901968230a5e7b1d8b57",
                          "typeString": "literal_string \"https://rpc.hyperliquid-testnet.xyz/evm\""
                        }
                      ],
                      "expression": {
                        "id": 49058,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "1901:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1904:16:77",
                      "memberName": "createSelectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22087,
                      "src": "1901:19:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) external returns (uint256)"
                      }
                    },
                    "id": 49062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1901:62:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49063,
                  "nodeType": "ExpressionStatement",
                  "src": "1901:62:77"
                },
                {
                  "expression": {
                    "id": 49075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49064,
                      "name": "ALICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49011,
                      "src": "1974:5:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                        "typeString": "struct IHyperAsset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31323331",
                              "id": 49068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2077:4:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1231_by_1",
                                "typeString": "int_const 1231"
                              },
                              "value": "1231"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1231_by_1",
                                "typeString": "int_const 1231"
                              }
                            ],
                            "expression": {
                              "id": 49066,
                              "name": "HyperLiquidComposerCodec",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1582,
                              "src": "2028:24:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_HyperLiquidComposerCodec_$1582_$",
                                "typeString": "type(library HyperLiquidComposerCodec)"
                              }
                            },
                            "id": 49067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2053:23:77",
                            "memberName": "into_assetBridgeAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1347,
                            "src": "2028:48:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) pure returns (address)"
                            }
                          },
                          "id": 49069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2028:54:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "31323331",
                          "id": 49070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2109:4:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1231_by_1",
                            "typeString": "int_const 1231"
                          },
                          "value": "1231"
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_12_by_1",
                            "typeString": "int_const 12"
                          },
                          "id": 49073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3138",
                            "id": 49071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2140:2:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 49072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2145:1:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "2140:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_12_by_1",
                            "typeString": "int_const 12"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1231_by_1",
                            "typeString": "int_const 1231"
                          },
                          {
                            "typeIdentifier": "t_rational_12_by_1",
                            "typeString": "int_const 12"
                          }
                        ],
                        "id": 49065,
                        "name": "IHyperAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "1982:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_IHyperAsset_$897_storage_ptr_$",
                          "typeString": "type(struct IHyperAsset storage pointer)"
                        }
                      },
                      "id": 49074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "2008:18:77",
                        "2096:11:77",
                        "2127:11:77"
                      ],
                      "names": [
                        "assetBridgeAddress",
                        "coreIndexId",
                        "decimalDiff"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1982:175:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                        "typeString": "struct IHyperAsset memory"
                      }
                    },
                    "src": "1974:183:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                      "typeString": "struct IHyperAsset storage ref"
                    }
                  },
                  "id": 49076,
                  "nodeType": "ExpressionStatement",
                  "src": "1974:183:77"
                },
                {
                  "expression": {
                    "id": 49085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49077,
                      "name": "HYPE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49014,
                      "src": "2168:4:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                        "typeString": "struct IHyperAsset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307832323232323232323232323232323232323232323232323232323232323232323232323232323232",
                          "id": 49079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2221:42:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x2222222222222222222222222222222222222222"
                        },
                        {
                          "hexValue": "31313035",
                          "id": 49080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2290:4:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1105_by_1",
                            "typeString": "int_const 1105"
                          },
                          "value": "1105"
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "id": 49083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3138",
                            "id": 49081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2321:2:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 49082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2326:2:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "2321:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1105_by_1",
                            "typeString": "int_const 1105"
                          },
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        ],
                        "id": 49078,
                        "name": "IHyperAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "2175:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_IHyperAsset_$897_storage_ptr_$",
                          "typeString": "type(struct IHyperAsset storage pointer)"
                        }
                      },
                      "id": 49084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "2201:18:77",
                        "2277:11:77",
                        "2308:11:77"
                      ],
                      "names": [
                        "assetBridgeAddress",
                        "coreIndexId",
                        "decimalDiff"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2175:164:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IHyperAsset_$897_memory_ptr",
                        "typeString": "struct IHyperAsset memory"
                      }
                    },
                    "src": "2168:171:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                      "typeString": "struct IHyperAsset storage ref"
                    }
                  },
                  "id": 49086,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:171:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49090,
                        "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49023,
                        "src": "2358:32:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 49095,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "2400:29:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SpotBalancePrecompileMock_$50841_$",
                                  "typeString": "function () returns (contract SpotBalancePrecompileMock)"
                                },
                                "typeName": {
                                  "id": 49094,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 49093,
                                    "name": "SpotBalancePrecompileMock",
                                    "nameLocations": ["2404:25:77"],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 50841,
                                    "src": "2404:25:77"
                                  },
                                  "referencedDeclaration": 50841,
                                  "src": "2404:25:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SpotBalancePrecompileMock_$50841",
                                    "typeString": "contract SpotBalancePrecompileMock"
                                  }
                                }
                              },
                              "id": 49096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2400:31:77",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SpotBalancePrecompileMock_$50841",
                                "typeString": "contract SpotBalancePrecompileMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SpotBalancePrecompileMock_$50841",
                                "typeString": "contract SpotBalancePrecompileMock"
                              }
                            ],
                            "id": 49092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2392:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49091,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2392:7:77",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2392:40:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 49098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2433:4:77",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "2392:45:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 49087,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "2350:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2353:4:77",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22147,
                      "src": "2350:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 49099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2350:88:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49100,
                  "nodeType": "ExpressionStatement",
                  "src": "2350:88:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49105,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49011,
                          "src": "2536:5:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 49106,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2542:18:77",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "2536:24:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 49107,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49011,
                          "src": "2574:5:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 49108,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2580:11:77",
                        "memberName": "coreIndexId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 894,
                        "src": "2574:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 49111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2610:6:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 49110,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "2610:6:77",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              }
                            ],
                            "id": 49109,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2605:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 49112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2605:12:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint64",
                            "typeString": "type(uint64)"
                          }
                        },
                        "id": 49113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2618:3:77",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2605:16:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49102,
                            "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49023,
                            "src": "2474:32:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49101,
                          "name": "SpotBalancePrecompileMock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50841,
                          "src": "2448:25:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SpotBalancePrecompileMock_$50841_$",
                            "typeString": "type(contract SpotBalancePrecompileMock)"
                          }
                        },
                        "id": 49103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2448:59:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpotBalancePrecompileMock_$50841",
                          "typeString": "contract SpotBalancePrecompileMock"
                        }
                      },
                      "id": 49104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2508:14:77",
                      "memberName": "setSpotBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50809,
                      "src": "2448:74:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint64,uint64) external"
                      }
                    },
                    "id": 49114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2448:183:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49115,
                  "nodeType": "ExpressionStatement",
                  "src": "2448:183:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49120,
                          "name": "HYPE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49014,
                          "src": "2730:4:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 49121,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2735:18:77",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "2730:23:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 49122,
                          "name": "HYPE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49014,
                          "src": "2767:4:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 49123,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2772:11:77",
                        "memberName": "coreIndexId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 894,
                        "src": "2767:16:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 49126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2802:6:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 49125,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "2802:6:77",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              }
                            ],
                            "id": 49124,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2797:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 49127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2797:12:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint64",
                            "typeString": "type(uint64)"
                          }
                        },
                        "id": 49128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2810:3:77",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2797:16:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49117,
                            "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49023,
                            "src": "2668:32:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49116,
                          "name": "SpotBalancePrecompileMock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50841,
                          "src": "2642:25:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SpotBalancePrecompileMock_$50841_$",
                            "typeString": "type(contract SpotBalancePrecompileMock)"
                          }
                        },
                        "id": 49118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2642:59:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpotBalancePrecompileMock_$50841",
                          "typeString": "contract SpotBalancePrecompileMock"
                        }
                      },
                      "id": 49119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2702:14:77",
                      "memberName": "setSpotBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50809,
                      "src": "2642:74:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint64,uint64) external"
                      }
                    },
                    "id": 49129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2642:181:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49130,
                  "nodeType": "ExpressionStatement",
                  "src": "2642:181:77"
                },
                {
                  "expression": {
                    "id": 49141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49131,
                      "name": "oft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49031,
                      "src": "2834:3:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OFTMock_$50775",
                        "typeString": "contract OFTMock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74657374",
                          "id": 49135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2852:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          },
                          "value": "test"
                        },
                        {
                          "hexValue": "74657374",
                          "id": 49136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2860:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          },
                          "value": "test"
                        },
                        {
                          "id": 49137,
                          "name": "HL_LZ_ENDPOINT_V2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49017,
                          "src": "2868:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 49138,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2887:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 49139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2891:6:77",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2887:10:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 49134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2840:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$returns$_t_contract$_OFTMock_$50775_$",
                          "typeString": "function (string memory,string memory,address,address) returns (contract OFTMock)"
                        },
                        "typeName": {
                          "id": 49133,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 49132,
                            "name": "OFTMock",
                            "nameLocations": ["2844:7:77"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 50775,
                            "src": "2844:7:77"
                          },
                          "referencedDeclaration": 50775,
                          "src": "2844:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OFTMock_$50775",
                            "typeString": "contract OFTMock"
                          }
                        }
                      },
                      "id": 49140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2840:58:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OFTMock_$50775",
                        "typeString": "contract OFTMock"
                      }
                    },
                    "src": "2834:64:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OFTMock_$50775",
                      "typeString": "contract OFTMock"
                    }
                  },
                  "id": 49142,
                  "nodeType": "ExpressionStatement",
                  "src": "2834:64:77"
                },
                {
                  "expression": {
                    "id": 49157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49143,
                      "name": "hyperLiquidComposer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49034,
                      "src": "2909:19:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                        "typeString": "contract HyperLiquidComposer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49147,
                          "name": "HL_LZ_ENDPOINT_V2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49017,
                          "src": "2968:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 49150,
                              "name": "oft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49031,
                              "src": "3007:3:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OFTMock_$50775",
                                "typeString": "contract OFTMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OFTMock_$50775",
                                "typeString": "contract OFTMock"
                              }
                            ],
                            "id": 49149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2999:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49148,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2999:7:77",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2999:12:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 49152,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49011,
                            "src": "3025:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                              "typeString": "struct IHyperAsset storage ref"
                            }
                          },
                          "id": 49153,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3031:11:77",
                          "memberName": "coreIndexId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 894,
                          "src": "3025:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "expression": {
                            "id": 49154,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49011,
                            "src": "3056:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                              "typeString": "struct IHyperAsset storage ref"
                            }
                          },
                          "id": 49155,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3062:11:77",
                          "memberName": "decimalDiff",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 896,
                          "src": "3056:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 49146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2931:23:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_uint64_$_t_uint64_$returns$_t_contract$_HyperLiquidComposer_$386_$",
                          "typeString": "function (address,address,uint64,uint64) returns (contract HyperLiquidComposer)"
                        },
                        "typeName": {
                          "id": 49145,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 49144,
                            "name": "HyperLiquidComposer",
                            "nameLocations": ["2935:19:77"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 386,
                            "src": "2935:19:77"
                          },
                          "referencedDeclaration": 386,
                          "src": "2935:19:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                            "typeString": "contract HyperLiquidComposer"
                          }
                        }
                      },
                      "id": 49156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2931:152:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                        "typeString": "contract HyperLiquidComposer"
                      }
                    },
                    "src": "2909:174:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                      "typeString": "contract HyperLiquidComposer"
                    }
                  },
                  "id": 49158,
                  "nodeType": "ExpressionStatement",
                  "src": "2909:174:77"
                },
                {
                  "expression": {
                    "id": 49165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49159,
                      "name": "DST_EID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49028,
                      "src": "3093:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 49160,
                              "name": "oft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49031,
                              "src": "3103:3:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OFTMock_$50775",
                                "typeString": "contract OFTMock"
                              }
                            },
                            "id": 49161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3107:8:77",
                            "memberName": "endpoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2987,
                            "src": "3103:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILayerZeroEndpointV2_$1803_$",
                              "typeString": "function () view external returns (contract ILayerZeroEndpointV2)"
                            }
                          },
                          "id": 49162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3103:14:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILayerZeroEndpointV2_$1803",
                            "typeString": "contract ILayerZeroEndpointV2"
                          }
                        },
                        "id": 49163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3118:3:77",
                        "memberName": "eid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2180,
                        "src": "3103:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
                          "typeString": "function () view external returns (uint32)"
                        }
                      },
                      "id": 49164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3103:20:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3093:30:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 49166,
                  "nodeType": "ExpressionStatement",
                  "src": "3093:30:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49170,
                        "name": "HL_LZ_ENDPOINT_V2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49017,
                        "src": "3142:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 49171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3161:9:77",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 49167,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "3134:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3137:4:77",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22115,
                      "src": "3134:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 49172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:37:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49173,
                  "nodeType": "ExpressionStatement",
                  "src": "3134:37:77"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1876:5:77",
            "parameters": {
              "id": 49056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1881:2:77"
            },
            "returnParameters": {
              "id": 49057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1891:0:77"
            },
            "scope": 50036,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49274,
            "nodeType": "FunctionDefinition",
            "src": "3184:880:77",
            "nodes": [],
            "body": {
              "id": 49273,
              "nodeType": "Block",
              "src": "3225:839:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49181,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "3334:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 49180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3326:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49179,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3326:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3326:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 49185,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49034,
                            "src": "3348:19:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 49184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3340:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49183,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3340:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3340:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49187,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49047,
                        "src": "3370:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 49178,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [11339, 11356, 11479],
                      "referencedDeclaration": 11356,
                      "src": "3321:4:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 49188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3321:64:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49189,
                  "nodeType": "ExpressionStatement",
                  "src": "3321:64:77"
                },
                {
                  "assignments": [49191],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49191,
                      "mutability": "mutable",
                      "name": "composerMsg_",
                      "nameLocation": "3409:12:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49273,
                      "src": "3396:25:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 49190,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3396:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49193,
                  "initialValue": {
                    "hexValue": "",
                    "id": 49192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3424:2:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3396:30:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 49199,
                                "name": "IHyperLiquidComposerErrors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1051,
                                "src": "3489:26:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IHyperLiquidComposerErrors_$1051_$",
                                  "typeString": "type(contract IHyperLiquidComposerErrors)"
                                }
                              },
                              "id": 49200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3516:41:77",
                              "memberName": "HyperLiquidComposer_InvalidComposeMessage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1028,
                              "src": "3489:68:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) pure"
                              }
                            },
                            "id": 49201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3558:8:77",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3489:77:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "hexValue": "",
                            "id": 49202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3568:2:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "id": 49197,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3466:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 49198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3470:18:77",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3466:22:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 49203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3466:105:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 49194,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "3437:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3440:12:77",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22865,
                      "src": "3437:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 49204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3437:144:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49205,
                  "nodeType": "ExpressionStatement",
                  "src": "3437:144:77"
                },
                {
                  "assignments": [49207],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49207,
                      "mutability": "mutable",
                      "name": "preBalance_endpoint",
                      "nameLocation": "3600:19:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49273,
                      "src": "3592:27:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3592:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49213,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 49210,
                          "name": "HL_LZ_ENDPOINT_V2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49017,
                          "src": "3630:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 49209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3622:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 49208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3622:7:77",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 49211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3622:26:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 49212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3649:7:77",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3622:34:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3592:64:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49217,
                        "name": "HL_LZ_ENDPOINT_V2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49017,
                        "src": "3681:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49214,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "3667:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3670:10:77",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22529,
                      "src": "3667:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49219,
                  "nodeType": "ExpressionStatement",
                  "src": "3667:32:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49227,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "3772:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 49226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3764:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49225,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3764:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3764:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 49231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3786:1:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 49230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3778:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 49229,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3778:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3778:10:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 49233,
                        "name": "composerMsg_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49191,
                        "src": "3790:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 49234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3804:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 49235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3808:6:77",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3804:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 49236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3816:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 49220,
                          "name": "hyperLiquidComposer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49034,
                          "src": "3709:19:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                            "typeString": "contract HyperLiquidComposer"
                          }
                        },
                        "id": 49222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3729:9:77",
                        "memberName": "lzCompose",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 229,
                        "src": "3709:29:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (address,bytes32,bytes memory,address,bytes memory) payable external"
                        }
                      },
                      "id": 49224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 49223,
                          "name": "AMOUNT_TO_FUND",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49055,
                          "src": "3747:14:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "src": "3709:54:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (address,bytes32,bytes memory,address,bytes memory) payable external"
                      }
                    },
                    "id": 49237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3709:110:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49238,
                  "nodeType": "ExpressionStatement",
                  "src": "3709:110:77"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49239,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "3829:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3832:9:77",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22573,
                      "src": "3829:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 49242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3829:14:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49243,
                  "nodeType": "ExpressionStatement",
                  "src": "3829:14:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 49249,
                                "name": "hyperLiquidComposer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49034,
                                "src": "3885:19:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              ],
                              "id": 49248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3877:7:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 49247,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3877:7:77",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 49250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3877:28:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 49245,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "3863:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          },
                          "id": 49246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3867:9:77",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46230,
                          "src": "3863:13:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 49251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3863:43:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49252,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49047,
                        "src": "3908:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 49244,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "3854:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 49253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3854:69:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49254,
                  "nodeType": "ExpressionStatement",
                  "src": "3854:69:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 49258,
                              "name": "hyperLiquidComposer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49034,
                              "src": "3950:19:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                "typeString": "contract HyperLiquidComposer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                "typeString": "contract HyperLiquidComposer"
                              }
                            ],
                            "id": 49257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3942:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49256,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3942:7:77",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3942:28:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 49260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3971:7:77",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3942:36:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 49261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3980:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 49255,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "3933:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 49262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3933:49:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49263,
                  "nodeType": "ExpressionStatement",
                  "src": "3933:49:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 49267,
                              "name": "HL_LZ_ENDPOINT_V2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49017,
                              "src": "4009:17:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 49266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4001:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49265,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4001:7:77",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4001:26:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 49269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4028:7:77",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4001:34:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49270,
                        "name": "preBalance_endpoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49207,
                        "src": "4037:19:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49264,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "3992:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 49271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3992:65:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49272,
                  "nodeType": "ExpressionStatement",
                  "src": "3992:65:77"
                }
              ]
            },
            "functionSelector": "76e92273",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_malformed_payload",
            "nameLocation": "3193:22:77",
            "parameters": {
              "id": 49176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3215:2:77"
            },
            "returnParameters": {
              "id": 49177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3225:0:77"
            },
            "scope": 50036,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49407,
            "nodeType": "FunctionDefinition",
            "src": "4070:1340:77",
            "nodes": [],
            "body": {
              "id": 49406,
              "nodeType": "Block",
              "src": "4127:1283:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49280,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "4236:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 49279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4228:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49278,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4228:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4228:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 49284,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49034,
                            "src": "4250:19:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 49283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4242:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49282,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4242:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4242:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49286,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49047,
                        "src": "4272:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 49277,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [11339, 11356, 11479],
                      "referencedDeclaration": 11356,
                      "src": "4223:4:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 49287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4223:64:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49288,
                  "nodeType": "ExpressionStatement",
                  "src": "4223:64:77"
                },
                {
                  "assignments": [49290],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49290,
                      "mutability": "mutable",
                      "name": "composeMsg",
                      "nameLocation": "4311:10:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49406,
                      "src": "4298:23:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 49289,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4298:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49296,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49293,
                        "name": "userB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49044,
                        "src": "4341:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "6572726f72",
                        "id": 49294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4348:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
                          "typeString": "literal_string \"error\""
                        },
                        "value": "error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
                          "typeString": "literal_string \"error\""
                        }
                      ],
                      "expression": {
                        "id": 49291,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4324:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 49292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4328:12:77",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "4324:16:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 49295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4324:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4298:58:77"
                },
                {
                  "assignments": [49298],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49298,
                      "mutability": "mutable",
                      "name": "composerMsg_",
                      "nameLocation": "4380:12:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49406,
                      "src": "4367:25:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 49297,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4367:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49315,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 49301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4434:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 49302,
                        "name": "SRC_EID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49026,
                        "src": "4449:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 49303,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49047,
                        "src": "4470:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 49309,
                                    "name": "userA",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49039,
                                    "src": "4542:5:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 49307,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4525:3:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 49308,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4529:12:77",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "4525:16:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 49310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4525:23:77",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 49306,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "4515:9:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 49311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4515:34:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 49312,
                            "name": "composeMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49290,
                            "src": "4551:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 49304,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4498:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 49305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4502:12:77",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4498:16:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 49313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4498:64:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 49299,
                        "name": "OFTComposeMsgCodec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5287,
                        "src": "4395:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OFTComposeMsgCodec_$5287_$",
                          "typeString": "type(library OFTComposeMsgCodec)"
                        }
                      },
                      "id": 49300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4414:6:77",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5157,
                      "src": "4395:25:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint64,uint32,uint256,bytes memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 49314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4395:177:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4367:205:77"
                },
                {
                  "assignments": [49317],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49317,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "4596:7:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49406,
                      "src": "4583:20:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 49316,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4583:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49322,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49320,
                        "name": "composerMsg_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49298,
                        "src": "4629:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 49318,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "4606:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HyperLiquidComposerRefundTest_$50036",
                          "typeString": "contract HyperLiquidComposerRefundTest"
                        }
                      },
                      "id": 49319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4611:17:77",
                      "memberName": "getComposeMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50035,
                      "src": "4606:22:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure external returns (bytes memory)"
                      }
                    },
                    "id": 49321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4606:36:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4583:59:77"
                },
                {
                  "assignments": [49324],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49324,
                      "mutability": "mutable",
                      "name": "expectedErrorMessage",
                      "nameLocation": "4665:20:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49406,
                      "src": "4652:33:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 49323,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4652:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49334,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 49327,
                            "name": "IHyperLiquidComposerErrors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1051,
                            "src": "4724:26:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IHyperLiquidComposerErrors_$1051_$",
                              "typeString": "type(contract IHyperLiquidComposerErrors)"
                            }
                          },
                          "id": 49328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4751:57:77",
                          "memberName": "HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1044,
                          "src": "4724:84:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                            "typeString": "function (bytes memory,uint256) pure"
                          }
                        },
                        "id": 49329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4809:8:77",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "4724:93:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 49330,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49317,
                        "src": "4831:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 49331,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49317,
                          "src": "4852:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 49332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4860:6:77",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4852:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49325,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4688:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 49326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4692:18:77",
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "4688:22:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 49333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4688:188:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4652:224:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49340,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49034,
                            "src": "4909:19:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 49339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4901:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49338,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4901:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4901:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49335,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "4887:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4890:10:77",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22835,
                      "src": "4887:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:43:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49343,
                  "nodeType": "ExpressionStatement",
                  "src": "4887:43:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 49347,
                        "name": "expectedErrorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49324,
                        "src": "4983:20:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 49344,
                        "name": "IHyperLiquidComposerCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 995,
                        "src": "4945:24:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IHyperLiquidComposerCore_$995_$",
                          "typeString": "type(contract IHyperLiquidComposerCore)"
                        }
                      },
                      "id": 49346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4970:12:77",
                      "memberName": "ErrorMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 920,
                      "src": "4945:37:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 49348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4945:59:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49349,
                  "nodeType": "EmitStatement",
                  "src": "4940:64:77"
                },
                {
                  "assignments": [49351],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49351,
                      "mutability": "mutable",
                      "name": "preBalance_txOrigin",
                      "nameLocation": "5022:19:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49406,
                      "src": "5014:27:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49350,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5014:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49355,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 49352,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -26,
                        "src": "5044:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 49353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5047:6:77",
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "src": "5044:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 49354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5054:7:77",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "5044:17:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5014:47:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49359,
                        "name": "HL_LZ_ENDPOINT_V2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49017,
                        "src": "5086:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49356,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "5072:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5075:10:77",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22529,
                      "src": "5072:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5072:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49361,
                  "nodeType": "ExpressionStatement",
                  "src": "5072:32:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49369,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "5177:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 49368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5169:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49367,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5169:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5169:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 49373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5191:1:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 49372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5183:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 49371,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5183:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5183:10:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 49375,
                        "name": "composerMsg_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49298,
                        "src": "5195:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 49376,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5209:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 49377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5213:6:77",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5209:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 49378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5221:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 49362,
                          "name": "hyperLiquidComposer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49034,
                          "src": "5114:19:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                            "typeString": "contract HyperLiquidComposer"
                          }
                        },
                        "id": 49364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5134:9:77",
                        "memberName": "lzCompose",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 229,
                        "src": "5114:29:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (address,bytes32,bytes memory,address,bytes memory) payable external"
                        }
                      },
                      "id": 49366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 49365,
                          "name": "AMOUNT_TO_FUND",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49055,
                          "src": "5152:14:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "src": "5114:54:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (address,bytes32,bytes memory,address,bytes memory) payable external"
                      }
                    },
                    "id": 49379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5114:110:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49380,
                  "nodeType": "ExpressionStatement",
                  "src": "5114:110:77"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49381,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "5234:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5237:9:77",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22573,
                      "src": "5234:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 49384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5234:14:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49385,
                  "nodeType": "ExpressionStatement",
                  "src": "5234:14:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 49387,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "5268:2:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 49388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5271:6:77",
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "5268:9:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 49389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5278:7:77",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "5268:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49390,
                          "name": "preBalance_txOrigin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49351,
                          "src": "5287:19:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 49391,
                          "name": "AMOUNT_TO_FUND",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49055,
                          "src": "5309:14:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "5287:36:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49386,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "5259:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 49393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5259:65:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49394,
                  "nodeType": "ExpressionStatement",
                  "src": "5259:65:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 49400,
                                "name": "hyperLiquidComposer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49034,
                                "src": "5365:19:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              ],
                              "id": 49399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5357:7:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 49398,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5357:7:77",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 49401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5357:28:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 49396,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "5343:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          },
                          "id": 49397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5347:9:77",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46230,
                          "src": "5343:13:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 49402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5343:43:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49403,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49047,
                        "src": "5388:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 49395,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "5334:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 49404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5334:69:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49405,
                  "nodeType": "ExpressionStatement",
                  "src": "5334:69:77"
                }
              ]
            },
            "functionSelector": "e970bd69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_non_evm_sender_malformed_receiver",
            "nameLocation": "4079:38:77",
            "parameters": {
              "id": 49275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4117:2:77"
            },
            "returnParameters": {
              "id": 49276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4127:0:77"
            },
            "scope": 50036,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49548,
            "nodeType": "FunctionDefinition",
            "src": "5416:1341:77",
            "nodes": [],
            "body": {
              "id": 49547,
              "nodeType": "Block",
              "src": "5478:1279:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49413,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "5587:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 49412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5579:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49411,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5579:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5579:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 49417,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49034,
                            "src": "5601:19:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 49416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5593:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49415,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5593:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5593:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49419,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49047,
                        "src": "5623:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 49410,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [11339, 11356, 11479],
                      "referencedDeclaration": 11356,
                      "src": "5574:4:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 49420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5574:64:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49421,
                  "nodeType": "ExpressionStatement",
                  "src": "5574:64:77"
                },
                {
                  "assignments": [49423],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49423,
                      "mutability": "mutable",
                      "name": "composeMsg",
                      "nameLocation": "5662:10:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49547,
                      "src": "5649:23:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 49422,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5649:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49429,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49426,
                        "name": "userB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49044,
                        "src": "5692:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "6572726f72",
                        "id": 49427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5699:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
                          "typeString": "literal_string \"error\""
                        },
                        "value": "error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
                          "typeString": "literal_string \"error\""
                        }
                      ],
                      "expression": {
                        "id": 49424,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5675:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 49425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5679:12:77",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "5675:16:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 49428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5675:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5649:58:77"
                },
                {
                  "assignments": [49431],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49431,
                      "mutability": "mutable",
                      "name": "composerMsg_",
                      "nameLocation": "5731:12:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49547,
                      "src": "5718:25:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 49430,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5718:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49445,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 49434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5785:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 49435,
                        "name": "SRC_EID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49026,
                        "src": "5800:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 49436,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49047,
                        "src": "5821:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 49440,
                                "name": "userA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49039,
                                "src": "5883:5:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 49439,
                              "name": "addressToBytes32",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50022,
                              "src": "5866:16:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function (address) pure returns (bytes32)"
                              }
                            },
                            "id": 49441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5866:23:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 49442,
                            "name": "composeMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49423,
                            "src": "5891:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 49437,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5849:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 49438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5853:12:77",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5849:16:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 49443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5849:53:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 49432,
                        "name": "OFTComposeMsgCodec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5287,
                        "src": "5746:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OFTComposeMsgCodec_$5287_$",
                          "typeString": "type(library OFTComposeMsgCodec)"
                        }
                      },
                      "id": 49433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5765:6:77",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5157,
                      "src": "5746:25:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint64,uint32,uint256,bytes memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 49444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5746:166:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5718:194:77"
                },
                {
                  "assignments": [49447],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49447,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "5936:7:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49547,
                      "src": "5923:20:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 49446,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5923:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49452,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49450,
                        "name": "composerMsg_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49431,
                        "src": "5969:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 49448,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "5946:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HyperLiquidComposerRefundTest_$50036",
                          "typeString": "contract HyperLiquidComposerRefundTest"
                        }
                      },
                      "id": 49449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5951:17:77",
                      "memberName": "getComposeMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50035,
                      "src": "5946:22:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure external returns (bytes memory)"
                      }
                    },
                    "id": 49451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5946:36:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5923:59:77"
                },
                {
                  "assignments": [49454],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49454,
                      "mutability": "mutable",
                      "name": "expectedErrorMessage",
                      "nameLocation": "6005:20:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49547,
                      "src": "5992:33:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 49453,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5992:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49464,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 49457,
                            "name": "IHyperLiquidComposerErrors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1051,
                            "src": "6064:26:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IHyperLiquidComposerErrors_$1051_$",
                              "typeString": "type(contract IHyperLiquidComposerErrors)"
                            }
                          },
                          "id": 49458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6091:57:77",
                          "memberName": "HyperLiquidComposer_Codec_InvalidMessage_UnexpectedLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1044,
                          "src": "6064:84:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                            "typeString": "function (bytes memory,uint256) pure"
                          }
                        },
                        "id": 49459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6149:8:77",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "6064:93:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 49460,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49447,
                        "src": "6171:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 49461,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49447,
                          "src": "6192:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 49462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6200:6:77",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6192:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49455,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6028:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 49456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6032:18:77",
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "6028:22:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 49463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6028:188:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5992:224:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49470,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "6249:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 49469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6241:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6241:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6241:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49465,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "6227:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6230:10:77",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22835,
                      "src": "6227:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6227:27:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49473,
                  "nodeType": "ExpressionStatement",
                  "src": "6227:27:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49479,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49034,
                            "src": "6293:19:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 49478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6285:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49477,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6285:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6285:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49481,
                        "name": "userA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49039,
                        "src": "6315:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49482,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49047,
                        "src": "6322:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "id": 49474,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46722,
                        "src": "6269:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$46722_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 49476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6276:8:77",
                      "memberName": "Transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46656,
                      "src": "6269:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 49483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6269:68:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49484,
                  "nodeType": "EmitStatement",
                  "src": "6264:73:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49490,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49034,
                            "src": "6370:19:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 49489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6362:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49488,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6362:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6362:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49485,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "6348:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6351:10:77",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22835,
                      "src": "6348:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6348:43:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49493,
                  "nodeType": "ExpressionStatement",
                  "src": "6348:43:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 49497,
                        "name": "expectedErrorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49454,
                        "src": "6444:20:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 49494,
                        "name": "IHyperLiquidComposerCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 995,
                        "src": "6406:24:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IHyperLiquidComposerCore_$995_$",
                          "typeString": "type(contract IHyperLiquidComposerCore)"
                        }
                      },
                      "id": 49496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6431:12:77",
                      "memberName": "ErrorMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 920,
                      "src": "6406:37:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 49498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6406:59:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49499,
                  "nodeType": "EmitStatement",
                  "src": "6401:64:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49503,
                        "name": "HL_LZ_ENDPOINT_V2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49017,
                        "src": "6490:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49500,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "6476:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6479:10:77",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22529,
                      "src": "6476:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6476:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49505,
                  "nodeType": "ExpressionStatement",
                  "src": "6476:32:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49511,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "6556:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 49510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6548:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49509,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6548:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6548:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 49515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6570:1:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 49514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6562:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 49513,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "6562:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6562:10:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 49517,
                        "name": "composerMsg_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49431,
                        "src": "6574:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 49518,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6588:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 49519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6592:6:77",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6588:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 49520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6600:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 49506,
                        "name": "hyperLiquidComposer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49034,
                        "src": "6518:19:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                          "typeString": "contract HyperLiquidComposer"
                        }
                      },
                      "id": 49508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6538:9:77",
                      "memberName": "lzCompose",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 229,
                      "src": "6518:29:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory,address,bytes memory) payable external"
                      }
                    },
                    "id": 49521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6518:85:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49522,
                  "nodeType": "ExpressionStatement",
                  "src": "6518:85:77"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49523,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "6613:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6616:9:77",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22573,
                      "src": "6613:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 49526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6613:14:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49527,
                  "nodeType": "ExpressionStatement",
                  "src": "6613:14:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 49533,
                                "name": "hyperLiquidComposer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49034,
                                "src": "6669:19:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              ],
                              "id": 49532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6661:7:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 49531,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6661:7:77",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 49534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6661:28:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 49529,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "6647:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          },
                          "id": 49530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6651:9:77",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46230,
                          "src": "6647:13:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 49535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6647:43:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 49536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6692:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 49528,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "6638:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 49537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6638:56:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49538,
                  "nodeType": "ExpressionStatement",
                  "src": "6638:56:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49542,
                            "name": "userA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49039,
                            "src": "6727:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 49540,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "6713:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          },
                          "id": 49541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6717:9:77",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46230,
                          "src": "6713:13:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 49543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6713:20:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49544,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49047,
                        "src": "6735:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 49539,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "6704:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 49545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6704:46:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49546,
                  "nodeType": "ExpressionStatement",
                  "src": "6704:46:77"
                }
              ]
            },
            "functionSelector": "12659341",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_erc20_refund_sender_malformed_receiver",
            "nameLocation": "5425:43:77",
            "parameters": {
              "id": 49408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5468:2:77"
            },
            "returnParameters": {
              "id": 49409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5478:0:77"
            },
            "scope": 50036,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49760,
            "nodeType": "FunctionDefinition",
            "src": "6809:1932:77",
            "nodes": [],
            "body": {
              "id": 49759,
              "nodeType": "Block",
              "src": "6893:1848:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49554,
                      "name": "_exceedAmountBy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49551,
                      "src": "6903:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49558,
                              "name": "_exceedAmountBy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49551,
                              "src": "6934:15:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 49559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6951:1:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "id": 49566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 49562,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6959:6:77",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint64_$",
                                        "typeString": "type(uint64)"
                                      },
                                      "typeName": {
                                        "id": 49561,
                                        "name": "uint64",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6959:6:77",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint64_$",
                                        "typeString": "type(uint64)"
                                      }
                                    ],
                                    "id": 49560,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "6954:4:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 49563,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6954:12:77",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint64",
                                    "typeString": "type(uint64)"
                                  }
                                },
                                "id": 49564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6967:3:77",
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "6954:16:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 49565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6973:8:77",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                  "typeString": "int_const 10000000000000000000"
                                },
                                "value": "10"
                              },
                              "src": "6954:27:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 49557,
                            "name": "bound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [17637, 17787],
                            "referencedDeclaration": 17637,
                            "src": "6928:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 49567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6928:54:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 49556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6921:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 49555,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "6921:6:77",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 49568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6921:62:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "6903:80:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 49570,
                  "nodeType": "ExpressionStatement",
                  "src": "6903:80:77"
                },
                {
                  "assignments": [49572],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49572,
                      "mutability": "mutable",
                      "name": "totalTransferAmount",
                      "nameLocation": "7002:19:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49759,
                      "src": "6994:27:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49571,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6994:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49576,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 49575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49573,
                      "name": "AMOUNT_TO_SEND",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49047,
                      "src": "7024:14:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 49574,
                      "name": "_exceedAmountBy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49551,
                      "src": "7041:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "7024:32:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6994:62:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49580,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "7079:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 49579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7071:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49578,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7071:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7071:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 49584,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49034,
                            "src": "7093:19:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 49583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7085:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49582,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7085:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7085:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49586,
                        "name": "totalTransferAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49572,
                        "src": "7115:19:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49577,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [11339, 11356, 11479],
                      "referencedDeclaration": 11356,
                      "src": "7066:4:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 49587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7066:69:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49588,
                  "nodeType": "ExpressionStatement",
                  "src": "7066:69:77"
                },
                {
                  "assignments": [49590],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49590,
                      "mutability": "mutable",
                      "name": "scaleAliceDecimalDiff",
                      "nameLocation": "7154:21:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49759,
                      "src": "7146:29:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49589,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7146:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49595,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 49591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7178:2:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "expression": {
                        "id": 49592,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49011,
                        "src": "7184:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                          "typeString": "struct IHyperAsset storage ref"
                        }
                      },
                      "id": 49593,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7190:11:77",
                      "memberName": "decimalDiff",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 896,
                      "src": "7184:17:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "7178:23:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7146:55:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49600,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49011,
                          "src": "7300:5:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 49601,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7306:18:77",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "7300:24:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 49602,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49011,
                          "src": "7338:5:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 49603,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7344:11:77",
                        "memberName": "coreIndexId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 894,
                        "src": "7338:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 49608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49606,
                              "name": "AMOUNT_TO_SEND",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49047,
                              "src": "7376:14:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 49607,
                              "name": "scaleAliceDecimalDiff",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49590,
                              "src": "7393:21:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7376:38:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 49605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7369:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 49604,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "7369:6:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7369:46:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49597,
                            "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49023,
                            "src": "7238:32:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49596,
                          "name": "SpotBalancePrecompileMock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50841,
                          "src": "7212:25:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SpotBalancePrecompileMock_$50841_$",
                            "typeString": "type(contract SpotBalancePrecompileMock)"
                          }
                        },
                        "id": 49598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7212:59:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpotBalancePrecompileMock_$50841",
                          "typeString": "contract SpotBalancePrecompileMock"
                        }
                      },
                      "id": 49599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7272:14:77",
                      "memberName": "setSpotBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50809,
                      "src": "7212:74:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint64,uint64) external"
                      }
                    },
                    "id": 49610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7212:213:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49611,
                  "nodeType": "ExpressionStatement",
                  "src": "7212:213:77"
                },
                {
                  "assignments": [49613],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49613,
                      "mutability": "mutable",
                      "name": "composeMsg",
                      "nameLocation": "7449:10:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49759,
                      "src": "7436:23:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 49612,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7436:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49618,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49616,
                        "name": "userB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49044,
                        "src": "7479:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49614,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7462:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 49615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7466:12:77",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "7462:16:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 49617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7462:23:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7436:49:77"
                },
                {
                  "assignments": [49620],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49620,
                      "mutability": "mutable",
                      "name": "composerMsg_",
                      "nameLocation": "7508:12:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49759,
                      "src": "7495:25:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 49619,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7495:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49634,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 49623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7562:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 49624,
                        "name": "SRC_EID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49026,
                        "src": "7577:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 49625,
                        "name": "totalTransferAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49572,
                        "src": "7598:19:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 49629,
                                "name": "userA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49039,
                                "src": "7665:5:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 49628,
                              "name": "addressToBytes32",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50022,
                              "src": "7648:16:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function (address) pure returns (bytes32)"
                              }
                            },
                            "id": 49630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7648:23:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 49631,
                            "name": "composeMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49613,
                            "src": "7673:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 49626,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7631:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 49627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7635:12:77",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7631:16:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 49632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7631:53:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 49621,
                        "name": "OFTComposeMsgCodec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5287,
                        "src": "7523:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OFTComposeMsgCodec_$5287_$",
                          "typeString": "type(library OFTComposeMsgCodec)"
                        }
                      },
                      "id": 49622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7542:6:77",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5157,
                      "src": "7523:25:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint64,uint32,uint256,bytes memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 49633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7523:171:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7495:199:77"
                },
                {
                  "assignments": [49636],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49636,
                      "mutability": "mutable",
                      "name": "normalizedTotalTransferAmount",
                      "nameLocation": "7713:29:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 49759,
                      "src": "7705:37:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49635,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7705:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49643,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49637,
                      "name": "totalTransferAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49572,
                      "src": "7745:19:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49638,
                            "name": "totalTransferAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49572,
                            "src": "7768:19:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 49639,
                            "name": "scaleAliceDecimalDiff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49590,
                            "src": "7790:21:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7768:43:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 49641,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7767:45:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7745:67:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7705:107:77"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49644,
                      "name": "normalizedTotalTransferAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49636,
                      "src": "7826:29:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 49645,
                      "name": "AMOUNT_TO_SEND",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49047,
                      "src": "7858:14:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "7826:46:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49674,
                  "nodeType": "IfStatement",
                  "src": "7822:320:77",
                  "trueBody": {
                    "id": 49673,
                    "nodeType": "Block",
                    "src": "7874:268:77",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 49652,
                                  "name": "hyperLiquidComposer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49034,
                                  "src": "7910:19:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                    "typeString": "contract HyperLiquidComposer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                    "typeString": "contract HyperLiquidComposer"
                                  }
                                ],
                                "id": 49651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7902:7:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 49650,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7902:7:77",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7902:28:77",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 49647,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5500,
                              "src": "7888:2:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$22922",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 49649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7891:10:77",
                            "memberName": "expectEmit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22835,
                            "src": "7888:13:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 49654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7888:43:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49655,
                        "nodeType": "ExpressionStatement",
                        "src": "7888:43:77"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 49663,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 49661,
                                    "name": "totalTransferAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49572,
                                    "src": "8016:19:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 49662,
                                    "name": "scaleAliceDecimalDiff",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49590,
                                    "src": "8038:21:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8016:43:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 49660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8009:6:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                },
                                "typeName": {
                                  "id": 49659,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8009:6:77",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8009:51:77",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 49669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 49667,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8085:7:77",
                                    "subdenomination": "ether",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 49668,
                                    "name": "scaleAliceDecimalDiff",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49590,
                                    "src": "8095:21:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8085:31:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 49666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8078:6:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                },
                                "typeName": {
                                  "id": 49665,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8078:6:77",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8078:39:77",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "expression": {
                              "id": 49656,
                              "name": "HyperLiquidComposerCodec",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1582,
                              "src": "7950:24:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_HyperLiquidComposerCodec_$1582_$",
                                "typeString": "type(library HyperLiquidComposerCodec)"
                              }
                            },
                            "id": 49658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7975:16:77",
                            "memberName": "OverflowDetected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1328,
                            "src": "7950:41:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_uint64_$returns$__$",
                              "typeString": "function (uint64,uint64)"
                            }
                          },
                          "id": 49671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7950:181:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49672,
                        "nodeType": "EmitStatement",
                        "src": "7945:186:77"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49680,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "8174:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 49679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8166:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49678,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8166:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8166:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49675,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "8152:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8155:10:77",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22835,
                      "src": "8152:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8152:27:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49683,
                  "nodeType": "ExpressionStatement",
                  "src": "8152:27:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49689,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49034,
                            "src": "8218:19:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 49688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8210:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8210:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8210:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 49691,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49011,
                          "src": "8240:5:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 49692,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8246:18:77",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "8240:24:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49693,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49047,
                        "src": "8266:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "id": 49684,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46722,
                        "src": "8194:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$46722_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 49686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8201:8:77",
                      "memberName": "Transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46656,
                      "src": "8194:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 49694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8194:87:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49695,
                  "nodeType": "EmitStatement",
                  "src": "8189:92:77"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 49698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49696,
                      "name": "_exceedAmountBy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49551,
                      "src": "8329:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 49697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8347:1:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8329:19:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49711,
                  "nodeType": "IfStatement",
                  "src": "8325:124:77",
                  "trueBody": {
                    "id": 49710,
                    "nodeType": "Block",
                    "src": "8350:99:77",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 49704,
                                  "name": "hyperLiquidComposer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49034,
                                  "src": "8393:19:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                    "typeString": "contract HyperLiquidComposer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                    "typeString": "contract HyperLiquidComposer"
                                  }
                                ],
                                "id": 49703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8385:7:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 49702,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8385:7:77",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8385:28:77",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 49706,
                              "name": "userB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49044,
                              "src": "8415:5:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 49707,
                              "name": "_exceedAmountBy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49551,
                              "src": "8422:15:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "expression": {
                              "id": 49699,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46722,
                              "src": "8369:6:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$46722_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 49701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8376:8:77",
                            "memberName": "Transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46656,
                            "src": "8369:15:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 49708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8369:69:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49709,
                        "nodeType": "EmitStatement",
                        "src": "8364:74:77"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49715,
                        "name": "HL_LZ_ENDPOINT_V2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49017,
                        "src": "8473:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49712,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "8459:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8462:10:77",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22529,
                      "src": "8459:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8459:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49717,
                  "nodeType": "ExpressionStatement",
                  "src": "8459:32:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49723,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "8539:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 49722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8531:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49721,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8531:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8531:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 49727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8553:1:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 49726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8545:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 49725,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "8545:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8545:10:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 49729,
                        "name": "composerMsg_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49620,
                        "src": "8557:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 49730,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8571:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 49731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8575:6:77",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8571:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 49732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8583:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 49718,
                        "name": "hyperLiquidComposer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49034,
                        "src": "8501:19:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                          "typeString": "contract HyperLiquidComposer"
                        }
                      },
                      "id": 49720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8521:9:77",
                      "memberName": "lzCompose",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 229,
                      "src": "8501:29:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory,address,bytes memory) payable external"
                      }
                    },
                    "id": 49733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8501:85:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49734,
                  "nodeType": "ExpressionStatement",
                  "src": "8501:85:77"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49735,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "8596:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8599:9:77",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22573,
                      "src": "8596:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 49738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8596:14:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49739,
                  "nodeType": "ExpressionStatement",
                  "src": "8596:14:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 49745,
                                "name": "hyperLiquidComposer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49034,
                                "src": "8652:19:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                  "typeString": "contract HyperLiquidComposer"
                                }
                              ],
                              "id": 49744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8644:7:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 49743,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8644:7:77",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 49746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8644:28:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 49741,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "8630:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          },
                          "id": 49742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8634:9:77",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46230,
                          "src": "8630:13:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 49747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8630:43:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 49748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8675:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 49740,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "8621:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 49749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8621:56:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49750,
                  "nodeType": "ExpressionStatement",
                  "src": "8621:56:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49754,
                            "name": "userB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49044,
                            "src": "8710:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 49752,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "8696:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          },
                          "id": 49753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8700:9:77",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46230,
                          "src": "8696:13:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 49755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8696:20:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49756,
                        "name": "_exceedAmountBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49551,
                        "src": "8718:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 49751,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "8687:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 49757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8687:47:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49758,
                  "nodeType": "ExpressionStatement",
                  "src": "8687:47:77"
                }
              ]
            },
            "documentation": {
              "id": 49549,
              "nodeType": "StructuredDocumentation",
              "src": "6763:41:77",
              "text": "forge-config: default.fuzz.runs = 128"
            },
            "functionSelector": "5c98ee4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_erc20_refund_receiver_excessive_amount",
            "nameLocation": "6818:43:77",
            "parameters": {
              "id": 49552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49551,
                  "mutability": "mutable",
                  "name": "_exceedAmountBy",
                  "nameLocation": "6869:15:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 49760,
                  "src": "6862:22:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 49550,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6862:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6861:24:77"
            },
            "returnParameters": {
              "id": 49553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6893:0:77"
            },
            "scope": 50036,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50003,
            "nodeType": "FunctionDefinition",
            "src": "8793:2222:77",
            "nodes": [],
            "body": {
              "id": 50002,
              "nodeType": "Block",
              "src": "8890:2125:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49766,
                      "name": "_exceedAmountBy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49763,
                      "src": "8900:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49770,
                              "name": "_exceedAmountBy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49763,
                              "src": "8931:15:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 49771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8948:1:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "id": 49778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 49774,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8956:6:77",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint64_$",
                                        "typeString": "type(uint64)"
                                      },
                                      "typeName": {
                                        "id": 49773,
                                        "name": "uint64",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8956:6:77",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint64_$",
                                        "typeString": "type(uint64)"
                                      }
                                    ],
                                    "id": 49772,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "8951:4:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 49775,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8951:12:77",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint64",
                                    "typeString": "type(uint64)"
                                  }
                                },
                                "id": 49776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8964:3:77",
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "8951:16:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 49777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8970:8:77",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                  "typeString": "int_const 10000000000000000000"
                                },
                                "value": "10"
                              },
                              "src": "8951:27:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 49769,
                            "name": "bound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [17637, 17787],
                            "referencedDeclaration": 17637,
                            "src": "8925:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 49779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8925:54:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 49768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8918:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 49767,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "8918:6:77",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 49780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8918:62:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "8900:80:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 49782,
                  "nodeType": "ExpressionStatement",
                  "src": "8900:80:77"
                },
                {
                  "assignments": [49784],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49784,
                      "mutability": "mutable",
                      "name": "totalTransferAmount",
                      "nameLocation": "8999:19:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 50002,
                      "src": "8991:27:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49783,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8991:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49788,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 49787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49785,
                      "name": "AMOUNT_TO_SEND",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49047,
                      "src": "9021:14:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 49786,
                      "name": "_exceedAmountBy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49763,
                      "src": "9038:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "9021:32:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8991:62:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49792,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "9076:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 49791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9068:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49790,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9068:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9068:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 49796,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49034,
                            "src": "9090:19:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 49795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9082:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49794,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9082:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9082:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49798,
                        "name": "totalTransferAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49784,
                        "src": "9112:19:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49789,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [11339, 11356, 11479],
                      "referencedDeclaration": 11356,
                      "src": "9063:4:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 49799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9063:69:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49800,
                  "nodeType": "ExpressionStatement",
                  "src": "9063:69:77"
                },
                {
                  "assignments": [49802],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49802,
                      "mutability": "mutable",
                      "name": "noFallback",
                      "nameLocation": "9151:10:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 50002,
                      "src": "9143:18:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 49801,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9143:7:77",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49810,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 49807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "9172:14:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_NoFallback_$50745_$",
                            "typeString": "function () returns (contract NoFallback)"
                          },
                          "typeName": {
                            "id": 49806,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 49805,
                              "name": "NoFallback",
                              "nameLocations": ["9176:10:77"],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 50745,
                              "src": "9176:10:77"
                            },
                            "referencedDeclaration": 50745,
                            "src": "9176:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NoFallback_$50745",
                              "typeString": "contract NoFallback"
                            }
                          }
                        },
                        "id": 49808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9172:16:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoFallback_$50745",
                          "typeString": "contract NoFallback"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NoFallback_$50745",
                          "typeString": "contract NoFallback"
                        }
                      ],
                      "id": 49804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9164:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 49803,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9164:7:77",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 49809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9164:25:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9143:46:77"
                },
                {
                  "assignments": [49812],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49812,
                      "mutability": "mutable",
                      "name": "scaleAliceDecimalDiff",
                      "nameLocation": "9207:21:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 50002,
                      "src": "9199:29:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49811,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9199:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49817,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 49813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9231:2:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "expression": {
                        "id": 49814,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49011,
                        "src": "9237:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                          "typeString": "struct IHyperAsset storage ref"
                        }
                      },
                      "id": 49815,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9243:11:77",
                      "memberName": "decimalDiff",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 896,
                      "src": "9237:17:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "9231:23:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9199:55:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49822,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49011,
                          "src": "9353:5:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 49823,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9359:18:77",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "9353:24:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 49824,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49011,
                          "src": "9391:5:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 49825,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9397:11:77",
                        "memberName": "coreIndexId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 894,
                        "src": "9391:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 49830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49828,
                              "name": "AMOUNT_TO_SEND",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49047,
                              "src": "9429:14:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 49829,
                              "name": "scaleAliceDecimalDiff",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49812,
                              "src": "9446:21:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9429:38:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 49827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9422:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 49826,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "9422:6:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9422:46:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49819,
                            "name": "HLP_PRECOMPILE_READ_SPOT_BALANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49023,
                            "src": "9291:32:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49818,
                          "name": "SpotBalancePrecompileMock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50841,
                          "src": "9265:25:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SpotBalancePrecompileMock_$50841_$",
                            "typeString": "type(contract SpotBalancePrecompileMock)"
                          }
                        },
                        "id": 49820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9265:59:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SpotBalancePrecompileMock_$50841",
                          "typeString": "contract SpotBalancePrecompileMock"
                        }
                      },
                      "id": 49821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9325:14:77",
                      "memberName": "setSpotBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50809,
                      "src": "9265:74:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint64,uint64) external"
                      }
                    },
                    "id": 49832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9265:213:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49833,
                  "nodeType": "ExpressionStatement",
                  "src": "9265:213:77"
                },
                {
                  "assignments": [49835],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49835,
                      "mutability": "mutable",
                      "name": "composeMsg",
                      "nameLocation": "9502:10:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 50002,
                      "src": "9489:23:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 49834,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "9489:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49840,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49838,
                        "name": "noFallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49802,
                        "src": "9532:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49836,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "9515:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 49837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "9519:12:77",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "9515:16:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 49839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9515:28:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9489:54:77"
                },
                {
                  "assignments": [49842],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49842,
                      "mutability": "mutable",
                      "name": "composerMsg_",
                      "nameLocation": "9566:12:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 50002,
                      "src": "9553:25:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 49841,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "9553:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49856,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 49845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9620:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 49846,
                        "name": "SRC_EID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49026,
                        "src": "9635:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 49847,
                        "name": "totalTransferAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49784,
                        "src": "9656:19:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 49851,
                                "name": "noFallback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49802,
                                "src": "9723:10:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 49850,
                              "name": "addressToBytes32",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50022,
                              "src": "9706:16:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function (address) pure returns (bytes32)"
                              }
                            },
                            "id": 49852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9706:28:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 49853,
                            "name": "composeMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49835,
                            "src": "9736:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 49848,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9689:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 49849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9693:12:77",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9689:16:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 49854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9689:58:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 49843,
                        "name": "OFTComposeMsgCodec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5287,
                        "src": "9581:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OFTComposeMsgCodec_$5287_$",
                          "typeString": "type(library OFTComposeMsgCodec)"
                        }
                      },
                      "id": 49844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9600:6:77",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5157,
                      "src": "9581:25:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint64,uint32,uint256,bytes memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 49855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9581:176:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9553:204:77"
                },
                {
                  "assignments": [49858],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49858,
                      "mutability": "mutable",
                      "name": "normalizedTotalTransferAmount",
                      "nameLocation": "9776:29:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 50002,
                      "src": "9768:37:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49857,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9768:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49865,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49859,
                      "name": "totalTransferAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49784,
                      "src": "9808:19:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49860,
                            "name": "totalTransferAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49784,
                            "src": "9831:19:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 49861,
                            "name": "scaleAliceDecimalDiff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49812,
                            "src": "9853:21:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9831:43:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 49863,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9830:45:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9808:67:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9768:107:77"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49866,
                      "name": "normalizedTotalTransferAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49858,
                      "src": "9889:29:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 49867,
                      "name": "AMOUNT_TO_SEND",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49047,
                      "src": "9921:14:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "9889:46:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49896,
                  "nodeType": "IfStatement",
                  "src": "9885:320:77",
                  "trueBody": {
                    "id": 49895,
                    "nodeType": "Block",
                    "src": "9937:268:77",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 49874,
                                  "name": "hyperLiquidComposer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49034,
                                  "src": "9973:19:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                    "typeString": "contract HyperLiquidComposer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                    "typeString": "contract HyperLiquidComposer"
                                  }
                                ],
                                "id": 49873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9965:7:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 49872,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9965:7:77",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9965:28:77",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 49869,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5500,
                              "src": "9951:2:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$22922",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 49871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9954:10:77",
                            "memberName": "expectEmit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22835,
                            "src": "9951:13:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 49876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9951:43:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49877,
                        "nodeType": "ExpressionStatement",
                        "src": "9951:43:77"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 49885,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 49883,
                                    "name": "totalTransferAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49784,
                                    "src": "10079:19:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 49884,
                                    "name": "scaleAliceDecimalDiff",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49812,
                                    "src": "10101:21:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10079:43:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 49882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10072:6:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                },
                                "typeName": {
                                  "id": 49881,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10072:6:77",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10072:51:77",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 49891,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 49889,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10148:7:77",
                                    "subdenomination": "ether",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 49890,
                                    "name": "scaleAliceDecimalDiff",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49812,
                                    "src": "10158:21:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10148:31:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 49888,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10141:6:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                },
                                "typeName": {
                                  "id": 49887,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10141:6:77",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10141:39:77",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "expression": {
                              "id": 49878,
                              "name": "HyperLiquidComposerCodec",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1582,
                              "src": "10013:24:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_HyperLiquidComposerCodec_$1582_$",
                                "typeString": "type(library HyperLiquidComposerCodec)"
                              }
                            },
                            "id": 49880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10038:16:77",
                            "memberName": "OverflowDetected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1328,
                            "src": "10013:41:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_uint64_$returns$__$",
                              "typeString": "function (uint64,uint64)"
                            }
                          },
                          "id": 49893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10013:181:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49894,
                        "nodeType": "EmitStatement",
                        "src": "10008:186:77"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49902,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "10237:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 49901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10229:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49900,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10229:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10229:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49897,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "10215:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10218:10:77",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22835,
                      "src": "10215:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10215:27:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49905,
                  "nodeType": "ExpressionStatement",
                  "src": "10215:27:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49911,
                            "name": "hyperLiquidComposer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49034,
                            "src": "10281:19:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                              "typeString": "contract HyperLiquidComposer"
                            }
                          ],
                          "id": 49910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10273:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49909,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10273:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10273:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 49913,
                          "name": "ALICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49011,
                          "src": "10303:5:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IHyperAsset_$897_storage",
                            "typeString": "struct IHyperAsset storage ref"
                          }
                        },
                        "id": 49914,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10309:18:77",
                        "memberName": "assetBridgeAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "10303:24:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49915,
                        "name": "AMOUNT_TO_SEND",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49047,
                        "src": "10329:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "id": 49906,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46722,
                        "src": "10257:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$46722_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 49908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10264:8:77",
                      "memberName": "Transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46656,
                      "src": "10257:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 49916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10257:87:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49917,
                  "nodeType": "EmitStatement",
                  "src": "10252:92:77"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 49920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49918,
                      "name": "_exceedAmountBy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49763,
                      "src": "10392:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 49919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10410:1:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10392:19:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49933,
                  "nodeType": "IfStatement",
                  "src": "10388:129:77",
                  "trueBody": {
                    "id": 49932,
                    "nodeType": "Block",
                    "src": "10413:104:77",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 49926,
                                  "name": "hyperLiquidComposer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49034,
                                  "src": "10456:19:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                    "typeString": "contract HyperLiquidComposer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                    "typeString": "contract HyperLiquidComposer"
                                  }
                                ],
                                "id": 49925,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10448:7:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 49924,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10448:7:77",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10448:28:77",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 49928,
                              "name": "noFallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49802,
                              "src": "10478:10:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 49929,
                              "name": "_exceedAmountBy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49763,
                              "src": "10490:15:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "expression": {
                              "id": 49921,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46722,
                              "src": "10432:6:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$46722_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 49923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10439:8:77",
                            "memberName": "Transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46656,
                            "src": "10432:15:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 49930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10432:74:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49931,
                        "nodeType": "EmitStatement",
                        "src": "10427:79:77"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49937,
                        "name": "HL_LZ_ENDPOINT_V2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49017,
                        "src": "10541:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49934,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "10527:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10530:10:77",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22529,
                      "src": "10527:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10527:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49939,
                  "nodeType": "ExpressionStatement",
                  "src": "10527:32:77"
                },
                {
                  "assignments": [49941],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49941,
                      "mutability": "mutable",
                      "name": "preBalance_txOrigin",
                      "nameLocation": "10577:19:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 50002,
                      "src": "10569:27:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49940,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10569:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49945,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 49942,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -26,
                        "src": "10599:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 49943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10602:6:77",
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "src": "10599:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 49944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10609:7:77",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "10599:17:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10569:47:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49953,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "10689:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          ],
                          "id": 49952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10681:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49951,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10681:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10681:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 49957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10703:1:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 49956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10695:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 49955,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10695:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10695:10:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 49959,
                        "name": "composerMsg_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49842,
                        "src": "10707:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 49960,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10721:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 49961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10725:6:77",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10721:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 49962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10733:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 49946,
                          "name": "hyperLiquidComposer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49034,
                          "src": "10626:19:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                            "typeString": "contract HyperLiquidComposer"
                          }
                        },
                        "id": 49948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10646:9:77",
                        "memberName": "lzCompose",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 229,
                        "src": "10626:29:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (address,bytes32,bytes memory,address,bytes memory) payable external"
                        }
                      },
                      "id": 49950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 49949,
                          "name": "AMOUNT_TO_FUND",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49055,
                          "src": "10664:14:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "src": "10626:54:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (address,bytes32,bytes memory,address,bytes memory) payable external"
                      }
                    },
                    "id": 49963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10626:110:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49964,
                  "nodeType": "ExpressionStatement",
                  "src": "10626:110:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 49966,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "10755:2:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 49967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10758:6:77",
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "10755:9:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 49968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10765:7:77",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10755:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49969,
                          "name": "preBalance_txOrigin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49941,
                          "src": "10774:19:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 49970,
                          "name": "AMOUNT_TO_SEND_OVERFLOW",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49050,
                          "src": "10796:23:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "10774:45:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49965,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "10746:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 49972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10746:74:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49973,
                  "nodeType": "ExpressionStatement",
                  "src": "10746:74:77"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49974,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5500,
                        "src": "10830:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22922",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10833:9:77",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22573,
                      "src": "10830:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 49977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10830:14:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49978,
                  "nodeType": "ExpressionStatement",
                  "src": "10830:14:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49982,
                            "name": "noFallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49802,
                            "src": "10878:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 49980,
                            "name": "oft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49031,
                            "src": "10864:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OFTMock_$50775",
                              "typeString": "contract OFTMock"
                            }
                          },
                          "id": 49981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10868:9:77",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46230,
                          "src": "10864:13:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 49983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10864:25:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49984,
                        "name": "_exceedAmountBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49763,
                        "src": "10891:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 49979,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "10855:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 49985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10855:52:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49986,
                  "nodeType": "ExpressionStatement",
                  "src": "10855:52:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 49990,
                              "name": "hyperLiquidComposer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49034,
                              "src": "10935:19:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                "typeString": "contract HyperLiquidComposer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HyperLiquidComposer_$386",
                                "typeString": "contract HyperLiquidComposer"
                              }
                            ],
                            "id": 49989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10927:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49988,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10927:7:77",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10927:28:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 49992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10956:7:77",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10927:36:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 49993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10965:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 49987,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "10918:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 49994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10918:49:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49995,
                  "nodeType": "ExpressionStatement",
                  "src": "10918:49:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49997,
                          "name": "noFallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49802,
                          "src": "10986:10:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 49998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10997:7:77",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10986:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 49999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11006:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 49996,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5786, 5804, 5819, 5837, 5891, 5909, 5963, 5981, 5996,
                        6014, 6058, 6076, 6091, 6109, 6126, 6146, 6163, 6183,
                        6200, 6220, 6237, 6257, 6274, 6294, 6311, 6331, 6348,
                        6368
                      ],
                      "referencedDeclaration": 5819,
                      "src": "10977:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 50000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10977:31:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50001,
                  "nodeType": "ExpressionStatement",
                  "src": "10977:31:77"
                }
              ]
            },
            "documentation": {
              "id": 49761,
              "nodeType": "StructuredDocumentation",
              "src": "8747:41:77",
              "text": "forge-config: default.fuzz.runs = 128"
            },
            "functionSelector": "0df3918e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_native_refund_receiver_excessive_amount_no_fallback",
            "nameLocation": "8802:56:77",
            "parameters": {
              "id": 49764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49763,
                  "mutability": "mutable",
                  "name": "_exceedAmountBy",
                  "nameLocation": "8866:15:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 50003,
                  "src": "8859:22:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 49762,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8859:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8858:24:77"
            },
            "returnParameters": {
              "id": 49765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8890:0:77"
            },
            "scope": 50036,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50022,
            "nodeType": "FunctionDefinition",
            "src": "11021:129:77",
            "nodes": [],
            "body": {
              "id": 50021,
              "nodeType": "Block",
              "src": "11094:56:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 50016,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50005,
                                "src": "11135:5:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 50015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11127:7:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 50014,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "11127:7:77",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11127:14:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 50013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11119:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 50012,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11119:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11119:23:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "11111:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 50010,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11111:7:77",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 50019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11111:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 50009,
                  "id": 50020,
                  "nodeType": "Return",
                  "src": "11104:39:77"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addressToBytes32",
            "nameLocation": "11030:16:77",
            "parameters": {
              "id": 50006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50005,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "11055:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 50022,
                  "src": "11047:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11047:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11046:15:77"
            },
            "returnParameters": {
              "id": 50009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50008,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50022,
                  "src": "11085:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50007,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11085:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11084:9:77"
            },
            "scope": 50036,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 50035,
            "nodeType": "FunctionDefinition",
            "src": "11156:160:77",
            "nodes": [],
            "body": {
              "id": 50034,
              "nodeType": "Block",
              "src": "11249:67:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50031,
                        "name": "_composerMsg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50024,
                        "src": "11296:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 50029,
                        "name": "OFTComposeMsgCodec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5287,
                        "src": "11266:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OFTComposeMsgCodec_$5287_$",
                          "typeString": "type(library OFTComposeMsgCodec)"
                        }
                      },
                      "id": 50030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11285:10:77",
                      "memberName": "composeMsg",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5246,
                      "src": "11266:29:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes calldata) pure returns (bytes memory)"
                      }
                    },
                    "id": 50032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11266:43:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 50028,
                  "id": 50033,
                  "nodeType": "Return",
                  "src": "11259:50:77"
                }
              ]
            },
            "functionSelector": "47d7694f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getComposeMessage",
            "nameLocation": "11165:17:77",
            "parameters": {
              "id": 50025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50024,
                  "mutability": "mutable",
                  "name": "_composerMsg",
                  "nameLocation": "11198:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 50035,
                  "src": "11183:27:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50023,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11183:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11182:29:77"
            },
            "returnParameters": {
              "id": 50028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50027,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50035,
                  "src": "11235:12:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50026,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11235:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11234:14:77"
            },
            "scope": 50036,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49007,
              "name": "Test",
              "nameLocations": ["1019:4:77"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18271,
              "src": "1019:4:77"
            },
            "id": 49008,
            "nodeType": "InheritanceSpecifier",
            "src": "1019:4:77"
          }
        ],
        "canonicalName": "HyperLiquidComposerRefundTest",
        "contractDependencies": [386, 50745, 50775, 50841],
        "contractKind": "contract",
        "fullyImplemented": true,
        "internalFunctionIDs": { "18170": 1 },
        "linearizedBaseContracts": [
          50036, 18271, 18219, 12197, 11837, 11042, 8982, 8137, 5507, 5504
        ],
        "name": "HyperLiquidComposerRefundTest",
        "nameLocation": "986:29:77",
        "scope": 50037,
        "usedErrors": [],
        "usedEvents": [
          920, 1328, 5542, 5546, 5550, 5554, 5558, 5562, 5566, 5570, 5576, 5582,
          5590, 5598, 5604, 5610, 5616, 5622, 5627, 5632, 5637, 5644, 5651,
          5658, 13331, 13337, 46656
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 77
}
